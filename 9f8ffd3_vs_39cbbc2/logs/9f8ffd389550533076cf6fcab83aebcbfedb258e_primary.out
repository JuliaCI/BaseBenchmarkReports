cset: moving following pidspec: 5464
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.504982146 seconds)
loading group "string"... done (took 0.525734498 seconds)
loading group "linalg"... done (took 9.03408811 seconds)
loading group "parallel"... done (took 0.174235213 seconds)
loading group "find"... done (took 1.314633371 seconds)
loading group "tuple"... done (took 1.969262343 seconds)
loading group "dates"... done (took 1.375930093 seconds)
loading group "micro"... done (took 0.197799238 seconds)
loading group "io"... done (took 0.521745996 seconds)
loading group "scalar"... done (took 53.425029391 seconds)
loading group "sparse"... done (took 14.100733795 seconds)
loading group "broadcast"... done (took 1.228936539 seconds)
loading group "union"... done (took 10.377446951 seconds)
loading group "simd"... done (took 3.064810259 seconds)
loading group "random"... done (took 11.611906781 seconds)
loading group "problem"... done (took 2.288615118 seconds)
loading group "array"... done (took 24.61103503 seconds)
loading group "misc"... done (took 1.16034952 seconds)
loading group "sort"... done (took 3.805989459 seconds)
loading group "collection"... done (took 19.492331795 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.6190228 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.179865936 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.203629419 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.285943607 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.240397642 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.158521785 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.141877692 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.241828174 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.727167303 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.208986699 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.128912709 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520254559 seconds)
done (took 6.473567236 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.25379524 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.179166657 seconds)
    (2/2) benchmarking "String"...
    done (took 0.168030007 seconds)
  done (took 1.108652464 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.072997034 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.153149598 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.086988277 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.107297809 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.088685354 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.105412736 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.089987773 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.105035939 seconds)
  done (took 1.509619902 seconds)
done (took 3.710176077 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.491401333 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.859977318 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.531358415 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.141310538 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.313609515 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.297070848 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.315527607 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.20075117 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.107065881 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.089693048 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.174594199 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.396784635 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.44541434 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.986910655 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.090402541 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.09571266 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.131206496 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.773914192 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.077898956 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.112477656 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.51637547 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.191043925 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.094995701 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.123444711 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.182465036 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.130245528 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.160428658 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.102545656 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.668648893 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.132255686 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.185419414 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.095566093 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.157697989 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.193206605 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.203378178 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.091331532 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.683799382 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.20036111 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.093267155 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.09721334 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.673846622 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.115919012 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.184707092 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.100971516 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.090150461 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.181198629 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.096359537 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.075794584 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.115504507 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.082483582 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.166905976 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.450885412 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.107796561 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.171094875 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.089515098 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.694921661 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.098580654 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.274286552 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.123010151 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.090189658 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.089277637 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.085565357 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.156967538 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.092582635 seconds)
  done (took 20.151675245 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.147110854 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.164113027 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.073811869 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.152785843 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.12009802 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.077330605 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.098788013 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.075483202 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.104663132 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.240552821 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117601514 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.168066311 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.071044686 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.10163054 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.124718821 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.24498786 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.103981748 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099884945 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.102028705 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087641448 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.135899558 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.094591527 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.087981039 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.105914905 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.152794221 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.20757609 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.122706655 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.122771077 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.087208371 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.095534511 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.140524972 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.147120488 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.091438397 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085391959 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.173389144 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.122148765 seconds)
  done (took 5.231561769 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.198764644 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121467775 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.2117437 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.159844243 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.14443796 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.166288878 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.144525662 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.281327558 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.214446036 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.158184525 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.175955938 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.11305894 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.108550347 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.076463505 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.07645847 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.07445702 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.397305182 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.13389248 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.17102582 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131186418 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.103997378 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.07775111 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.388495262 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.080916651 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.0944552 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.083048398 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.065715655 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.198089993 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081399291 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.088210566 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.079458024 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.108508302 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.129810694 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.190790523 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.115324109 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.095585718 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117541117 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.082746138 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.095839664 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.211278144 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090661747 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.073648274 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.121637165 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.114384595 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.136427589 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.081235547 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.107348217 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.215358518 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.079307292 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.103234604 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.064233794 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.196433327 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.127613237 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.078598061 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.284121645 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.11730769 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.084687105 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078328183 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.254676835 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.113244935 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.079803884 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.097072981 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.086905475 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.078649805 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09587161 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.431484265 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.089518743 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.965014144 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.082344206 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.158920208 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082221035 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.102580636 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.084121995 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.08183426 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.118686702 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.078170998 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.074607323 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.096703033 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.080017634 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.082759684 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.110030053 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082911778 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.076058242 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.095127574 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.144108227 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.097897236 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.119185072 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.107187312 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.102011986 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078441092 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124057748 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079509196 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080657572 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.170630481 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.083026494 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.109874516 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.083592901 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.142902227 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.082071824 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.217112904 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.082509537 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.10705167 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.102625218 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128326229 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.102712002 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.079269706 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101607334 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.078862668 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.078642313 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160441792 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.081953268 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.083020444 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.081619642 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.112351854 seconds)
  done (took 22.783394445 seconds)
done (took 48.931459023 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.465287309 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092768874 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.088582944 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.105665673 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.086916668 seconds)
  done (took 1.68954466 seconds)
done (took 2.512090261 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.325983748 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.198016827 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.098215244 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.193247408 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.082930501 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.200873985 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.18730507 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.092421607 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.212879508 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.082840788 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.194435098 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.083152398 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.0827829 seconds)
  done (took 2.885643231 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099107934 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105885742 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097764931 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.116834806 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079731026 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.096695421 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.115333756 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.107085433 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.094974943 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.10701596 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.07829229 seconds)
  done (took 1.923955263 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096314971 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.103155298 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086730381 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.115428253 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080196761 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.093679648 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.110936541 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.103149113 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.092256083 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.108503794 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081127687 seconds)
  done (took 1.891756248 seconds)
done (took 7.520621463 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.055963058 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 27.493423466 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.146311784 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.2882049 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.347738104 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.250350598 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.665823084 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.155444014 seconds)
  done (took 32.378372754 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.113934916 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083914459 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.156377862 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.090250215 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.088128879 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.110308615 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.089808116 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.085101498 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.109113221 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085939634 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.088373651 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.085285249 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.105217065 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087809402 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089996009 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.103474162 seconds)
  done (took 2.461047106 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.14046253 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.111061846 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110754569 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.093625937 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087597261 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.111724962 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.094316961 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.089157798 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.107181709 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.08781103 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095385848 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.109569749 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.091033573 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.085160632 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108203388 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.118359136 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.086271098 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107930889 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.116523464 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090023354 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.109658469 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090203358 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.090473788 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108698883 seconds)
  done (took 3.346992024 seconds)
done (took 39.007609087 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.153906868 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083428661 seconds)
  done (took 1.065226534 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.143625395 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.161782342 seconds)
  done (took 1.13882441 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.110798437 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.085828015 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.137438869 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.101140318 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.083979927 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.105782488 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.114260557 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.085288631 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.105964174 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.086442395 seconds)
  done (took 1.849926182 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.091707043 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.088583504 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.099427653 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.154783241 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.091366048 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.106852894 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.089863569 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.086431532 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.109595689 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.084322971 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.092108794 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.121894699 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.088646459 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.104154517 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.107333744 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.089917502 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.092855535 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.106035029 seconds)
  done (took 2.640399015 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08826718 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.087850177 seconds)
  done (took 1.008983872 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.092001865 seconds)
    (2/7) benchmarking "second"...
    done (took 0.085291451 seconds)
    (3/7) benchmarking "month"...
    done (took 0.087619343 seconds)
    (4/7) benchmarking "year"...
    done (took 0.106235054 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084418393 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.083887613 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.103971213 seconds)
  done (took 1.478310016 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.456483113 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.243308839 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.333939781 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.121099328 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.123051078 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.337642093 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143628792 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.095734547 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.119007492 seconds)
  done (took 2.841838619 seconds)
done (took 12.852971882 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.093731456 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.21423479 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.632917078 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.107101502 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083689984 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.280561357 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.299385756 seconds)
done (took 2.549937844 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.3555254 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.14976925 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.085149688 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.083970684 seconds)
  done (took 1.51064909 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081765942 seconds)
    (2/2) benchmarking "read"...
    done (took 0.092181242 seconds)
  done (took 1.018051973 seconds)
done (took 3.36970183 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086880962 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.08297563 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.081090073 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.099825747 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.082204961 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.081894682 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.08239661 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.127117002 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.082355559 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.082253974 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.103630602 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084531643 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081381945 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.080490434 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104016355 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.083615771 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.080742974 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100503022 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083531032 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081541562 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.080530809 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101268057 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081638462 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.080109592 seconds)
  done (took 2.991381011 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.110720631 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.084695993 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.106524983 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.090541445 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.088990883 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.08812233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.108293946 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.085192701 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086627531 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103990263 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087164855 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085379381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.102303918 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087401 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086057793 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.104295153 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.088408736 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083837665 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102048824 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.087781921 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.086772922 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083545928 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.105683949 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.08737246 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.085331671 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104363404 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.085226246 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.082977388 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.106397699 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.088200021 seconds)
  done (took 3.626908755 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.098305648 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.085188072 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.088047573 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.116359448 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.085908582 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.086634855 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.082278321 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.102808152 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.086769222 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.085027135 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.105900526 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.086466692 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.083034607 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08536305 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.106286166 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.089390394 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.094244203 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.100944779 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.084289173 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.087592036 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087628989 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.101514478 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085728157 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.085302916 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.085443907 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.102832776 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08644661 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.084809216 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.10496175 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.086407559 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.089445832 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.088106822 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.105369222 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.097439908 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.088626439 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.103797594 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.09225165 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082699476 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.086917389 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.103676805 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.083542923 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.085115999 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.101665115 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.094945279 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.086103977 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.085529235 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.102919669 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.088072702 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.087078131 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.10765121 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.084428807 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.083619118 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.088939533 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.106706814 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.090617096 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082856892 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.087253831 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.101472653 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.087413786 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.085233002 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.10074298 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.083730214 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.090916374 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.085953258 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.120625851 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.092860293 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.082221376 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.106885441 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087868843 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.090751452 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.105824783 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.098195138 seconds)
  done (took 7.505199177 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.102330592 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.096136429 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.085212586 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.105095032 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087331388 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.08653271 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.108334031 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086682466 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083586197 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088476226 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103463511 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084869789 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08420154 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.103854811 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085621061 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084033505 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.107548399 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.084795126 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.08426214 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.084574212 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102861931 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.088284174 seconds)
  done (took 2.884357121 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.213665732 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.111688021 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.133262207 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.11596368 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.101275318 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.114203529 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.089685789 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089343977 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087766454 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.111858578 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092160536 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087488507 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.121038731 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092954165 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111037231 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.094523798 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.088405299 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111661825 seconds)
  done (took 2.82625032 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.10083429 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.085625121 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.125800434 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.086578852 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.085442981 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.087073107 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.113206101 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.10781984 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085697864 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.105162225 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.093950029 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086557585 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.105831946 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086636548 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087346892 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.106571741 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.088430297 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08591219 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093262914 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.110820048 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.090837478 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.111518164 seconds)
  done (took 2.98605716 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.104992938 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.088489483 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.124620306 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088959619 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.083756951 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.084855124 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.110419122 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.086478743 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.091867486 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.105084142 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085646903 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.085525109 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.118655525 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.086314085 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.090208403 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.084763808 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105341864 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.08521436 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08508031 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.103512309 seconds)
  done (took 2.758498037 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.177598043 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.126225492 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.106673858 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112294576 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.122971867 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.104990026 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112308167 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.123275647 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.104513393 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.134898982 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.106338906 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.104473753 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.131217972 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.111619162 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.104339846 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131249904 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.112512302 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.129927524 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104840722 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.104407003 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.135451941 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.105208701 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111287292 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.123464983 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.105235813 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.104630556 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.123142369 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.109701007 seconds)
  done (took 4.142839363 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090548436 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088692515 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.087576573 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.107050654 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.088705822 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.0876395 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.087567517 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.107782407 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.090585091 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088081666 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.087349085 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.106857035 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.086073732 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085179145 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.102813998 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085850062 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086211289 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083596365 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.103845235 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.084629459 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.084248477 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.084121397 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.104639899 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084055839 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083383343 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102904478 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.085059445 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.084018972 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.084640406 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.103116089 seconds)
  done (took 3.600473206 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.098315795 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0948382 seconds)
  done (took 1.054134358 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.096965206 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101381452 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.084449209 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104267897 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091297614 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.08573368 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.113242359 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.091494454 seconds)
  done (took 1.634443844 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.148772361 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.167689347 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.095784902 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.102335256 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.160771886 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.154492375 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.133097127 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.09060559 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.10605139 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.081517307 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.136532426 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.101217687 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090737463 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084611567 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.109049732 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.095106527 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.085314515 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.114978325 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.093152173 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.088016513 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.108693665 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096460562 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.091819258 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.114925188 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.084317086 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.091573254 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.111495629 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.102141365 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.086154156 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.090776373 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.10898764 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.085503169 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.089607886 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.1104179 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.087245308 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.161197339 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098538098 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085677262 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.108571996 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.092041456 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.120562545 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.084975254 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.110871533 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.08724905 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.0922555 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.11007041 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.091975143 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.085152443 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.10020248 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086466352 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.086867073 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.083536797 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.104020052 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090708395 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.088274306 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.116599981 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.088456674 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.084959805 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.104808543 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.085539747 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088141708 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103154922 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.092777757 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.089413416 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.108931289 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091988707 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.088261515 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.08420663 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.106862474 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.087148117 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.088134462 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.123809183 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.091489759 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.089778237 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.110658549 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.087628397 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.085991335 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.110537319 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089925772 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.089549142 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.089868921 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.135299666 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091714082 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083282244 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.104393441 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.094537184 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.087993042 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.108710287 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.082888728 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.097911773 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.107136039 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.088940034 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.083244563 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.086251776 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.104827808 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.0914682 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.081955285 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.110183176 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.085891104 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.091908592 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11024859 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.089810001 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.091784672 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.091601104 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.11339326 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.089431297 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.153692436 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.0868504 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085325315 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.106848162 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093318407 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083482596 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088654714 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.105484351 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.087544126 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.084484731 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.112082158 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.09025853 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.08934232 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.109961141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093063771 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.091776144 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.087617698 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.106160774 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.086214127 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.090468983 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.114896019 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.09174009 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.089653089 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.105055354 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.08703998 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.08909396 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.089412017 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.10637989 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.092785005 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.086047726 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.104618053 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.088267456 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.091328527 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.108986199 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.086056886 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.088021689 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.109025298 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.08977202 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089677801 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.089860541 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.104814297 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082467885 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089779077 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105799289 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.087377078 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095774198 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.105137339 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.090879974 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086574928 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.093650455 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.107248857 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.091973883 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088503163 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112815042 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.093082732 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081367968 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.106489742 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.090483883 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.092068057 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105218172 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.088022636 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085932899 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.093274807 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.103750645 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.091386953 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.081635371 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.105083581 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.093677979 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.08845322 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.090264275 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.105145688 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.126763341 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.099012758 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.113812967 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.089723989 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.088749994 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.112486426 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.089163985 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.090480891 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111459247 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.094563581 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.091110509 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.088336729 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.11298444 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087126139 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.088367221 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107526498 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.09201841 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.082546029 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.107127443 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.083789937 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.092755789 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.091508591 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.112480456 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.093537558 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.088923198 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.109087984 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096971464 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.085960855 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.109827401 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082960153 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092889554 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.095935036 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112905256 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.093359171 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.091118358 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108038009 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.088042421 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.097159215 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.108958536 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091789086 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.087647906 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082068582 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.104053989 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.093516976 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.090609697 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.10540931 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.087592752 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.092146249 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.11125208 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.089800055 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.082796987 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.091340223 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114909372 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.085527974 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090951833 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.107158859 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.089890664 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.097750777 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.103049244 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.087665247 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.092665366 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.110856327 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.087556404 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.089463372 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.089683091 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.115661474 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.090557687 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.090391452 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108823839 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097486553 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.087735574 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.105233176 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.088392818 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.089533729 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.083090527 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.108146753 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.091749572 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.087806685 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.105838271 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.096699928 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093172971 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111270626 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090920916 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.091725972 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.092782649 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113014301 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.088343259 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.092509204 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.105384873 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.084024882 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.085474129 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.101522929 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.090935901 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.086747914 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.091992336 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.109251308 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.089720018 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.091123356 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.112107339 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.088751187 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.092860519 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.122055251 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08505837 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.08284326 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.108597412 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.100267188 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.086560746 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.105611802 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.090063919 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091669267 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.091486201 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114067478 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.087286739 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.086282257 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.114749538 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.097382404 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.095020099 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.11272693 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.095778227 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.085836774 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.091788201 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.107712019 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.096255175 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.083719082 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.109735901 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090722335 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.090017508 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.107519072 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.090746391 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.086006665 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08254094 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.108005388 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.094214364 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.088723411 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.113737859 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.090638112 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.088676726 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.10735563 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.087349676 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.093816727 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.109078261 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.096601568 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.087546146 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.083779704 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.105002635 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.094960761 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.090801406 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.11411744 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.088559876 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.091743923 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093472696 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.112760187 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.088962295 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.09690571 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.117992428 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.094989016 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.095947991 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.103493283 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.08883825 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095250478 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.106347157 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.093141393 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.089613086 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.084710417 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114391275 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.094283473 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.091866924 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.109551613 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.085764077 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087755072 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.093716195 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.112465946 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.091455271 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.08927325 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.112103223 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.086466106 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.091916046 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.113383733 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.092544674 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.094971678 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089537966 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.114122735 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.08855365 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.094310311 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.1090233 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.085805185 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.085023223 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.108018573 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.09614795 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.084597829 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.094690203 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.114121778 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.087811638 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.088382326 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.113119735 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.088464666 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095016489 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.093384163 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.110650742 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.099178725 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.087740488 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.109910118 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.093580761 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.093745597 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.104492638 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.092322715 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090628792 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094775813 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111113564 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.095102508 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.091143314 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.115920966 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.091616486 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.093221025 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.113348014 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.096614108 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085156772 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.094748819 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11626685 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.093240991 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.087900158 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.110523231 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.087360268 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.090369887 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.11468039 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.089836131 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.098512892 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.093342053 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.110169104 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.090060129 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.095061201 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.110555045 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096619566 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.087427244 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.11429337 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.085433787 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.094013888 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.110404436 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.09695712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.08858326 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.085588011 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.115954368 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.09502583 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092940572 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.113658588 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.096269321 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.084686972 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.085050363 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.112377019 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.089442336 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.097620367 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.116237752 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090812498 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090207907 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.111322413 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.090694876 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.094904171 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.08594612 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.110010787 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.093148169 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093212384 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.111140849 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.087338063 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.092672136 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.110906129 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.095441228 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.090433975 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.106396748 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.091617931 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.095822456 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.089135494 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.108750873 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.089651435 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.095776484 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.111963777 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.090362472 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085520749 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.118691284 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.095295422 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.09569354 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.107897531 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.094535701 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.089390155 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.089782679 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.117030138 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.091369829 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090889656 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.110800034 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.095990929 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097156075 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.105330431 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.091133673 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.099583616 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114987873 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.097513726 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.090981729 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.090244193 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.117128542 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09737317 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.089810534 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.107608238 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.08895888 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.09042718 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.085629854 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.111765369 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.098515205 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.089927462 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.110265276 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094699603 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.093523468 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.110436568 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.092734191 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086755383 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.095299074 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.109680155 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.09619656 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.085201434 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.107020217 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.092128713 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.0942739 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.110830295 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.094121151 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.090400185 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.090426367 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.108090935 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.09025645 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.094929984 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.114292393 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.096790883 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.09124946 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.109981822 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.094854989 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099632269 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.090252886 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.112074431 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101426138 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.095682122 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.113174074 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.092563038 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.096539487 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117231146 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.092177371 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.096433422 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.109434851 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.094099337 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.097247929 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.095736198 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.124389015 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092002956 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.086614458 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.117126402 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.091735642 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.087596459 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.116459306 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.098838526 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.096523774 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.111937143 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.091179015 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.099862795 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.096548065 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.114638988 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090554738 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.090035762 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.11640835 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.091405446 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.093056189 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.109099648 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.099275095 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.096013138 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.095002174 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.120418579 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.086885557 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.098393607 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.116984099 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.101118127 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.089003676 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.106617285 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.089580017 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.092084086 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.096820267 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.120146553 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.094575521 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.094559479 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.114526815 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.095014226 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092320217 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.089525861 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.11928596 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.095977525 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.089183082 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.1150692 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.092901662 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.092989839 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11180335 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.097681033 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.097251965 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093309016 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.121988498 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.096630499 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.090327807 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.111340063 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.094395186 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.091890154 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.113704381 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.097238833 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.089270419 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.086535561 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.117829711 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.09914732 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091964918 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.119076141 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.099468386 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.091153888 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.116274634 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.099651497 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.094180144 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.090002544 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.114693779 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.093843752 seconds)
  done (took 59.182975935 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148135014 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.097654097 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.112112559 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.092366625 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.110038185 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.113357012 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092946841 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092319385 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.092018489 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.124560025 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.091656333 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.091138007 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.128890979 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113717621 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131581148 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.102578905 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.09099125 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.113627945 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092192373 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.091402695 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128361853 seconds)
  done (took 3.171056363 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.114647744 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.105986317 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.126124934 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.107234599 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.098183357 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125296006 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.103562776 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123718677 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107889235 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.099763331 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127061587 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103958692 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.099342919 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.121564908 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.100317496 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100840925 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.128762279 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.099179562 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.124580416 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.104847437 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.100144831 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.125073551 seconds)
  done (took 3.362772989 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.108999398 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.095726306 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.097518055 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.113098041 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.096042791 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.091100841 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.120890336 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.093523879 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.100748187 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.092966518 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.110797059 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.094334423 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.098016312 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.113433406 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.089918692 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.092677814 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.12104997 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.098352305 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.097423222 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.091395274 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.127835499 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.09169924 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.091127953 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.109966356 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.105421621 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.097244804 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.112051454 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.097936652 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.088105167 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.095366484 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.114236265 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.09437626 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.094442877 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.109217524 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.090592319 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.096209951 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.096234484 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.113121192 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.093315365 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.094540604 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.114271951 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.098449319 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.097470152 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.113197392 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.094818775 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.093733998 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.096625899 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.114357656 seconds)
  done (took 5.771012129 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.130959788 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.151719748 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096609314 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.122522833 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.129848918 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.103627321 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.094904611 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.149551654 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.094491553 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.094604879 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.131103368 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.107650667 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11917239 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.101431704 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.095573945 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.117989669 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.099462661 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09540652 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.120425688 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.098008318 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.100217545 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119124449 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.107917956 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.105447196 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.119689433 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.09772852 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.095669369 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.119772736 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.106959032 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.100440612 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.121769992 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.102089753 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.106162005 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.120181829 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096858898 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.339330838 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.131196284 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.097727604 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.096759947 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.116180868 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.098965355 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.099327406 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.119963785 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.109654187 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.096820702 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.120712435 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.097964814 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.093580432 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.126906623 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.098577874 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.102741337 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.128041671 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.099459095 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.096309049 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.12276195 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.107559402 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.095970112 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.117747738 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.098416552 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124847072 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.096134891 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098881277 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.126311725 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.098963248 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.102820455 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.127038468 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.100000775 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.098650009 seconds)
  done (took 8.692227514 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.137012148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.101679791 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.131395246 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.110348866 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100481931 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.122567896 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101302101 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.099973026 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.123544579 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107015835 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.09964482 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.219252801 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.11858217 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.106560318 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100507449 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12110676 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.102293961 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100713236 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121725534 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.102046039 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.100141498 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.130363018 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.101765793 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.109478911 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133839524 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.097772808 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.100132918 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122612046 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.11095861 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.100561052 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.134492536 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.101529819 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121375854 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111013402 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.111366423 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.123623127 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.09603337 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100728165 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.123470194 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102793507 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.097640673 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131796412 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.103626506 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.097209375 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.122802479 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.102229998 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.109276205 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.135382121 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.105620712 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.128989438 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.102136644 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.109629508 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.123410511 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.102294717 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.109142549 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.138406506 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.109174766 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.131727216 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102532222 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.108458739 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.130801755 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.117126201 seconds)
  done (took 8.01198529 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.099733507 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094562941 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.092052631 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.114851031 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.095435101 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093631792 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.093679939 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.11601609 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.095077682 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.094237329 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.093386522 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116322964 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.09401369 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.094289633 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.113837128 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.095057379 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094177183 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.093217927 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.116275387 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.094567635 seconds)
  done (took 2.929674319 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.108184967 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.112992342 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.095361394 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.12483546 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.097797748 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.100642104 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.119426616 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097122545 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095206269 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.119127336 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.106152579 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.105100187 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.118507839 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.102076266 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.103502066 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.124895478 seconds)
  done (took 2.666728482 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.11966407 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.11252889 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.190491296 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.099043744 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.117838116 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.104497366 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.09709437 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.097048855 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.117466768 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.103576422 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.099716296 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.121533341 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.097794547 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.097759011 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.095674137 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.122708442 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.095182122 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.099177173 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.118955911 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.169052782 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.121970132 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.098806341 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.097773004 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.122777228 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.099496309 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.099806954 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.12444551 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.097505475 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.098201446 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.097453827 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.119938378 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.104161318 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.095176945 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.123144391 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.100251591 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.097652572 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.117177199 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.099638042 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.099688353 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.096791374 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.122610046 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.098238895 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.096735375 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.121497983 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.095894741 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.09731645 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.116086628 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.104215067 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.098230891 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.097587583 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.119598564 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.10239824 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.101940059 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.128553255 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.104954248 seconds)
  done (took 6.929721312 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.115340483 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.099605581 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.108377501 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.119082719 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.099301615 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.097258323 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.120363025 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.0988852 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.097330309 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.116892506 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.099901591 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.09868363 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.096773572 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.120353589 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.098099135 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.098569347 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.116674671 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.098912563 seconds)
  done (took 2.8440733 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.109301809 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.096256101 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.102039296 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.118782753 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.097556288 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.096669895 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.116629275 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.097702018 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096659366 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.096083318 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.11918617 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.097978597 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.09632479 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.117762347 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.098507202 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097508257 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.096282005 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.119024054 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.096505537 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094942163 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118714001 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.097672555 seconds)
  done (took 3.221641969 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.115387075 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.182913999 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.10769878 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.193420452 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.097971185 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.095336394 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.127336632 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.098885251 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.112708834 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.117018702 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.096756764 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.095110952 seconds)
  done (took 2.387681003 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131661865 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.135326114 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.119563289 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099365094 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106344942 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.122561716 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102678807 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10147418 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.13173941 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113619863 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100843562 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132217053 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109749842 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130854836 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106904995 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10612472 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123866923 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102794699 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096584316 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.139840316 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101612671 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109375719 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.123323914 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101300887 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101420708 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.133607315 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109361998 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135225049 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101736254 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108906085 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129118934 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102645012 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131151759 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114382662 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098269253 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131500123 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.102135714 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116980144 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1294393 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110415975 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118881039 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108586527 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110121855 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.127856938 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111358275 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100548548 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.129216117 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103256427 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101231113 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.147010095 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107298147 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132480828 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107412574 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109601058 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133892605 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123326817 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.137127366 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.111931813 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12769471 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115001867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110040568 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.130279645 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.111110242 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.135130406 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.107878703 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109522535 seconds)
  done (took 8.622664337 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.145044967 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.097569404 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125061156 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114407777 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109640966 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124955064 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102334469 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101224619 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125314255 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09968729 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.169817694 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103229611 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.112562605 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133184137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10269221 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.101135168 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125448054 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110803332 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097892514 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.146728621 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102505788 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.132225449 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.111878408 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.131643456 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115214823 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106569835 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.125426941 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103141107 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.101685545 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.125297566 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109644323 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.101535016 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133648518 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.099525731 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10945094 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125211764 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.102844847 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10682399 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.125720231 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107365537 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132241392 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119422978 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101661984 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124911566 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114180958 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101588303 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.125761619 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.099752541 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.102028514 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122418372 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.11421718 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.136507684 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115275403 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.110225029 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.126318327 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.103454984 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101569816 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.126030982 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103306807 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.10709889 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133826259 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103281566 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.146741527 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103222744 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.103213819 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133885526 seconds)
  done (took 8.592694298 seconds)
done (took 163.239049943 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.155560746 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.188992218 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.1450445 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.177240869 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.093390795 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.125762381 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.125200189 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.170907499 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.091606932 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.114188097 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.093179217 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.094774418 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.155958472 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.116692816 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.09220322 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.09366618 seconds)
  done (took 2.978782833 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193358505 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307971688 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.108925617 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.119050777 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102636897 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.098937133 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.117176285 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.099719654 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.096979701 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.126266322 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.101115974 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.095396391 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.124457032 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.096637804 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.097810588 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.09893466 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.127379033 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.099543027 seconds)
  done (took 3.1744167 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.124903693 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.143048674 seconds)
  done (took 1.227235068 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.133869652 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.175282349 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.297477477 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.170757594 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.122552025 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.136737142 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.15086457 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.132894897 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.178119945 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.132261804 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.112891547 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097901198 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.145315548 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.103998557 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.10965473 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.121127955 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.124958128 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.10789474 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.130990422 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.099636099 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.118846646 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.125411626 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.104686036 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.10753782 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.192028216 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.10939213 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.124817284 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.102541289 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.098546702 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.131354622 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.106296942 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.112726549 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.133599184 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.170964708 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10570243 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.168351206 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109564878 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096708841 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.129809372 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.098538539 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.10006298 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.123199489 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.116809385 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.097755326 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124915055 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.110368158 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.101973933 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.125634377 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.107730433 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.131593633 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.107606558 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.104967938 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.168397386 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.109916385 seconds)
  done (took 7.818426924 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.849067335 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140937803 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.097756757 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 1.00957094 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.124382127 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.138471405 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.843010767 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.119694852 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.254426454 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.871830999 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136872204 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.111561702 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.237198155 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.271677426 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.175289949 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.345863276 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.70717814 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.110747152 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151290326 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.139764708 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130510698 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.124684908 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141186511 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.416613835 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.120099609 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099140591 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105190507 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.132907536 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.152736839 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.121124115 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.102195628 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196561215 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.283865503 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205776229 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.098701553 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.096436922 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.118637337 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.162163814 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.267538538 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.215093193 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.183596432 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.094271156 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.117903098 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.108187123 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.117244193 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.117470727 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.156430996 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.195385785 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.190986207 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.1009344 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.134633794 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.109008026 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.126422715 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.15495639 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.117061796 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.355423682 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.351741765 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.096731658 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.128623423 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.114736019 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263500757 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.097748679 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.231264736 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.148009467 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.212366614 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.097251451 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.808806818 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.183917454 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.097128105 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.126443719 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.105497859 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102816475 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.128963341 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1574866 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.402160493 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.10884942 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.125228008 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098109493 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.240829518 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.097482514 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119000926 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.158431607 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.12081818 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.107661237 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.111554679 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.132875543 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.18618089 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.245637617 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.132282062 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.108482947 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102511166 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.133371914 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098662091 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.23165777 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.228339919 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.173269389 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.207886849 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.130336723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.178999656 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.160759449 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128261494 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.185690836 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.1068858 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113976063 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.129705765 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.223617163 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.131249736 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.122993392 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.103908095 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105633995 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.159162117 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101294562 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.129562977 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.162638639 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.461869138 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.182831032 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.094669611 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124079152 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.108839567 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.179422424 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.106869941 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263997834 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.107266657 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.184302007 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.104072657 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118940493 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.106271317 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.181028659 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.107862284 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130371134 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.107259669 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108344793 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.26966295 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.219685555 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.134622846 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239988457 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165190376 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.128028162 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.169248209 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.130492174 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.162769667 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.132054307 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.106925169 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121494197 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.797736041 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.112975111 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.105366365 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.12602228 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.182245971 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119754094 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101656494 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.098259851 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.09514062 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.80426073 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.124705777 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.096645339 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.099600949 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.127872746 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.106808999 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.10525742 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.127020821 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.153783193 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.26419327 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112405489 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.127738042 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.101182743 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.154103472 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.122989476 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099351357 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.098145049 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.123004932 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.107658745 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.102976656 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124490942 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.166281519 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.175393091 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.227515862 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.529121403 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.12159969 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.100223767 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.239809037 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.097592541 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.336918541 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.10851969 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.232192848 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185403404 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.096352729 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.347677018 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.185586097 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.201844017 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.104652731 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.188885583 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.097022901 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.106864973 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.179090125 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.098324425 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.129889514 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.152947271 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.136669474 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.111270758 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.181990595 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122819689 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.224905917 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.11964629 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.163895803 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123833388 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.107650792 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.321079771 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.120927177 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.116602175 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.180113888 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.10320507 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.098615433 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.692748574 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.121476475 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.111465676 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.105810319 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.253302668 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.160012963 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129666192 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.108851483 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.111507418 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.180278149 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.232216754 seconds)
  done (took 45.61560217 seconds)
done (took 61.76605895 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.29409661 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.256624197 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.303745526 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.213837787 seconds)
  done (took 2.119134648 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.291400577 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.164031402 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.233550962 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.097745501 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.247064341 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.097413167 seconds)
  done (took 2.115001127 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.502810197 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.388263248 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.346592859 seconds)
  done (took 2.224280169 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.248535107 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.258520889 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.34776969 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.406919267 seconds)
  done (took 2.338497958 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.298826934 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.131748114 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.124980618 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.216191771 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.277181519 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.258577003 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.147122268 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.202947158 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.152880689 seconds)
  done (took 2.847094554 seconds)
done (took 12.626126657 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.334109604 seconds)
    (2/192) benchmarking ("map", identity, BigInt, true)...
    done (took 0.327580076 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.326580593 seconds)
    (4/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.275888323 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.212024045 seconds)
    (6/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.163052733 seconds)
    (7/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.104158951 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.136094034 seconds)
    (9/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.188084755 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.306243061 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.270603169 seconds)
    (12/192) benchmarking ("perf_sum", Int8, false)...
    done (took 0.179728477 seconds)
    (13/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.313282385 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.270033404 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.250002848 seconds)
    (16/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.179616911 seconds)
    (17/192) benchmarking ("map", abs, Int8, true)...
    done (took 0.220696625 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.18946571 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.196580337 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.199989463 seconds)
    (21/192) benchmarking ("map", identity, Float32, false)...
    done (took 0.216425539 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.134607129 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.218045061 seconds)
    (24/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.192923622 seconds)
    (25/192) benchmarking ("map", identity, Bool, true)...
    done (took 0.247291047 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 0.113702276 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.104146252 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 0.220952736 seconds)
    (29/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.182141882 seconds)
    (30/192) benchmarking ("map", identity, BigInt, false)...
    done (took 0.101212749 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.316419752 seconds)
    (32/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.232973774 seconds)
    (33/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.10534529 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.155037295 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.11425288 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.107017248 seconds)
    (37/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.081946198 seconds)
    (38/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.191064511 seconds)
    (39/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.21917607 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.082344386 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 0.252468545 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.228497112 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 0.144793896 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.199563182 seconds)
    (45/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.106916113 seconds)
    (46/192) benchmarking ("map", identity, Int64, false)...
    done (took 0.210099929 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.081485513 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.163140245 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 0.106000713 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.208539614 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.199412151 seconds)
    (52/192) benchmarking ("map", abs, Bool, false)...
    done (took 0.252410617 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.179395469 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.280078074 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.106005843 seconds)
    (56/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.105041193 seconds)
    (57/192) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176207898 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.083657791 seconds)
    (59/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.082749273 seconds)
    (60/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.083132903 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.161079906 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.117606958 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.10454489 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.162901159 seconds)
    (65/192) benchmarking ("map", identity, Int64, true)...
    done (took 0.088245554 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.155158349 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.083661187 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.110860913 seconds)
    (69/192) benchmarking ("map", abs, Int64, false)...
    done (took 0.145707915 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.1875128 seconds)
    (71/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.082477014 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.159726852 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.196240879 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.130556457 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175824497 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12232619 seconds)
    (77/192) benchmarking ("map", identity, Float32, true)...
    done (took 0.112790544 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.107125272 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.082115898 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.191462829 seconds)
    (81/192) benchmarking ("perf_sum", Float64, false)...
    done (took 0.114449026 seconds)
    (82/192) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114536644 seconds)
    (83/192) benchmarking ("map", abs, BigInt, false)...
    done (took 0.081766502 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.130742425 seconds)
    (85/192) benchmarking ("perf_sum", Int8, true)...
    done (took 0.110800065 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.083603821 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 0.14663442 seconds)
    (88/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.105993146 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.104195018 seconds)
    (90/192) benchmarking ("perf_sum", Float32, false)...
    done (took 0.107858934 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 0.148515914 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.083087334 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.083363525 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.081691546 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.133745589 seconds)
    (96/192) benchmarking ("map", abs, Int64, true)...
    done (took 0.088056326 seconds)
    (97/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.14686309 seconds)
    (98/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.127737531 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.100019329 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.10594272 seconds)
    (101/192) benchmarking ("map", identity, Float64, true)...
    done (took 0.150364915 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.107586587 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.10575116 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.083704555 seconds)
    (105/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.08213657 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.200541966 seconds)
    (107/192) benchmarking ("map", identity, Int8, true)...
    done (took 0.088460938 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.18302757 seconds)
    (109/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.116382276 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 0.114713771 seconds)
    (111/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.198950064 seconds)
    (112/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.124579007 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099359442 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.098190596 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.14181055 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.090245807 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.084005836 seconds)
    (118/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.174396448 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.107530127 seconds)
    (120/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.084007519 seconds)
    (121/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.084025276 seconds)
    (122/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.084405099 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.083651916 seconds)
    (124/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.083521113 seconds)
    (125/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.107243238 seconds)
    (126/192) benchmarking ("map", abs, Float32, true)...
    done (took 0.152048383 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105811248 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.093198715 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.130719539 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.105942541 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.083110387 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.12861779 seconds)
    (133/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.084931094 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.098697186 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105569177 seconds)
    (136/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.107915561 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.178705052 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.083804216 seconds)
    (139/192) benchmarking ("map", abs, Float64, false)...
    done (took 0.081945067 seconds)
    (140/192) benchmarking ("map", abs, Bool, true)...
    done (took 0.111963679 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.12588497 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 0.124612886 seconds)
    (143/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.083613586 seconds)
    (144/192) benchmarking ("map", abs, Int8, false)...
    done (took 0.107199082 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 0.107103989 seconds)
    (146/192) benchmarking ("map", identity, Float64, false)...
    done (took 0.082449059 seconds)
    (147/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.088546909 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.083737863 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.131109995 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.106329989 seconds)
    (151/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.104659027 seconds)
    (152/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.133863995 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112167066 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.105765793 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.132778804 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.085177538 seconds)
    (157/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.104263229 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.203618303 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.083905848 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.098889338 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.083075876 seconds)
    (162/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.08298708 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.132488042 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.099984229 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.098777704 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.151491763 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.108488671 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.104498178 seconds)
    (169/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.084121387 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.108888362 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 0.107407581 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.084760415 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.133769029 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.08533166 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.107766195 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.083189413 seconds)
    (177/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.083739072 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.13142349 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.084709268 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.123161122 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.130052822 seconds)
    (182/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.085163538 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.106769252 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.100680292 seconds)
    (185/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.108610583 seconds)
    (186/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.085328618 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 0.082996746 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.084141958 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.083026848 seconds)
    (190/192) benchmarking ("map", identity, Bool, false)...
    done (took 0.082721433 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.127382295 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.106497067 seconds)
  done (took 27.319984085 seconds)
done (took 28.318169768 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.219919728 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.129977689 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.108336129 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.107461584 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.205001779 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.115100108 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.116223349 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.136612217 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 0.114006479 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10559933 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.125211257 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.117196551 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.107830542 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.201036447 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110745218 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.125903502 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.102138039 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116108951 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.142114185 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.11928377 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.204172143 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.105334993 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 0.113477735 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.098582996 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.206400133 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.101866028 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.132657278 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.108802883 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.11472501 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.130065266 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.108441847 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.100035979 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.116857707 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.144674838 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099973938 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 0.106814918 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.124636358 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.090073635 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.106080254 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.106643976 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.140642403 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.105860522 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.108464125 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.12703768 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.108291206 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 0.104229105 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.125067938 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.111661015 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.098304052 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.131620653 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.10320872 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.117788925 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.10451858 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.123804639 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.098902321 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.099920162 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 0.139280384 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101286594 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.116019937 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.123210305 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.102787755 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.100403535 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.108121291 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.125926951 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.107395163 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.100030955 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 0.134609253 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.108555692 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.105168733 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.126097739 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.101802119 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.107256473 seconds)
done (took 9.69419472 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.110734906 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.155205493 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.20415545 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.211495693 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.130454019 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.140375104 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.121868956 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128506339 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.143090401 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.125663441 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.132901664 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.155336714 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.211365531 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.113615886 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.116020743 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.134688742 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.116468801 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.112718086 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.214302335 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.122983605 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.157417855 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.112651836 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.157750523 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.124659631 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.106401103 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.163263915 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.108479844 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.109474304 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.133114491 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.115947149 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.124446438 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.13330771 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.108593238 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.128388159 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.145452542 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.114604525 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.116851003 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.137119797 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.107447229 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.105481861 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.142113619 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.125588479 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105345914 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.142775278 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.110778381 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.1136347 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.140449399 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.113609693 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.108498806 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.137088063 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.110131422 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.158225045 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.114907949 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.113738853 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.137426712 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.115973313 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.113645048 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.138188221 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.109310764 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.113831756 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.130583734 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.110379674 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.11061851 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.155296587 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.108660778 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.115333728 seconds)
  done (took 9.634835145 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.128932489 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.136287036 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.138848219 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.115862549 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.109303671 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.12268238 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098282615 seconds)
  done (took 1.890648149 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.104513735 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.187480707 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.210540521 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.209685065 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.178009256 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.219208489 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145428549 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.100859602 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131005812 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.13335134 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.188162231 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.239432946 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.106539322 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.140337309 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.187689281 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.124515299 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.190196437 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.124853499 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.114541412 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.211058603 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114338555 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.12744615 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.13788277 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.101574889 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.20613399 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.102783072 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.263375157 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.117645595 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106309237 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.139338217 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.113521162 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.201754761 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.182976685 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.138489464 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.106788457 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.182661626 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.20766392 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.11044495 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.223634842 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.103893748 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.210116418 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.110719316 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.1420712 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.112336814 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.11459181 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.196450217 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.118271708 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.140160347 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.112368462 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.219111904 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.110956899 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.208832163 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.109391934 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.110905758 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.136708534 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.114441155 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.120381851 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.138137007 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.194389143 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.139962456 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.184113265 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.209652872 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.208769113 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.18619827 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.147282032 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.187278567 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.205736654 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.111078439 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.107849389 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.140525921 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.185595006 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.137838924 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112093207 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.19965961 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116838137 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.213994692 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.185450688 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.136327786 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.113991173 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.103475803 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.136066178 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.101897522 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.200656883 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.112502322 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.109634863 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14362944 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.114696545 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111293921 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.130161234 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.123719671 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.110803646 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.136441247 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.118925719 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.11199827 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.142145865 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.189500615 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.138326675 seconds)
  done (took 15.568771049 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.111107669 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.102243341 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.106056346 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.128584667 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104119745 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.101796902 seconds)
  done (took 1.71200678 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.145646598 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.112557183 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.147980613 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.115286278 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.165358615 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.219163274 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.225844561 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.109541132 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.155957615 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.126812619 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.220039962 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.198920728 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.228497567 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.115681496 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.225808137 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.117606857 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.226606131 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.111519304 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.149773407 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111733318 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.116466631 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.142397294 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.111307409 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.210750928 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.1178384 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.118257924 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136597693 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.126307344 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.120801681 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.137076242 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.117661244 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.116562875 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.134684573 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110769035 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.228592499 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.108827125 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.108483614 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.149438609 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.115711716 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.117863509 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.227649388 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.11002 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.149709056 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.122077255 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.109903421 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.136349736 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.122480954 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.10917933 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.226206708 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.14694153 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.123565331 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.114049425 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.118541224 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.149885709 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.108690463 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.136054688 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.123562495 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.226808143 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.117940278 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.108744567 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.13957171 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.120986147 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.110377248 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.147534286 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.115942308 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.121999273 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.133164551 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.116501627 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.111132067 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.138989631 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.126373744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.114339573 seconds)
  done (took 11.228695646 seconds)
done (took 41.074836862 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 1.562229015 seconds)
  done (took 2.616539269 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.907696156 seconds)
  done (took 1.963715562 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.956793837 seconds)
  done (took 20.055567977 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.545140201 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.613077221 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.990018663 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.155409018 seconds)
  done (took 3.35927538 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.008863628 seconds)
  done (took 2.082643255 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.296465485 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.262719328 seconds)
  done (took 1.619432917 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.755531973 seconds)
  done (took 1.827296848 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.532575828 seconds)
  done (took 2.594034916 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.365567762 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.173988263 seconds)
  done (took 1.615818464 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.626470084 seconds)
  done (took 1.703480451 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 19.699552077 seconds)
  done (took 20.777397124 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.25756493 seconds)
  done (took 1.340650788 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.292744182 seconds)
  done (took 1.3771543 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.690661326 seconds)
  done (took 4.7740495 seconds)
done (took 68.778182987 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.119974555 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.11603692 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.114363965 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.139666983 seconds)
  done (took 1.558425399 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.1280157 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.116766881 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.119043903 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.141846381 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.122551055 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.115493919 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.142303015 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118869865 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.114161991 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.143950509 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.118168383 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.115228495 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.142653519 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.117086731 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.113867608 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.117761604 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.146408269 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.116542307 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.11665802 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.143778614 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118901796 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.118206098 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.145406826 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.120501238 seconds)
  done (took 4.093876601 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.119404116 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.106857841 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.107310416 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.130327202 seconds)
  done (took 1.549143639 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.131264032 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.128808432 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.151539719 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.125348522 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.128174121 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.152494742 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.116015068 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.112760528 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.114990098 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.15058455 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.132453796 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.154916846 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.128966399 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.119408424 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.152790045 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.111334114 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.118099324 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.151807779 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.124853221 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.12483527 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.142323565 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.125276754 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.121453568 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.148975182 seconds)
  done (took 4.249887911 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.194491921 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 0.12342636 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 0.164904015 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.157228279 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 0.167277077 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 0.111627838 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 0.134545759 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.144324354 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 0.119386554 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 0.113587119 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 0.140855274 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.158264752 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.117466541 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.140819448 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.114311961 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.116984027 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 0.150809816 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.118457326 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 0.181488616 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 0.117419956 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.118010933 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 0.152349579 seconds)
  done (took 4.138773991 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.12489989 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.106718231 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.102474555 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.135932416 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.119923564 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.108732115 seconds)
  done (took 1.78561081 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.108321295 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101326014 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.101425601 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.125164702 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.108709977 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.100238055 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.098619191 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.12667887 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.102075737 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.101355225 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.100259817 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.126230442 seconds)
  done (took 2.394750767 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.346576312 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.107204998 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.133161572 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.107707382 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111766054 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.103742889 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.146852488 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.105804062 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.268399987 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.105878802 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.144608264 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.194246777 seconds)
  done (took 2.967301842 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210283408 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.115795295 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.328563605 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.369742547 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160172466 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.183889478 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.263808527 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.186554301 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.201379184 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133432019 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237323849 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149872175 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172156512 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169846287 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157984839 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.161579036 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163650439 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213670375 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167442095 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194647356 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178831916 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15986798 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201008213 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143709597 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156583473 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159053924 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.140001128 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123795583 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.189949126 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161284202 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195750369 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141970709 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.162743349 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215108874 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231265565 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198474507 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.282923572 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15398888 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.176070805 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.204770789 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.252874158 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1355713 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213418898 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148875683 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.150636547 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175272673 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175890057 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.167699721 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152303141 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138251283 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204843047 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166938449 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.201093828 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129693042 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.310381407 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18973345 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.138081725 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.19162145 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180008876 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210720575 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159569152 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.145587041 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202134737 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17682881 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201005089 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.135173348 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188958673 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119958596 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190260678 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.187129227 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202571904 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178865769 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.193421835 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153482518 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152038694 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.194425581 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172770621 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198163029 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152017905 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.141958411 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145883636 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155371362 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122506762 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.190922628 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141389167 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193940092 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153544155 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337947423 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180977056 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177974219 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156060526 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182693203 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154352519 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168841609 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.109494575 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138991702 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.184939348 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149827015 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155442609 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.149782919 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161556318 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.123599983 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171746912 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.11842825 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151640285 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.159994373 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158959018 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180369683 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.125433203 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.186510497 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.143474856 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.173847113 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165110571 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205947996 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12715268 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152880255 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184260656 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178743941 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.127563285 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198371887 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.177941154 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.173932159 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13283899 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186653435 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18381048 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.16501526 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182422308 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15876083 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130106756 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.173056138 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155719359 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182344106 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.14787817 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122186779 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.173126266 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.217634435 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.123976897 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130087519 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18979703 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.126678604 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146963524 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134830539 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129304396 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.162804708 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.139292406 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.154849415 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150495249 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176809254 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15046834 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179010259 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13014991 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199195566 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127983959 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.17846018 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141755136 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11288753 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199227698 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.177022364 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152591977 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.222344824 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161173475 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211086432 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153897666 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154691937 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.172747454 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14969494 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.114650831 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181609604 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151385274 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184020687 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.175229525 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209542721 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.191493047 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.144919305 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168754696 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165079067 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.198096386 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148074254 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.166213512 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.152160033 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185497598 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.116259639 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.11717595 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.149460853 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133601354 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123782198 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157317357 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200793754 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162914403 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204541814 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152387324 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162699592 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176163903 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.149352827 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155994663 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.188430267 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133259323 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.203878064 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174337187 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188953694 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134502346 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184525365 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.114998208 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147910197 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.129049602 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18630822 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131694882 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130173711 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163807485 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177518476 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196700011 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140907551 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.220048957 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190744523 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.213000871 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.117055483 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.158585507 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194652733 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152892486 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.205338389 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132677345 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.181907997 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.174675657 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161204459 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184136001 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179083507 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157798156 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.212987066 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.150374461 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153429555 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142909651 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181503551 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132857683 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.187294412 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140408566 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124778038 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.176674905 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.131861055 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147182828 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182483171 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166562735 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165682917 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.18230996 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192914488 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121215057 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13522288 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.183519118 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139083777 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.112616806 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194446034 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207333773 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141212181 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179473254 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169983287 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15145303 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.317489746 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.217340572 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171685426 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159615413 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135783764 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185222426 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156791246 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186503101 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.173292914 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16472124 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171399639 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.182836174 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.137236438 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152655905 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.144412178 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171805445 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.14799076 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.126351923 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.178444311 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.136331958 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211752457 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133590685 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182628102 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152902238 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.169974372 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.147854497 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161767539 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.191356844 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180527756 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17045853 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.179014422 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.161859265 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215058204 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.118272696 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151266362 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.127525983 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.203160835 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126694842 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157064149 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.202560203 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214751493 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185842043 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15748657 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160217853 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.123227352 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.151712308 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171857866 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213816519 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131121816 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.132007099 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217472932 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.133240664 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154845115 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154621533 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.304676123 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141481802 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198936751 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.118995847 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.29842166 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124668048 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.156337078 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158710922 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19635679 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.127761174 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179727258 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1826491 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136197701 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.189355773 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131475163 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.209048067 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215639825 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1609738 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199770073 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.138598018 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184780087 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182241611 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173493396 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164846771 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.141439557 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15594761 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206581764 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.204972892 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.129433972 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151391814 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181496135 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151007916 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197651133 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131550729 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.215982416 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123484722 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187701215 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132408901 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147292314 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154362332 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.200491788 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125618025 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203640507 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153975099 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155985923 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12166793 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168148932 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152531808 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132662466 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.153801596 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206350836 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.12529686 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.158270194 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203245481 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125337003 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178473351 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.142076585 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124452108 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164340166 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137225548 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153492666 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.167519237 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178793327 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.155548981 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174769457 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186649237 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189244175 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.154333027 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164058357 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.662678097 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.120962449 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206459257 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.142378216 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210435514 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.144573618 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186447095 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153410289 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173793085 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158456505 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174135014 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.234162891 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186498949 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.150950168 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154683092 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138719217 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135473888 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.156727644 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14680659 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180418706 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136095098 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.157743754 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.153931318 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.136350182 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.171358729 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.1346504 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207277045 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141659349 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213026951 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204625351 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134362874 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15553516 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.200543345 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125169249 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.189202509 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195362101 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.137257807 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141774793 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.156777843 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.132165253 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.20444007 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12097678 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153147886 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186315012 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153485334 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181964099 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.130561093 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187036585 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137358764 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183627067 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122960991 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.146679866 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.183649061 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.128728015 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.148781393 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15472293 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183916361 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.151982851 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120769027 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.195792651 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17941221 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.14684041 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131378552 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.298595054 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154627486 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214764159 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.144997517 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.128381066 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168348774 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14863659 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.178989307 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156957988 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.153736323 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126032939 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.124621988 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.197292244 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.151876448 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.184320311 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171500777 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185428608 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.187584172 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.160399434 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.282589591 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.164964131 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154404986 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.152708275 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.12559149 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13697268 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158777002 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136538031 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.209545375 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176330589 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.178684405 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.14129237 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152624488 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.122533294 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125130967 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.18933765 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148222512 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183677963 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140745053 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.111136418 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168217735 seconds)
  done (took 82.114881134 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.172355075 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.150961485 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.167219337 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.221759762 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.19625712 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.289098012 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.231125747 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254721651 seconds)
  done (took 2.849610913 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.125345805 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.158350358 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.140322269 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.144171565 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.116230925 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.448329043 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.130389995 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.147207735 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.164830516 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.15802545 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.141253077 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.613038502 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.113844677 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.142755274 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.104246174 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.143276051 seconds)
  done (took 4.153318573 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.45174765 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.587587928 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.182299689 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.278770624 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.233199787 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.180011753 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.795568904 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.191976013 seconds)
  done (took 13.070292955 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.153136887 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13262856 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.817051347 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.261646285 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.149751401 seconds)
  done (took 2.690860537 seconds)
done (took 128.68777636 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.126173293 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.119288852 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.118434247 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.150602989 seconds)
  done (took 1.673249993 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.191266767 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.095438334 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.097527959 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.12213264 seconds)
  done (took 1.67837146 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.442270519 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.094479215 seconds)
  done (took 1.73688071 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.152663092 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.144045963 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.1625003 seconds)
  done (took 1.648518019 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.146746885 seconds)
  done (took 1.321311579 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.132830151 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.119449914 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.236957361 seconds)
  done (took 1.669461212 seconds)
done (took 10.907228181 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.126227333 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.416316837 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.431478802 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.129483133 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.71002766 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.425169153 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.028682405 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.172441208 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.174892525 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107555292 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159461984 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.687992008 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.077878456 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.360262135 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.036051752 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.357113394 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.723109054 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.110923514 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.115348692 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139593247 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.006366386 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.107478004 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.138866168 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.111163291 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.688148414 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.449225492 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.109156958 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.368800646 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136161313 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112993748 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.397497483 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.136601253 seconds)
  done (took 17.418891299 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.124207795 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.171468335 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.143241774 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.111816208 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.11227601 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.137092059 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122252107 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.121026525 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.202383102 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.109437285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131170136 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.138883828 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.114398621 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.109055637 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162860462 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.109619107 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.111568518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139770358 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.118103883 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111527508 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159451573 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.109424556 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111470063 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.138758295 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.110628674 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.131881918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.137678851 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.123068479 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.108636816 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.140201147 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.116446447 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109456568 seconds)
  done (took 5.281431145 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.164009066 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.179105509 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.146973431 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145786712 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.183985009 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.112458392 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.192878703 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.175154108 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.173228806 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.138855368 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.131504695 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.10821854 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.180102614 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.110178349 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160699198 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.110926031 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.113152831 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.111160495 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.145974896 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.111437423 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.15761565 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.110976871 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.111296095 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.110736726 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.138794261 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133134114 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.108517383 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.152013806 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.109396531 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112491572 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.144957558 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.109968737 seconds)
  done (took 5.589095647 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.131602599 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.125326719 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.132671497 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.162377693 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.119802491 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.123380701 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.153510041 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.120519076 seconds)
  done (took 2.262088108 seconds)
done (took 31.731171339 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.139171689 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.126185714 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.126206213 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 0.150125395 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.192364318 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.14250394 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 0.124611633 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.112915703 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 0.120084524 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.158226135 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.10972967 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 0.113416873 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.155860525 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.118183648 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 0.223564516 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 0.122879334 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.226369936 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 0.197700775 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 0.113138831 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 0.151474713 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.114631106 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 0.2303485 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.119045815 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 0.113162142 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.230589099 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 0.114245672 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.21536705 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.117078599 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.115833033 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14107757 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 0.195584748 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.146848072 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 0.115282854 seconds)
  done (took 6.07281398 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 0.216139223 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 0.116263311 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 0.148956651 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 0.118801847 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 0.115911076 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 0.146381143 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 0.213846124 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 0.116621866 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 0.149379959 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 0.117653845 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 0.116919766 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 0.22237514 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 0.120949342 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 0.13861189 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 0.119859666 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 0.115229749 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 0.241351639 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 0.117162728 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 0.109742488 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 0.096793344 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 0.140961415 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 0.117767767 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 0.2541866 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 0.110694884 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 0.118413349 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 0.117385719 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 0.148529701 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 0.121182842 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 0.116811181 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 0.145567793 seconds)
  done (took 5.452298605 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.131509519 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132067244 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.135096419 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.213978471 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.146649408 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.156341576 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.142346322 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.1325717 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.171686243 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.112828182 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.126616658 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.178565875 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.13169846 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.122204824 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.144474448 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.132785557 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135360723 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.11126589 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.149347377 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.130318368 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.128363658 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.160040593 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.140296858 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.119736916 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.140232382 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.120205455 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.12114783 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156316944 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.121355006 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.125529072 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.140926354 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.117732747 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.113984861 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.174509037 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.115129279 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.125952736 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.167559939 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.126122157 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.126756132 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.142652815 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.146591175 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.115163348 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.138063025 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.197952804 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.114153432 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.124150322 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.153225569 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.126854095 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.109518336 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.159430986 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.156416132 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.112047278 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.162016096 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.113353587 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.109108929 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.148029965 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.114641512 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.113987279 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.125577423 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.144674244 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.137276798 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.119083554 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.15168518 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.115189957 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.121301599 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.110584916 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.141536126 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.116411165 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.138796632 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.149280518 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.149532613 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.112170306 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.153747441 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.125937116 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.122048737 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.152093082 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.113458467 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.122423481 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122506542 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.148173665 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.124758013 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.114259989 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.145649892 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.129609037 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.133084286 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.15604932 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.125393468 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.124702585 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.143775355 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.115518489 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.130110973 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.112520392 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.148484184 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.125743887 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.111965733 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.144867955 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.126379169 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.124145005 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.110334869 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.168845653 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.116610279 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.110865639 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.167043418 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.11900775 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.11777344 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.152470482 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.156785476 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.111411371 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.153305715 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.126145518 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.112091021 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.148654556 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.119046749 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.111533918 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.129746546 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.157627868 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.119971781 seconds)
  done (took 16.877376252 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.330493671 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.282648304 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.212816016 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.312663973 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.125381472 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.241134303 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.307905997 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.308792616 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.1120155 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.180162678 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.165308645 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.279468592 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.142663326 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 0.142803126 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.313818427 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.365891663 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 0.170721082 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.152661768 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.17790767 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.129247719 seconds)
  done (took 5.67174476 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.142640217 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.14622275 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.163233633 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.143593634 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 0.119297341 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.15771112 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.113722164 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.131958494 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 0.151059691 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.121400337 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 0.112075982 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 0.156444133 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123433306 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 0.126335042 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.127514833 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.18276791 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.117239905 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.117230349 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.165460114 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118546619 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.108033617 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.170858289 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 0.122618497 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.132440844 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.158889417 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.126012417 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.112339623 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.149254658 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.117997078 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 0.118665866 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.146203092 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.13487821 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.119312479 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.108657823 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.156416395 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.13049412 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 0.116178406 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.144232147 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.116055672 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.117274151 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.126421677 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.154280143 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121841172 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.103237344 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 0.158565081 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.118280752 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.123661147 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.125478218 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.140973008 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.130197284 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125505343 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.122611239 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.150505801 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.131910284 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 0.115903936 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.160866356 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.124454983 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123482047 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.148655815 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 0.113125112 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 0.111000951 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.145964697 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 0.120176183 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123602515 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.124407171 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.165270082 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 0.12905411 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 0.112474913 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.152154957 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.117587404 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.117257217 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.158388629 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.136786917 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.11806709 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 0.147559105 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.126254692 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.117825136 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.098732805 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154008228 seconds)
  done (took 11.672085203 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 0.147921722 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.118540547 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131864733 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.180555411 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.123664314 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.118485856 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.149484497 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.134753871 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.12417632 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.157301733 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.125231046 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.12661415 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 0.165820541 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.125006223 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.117824516 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.158215591 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.124253533 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 0.152717319 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.160900472 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.143372552 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.123684505 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.148912132 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 0.128781775 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.125375966 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 0.173026235 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.127006395 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.140618966 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.121955257 seconds)
  done (took 5.101605493 seconds)
done (took 52.043610014 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.358659992 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.548235157 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.316870243 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.316900716 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.341133523 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.344004753 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.316685539 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.319114041 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.857184454 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.296177986 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.316046089 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.319064583 seconds)
done (took 29.867045387 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.426354304 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.838941168 seconds)
    (2/2) benchmarking "String"...
    done (took 1.617687466 seconds)
  done (took 4.667550901 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.325302253 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.310956117 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.530916482 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.309226802 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.309865796 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.327325364 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.316840325 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.322109351 seconds)
  done (took 16.636526113 seconds)
done (took 27.264478589 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.376113468 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.506089444 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.554953433 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.30512021 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.326869412 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.30679313 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.310878783 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.331432567 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.308672774 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.312304644 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 1.722158723 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.574086037 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.307517277 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.688655844 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.30797791 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.312281196 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.321057694 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.554743994 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.309008555 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.338890152 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.289857257 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.290831384 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.317856276 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.314836663 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.312425884 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.322158633 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.345200351 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.305783617 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.490635657 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.327917776 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.344077497 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.310227619 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.338136702 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.308121676 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 2.313300323 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.311379083 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.50584833 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.313444951 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.2980448 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.31372867 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.500690445 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.30729701 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.318008567 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.313617936 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.316905389 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.367673759 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.292478299 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 1.417327868 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.329718382 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.310061755 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.376996444 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.681581693 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.307137012 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.318507352 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.317129468 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.524119711 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.323375451 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.356449527 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.333780639 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.324382343 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.312730563 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.312803209 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.353895213 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.322068002 seconds)
  done (took 150.597887076 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.311038081 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.309333379 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.309277667 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.372186804 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.31053021 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.310549506 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.308579943 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.308875292 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.310816493 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.340767486 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.311325051 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.309239002 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.311291856 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.270274138 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.318452901 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.331988014 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.310863747 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.306073412 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.32754826 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.312407715 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.31327796 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.31191848 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.325402006 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.310593356 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.348197222 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.383946704 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.327281316 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.335927409 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.317278295 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.312065843 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.350004417 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.313891219 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.906584216 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.175540658 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.316150287 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.325277881 seconds)
  done (took 84.184696475 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.311838869 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.311925462 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.313642073 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.342901468 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.310743998 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.869616185 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.867815902 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.025673894 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.967475854 seconds)
    (10/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.311456298 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.605387843 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.545184252 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.306955323 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.404167186 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.318820037 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.309257948 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.327253955 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.338132533 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.312245835 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.312459563 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.869106516 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.326000671 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.397969694 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.482030759 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.32341399 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.341421063 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.708924548 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.306874745 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342464213 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.642242228 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.354150383 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.309631798 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.668128751 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.797758168 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.425850807 seconds)
    (36/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.307672241 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.313435457 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.34456379 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.312015481 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.59294377 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.308514921 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.314168808 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.316992042 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.969471221 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.311282367 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.867389592 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.311663886 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.250323202 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.314672112 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.311480099 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.574293035 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.945348459 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.312107129 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.312985263 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.316004401 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.312714303 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.312977939 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.342131407 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.536111442 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.40477433 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.313001843 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.31681268 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.342482064 seconds)
    (64/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.310533696 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.310795922 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.550607353 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.306184856 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.663525876 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.373279121 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.444784098 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.848157493 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.311591717 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.407043941 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425049618 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.306747423 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.312758381 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.310622783 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.308748451 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.419269481 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.305409166 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.709010149 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.479428691 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.322603261 seconds)
    (84/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.309923463 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.534469417 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.407249087 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.304905551 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.654657333 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.311131602 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.310463321 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.012262004 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.402254487 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.30845868 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.309037121 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.310083321 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.703253818 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.841890561 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.509837339 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.312634399 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.54650205 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.31126652 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.720241947 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.827475377 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.960771142 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.312890697 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.424891265 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.477584469 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.323493075 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.313552358 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.519538574 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.310158729 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.369850718 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.305823805 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.710729636 seconds)
  done (took 377.814332943 seconds)
done (took 613.806148042 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.190331474 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.131349723 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.287130194 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.14854654 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.12600401 seconds)
  done (took 12.090495184 seconds)
done (took 13.296807114 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.494939084 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.49614264 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.367700289 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.498254746 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.343193982 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.511659152 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.48154058 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.333680498 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.418976744 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.387899655 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.419947 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.359994473 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.343206924 seconds)
  done (took 19.664801794 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.589188181 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.320503383 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.38200569 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.568666736 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.356537389 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.579272429 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.614202507 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.319874892 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.461238005 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.330768817 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.329161138 seconds)
  done (took 19.058366146 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.601744929 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.31665708 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.374510739 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.577159391 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.353556651 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.601725409 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.614661725 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.322601487 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.467610785 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.360663672 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.331704529 seconds)
  done (took 19.129956003 seconds)
done (took 59.060471027 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 2.214126813 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 17.811889899 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.341339582 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.405434235 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.325346298 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.336680122 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.406972771 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.327316137 seconds)
  done (took 29.376431463 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.323378152 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.32203034 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.324431412 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.324970793 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.324358011 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.326424868 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.322224268 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.322779269 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.32540803 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.322371349 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.321125525 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.325840541 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.324310182 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.323833653 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.327429664 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.322880213 seconds)
  done (took 22.392867788 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.32453383 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.324690588 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.322817218 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.326580436 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.323469095 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.323612822 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.323074316 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.321915859 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.322399845 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.324181216 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.321231011 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.325995524 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.324712818 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.32303721 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.322342403 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.325430123 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.324190268 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.322308251 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.332530435 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.324579173 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.324258302 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.323792419 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.322401068 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.323862022 seconds)
  done (took 32.987146493 seconds)
done (took 85.962794906 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.314154248 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.324273066 seconds)
  done (took 5.845744083 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.387990079 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.384355588 seconds)
  done (took 3.981365043 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.325628166 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.323544295 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.324689434 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.325016814 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.324399382 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.324396753 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.324927787 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.324689626 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.325858039 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.323409474 seconds)
  done (took 14.454276289 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.325693293 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.326970946 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.324647479 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.329390614 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.325067674 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.325317922 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.326183828 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.326008182 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.32529058 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.326350743 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.330750734 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.325841352 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.326443728 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.32596795 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.327300676 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.327585216 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.327773225 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.328407656 seconds)
  done (took 25.09093342 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.341378919 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.348502349 seconds)
  done (took 3.89999451 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.465093211 seconds)
    (2/7) benchmarking "second"...
    done (took 1.368166511 seconds)
    (3/7) benchmarking "month"...
    done (took 1.443328859 seconds)
    (4/7) benchmarking "year"...
    done (took 1.43485816 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.389735873 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.348384339 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.368330671 seconds)
  done (took 11.028351044 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.329057395 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.54192682 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.66862063 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.887797115 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.328734552 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.329973682 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.112472605 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.330693346 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.331605687 seconds)
  done (took 15.07156067 seconds)
done (took 80.578982055 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.314302312 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.358714326 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.352252264 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.337287197 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.620031929 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.352073076 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.31586689 seconds)
done (took 16.858468084 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.299795733 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.313270046 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.299697288 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.311364551 seconds)
  done (took 10.431714622 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.315297997 seconds)
    (2/2) benchmarking "read"...
    done (took 1.602002951 seconds)
  done (took 5.127096157 seconds)
done (took 16.767778975 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.329075147 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.328634887 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.327986232 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.327917535 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.328043072 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.32819135 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.327715937 seconds)
    (8/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.330957561 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.329653653 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.330778326 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.332673584 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331798639 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.326964103 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.326977969 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.327780406 seconds)
    (16/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.327764185 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.328783885 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.325387086 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.328143854 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.327737786 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.328583077 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.329319562 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.328814218 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.32871932 seconds)
  done (took 33.099115902 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.327858437 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.3274475 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.329408141 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.329256643 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.326789464 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.329655233 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.331372837 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.329104179 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.331573264 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.329901893 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.327788498 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.328092327 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.330014219 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.330072799 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.331291161 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.329500445 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.33066177 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.328076983 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.329945402 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.326344854 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.329652459 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.328375611 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.328332607 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.329778141 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.32794847 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.330476109 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.329435991 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.329051112 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.330953111 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.328510292 seconds)
  done (took 41.089646904 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.335894931 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.337568153 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.332206604 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.333880221 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.334749449 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.334764672 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.335119885 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.332522134 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.331853122 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.335166415 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.333858538 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.333909021 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.334611648 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.336037488 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.335870155 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.334162409 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.334476103 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.333966857 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.332681169 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.333828103 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.334810578 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.332622033 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.33477902 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.335606684 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.334365079 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.334898377 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.33606577 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.336287831 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.335312763 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.335034693 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.33682603 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.335706841 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.336280008 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.3377836 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.336088387 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.334934974 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.339729849 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.3395985 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.336679627 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.334386589 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.335842801 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.336643915 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.336824391 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.335108101 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.336281916 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.336196664 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.336067913 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.337026141 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.33546028 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.334720502 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.334514995 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.33612371 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.335001848 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.336512459 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.337734328 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.336155078 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.337624148 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.335496672 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.33623634 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.337948336 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.336086222 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.338755426 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.338042017 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.338208144 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.336161693 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.337349141 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.337232486 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.338388128 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.336660153 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.335947273 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.336807855 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.338296881 seconds)
  done (took 97.39310458 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.332958961 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.334363917 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.333594146 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.331849733 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.334905755 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.333421371 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.33446959 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.334499618 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.332027411 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.33415446 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335650235 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.334997979 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.333922679 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.336589562 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.335826449 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.334434655 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.335616665 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.334943747 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.334818416 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.335274758 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337655792 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.335440268 seconds)
  done (took 30.578150866 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.335737314 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.338271556 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.334710825 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.33512208 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.335777797 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.338162565 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.339291973 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.337845475 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336501999 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.335469184 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.334278697 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.335828571 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.33632119 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.336310557 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.336287198 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.33822884 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.33735882 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.337819088 seconds)
  done (took 25.276259054 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.335486461 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.338089181 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.339678215 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.33778484 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.338204301 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.337058519 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.336884998 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.33767607 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.337780969 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.336811859 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.336911446 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.336601315 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.335980747 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.336890002 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.337343835 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.339022922 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.339719412 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.337834037 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.339422778 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.337034045 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.337330674 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.337392252 seconds)
  done (took 30.644388647 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.339158579 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.338844517 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.337129524 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.337700325 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.336718292 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.338846027 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.339073269 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.337315098 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.342132037 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.338827174 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.338320696 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.340284337 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.340850112 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.337430792 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.34017002 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.337688468 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.339671497 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.339618377 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.341047073 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.336025265 seconds)
  done (took 27.995447028 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.338729174 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.341095208 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.340951701 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.343766003 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.341021281 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.340656555 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342065582 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.34159534 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.341726489 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.340033329 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.342153287 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.34235957 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.340639042 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.34173327 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.343806082 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.34323018 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.344474606 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.342749489 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.345479787 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.343250796 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.342369531 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.341485061 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.345714658 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.343446967 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.340224976 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.344492183 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.342553115 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.343961367 seconds)
  done (took 38.806154345 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.341514964 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.343371104 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.339932513 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.340599389 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.341101501 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.341968314 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.341963804 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.343036394 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.341905017 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.341056643 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.342601966 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.341245425 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.342694214 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.341742477 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.340931474 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.342018571 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.342299252 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.341997482 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.340492132 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.342600608 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.3446851 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.344143715 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.341855777 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.34226823 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.342292922 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.34305151 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.340697593 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.341029817 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.343010926 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.342826759 seconds)
  done (took 41.481585595 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.391756031 seconds)
    (2/2) benchmarking "in"...
    done (took 1.390647871 seconds)
  done (took 4.003240327 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.342423524 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.345630382 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.344794505 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.34414437 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.34429505 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.345690497 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.343608576 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.342123724 seconds)
  done (took 11.975473899 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.338481443 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.345285584 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.34487037 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.343300861 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.342931463 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.339301942 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.346931964 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.347684385 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.342417286 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.342670627 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.34277063 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.344373635 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.343380258 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341837392 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.343120959 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344062071 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.350016607 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.34699478 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.344711316 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.344736913 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.347860256 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343798107 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.34811936 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.347607828 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.343096702 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.349074612 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.348471281 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.35179012 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.340996864 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.346039588 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.344232484 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.344842156 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.346956349 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.344275263 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.34708406 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.347753933 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351901822 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.346003931 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.349193694 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.349478848 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.348276708 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.346879733 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.343954777 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.34504282 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.344281215 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.349681577 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.34615284 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.346496871 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.343207748 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.346433364 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.350415564 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.342657018 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.347354911 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.347981492 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.349314661 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.352174162 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.35190086 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.344976144 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.346205632 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.352718864 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.355543415 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.351920008 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.34605147 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.351266427 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350483839 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.358541491 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.353108497 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.351741485 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.350130922 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.349041082 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.352999562 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.35706134 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.356099028 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.350426903 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348133845 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.349259729 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.343078134 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.349891962 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.350799331 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.35095996 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.353104954 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350276242 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.354173308 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.359322935 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.347380599 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.352393818 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.348115449 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.351997295 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.346533353 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.354734407 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.353135296 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.351114122 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.342393626 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.347015534 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.347935176 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.351888707 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.343733262 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.346908699 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.35272094 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.351809042 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.353031981 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.348983172 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.352333052 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.35290031 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.352025339 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.353211772 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.35274559 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.344526182 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.354365493 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.354635688 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.352607447 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.350597343 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.352890094 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.351987176 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.35144347 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.353361569 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.352772313 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.349607797 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.352890727 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.352089841 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.354287886 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.362683912 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.349154929 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.347271068 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.345724372 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.354462919 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.350291474 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.346034861 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.352086765 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.343023931 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.34382508 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.341735166 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.345922722 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.34036063 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.344560863 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.341002042 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.343790641 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.343788352 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.344495962 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.340178601 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.341532357 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.340455209 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.342142446 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.346277801 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.345236882 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.341679976 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.347007635 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.342275736 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.340764816 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.343710551 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.343044546 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.343498035 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.336449455 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.342458277 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.336159323 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.343295004 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.335119285 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.341427677 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.340388249 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.336824119 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.336879034 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.329640742 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.333832745 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.336923289 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.333602298 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.332981868 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.336674187 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.331587533 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.334517197 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.328733192 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.334712347 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.32741914 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.33143437 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.338437197 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.330741555 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.32976629 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.327704587 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.330030669 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.329382961 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329072965 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.326117053 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.328834571 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.330656193 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.331850184 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.335699808 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.332556685 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.332886123 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.328659392 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.326907284 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.329497244 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.328156699 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.33485449 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.336322267 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.335085548 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.325400196 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.333387746 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.324798042 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.33329596 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.330298459 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.334323409 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.331556099 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.330459662 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.323751241 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.331467707 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.327815879 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.331941228 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.324453344 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.330095178 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.331621714 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.329568922 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.331838249 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.326022324 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.32941999 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.332567361 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.331456294 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.333406374 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.325355387 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.332347424 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.326272166 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.326597956 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.332254016 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.330978704 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.334667098 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.3331339 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.329440594 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.329980735 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.33067869 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.328087547 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.335199699 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.330866779 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.330233463 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.336683768 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.332067349 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.333738506 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.338228892 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.332090322 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.331226769 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.334927785 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.336169299 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.330985884 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.330960143 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.337174543 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.337771959 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.333739941 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.336555522 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.329519728 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.336039625 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.33619761 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.337411025 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.329559311 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.335238539 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.329464899 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.333212675 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.330367452 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.332526278 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.331198915 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.334986955 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.33764192 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.33692467 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.331747783 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.338209562 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.334899237 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.334646683 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.331869225 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.341403852 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.337066248 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.334568641 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.334389831 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.329840983 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.337299746 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.330018137 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.334831663 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.330359322 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.342538456 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.345824608 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.336070376 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.334566653 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.340547283 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.336807102 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.333832327 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.332622392 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.331474087 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.334599676 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.330979397 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.331946506 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.335925478 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.331344269 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.337111748 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.333359723 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.335264834 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.338887054 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.339825201 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.331923043 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.338856563 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.337044352 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.338026114 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.330791507 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.336397246 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.336010429 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.334079193 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.332595883 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.333541311 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.340019569 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.334450517 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.335942397 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.334410653 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.334992625 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.335150245 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.337427734 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.343409107 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.336727479 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.343374625 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.333799617 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.338671833 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.334772612 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.338107418 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.341150997 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.336106911 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.343098453 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.338852121 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.333259137 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.334936483 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.340424954 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342897164 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.341187059 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.332913278 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.341705766 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.339128111 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.339409276 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.339283458 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.338538781 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.338924865 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.33929767 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.343082186 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.339652457 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.335423645 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.338971564 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.340868903 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.343592774 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.34001445 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.33515042 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.33654849 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.343258041 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.337134781 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.334092436 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.334494844 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.340049211 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.34093166 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.34067479 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.341403785 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.341192041 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.342576039 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.339384131 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344165466 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.343783907 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.344027406 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.344614956 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.341127346 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.343670659 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.336944478 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.341683104 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.33921549 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.336465774 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.335092033 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.33907079 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.342970669 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.335799394 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.349341163 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.342481552 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.338527212 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.340273433 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.34435826 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.336076228 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.344735462 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.355718683 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.338622496 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.3433599 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.341720725 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.337490697 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.344812591 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.344197727 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.337243163 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.338770355 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.343496469 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.345498146 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.338204937 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.344222403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.338324607 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.342901397 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.342188321 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.341262071 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.343806247 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.343210677 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.339219827 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.345338973 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.341677415 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.345536279 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.339832354 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.341499688 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.339978954 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.346461941 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.346128865 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.340623304 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.345566241 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.34368104 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.338790903 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.340805748 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.346225614 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.339181292 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346321331 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.341672578 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.345092043 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.341301095 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.343470421 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.342435058 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.346845067 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.339624263 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.340571189 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343807312 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.34322447 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.344993148 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.341634693 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.347566299 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.340459889 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.339061745 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.346543763 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.342207868 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.346915182 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.341331876 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.344572881 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342527338 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.345673555 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.344219746 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.345286226 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.339892308 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.341556055 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.348925247 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345414204 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.345802986 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.344308391 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.350110805 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.34221375 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.34337427 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.346197459 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.341339314 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.342086274 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.347845347 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.341301703 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.342715852 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.345340864 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.347842275 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.347499057 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.345546967 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.34292377 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.351764434 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.346785613 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.349923727 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.343492533 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.345006294 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.344643994 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.346590838 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.346977018 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.342588664 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349385875 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.346976488 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.350393506 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.345083827 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.344151192 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.345515485 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.351170189 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349097076 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.346628411 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.350972941 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.345809042 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.350206517 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.346848045 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.348484245 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.343414367 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.344575396 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.345789857 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.348542516 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.348272693 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.34645598 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.347879306 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.345190893 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.350899076 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.350349259 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.348264595 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.347188257 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.344900634 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.349163745 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.345043364 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.347345729 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.345705522 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.343871139 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.35002793 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.348358361 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.345032574 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.351888548 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.352663221 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.350615491 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.34403909 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.347892964 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.350680842 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.352890533 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.350396825 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346464676 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.348797816 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.349341228 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.350218698 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.350153176 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.348118273 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.357966073 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.355893322 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.346460106 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.346934798 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350324923 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.355654136 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.35015359 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.351566418 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.349082454 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.349568024 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.355270346 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.350612741 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.353315645 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.349202941 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.347751001 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.355560352 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.349246331 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.351668091 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.351544971 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.353286382 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.352344173 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.348685317 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.357656343 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.354632514 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.355760649 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.366292661 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.348909402 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.351163099 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.354343296 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.345369679 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.353371647 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.349388948 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.356241417 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.3533901 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.353611848 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.355327397 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.344943451 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.351878847 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.35263984 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.358166437 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.352791362 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.34644874 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.351236465 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.354220995 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.353901989 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.360045103 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.352848387 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.354277021 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.35342739 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.348471337 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.358802047 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.36263937 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.355217438 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.355452271 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.352381984 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.352561452 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.352351771 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.354787489 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.357216887 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.35543566 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.354005094 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.35193779 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.355844171 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.353460272 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.349288741 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.35089721 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351279533 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.354515759 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.361183765 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.363333357 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.352412646 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.351285099 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.355286103 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.355182764 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350796411 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.356424367 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.35442185 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.351045013 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.351769334 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.35766416 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.356678034 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.353177385 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.351742604 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.359457692 seconds)
  done (took 801.863182863 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.353737314 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353771481 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.355232599 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.35443755 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.353874014 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.354492951 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353803587 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.353377713 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.354540073 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.35607454 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.356424544 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354454174 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.355509796 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353955308 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.353579965 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.356866382 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.354273346 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.354660218 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.355590811 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.35686981 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.356029205 seconds)
  done (took 29.684075042 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.355920387 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.357386062 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.357359242 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.357048674 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.35570901 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.357650319 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.356516246 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.357072968 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.358456368 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.357033186 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.35751652 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.358599688 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.356854731 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.357700006 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.356857039 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.35959802 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.357251044 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.357687711 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.357740659 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.355923867 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.359242194 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.356197743 seconds)
  done (took 31.096781993 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.358318403 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.357444619 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.352210187 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.358320841 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.360565492 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.359171853 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.360853076 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.3574705 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.359730629 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.354918552 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.355435167 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.357141881 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.360610579 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.362359042 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.35615794 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.359712809 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.36043038 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.358778029 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.358281617 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.359231273 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.361182131 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.361946845 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.359433186 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.353260688 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.360166899 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.361872471 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.361593917 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.361463833 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.353175225 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.363275825 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.357978638 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.354697615 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.36099033 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.357469192 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.358473969 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.364738837 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.36312411 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.360136587 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.360279208 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.364520387 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.374520456 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.361228964 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.361922421 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.362533927 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.361940678 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.358797567 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.364037546 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.361959525 seconds)
  done (took 66.511264749 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.360558504 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.363744454 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.363404749 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.362135927 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.363439708 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.36289419 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.362480576 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363528082 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.361186177 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.361010361 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.361744702 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.361229466 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.358681914 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.361643108 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.362859778 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.360765608 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.359713565 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.361297276 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.362653753 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.361444201 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.361564385 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.363434238 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.364284757 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.362707564 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.362874654 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.360862884 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.362400923 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.36237809 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.362736422 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.362915361 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.364462758 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.36441618 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.36443466 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.36347204 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.36227799 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.363535617 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.363233416 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.363397991 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.363568281 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.362058229 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.364510893 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.363136871 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.365238304 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.364742848 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.361842957 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.362528194 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.363358335 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.36285331 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.360738303 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.36594215 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.363345808 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.361434335 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.364293882 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.36103576 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.363621694 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.364121277 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.363149366 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.363946887 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.364407422 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.364579419 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.363055927 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.365380465 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.366097193 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.365648003 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.366697697 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.365194117 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.361258909 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.364782774 seconds)
  done (took 93.925003679 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.362723519 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.365436423 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.364894834 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.364587258 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.366193812 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.36669165 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.36636062 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.365458913 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.366061953 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363283859 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.365298934 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.36603866 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.368728074 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.367921347 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.367913399 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.367756229 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.367074857 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.366870043 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.369604771 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.367938666 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.367108658 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.369464655 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.365304152 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.366782716 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.368252057 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.366482598 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.366972082 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.368387345 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.368486917 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.367170377 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367237567 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.368352281 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.367298818 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.368915118 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.368032609 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.367287518 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368652704 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.369057081 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.371038794 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.367015625 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.370305717 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.366571994 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.366964262 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.369243876 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.367972118 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.367674865 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.368479957 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.369452087 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.370696091 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.370520578 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.369370345 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.368106805 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.368211501 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.368900239 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.368960764 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.36846711 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.368473889 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.368574351 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.36949147 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.370153953 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.37061677 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.370397352 seconds)
  done (took 86.043942375 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.369452847 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.370848744 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.370759376 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.369055631 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.373342639 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.368491643 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.372502016 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.370478222 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.370260268 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.37228537 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.372200677 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.371067903 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373349098 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372931817 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.372036517 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372775497 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.373073593 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.371411732 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372109774 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.37091636 seconds)
  done (took 28.674358032 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.372532036 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.371877056 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.371484452 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.370627589 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.371770998 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.371948985 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.372948264 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.370449843 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.370518161 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.371627806 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.372756135 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.372789137 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.372303667 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.371724568 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.373775217 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.372478233 seconds)
  done (took 23.198830887 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.370601212 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.372468142 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.373607195 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.372617324 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.373361221 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.371307651 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.373258001 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.371846532 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.372669099 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.373277937 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.373937943 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.374760085 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.372307817 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.374134643 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.372742754 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.372405974 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.372543789 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.375306896 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.374799215 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.373720336 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.375297065 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.373295889 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.374715205 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.37584957 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.371491607 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.375227873 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.373449199 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.373059874 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.372190246 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.375003683 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.373748728 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.375138602 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.372053337 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.373957611 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.374738157 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.37459034 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.377118148 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.375794261 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.377035597 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.375933761 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.37757062 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.375299769 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.376116799 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.376728484 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.374820142 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.375817861 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.375486232 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.375594876 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.373260923 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.374488913 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.378068378 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.379062312 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.377168789 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.377113745 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.377336982 seconds)
  done (took 76.844972399 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.375177513 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.375702709 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.374230621 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.376807861 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.375415558 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.375726106 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.375136442 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.376877103 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.377885183 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.377709632 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.376305787 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.379319887 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.376936469 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.37850178 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.376863178 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.377197471 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.375112666 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.378253093 seconds)
  done (took 26.031114773 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.377369763 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.376087903 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.377626099 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.37787923 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.376682538 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.379043242 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.376918146 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.379652383 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.379111241 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.377092607 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.378953147 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.379203334 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.376616559 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.379985195 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.376657876 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.378003179 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.379253558 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.37934371 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.379216109 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.377991397 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.378417969 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.379139833 seconds)
  done (took 31.571954997 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.371832242 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.373019912 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.3726988 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.387640062 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.385029791 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.371578683 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.37286389 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.372332748 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.391970286 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.411234917 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.407904691 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.384411037 seconds)
  done (took 17.856629577 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377841903 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380358739 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.377298991 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381634333 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.38246256 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379390985 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37915876 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379430113 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381320323 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378974896 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377738818 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382177406 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383871673 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380585412 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38249559 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381107391 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38010969 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380119499 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381962383 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382018788 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381638388 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380507032 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379820058 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381272514 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380565064 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382049208 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381973994 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383087068 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38265349 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.3848875 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382839258 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381238896 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383802995 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381107466 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.381402076 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383106534 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381124671 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381931463 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382870648 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382716919 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.381154063 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.383625594 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382735523 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381805447 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.383404167 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.381534461 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.38224174 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381113554 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381470085 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.382720096 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.382930117 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383291841 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383212436 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385203519 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.38244531 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.383571215 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.382923391 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383383653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.384717967 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383412782 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381995541 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385854896 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.382709305 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379964074 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382614058 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.384736903 seconds)
  done (took 92.46007755 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381508822 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.379650891 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.382634497 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.384294481 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383580804 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.383810523 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382983668 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3841963 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381259205 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.383751766 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385119001 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.382646118 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.38375606 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381540739 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384353628 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384410773 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385253942 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.38542085 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384426272 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385170934 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386269409 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386157554 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.385270397 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385455819 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384829471 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382112102 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.383664917 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.384059793 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385329685 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.384007616 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.383851155 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.385884204 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387523533 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.386854072 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.387138911 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.384987996 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384517826 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.387465749 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385803343 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386576556 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.387135089 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.387383769 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.387033945 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.385756079 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.3872255 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.385881377 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.387317752 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386541732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.386443584 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387757171 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.386341727 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.386598582 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.388525398 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.386488591 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385414244 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.384962762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.385147747 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.385389519 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385908408 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.389135092 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.386252875 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.387478253 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.388162985 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.39166298 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.384318267 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.383970064 seconds)
  done (took 92.691082875 seconds)
done (took 1882.0053935 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.543052989 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.498516233 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.381185338 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.384107604 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.368448239 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.366670434 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.382936376 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.37185632 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.369147499 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.366057117 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.366115916 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.55549608 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.422145754 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.364274378 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.367752649 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.457971608 seconds)
  done (took 27.82460665 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.388876286 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.376592721 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.475584833 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.37097918 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.401089817 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.550941641 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.429621648 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.370386179 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.529405018 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.380506692 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.358712562 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.383453514 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.364200273 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.354884838 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.380899232 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.547390403 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.600857833 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.358185649 seconds)
  done (took 29.867009945 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.789345668 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.371908382 seconds)
  done (took 5.399839242 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.385396424 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.364671419 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.364318646 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.361124962 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.354032643 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.350890582 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.364035003 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.362224942 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.358983986 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.475016962 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.360738185 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.372270275 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.359222845 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.360090682 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.36199242 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.404431897 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.504989873 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.366622133 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.363430155 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.365147303 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.358295933 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.441756168 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.401694805 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.354496563 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.472394112 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.355698644 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.359037375 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.361721018 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.484092006 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.363297522 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.356754528 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.355058224 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.357908653 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.356674393 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.793909906 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.355189111 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.362691386 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.382581354 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.359546314 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.496742256 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.35705879 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.357768929 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.345838865 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.804067659 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.48766638 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.469770279 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.344109761 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.352207562 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.352484962 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.418799123 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.355547143 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.353189164 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.407822847 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.171976978 seconds)
  done (took 86.510806778 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.382205995 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.341258495 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.519284681 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.357702838 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.337599543 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.341421626 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.338860607 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.60598508 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.342924509 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.346198201 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.618259313 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.893890917 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.341490469 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.407733581 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.285174008 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.428465356 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.335287024 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.332677585 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.339950889 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.339614207 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.885694697 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.339591148 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.336056224 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.463954831 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.373179429 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.839759006 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.33841151 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.333633926 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.352167545 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.336967959 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.85251664 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.343265922 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.433111461 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.335457563 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.606170811 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.700592557 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.6825671 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.344681956 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.343696472 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.334774002 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.34827126 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.820610146 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.683701499 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.336231167 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.33403191 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.827956442 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.333970613 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.342733304 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.346844006 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.589193272 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.342441718 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.337177952 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.338755948 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.335178013 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.336391953 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.383129603 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.442558645 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.841129723 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.337035429 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.336445086 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.362731082 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.340976197 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.340681516 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.339470737 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.352937751 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.688058893 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.538223031 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.341200321 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.686892604 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.846111678 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.337858246 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.918454228 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.339225903 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.342804576 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.588862647 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.340270645 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.35426125 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.833974392 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.35091307 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.33996591 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.66803426 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.3434945 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.633713893 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.353358752 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.340995603 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.913447135 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.353929781 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.356847211 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.340685969 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.339571428 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.340713961 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.343534981 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.614072367 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.371357616 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.340349987 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.341248961 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.364594735 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.341832167 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.358733997 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.347772189 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.920799623 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.351885111 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.338354483 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.341649333 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.350182578 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.344233916 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.342156347 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.338950775 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.610334045 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.346130328 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.363815087 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.341487838 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.340840732 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.348743326 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.420369871 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.346794161 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.63655658 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.343824434 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.341960834 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.343631147 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.340361058 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.374436138 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343040403 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.344925726 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.206947781 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.603465202 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.361724943 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.339532031 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.340003181 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.338233042 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.341050226 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.338885413 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.40068732 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.344788014 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.123072613 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.344962127 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.350573754 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.344489738 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.34803276 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.342082055 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.345609184 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.338468943 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.637512235 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.617834591 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.519905461 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.345398034 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.35454154 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.099796111 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.34808742 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.521925464 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.361024085 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.337866834 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.590788737 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.554934105 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.344755434 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.34647336 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.34328518 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.610426636 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.345434304 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.66012762 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.885994946 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.342566285 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.350104157 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.131537931 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.053669321 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.347292141 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.348889308 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.626403386 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.359619782 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.343831476 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.345188404 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.346129259 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.343770797 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.347776425 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.348757349 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.341972618 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.342219951 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.643884904 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.537567553 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.360084642 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.348610579 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.840167336 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.379039133 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.343142477 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.373137035 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.346317051 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.34427571 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.436903595 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.350056584 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.347494044 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.34719242 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.345308758 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.856391648 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.355122899 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.351570406 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.536796678 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.032208044 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.345451058 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.342016351 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.342369872 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.274206117 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.868758233 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.35485895 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.643780792 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.35124787 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.380423472 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.348318493 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.443728305 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.865769616 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.344805395 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.346348389 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.005649213 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.344676833 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 3.842055145 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.343316965 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.345839328 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.934732365 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.347247764 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.349381991 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.345809222 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.349500928 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.664504782 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.353124507 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.35021021 seconds)
  done (took 500.162902564 seconds)
done (took 651.023336624 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.349238314 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.345179896 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.33620373 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.350408557 seconds)
  done (took 10.614586474 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.389947753 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.353377073 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.358527551 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.350483085 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.364196794 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.35290469 seconds)
  done (took 9.407942726 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.347102138 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.351798353 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.349806812 seconds)
  done (took 8.287072089 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.563848844 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.377864079 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.699851042 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.355074001 seconds)
  done (took 9.236408378 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.359507785 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.365687421 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.35997001 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.365116333 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.392255257 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.391167364 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.369224885 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.364530937 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.391173981 seconds)
  done (took 13.597092931 seconds)
done (took 52.380942276 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/192) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.599705743 seconds)
    (2/192) benchmarking ("map", identity, BigInt, true)...
    done (took 1.601178931 seconds)
    (3/192) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.457988037 seconds)
    (4/192) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.504977501 seconds)
    (5/192) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.419381978 seconds)
    (6/192) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.473315447 seconds)
    (7/192) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.376198277 seconds)
    (8/192) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.381543421 seconds)
    (9/192) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.339564947 seconds)
    (10/192) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.334857313 seconds)
    (11/192) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.523402734 seconds)
    (12/192) benchmarking ("perf_sum", Int8, false)...
    done (took 1.387042762 seconds)
    (13/192) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.06164872 seconds)
    (14/192) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.480261022 seconds)
    (15/192) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.209259562 seconds)
    (16/192) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.36080713 seconds)
    (17/192) benchmarking ("map", abs, Int8, true)...
    done (took 1.479849333 seconds)
    (18/192) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.361471118 seconds)
    (19/192) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.257191985 seconds)
    (20/192) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.493479016 seconds)
    (21/192) benchmarking ("map", identity, Float32, false)...
    done (took 1.421730109 seconds)
    (22/192) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.508516938 seconds)
    (23/192) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.338672101 seconds)
    (24/192) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.349330099 seconds)
    (25/192) benchmarking ("map", identity, Bool, true)...
    done (took 1.481248476 seconds)
    (26/192) benchmarking ("perf_sum", Bool, true)...
    done (took 1.396142619 seconds)
    (27/192) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.476712527 seconds)
    (28/192) benchmarking ("map", abs, Float64, true)...
    done (took 1.579766536 seconds)
    (29/192) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.469538381 seconds)
    (30/192) benchmarking ("map", identity, BigInt, false)...
    done (took 1.455399544 seconds)
    (31/192) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.57343541 seconds)
    (32/192) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.335658287 seconds)
    (33/192) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.401803369 seconds)
    (34/192) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.573292076 seconds)
    (35/192) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.335188226 seconds)
    (36/192) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.392332105 seconds)
    (37/192) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.335326241 seconds)
    (38/192) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.54777459 seconds)
    (39/192) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.172392997 seconds)
    (40/192) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.337770839 seconds)
    (41/192) benchmarking ("map", identity, Int8, false)...
    done (took 1.389838981 seconds)
    (42/192) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.501605703 seconds)
    (43/192) benchmarking ("perf_countequals", "Int8")...
    done (took 1.443026698 seconds)
    (44/192) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.456337573 seconds)
    (45/192) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.391293102 seconds)
    (46/192) benchmarking ("map", identity, Int64, false)...
    done (took 1.43126089 seconds)
    (47/192) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.542536947 seconds)
    (48/192) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.354223839 seconds)
    (49/192) benchmarking ("perf_sum", Bool, false)...
    done (took 1.3950224 seconds)
    (50/192) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.340526433 seconds)
    (51/192) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.104269291 seconds)
    (52/192) benchmarking ("map", abs, Bool, false)...
    done (took 1.397813283 seconds)
    (53/192) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.498534934 seconds)
    (54/192) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.347359874 seconds)
    (55/192) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.387218992 seconds)
    (56/192) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.380705589 seconds)
    (57/192) benchmarking ("map", abs, BigInt, true)...
    done (took 2.344132757 seconds)
    (58/192) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.552783593 seconds)
    (59/192) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.455285502 seconds)
    (60/192) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.16138996 seconds)
    (61/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.609790487 seconds)
    (62/192) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.448070634 seconds)
    (63/192) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.381048221 seconds)
    (64/192) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.370530991 seconds)
    (65/192) benchmarking ("map", identity, Int64, true)...
    done (took 1.573353698 seconds)
    (66/192) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.5046144 seconds)
    (67/192) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.058588887 seconds)
    (68/192) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.699570145 seconds)
    (69/192) benchmarking ("map", abs, Int64, false)...
    done (took 1.441834703 seconds)
    (70/192) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.338091378 seconds)
    (71/192) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.340084699 seconds)
    (72/192) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.490868738 seconds)
    (73/192) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.539785275 seconds)
    (74/192) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.466598762 seconds)
    (75/192) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.51344838 seconds)
    (76/192) benchmarking ("perf_countequals", "Float32")...
    done (took 1.442684442 seconds)
    (77/192) benchmarking ("map", identity, Float32, true)...
    done (took 1.534441878 seconds)
    (78/192) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.360283332 seconds)
    (79/192) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.322742252 seconds)
    (80/192) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.498591347 seconds)
    (81/192) benchmarking ("perf_sum", Float64, false)...
    done (took 1.389686805 seconds)
    (82/192) benchmarking ("perf_sum", Float32, true)...
    done (took 1.395848312 seconds)
    (83/192) benchmarking ("map", abs, BigInt, false)...
    done (took 2.361951605 seconds)
    (84/192) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.483158125 seconds)
    (85/192) benchmarking ("perf_sum", Int8, true)...
    done (took 1.39586163 seconds)
    (86/192) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.337829145 seconds)
    (87/192) benchmarking ("perf_countequals", "Int64")...
    done (took 1.466686113 seconds)
    (88/192) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.389481385 seconds)
    (89/192) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.46757093 seconds)
    (90/192) benchmarking ("perf_sum", Float32, false)...
    done (took 1.396789821 seconds)
    (91/192) benchmarking ("perf_countequals", "Bool")...
    done (took 1.442116267 seconds)
    (92/192) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.163088179 seconds)
    (93/192) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.219774044 seconds)
    (94/192) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.013847236 seconds)
    (95/192) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.417018384 seconds)
    (96/192) benchmarking ("map", abs, Int64, true)...
    done (took 1.589451095 seconds)
    (97/192) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.361856087 seconds)
    (98/192) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.465322999 seconds)
    (99/192) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.471744221 seconds)
    (100/192) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.384096319 seconds)
    (101/192) benchmarking ("map", identity, Float64, true)...
    done (took 1.58107463 seconds)
    (102/192) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.054887671 seconds)
    (103/192) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.440774534 seconds)
    (104/192) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.341412695 seconds)
    (105/192) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.179346397 seconds)
    (106/192) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.542944083 seconds)
    (107/192) benchmarking ("map", identity, Int8, true)...
    done (took 1.479407843 seconds)
    (108/192) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.356479919 seconds)
    (109/192) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.321947523 seconds)
    (110/192) benchmarking ("perf_sum", Int64, true)...
    done (took 1.416222454 seconds)
    (111/192) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.348579576 seconds)
    (112/192) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.530091944 seconds)
    (113/192) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.473129347 seconds)
    (114/192) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.461229947 seconds)
    (115/192) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.404495393 seconds)
    (116/192) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.340458592 seconds)
    (117/192) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.339743558 seconds)
    (118/192) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.345033567 seconds)
    (119/192) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.207224654 seconds)
    (120/192) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.187254994 seconds)
    (121/192) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.103867416 seconds)
    (122/192) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.346194352 seconds)
    (123/192) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.351781511 seconds)
    (124/192) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.33802258 seconds)
    (125/192) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.123870819 seconds)
    (126/192) benchmarking ("map", abs, Float32, true)...
    done (took 1.544018628 seconds)
    (127/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.616315682 seconds)
    (128/192) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.34036851 seconds)
    (129/192) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.395445671 seconds)
    (130/192) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.511179771 seconds)
    (131/192) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.493083577 seconds)
    (132/192) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.386278669 seconds)
    (133/192) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.344042526 seconds)
    (134/192) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.443625085 seconds)
    (135/192) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.35924101 seconds)
    (136/192) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.339160157 seconds)
    (137/192) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.12417495 seconds)
    (138/192) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.216964 seconds)
    (139/192) benchmarking ("map", abs, Float64, false)...
    done (took 1.445894212 seconds)
    (140/192) benchmarking ("map", abs, Bool, true)...
    done (took 1.491595589 seconds)
    (141/192) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.49170523 seconds)
    (142/192) benchmarking ("perf_countequals", "Float64")...
    done (took 1.44492823 seconds)
    (143/192) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.343946128 seconds)
    (144/192) benchmarking ("map", abs, Int8, false)...
    done (took 1.394679435 seconds)
    (145/192) benchmarking ("perf_sum", Int64, false)...
    done (took 1.392995698 seconds)
    (146/192) benchmarking ("map", identity, Float64, false)...
    done (took 1.449691297 seconds)
    (147/192) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.626321474 seconds)
    (148/192) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.646672981 seconds)
    (149/192) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.460741961 seconds)
    (150/192) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.509159088 seconds)
    (151/192) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.396229361 seconds)
    (152/192) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.40774995 seconds)
    (153/192) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.364430419 seconds)
    (154/192) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.466675054 seconds)
    (155/192) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.365141736 seconds)
    (156/192) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.340562589 seconds)
    (157/192) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.420411442 seconds)
    (158/192) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.519145454 seconds)
    (159/192) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.463134278 seconds)
    (160/192) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.424851989 seconds)
    (161/192) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.494162297 seconds)
    (162/192) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.343885011 seconds)
    (163/192) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.423215817 seconds)
    (164/192) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.462888203 seconds)
    (165/192) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.429067857 seconds)
    (166/192) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.480709259 seconds)
    (167/192) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.37588652 seconds)
    (168/192) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.399167932 seconds)
    (169/192) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.35276246 seconds)
    (170/192) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.341958187 seconds)
    (171/192) benchmarking ("perf_sum", Float64, true)...
    done (took 1.398645853 seconds)
    (172/192) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.357866098 seconds)
    (173/192) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.625417112 seconds)
    (174/192) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.18033912 seconds)
    (175/192) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.493729626 seconds)
    (176/192) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.076894386 seconds)
    (177/192) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.346095909 seconds)
    (178/192) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.531499921 seconds)
    (179/192) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.345595492 seconds)
    (180/192) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.571693936 seconds)
    (181/192) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.403443737 seconds)
    (182/192) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.012821011 seconds)
    (183/192) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.514015303 seconds)
    (184/192) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.375082005 seconds)
    (185/192) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.366317907 seconds)
    (186/192) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.349161682 seconds)
    (187/192) benchmarking ("map", abs, Float32, false)...
    done (took 1.43243381 seconds)
    (188/192) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.516455657 seconds)
    (189/192) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.237228948 seconds)
    (190/192) benchmarking ("map", identity, Bool, false)...
    done (took 1.392123949 seconds)
    (191/192) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.361046032 seconds)
    (192/192) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.487029213 seconds)
  done (took 344.328684655 seconds)
done (took 345.569006749 seconds)
(14/20) benchmarking "simd"...
  (1/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.377951592 seconds)
  (2/72) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.443941096 seconds)
  (3/72) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.363959503 seconds)
  (4/72) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.363424405 seconds)
  (5/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.364438688 seconds)
  (6/72) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.355951877 seconds)
  (7/72) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.396966725 seconds)
  (8/72) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.365530225 seconds)
  (9/72) benchmarking ("inner", "Float64", 4096)...
  done (took 1.374156923 seconds)
  (10/72) benchmarking ("inner", "Float64", 4095)...
  done (took 1.373428524 seconds)
  (11/72) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.368582324 seconds)
  (12/72) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.369619128 seconds)
  (13/72) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.376411515 seconds)
  (14/72) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.372782016 seconds)
  (15/72) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.400500139 seconds)
  (16/72) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.364987394 seconds)
  (17/72) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.364606704 seconds)
  (18/72) benchmarking ("inner", "Int32", 4096)...
  done (took 1.372914501 seconds)
  (19/72) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.377391255 seconds)
  (20/72) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.378220597 seconds)
  (21/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366646379 seconds)
  (22/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.366850225 seconds)
  (23/72) benchmarking ("inner", "Int64", 4095)...
  done (took 1.385018453 seconds)
  (24/72) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.365905683 seconds)
  (25/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.374474079 seconds)
  (26/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.374995185 seconds)
  (27/72) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.372222011 seconds)
  (28/72) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.363487695 seconds)
  (29/72) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.367456951 seconds)
  (30/72) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.37679544 seconds)
  (31/72) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.365588719 seconds)
  (32/72) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.371187789 seconds)
  (33/72) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.378740548 seconds)
  (34/72) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.376057781 seconds)
  (35/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.365815223 seconds)
  (36/72) benchmarking ("inner", "Int32", 4095)...
  done (took 1.372153991 seconds)
  (37/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.366502531 seconds)
  (38/72) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.447873117 seconds)
  (39/72) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.385838736 seconds)
  (40/72) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.374088459 seconds)
  (41/72) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.370667244 seconds)
  (42/72) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.377131312 seconds)
  (43/72) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.370939093 seconds)
  (44/72) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.367829016 seconds)
  (45/72) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.376571893 seconds)
  (46/72) benchmarking ("inner", "Int64", 4096)...
  done (took 1.385208451 seconds)
  (47/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.369995316 seconds)
  (48/72) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.381593636 seconds)
  (49/72) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.369031194 seconds)
  (50/72) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.364794678 seconds)
  (51/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.381975518 seconds)
  (52/72) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.379809046 seconds)
  (53/72) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.369938587 seconds)
  (54/72) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.366286791 seconds)
  (55/72) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.356892983 seconds)
  (56/72) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.381263007 seconds)
  (57/72) benchmarking ("inner", "Float32", 4095)...
  done (took 1.374717165 seconds)
  (58/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.385367654 seconds)
  (59/72) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.373391578 seconds)
  (60/72) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.368731326 seconds)
  (61/72) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.402585107 seconds)
  (62/72) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.382845546 seconds)
  (63/72) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.375484371 seconds)
  (64/72) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.376522825 seconds)
  (65/72) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.375796775 seconds)
  (66/72) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.377236962 seconds)
  (67/72) benchmarking ("inner", "Float32", 4096)...
  done (took 1.373850036 seconds)
  (68/72) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.380385052 seconds)
  (69/72) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.370794697 seconds)
  (70/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.368528714 seconds)
  (71/72) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.371849183 seconds)
  (72/72) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.371335733 seconds)
done (took 108.290671464 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.488072724 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.368391484 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.511287456 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.374910422 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.519412904 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.496951281 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.369238032 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.374646773 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.371614968 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.161737379 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.374396349 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.37251855 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.369115698 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.372624959 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.489295784 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.376257393 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.371765648 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.064259096 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.377489724 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.508620387 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.363422621 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.372873849 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.37349562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.167291526 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.367121303 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.363180912 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.508597293 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.377933418 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.064604353 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.365221239 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.366989937 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.061298538 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.506751668 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.394586852 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.385634272 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.384776925 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.527933225 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.37658902 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.48532493 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.504581831 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.509646131 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.415284053 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.364498211 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.367123306 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.373769777 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.373734446 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.373777547 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.401220336 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.373541955 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.371152509 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.061685591 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.386681963 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.385402729 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.378618967 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.374561577 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.395447385 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.379880957 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.374930712 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.510557027 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.379793153 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.494705612 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.167720941 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.165809779 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.376900816 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.36932299 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.378272368 seconds)
  done (took 110.784419824 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.433982765 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.445964055 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.479835329 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.372653962 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.423141404 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.480976611 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.366137314 seconds)
  done (took 11.250399593 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.380311103 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.379712617 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.422616615 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.418083652 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.38161587 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.528820536 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.376101783 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.381021202 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.378483598 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.423521314 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.38019562 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.376647213 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.385157694 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.371430046 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.419886616 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.385211547 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.486736089 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.37054558 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.377004645 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.522598251 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.37650461 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.381266971 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.422345304 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.382590901 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.380495002 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.378297297 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.278382131 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.377522348 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376650687 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.382175506 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.378598781 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.423712681 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.377981382 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.369424246 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.377778808 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.490193863 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.382091237 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.376596918 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.3820439 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.377094853 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.376652612 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.381887422 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.38799578 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.378360582 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.381566993 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.400043318 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.381119942 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.379696384 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.378141338 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.383095948 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.427596571 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.382681123 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.378886345 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.376767463 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.430669423 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.391084428 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.383358531 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.380293119 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.385069758 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.380482679 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526799553 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.426177163 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.386775651 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.423230176 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.38483075 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.381684579 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.381440264 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.384624359 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.465332999 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.384117276 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.419216632 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.381412456 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.557452839 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.403366104 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.381353996 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.380545851 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.379983223 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.376352569 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.372114127 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.382700023 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.38335879 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.379143871 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.382102428 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.379582082 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.383065602 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.529722763 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.48714883 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.381091153 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.387042303 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.381825577 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.380346588 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.429121162 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.382240825 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.381175749 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.430588865 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.49577662 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.433695877 seconds)
  done (took 142.00410262 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.389196073 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.39104522 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.382514841 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.404688652 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.376450867 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.379515553 seconds)
  done (took 9.575055976 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.377485102 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.384435914 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.385239107 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.381361588 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.385256866 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.388722012 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.390573795 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.377096518 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.388098616 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.388310134 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.388395664 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.386379926 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.394146323 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.38518122 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.39208119 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.385964879 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.389774535 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.384699017 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.385630143 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.385456191 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.376781209 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.38799455 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.383175175 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.381549404 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.388869823 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.389585143 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.402826099 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.386735061 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.38385996 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.38736886 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.387441321 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.390822208 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.381671057 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.387379606 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.392116015 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.383031357 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.388523017 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.392929767 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.385943704 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.38695667 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.397877599 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.384690401 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.391289784 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.392932528 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.381519495 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.389784413 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.395438558 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.399117768 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.392985625 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.396268921 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.392739465 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.383850658 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.391790995 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.389269754 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.386666209 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.384319435 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.400324197 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.394380674 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.386660615 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.378975933 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.391288007 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.38972769 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.3799255 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.394414539 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.389834871 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.396454122 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.376868906 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.389422122 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.390116435 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.384347809 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.391890322 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.383345108 seconds)
  done (took 102.196461777 seconds)
done (took 377.061645873 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 2.841567246 seconds)
  done (took 4.098823035 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.453041545 seconds)
  done (took 3.719951064 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 21.882411202 seconds)
  done (took 23.150926435 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.424897684 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.477525618 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.393684586 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.377319283 seconds)
  done (took 10.935811472 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.664753117 seconds)
  done (took 3.931833147 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.38835069 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.380721228 seconds)
  done (took 6.037662127 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.610094052 seconds)
  done (took 3.871107057 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.597704473 seconds)
  done (took 3.869603348 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.394873986 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.396943674 seconds)
  done (took 6.06422376 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.361798774 seconds)
  done (took 3.624787567 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 20.099686935 seconds)
  done (took 21.365261101 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.396272947 seconds)
  done (took 3.664159787 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.44386993 seconds)
  done (took 3.705226349 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 4.940928578 seconds)
  done (took 6.199032384 seconds)
done (took 105.493469481 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.375537314 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.378767749 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.375140532 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.370857099 seconds)
  done (took 10.764445927 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.437824781 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.446797325 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.448055849 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.447586659 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.443357707 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.443432417 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.422195179 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.420085475 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.447339894 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.445905664 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.452684863 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.448202073 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.446889714 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.414075798 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.443277504 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.452845872 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.44368569 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.454620247 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.421810088 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.445405577 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.396180798 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.447556111 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.44257841 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.392029993 seconds)
  done (took 35.769848226 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.9029618 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.456293345 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.540364394 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.434941074 seconds)
  done (took 7.59603182 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.471426046 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.475547053 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.495384728 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.529696037 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.563935118 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.4944054 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.425680479 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.415994848 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.40568947 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.477585873 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.523543659 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.460350001 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.565351078 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.395359483 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.679906524 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.396983388 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.396355477 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.47459418 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.529241758 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.553835566 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.394957114 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.476304911 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.482133366 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.459610364 seconds)
  done (took 36.808316399 seconds)
  (5/13) benchmarking "reductions"...
    (1/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.397319369 seconds)
    (2/22) benchmarking ("maxabs", "Float64")...
    done (took 1.414866166 seconds)
    (3/22) benchmarking ("sumabs", "Float64")...
    done (took 1.393416082 seconds)
    (4/22) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.410444409 seconds)
    (5/22) benchmarking ("sumabs", "Int64")...
    done (took 1.392768344 seconds)
    (6/22) benchmarking ("sumabs2", "Float64")...
    done (took 1.395726635 seconds)
    (7/22) benchmarking ("sumabs2", "Int64")...
    done (took 1.392456089 seconds)
    (8/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.402543619 seconds)
    (9/22) benchmarking ("sum", "Int64")...
    done (took 1.394214111 seconds)
    (10/22) benchmarking ("mean", "Int64")...
    done (took 1.394283052 seconds)
    (11/22) benchmarking ("mean", "Float64")...
    done (took 1.394082123 seconds)
    (12/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.406341164 seconds)
    (13/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.393779907 seconds)
    (14/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.392715166 seconds)
    (15/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.400407101 seconds)
    (16/22) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.396296653 seconds)
    (17/22) benchmarking ("var", "Float64")...
    done (took 1.393720208 seconds)
    (18/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.402279089 seconds)
    (19/22) benchmarking ("var", "Int64")...
    done (took 1.406217548 seconds)
    (20/22) benchmarking ("sum", "Float64")...
    done (took 1.394819264 seconds)
    (21/22) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.392591089 seconds)
    (22/22) benchmarking ("maxabs", "Int64")...
    done (took 1.404318247 seconds)
  done (took 32.032046358 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.380957961 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.379240813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.734283182 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.628769421 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.384461362 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.378990799 seconds)
  done (took 14.155675062 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.457390977 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.603211181 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.393842913 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.738514795 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.827212024 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.395252934 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.390926528 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.638579269 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.93503906 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.923653827 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.447990214 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.461779193 seconds)
  done (took 20.483733464 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.394202827 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.387964161 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.392535234 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.403899727 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.442793189 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.3968951 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.395854178 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.385216421 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.444843962 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.452069563 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.397523553 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.445149952 seconds)
  done (took 22.210348606 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.477275245 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.394677165 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.390565696 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.428692119 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.393840934 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.235764101 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.403950817 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.093697476 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.395423247 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.667467539 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.398510998 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.486706598 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.644510779 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396038483 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395908099 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.368540243 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.624740021 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.90130432 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397561 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402120001 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.427180293 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.399516182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.405821319 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.610185145 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.240346715 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.38779223 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.656039439 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.393377521 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.683876482 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.659034981 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.660759572 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399251274 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.66582922 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03276369 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.483298051 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.604324326 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395962844 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.395810971 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.392292003 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.396217539 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406663193 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.398711911 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.656258056 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.399290082 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.392309163 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40923196 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.104526872 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.399248148 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.393980008 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.395375758 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.661676295 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.4957623 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.400454011 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.397404148 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.469902333 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398496054 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.40096241 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.521858331 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.959838776 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396854141 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.402015715 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.416250701 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.389473301 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400728469 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040604181 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.400574979 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.400502779 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.401867584 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.397874 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.395113711 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.437838181 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.396157739 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.413816181 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398273264 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.121691821 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.400323253 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40081204 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.966720792 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.39958301 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.398233403 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62677176 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.394993333 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395013203 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.394702233 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.39717974 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103415062 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.406709513 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.37253436 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.457204549 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.093532131 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.606435848 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.417038953 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429160249 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.616675677 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.373901102 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396995872 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.402288735 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404973848 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.41717221 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.102449296 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.395552703 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.400519087 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.65513902 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.605341667 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409141463 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.390043573 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.880483612 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.396153253 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.423863616 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.408301572 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.614100491 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.010287008 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.671377156 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406249874 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.43370337 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.399330026 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.15515625 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402007367 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.409515725 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.41138572 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.678487789 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.201977204 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.400798949 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.466533951 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406845778 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.398664106 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.399754596 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.406105497 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.399690031 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.60705684 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.414017298 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669883971 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.406084463 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.40102866 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.408902493 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418494054 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.406007825 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.622661117 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399493527 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.680355302 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.401343101 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399032703 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397205531 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.621493819 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.400639357 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.410237521 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.663050421 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412001633 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.41542297 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.672738791 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434953896 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508879555 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.431885591 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.410428785 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.659378942 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.404603171 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.404692144 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.401153569 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.408198362 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408422208 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.408924529 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402032008 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.02897107 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.380825615 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.404297245 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.400172721 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.416531739 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.471136826 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.407497348 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.611636911 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.407923098 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.403941746 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.410677518 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.401233771 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.64610418 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.669586879 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.417883971 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.483684731 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.880259868 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.009915137 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.420158503 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.400295821 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.401382398 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.401011539 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401579878 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.401002685 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.404621895 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.614756856 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675852161 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.403961954 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.018440667 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.40698386 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.401380442 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.430283252 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.670150051 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.416087094 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.405038602 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.405443968 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414962801 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411538977 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.673420723 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.543801968 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.417270329 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403924418 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.92132967 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.412367134 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.402670118 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.403290337 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.434286067 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.405137666 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24561765 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.66192576 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.409938072 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675858624 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411223647 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.42670805 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.407627953 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.412331665 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.42392613 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.431958584 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.416983205 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.617507105 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.409377348 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414434625 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.963300766 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.156555375 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.963813065 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411612079 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.442992653 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.411325372 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.111816061 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403040104 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.405743131 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.643815301 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.115252528 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.404792099 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.884087565 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.407034333 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.164584648 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.678423154 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.641211557 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.40385224 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.438004308 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.68243951 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.621601647 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.438701507 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.40951559 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.411332433 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.384163039 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.959516279 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.406590488 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492919268 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.111424129 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414246292 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.414036051 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.478556198 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.428287869 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.798917667 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.409243691 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405971267 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.413682655 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.412938126 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.270072225 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.410750932 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.408411311 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037926578 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.409441203 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.892989782 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.407668925 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.6171554 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.679314083 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.678938633 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.411521936 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.428497523 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.666987086 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.67654733 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415025972 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.406161355 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976543662 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.280874681 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.41383176 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408179181 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.167699018 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.41845166 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.709411607 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.414436956 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.433308962 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414413298 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.41055833 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.408931751 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.408249112 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415392946 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.383559343 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919556382 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.412680026 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.430181172 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416128189 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415448306 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.664393846 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.423004489 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.021521979 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.642530979 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.404988616 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.442359733 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.415755736 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.409520914 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.395115684 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.408012815 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.410595097 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.474890658 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.636201977 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.41041104 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.392764138 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.455942814 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.623380992 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.409096024 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.410306068 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.643459093 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.415680891 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.419743458 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.165611388 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.441626703 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.411182116 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.416418422 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.41940325 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.455306179 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.480060583 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.624740831 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.684852615 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.68644325 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.806292146 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41443298 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.41933274 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.425755855 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.508680397 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418960969 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.42420105 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.192125517 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.027737362 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.161403833 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.026711937 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.688912715 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.418143235 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41831985 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.410961231 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.548743426 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413249879 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.68807939 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.41375137 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.411667005 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437825266 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.413986623 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.433567374 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629273371 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.687265789 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.413232494 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.424049063 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420753431 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.412530537 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.685093531 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.630713329 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.926986982 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995053317 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.417698085 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.414875584 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.143747695 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.688617893 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.414794301 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.415244539 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415607097 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.421179752 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.419822441 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.442232234 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412424887 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.553399266 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683848003 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062157172 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.683523756 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.457215919 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 1.933534053 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.418161328 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.673950947 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.411814995 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.631907456 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.035696696 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.152788894 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.683445777 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.484215203 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.62708737 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.418945609 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551579616 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.421003296 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.420519933 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.416468459 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.415124103 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.416460718 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683673825 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.041553368 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.684998537 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.420802815 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.426221374 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.449327992 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.63065971 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.640834233 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.130231821 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.642102828 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.689722595 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.427702533 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.416914707 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.037651158 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.694391981 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421368294 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.420187542 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.642216544 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.419954561 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.442055148 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.934238611 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.416183962 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.990170669 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.309536576 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437630965 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.419561959 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.157361805 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.039783444 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.43401674 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93645977 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.423397377 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.432952891 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.697549622 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.42534509 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.422779281 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.701896137 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.424650379 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.419022963 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.635904545 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.035058462 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.18763798 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.42981793 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.423402651 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.427022105 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419319182 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.443416655 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421145593 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.425382147 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.834085854 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.419261367 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.419808905 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.429511576 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.417399937 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.423819793 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.421676407 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.418375521 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.424240905 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.407891033 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.402179964 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.42638615 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.549986655 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.981867401 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426830545 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.095804675 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.749155744 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.675063523 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.421233227 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.4026605 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.42712912 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.422563117 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420263031 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.420685202 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.415271657 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.997433274 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.425806353 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.697843556 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.431001689 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.630768462 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.629965067 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.421673214 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.64106987 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.426481337 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.44744052 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.398114239 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.421852861 seconds)
  done (took 996.718295847 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.431993661 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.449948453 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.456104818 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.457782794 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.456817678 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.516391449 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.478429154 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.436187274 seconds)
  done (took 20.981378919 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.427052435 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.429827125 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.424495977 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.429220241 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.423596926 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 1.902052247 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.422021276 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.424772918 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.436981791 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.421254418 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.424547981 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.116473908 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.45095411 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.423529713 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.421566691 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.432512869 seconds)
  done (took 33.315707135 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.578545667 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.621019065 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 6.445321171 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.484264183 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.468602311 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.428325115 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.678331694 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.433882181 seconds)
  done (took 27.438260808 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.433114697 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.434093095 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.433187891 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.433406972 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.432710926 seconds)
  done (took 8.466013686 seconds)
done (took 1268.00795277 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.426959449 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.427640386 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.427502011 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.428365469 seconds)
  done (took 7.009466193 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.400328392 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.399972674 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.402388458 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.419690365 seconds)
  done (took 9.921847866 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.137969127 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.044351992 seconds)
  done (took 5.482343231 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 1.924288209 seconds)
    (2/3) benchmarking "Int"...
    done (took 1.951899218 seconds)
    (3/3) benchmarking "Float64"...
    done (took 1.948552904 seconds)
  done (took 7.123695362 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.716856044 seconds)
  done (took 3.017175816 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.393021819 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.425717295 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.105766375 seconds)
  done (took 8.225027997 seconds)
done (took 42.080146342 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.431363793 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.666088704 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.573954449 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.432051494 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.584319402 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.576279458 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.158748265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.418460189 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.417925484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.439279366 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419039243 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.599873691 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.208660585 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.665275874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.21020166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.666189143 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.582058254 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.424218427 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.419149953 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.419723428 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.162214532 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.424813848 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.434524789 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.426197369 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.582513835 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.565139473 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.423715273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.670038141 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.424284134 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427278863 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.56575456 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424946256 seconds)
  done (took 84.14545766 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.425864762 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.43001573 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.431226273 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.421109464 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.436362041 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.435860249 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42219034 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.420403101 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.425644121 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.420559021 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.419992052 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.437963084 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.42197714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.420801564 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.425906861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.42084999 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.422433769 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.436286276 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.42190445 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.423777429 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.425524935 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.433152234 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.421436246 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.43338996 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.421423577 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.436928402 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.421124127 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.426636704 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.423173384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.421790679 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.439210794 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.435948121 seconds)
  done (took 78.964831535 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.432292631 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.422535207 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.42458922 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.423375408 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.422197381 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.424164505 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.42408039 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.422759506 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.451659871 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.423073174 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.438370546 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.424091138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.425928013 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.42390112 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.426591415 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.422275177 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.423325957 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.437234104 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.449803479 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.424103973 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.427380962 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.423393052 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.424086639 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.442096552 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.4228534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.43978244 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.428003133 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.430282877 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.425918562 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.427141968 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.42509402 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.424525283 seconds)
  done (took 79.012984825 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.665423784 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.440507535 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.444378099 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.433730989 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.441295588 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.438926595 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.43386495 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.670519318 seconds)
  done (took 15.275831746 seconds)
done (took 258.699907326 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/33) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.442391687 seconds)
    (2/33) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.958352817 seconds)
    (3/33) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.462340267 seconds)
    (4/33) benchmarking ("Set", "Any", "loop")...
    done (took 2.432482664 seconds)
    (5/33) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.454118945 seconds)
    (6/33) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.45658508 seconds)
    (7/33) benchmarking ("Vector", "String", "loop")...
    done (took 1.656724632 seconds)
    (8/33) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.461761966 seconds)
    (9/33) benchmarking ("Vector", "Int", "loop")...
    done (took 1.658975695 seconds)
    (10/33) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.455268379 seconds)
    (11/33) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.448629242 seconds)
    (12/33) benchmarking ("Dict", "String", "loop")...
    done (took 2.432065749 seconds)
    (13/33) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.249717849 seconds)
    (14/33) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.589300239 seconds)
    (15/33) benchmarking ("Set", "String", "iterator")...
    done (took 2.304968717 seconds)
    (16/33) benchmarking ("Set", "String", "loop")...
    done (took 2.43139164 seconds)
    (17/33) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.336982206 seconds)
    (18/33) benchmarking ("Set", "Any", "iterator")...
    done (took 2.441569088 seconds)
    (19/33) benchmarking ("Set", "Int", "loop")...
    done (took 2.045019404 seconds)
    (20/33) benchmarking ("Vector", "Any", "loop")...
    done (took 1.726999426 seconds)
    (21/33) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.463081173 seconds)
    (22/33) benchmarking ("Dict", "String", "iterator")...
    done (took 2.440931511 seconds)
    (23/33) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.300303723 seconds)
    (24/33) benchmarking ("Dict", "Int", "loop")...
    done (took 2.357823897 seconds)
    (25/33) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.416125021 seconds)
    (26/33) benchmarking ("Vector", "String", "iterator")...
    done (took 1.518179381 seconds)
    (27/33) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.53586478 seconds)
    (28/33) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.666715129 seconds)
    (29/33) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.599428624 seconds)
    (30/33) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.517308219 seconds)
    (31/33) benchmarking ("Set", "Int", "iterator")...
    done (took 1.958569876 seconds)
    (32/33) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.452965107 seconds)
    (33/33) benchmarking ("Dict", "Any", "loop")...
    done (took 2.438965935 seconds)
  done (took 66.419255496 seconds)
  (2/6) benchmarking "iteration"...
    (1/30) benchmarking ("Set", "String", "next")...
    done (took 1.431375601 seconds)
    (2/30) benchmarking ("Set", "Any", "start")...
    done (took 1.43618033 seconds)
    (3/30) benchmarking ("Set", "Int", "done")...
    done (took 1.438700284 seconds)
    (4/30) benchmarking ("Dict", "Int", "done")...
    done (took 1.44186471 seconds)
    (5/30) benchmarking ("Dict", "String", "start")...
    done (took 1.438386943 seconds)
    (6/30) benchmarking ("BitSet", "Int", "done")...
    done (took 1.441695975 seconds)
    (7/30) benchmarking ("Dict", "String", "next")...
    done (took 1.432243101 seconds)
    (8/30) benchmarking ("Vector", "Int", "done")...
    done (took 1.444172677 seconds)
    (9/30) benchmarking ("Vector", "String", "done")...
    done (took 1.441159889 seconds)
    (10/30) benchmarking ("Vector", "Any", "done")...
    done (took 1.442858923 seconds)
    (11/30) benchmarking ("Dict", "String", "done")...
    done (took 1.441291788 seconds)
    (12/30) benchmarking ("Vector", "Int", "next")...
    done (took 1.440307279 seconds)
    (13/30) benchmarking ("Set", "Int", "next")...
    done (took 1.442899142 seconds)
    (14/30) benchmarking ("Vector", "Int", "start")...
    done (took 1.441020677 seconds)
    (15/30) benchmarking ("Dict", "Int", "start")...
    done (took 1.437923763 seconds)
    (16/30) benchmarking ("Vector", "Any", "next")...
    done (took 1.422656697 seconds)
    (17/30) benchmarking ("Dict", "Any", "next")...
    done (took 1.435857902 seconds)
    (18/30) benchmarking ("Set", "String", "start")...
    done (took 1.440882494 seconds)
    (19/30) benchmarking ("Vector", "String", "next")...
    done (took 1.433265826 seconds)
    (20/30) benchmarking ("Set", "Any", "next")...
    done (took 1.421947902 seconds)
    (21/30) benchmarking ("Vector", "String", "start")...
    done (took 1.440266093 seconds)
    (22/30) benchmarking ("Dict", "Any", "done")...
    done (took 1.442483514 seconds)
    (23/30) benchmarking ("Dict", "Int", "next")...
    done (took 1.443687415 seconds)
    (24/30) benchmarking ("Vector", "Any", "start")...
    done (took 1.439792607 seconds)
    (25/30) benchmarking ("Set", "String", "done")...
    done (took 1.444017809 seconds)
    (26/30) benchmarking ("Set", "Any", "done")...
    done (took 1.442733902 seconds)
    (27/30) benchmarking ("Set", "Int", "start")...
    done (took 1.439613083 seconds)
    (28/30) benchmarking ("BitSet", "Int", "next")...
    done (took 1.440586049 seconds)
    (29/30) benchmarking ("BitSet", "Int", "start")...
    done (took 1.441307599 seconds)
    (30/30) benchmarking ("Dict", "Any", "start")...
    done (took 1.438519283 seconds)
  done (took 44.468503427 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.442963004 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.016530553 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.166087538 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.448960962 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.435751172 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.439691116 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.728441459 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.45029637 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.438726258 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.439300737 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.937767538 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.451736458 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.469961041 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.180978165 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.444149505 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.445029348 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.445593698 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.436662562 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.039421403 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.451315924 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.725799249 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.451070922 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.727534933 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.450726849 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.440295012 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.439658666 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.443487507 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.265746706 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.466537989 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.935786487 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.232603579 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.726631923 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.21442538 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.235674271 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.234675329 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.453882337 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.447655211 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.936951871 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.445930017 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.438678359 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.728087681 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.444714787 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.181206898 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.120260544 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.460853045 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.445600336 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.289935103 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.966671104 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.690177557 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.453046522 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.225141846 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.448008806 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.448423212 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.439820423 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.682596563 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.446928656 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.441478547 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.302215227 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.467590631 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.725817442 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.455222609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.441261963 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.019617142 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.44724497 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.046630745 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.447394924 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.448109864 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.44019485 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.189577585 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.447573223 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.129019763 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.463715684 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.450400915 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.941367025 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.022899257 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.346327556 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.447960328 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.027097167 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.238020356 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.749866608 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.451419332 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.273167819 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.754945841 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.452037737 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.453723117 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.45126165 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.449903707 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.5133822 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.726253411 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.068695528 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.129444795 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.318257784 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.754933241 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.456156477 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.443260826 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.307885013 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.472440729 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.450843568 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.185122618 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.136932402 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.462632128 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.448962582 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.117644484 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.465559998 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.732690538 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.455477142 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.232026179 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.450639809 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.520512162 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.452248426 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.448891566 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.446957913 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.734785272 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.452568756 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.452781658 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.119069671 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.975828952 seconds)
  done (took 201.165066687 seconds)
  (4/6) benchmarking "optimizations"...
    (1/20) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.440895996 seconds)
    (2/20) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.438691867 seconds)
    (3/20) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.438328964 seconds)
    (4/20) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.439079352 seconds)
    (5/20) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.437711315 seconds)
    (6/20) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.445370749 seconds)
    (7/20) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.437721521 seconds)
    (8/20) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.438694274 seconds)
    (9/20) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.443792305 seconds)
    (10/20) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.43869273 seconds)
    (11/20) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.440176977 seconds)
    (12/20) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.447022929 seconds)
    (13/20) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.445529662 seconds)
    (14/20) benchmarking ("BitSet", "Int8")...
    done (took 2.441501462 seconds)
    (15/20) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.438384054 seconds)
    (16/20) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.439027439 seconds)
    (17/20) benchmarking ("BitSet", "UInt16")...
    done (took 2.438434181 seconds)
    (18/20) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.461759009 seconds)
    (19/20) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.440100168 seconds)
    (20/20) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.439419523 seconds)
  done (took 46.148974349 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/79) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.453589866 seconds)
    (2/79) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.006569611 seconds)
    (3/79) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.977542625 seconds)
    (4/79) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.458642919 seconds)
    (5/79) benchmarking ("BitSet", "Int", "last")...
    done (took 1.45018927 seconds)
    (6/79) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.445364613 seconds)
    (7/79) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.501101852 seconds)
    (8/79) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.456371967 seconds)
    (9/79) benchmarking ("BitSet", "Int", "first")...
    done (took 1.449694645 seconds)
    (10/79) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.749835619 seconds)
    (11/79) benchmarking ("Vector", "String", "push!")...
    done (took 1.623798642 seconds)
    (12/79) benchmarking ("Set", "String", "in", "false")...
    done (took 1.459326018 seconds)
    (13/79) benchmarking ("BitSet", "Int", "length")...
    done (took 1.451321554 seconds)
    (14/79) benchmarking ("Set", "Int", "first")...
    done (took 1.451722459 seconds)
    (15/79) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.978341841 seconds)
    (16/79) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.440818388 seconds)
    (17/79) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.752281506 seconds)
    (18/79) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.021174917 seconds)
    (19/79) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.460977203 seconds)
    (20/79) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.013357535 seconds)
    (21/79) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.438521027 seconds)
    (22/79) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.456740439 seconds)
    (23/79) benchmarking ("Dict", "String", "getindex")...
    done (took 1.446483779 seconds)
    (24/79) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.015654 seconds)
    (25/79) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.7652155 seconds)
    (26/79) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.739172754 seconds)
    (27/79) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.510393712 seconds)
    (28/79) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.016508032 seconds)
    (29/79) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.458250763 seconds)
    (30/79) benchmarking ("Vector", "Int", "last")...
    done (took 1.450151427 seconds)
    (31/79) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.014930215 seconds)
    (32/79) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.461335706 seconds)
    (33/79) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.448569111 seconds)
    (34/79) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.011573511 seconds)
    (35/79) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.461791608 seconds)
    (36/79) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.472211557 seconds)
    (37/79) benchmarking ("Vector", "Int", "length")...
    done (took 1.452435715 seconds)
    (38/79) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.506361203 seconds)
    (39/79) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.506247555 seconds)
    (40/79) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.754534321 seconds)
    (41/79) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.026961293 seconds)
    (42/79) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.74758195 seconds)
    (43/79) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.472701163 seconds)
    (44/79) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.614021241 seconds)
    (45/79) benchmarking ("Dict", "Int", "first")...
    done (took 1.459690549 seconds)
    (46/79) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.434730134 seconds)
    (47/79) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.026984385 seconds)
    (48/79) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.463339553 seconds)
    (49/79) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.434643542 seconds)
    (50/79) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.454188828 seconds)
    (51/79) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.461490561 seconds)
    (52/79) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.990008211 seconds)
    (53/79) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.455206458 seconds)
    (54/79) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.987980028 seconds)
    (55/79) benchmarking ("Dict", "Int", "length")...
    done (took 1.458781828 seconds)
    (56/79) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.45595981 seconds)
    (57/79) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.01917002 seconds)
    (58/79) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.997530665 seconds)
    (59/79) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.989835659 seconds)
    (60/79) benchmarking ("Vector", "Int", "push!")...
    done (took 1.626273263 seconds)
    (61/79) benchmarking ("Vector", "String", "getindex")...
    done (took 1.454697026 seconds)
    (62/79) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.736645516 seconds)
    (63/79) benchmarking ("Vector", "Int", "first")...
    done (took 1.460763758 seconds)
    (64/79) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.027912616 seconds)
    (65/79) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.463717563 seconds)
    (66/79) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.457611049 seconds)
    (67/79) benchmarking ("Set", "String", "in", "true")...
    done (took 1.458335101 seconds)
    (68/79) benchmarking ("Vector", "Any", "push!")...
    done (took 1.622557441 seconds)
    (69/79) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.026613332 seconds)
    (70/79) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.744832979 seconds)
    (71/79) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.762535329 seconds)
    (72/79) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.76232036 seconds)
    (73/79) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.464914682 seconds)
    (74/79) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.515233601 seconds)
    (75/79) benchmarking ("Set", "Int", "length")...
    done (took 1.462816143 seconds)
    (76/79) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.756796198 seconds)
    (77/79) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.519238965 seconds)
    (78/79) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.846429355 seconds)
    (79/79) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.763735222 seconds)
  done (took 131.194545757 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("Dict", "Int", "filter")...
    done (took 1.713249841 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.565930771 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 1.830946302 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.061544246 seconds)
    (5/28) benchmarking ("Set", "Any", "pop!")...
    done (took 1.972052182 seconds)
    (6/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.595162224 seconds)
    (7/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.57028273 seconds)
    (8/28) benchmarking ("Vector", "String", "filter")...
    done (took 1.697104254 seconds)
    (9/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.475415446 seconds)
    (10/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.547986096 seconds)
    (11/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.110978422 seconds)
    (12/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.556542966 seconds)
    (13/28) benchmarking ("Dict", "Any", "filter")...
    done (took 2.182770557 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.547245377 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.558170605 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 1.575835002 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 1.857915083 seconds)
    (18/28) benchmarking ("Dict", "String", "filter")...
    done (took 2.438342336 seconds)
    (19/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.106402435 seconds)
    (20/28) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.080371171 seconds)
    (21/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.456883273 seconds)
    (22/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.564858604 seconds)
    (23/28) benchmarking ("Set", "String", "filter")...
    done (took 1.996904221 seconds)
    (24/28) benchmarking ("Set", "Int", "filter")...
    done (took 1.636253905 seconds)
    (25/28) benchmarking ("Dict", "String", "filter!")...
    done (took 2.458642492 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.021317464 seconds)
    (27/28) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.407134739 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 1.987617262 seconds)
  done (took 54.897441019 seconds)
done (took 545.60186907 seconds)
SAVING RESULT...
DONE!
