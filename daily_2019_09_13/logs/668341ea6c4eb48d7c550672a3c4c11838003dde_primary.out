cset: moving following pidspec: 6104
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.384627341 seconds)
loading group "string"... done (took 0.564006222 seconds)
loading group "linalg"... done (took 7.162522629 seconds)
loading group "parallel"... done (took 0.162798957 seconds)
loading group "find"... done (took 1.140911505 seconds)
loading group "tuple"... done (took 1.793237753 seconds)
loading group "dates"... done (took 1.275680208 seconds)
loading group "micro"... done (took 0.22890326 seconds)
loading group "io"... done (took 0.927230175 seconds)
loading group "scalar"... done (took 37.85791696 seconds)
loading group "sparse"... done (took 12.02900383 seconds)
loading group "broadcast"... done (took 0.970528598 seconds)
loading group "union"... done (took 12.655261422 seconds)
loading group "simd"... done (took 4.715916586 seconds)
loading group "random"... done (took 9.185290204 seconds)
loading group "problem"... done (took 1.951459786 seconds)
loading group "array"... done (took 22.10194894 seconds)
loading group "misc"... done (took 1.941227012 seconds)
loading group "sort"... done (took 3.555090406 seconds)
loading group "collection"... done (took 18.078192786 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.490165497 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12395249 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.115019293 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119456888 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.133278603 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.116493812 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124291148 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.084955102 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.777098352 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143676112 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.117362695 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410630152 seconds)
done (took 5.060909813 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176376752 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084786042 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083200623 seconds)
  done (took 1.294851843 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066415951 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122771181 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.067805043 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.067971036 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.06794434 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.067507726 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.067120284 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.067326901 seconds)
  done (took 1.655717571 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075003334 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06977673 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070113833 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.068928756 seconds)
  done (took 1.411897959 seconds)
done (took 5.743576976 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.771984345 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.204693458 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.181683763 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.396903008 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.130659853 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.156457029 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.625852565 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.321416117 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186533586 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083871268 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.106344322 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.320628367 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.109440624 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.628103875 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076300827 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.092620267 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.13989212 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.414122259 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.066655561 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.082637894 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.089022915 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127812127 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087629708 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.076204527 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.143948389 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067355469 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.128954054 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.079484238 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065894822 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.205673433 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.172548925 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.650607301 seconds)
  done (took 10.156561664 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.097862891 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.097943834 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069331573 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139222925 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.097579033 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071157506 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.072202456 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.068510585 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.089212111 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130321394 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.090726704 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.103649782 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.067063113 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.070333274 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.086048016 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.206355668 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.079439253 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.080533595 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069962807 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.074852141 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.115867854 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077317403 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077151934 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.077081586 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.128085074 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.178936975 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09790642 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.09654415 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.065978819 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079700092 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.114838487 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.125054638 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.064927368 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.066248691 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.125980483 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.096543237 seconds)
  done (took 4.60880867 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.932188879 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144268816 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092981545 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133959676 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.065915674 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109730739 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.0672654 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082639764 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.204147521 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.300452171 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.580621163 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111797782 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10450743 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068916866 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.069158635 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06829429 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.33484444 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.085361698 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.104218592 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106996289 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.081325775 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.068950204 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.068096118 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.06902545 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.064847971 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069029028 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.103121936 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.658246583 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125158396 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068860929 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.924789324 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123071594 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065622034 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099721195 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.163310419 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.086373062 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.22062288 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06987026 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.145166213 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.065339998 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.153637115 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.071485973 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.068595958 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.067865754 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.085881609 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105978591 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.116059797 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.067264204 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067911131 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164449755 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066780507 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079622351 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.968320181 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.150893283 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076887328 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065803564 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.250988968 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.087746299 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070286999 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066039995 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.177758963 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.131020661 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.067951965 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.067775787 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069346138 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071091553 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352631661 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.067221617 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.689335209 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069860853 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.077781373 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.070785966 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071169338 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074461853 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074037427 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085806194 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.066323738 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076820188 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.06741982 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.067379419 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.067917522 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.086910473 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.360741716 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.06540617 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067602682 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.065359914 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.086390738 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096579081 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065624829 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.065301985 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101194154 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.063188804 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.174279117 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.066897704 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.108011146 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068173211 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.087424646 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.071397655 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.118703161 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.067257023 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.095120929 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.065237349 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.096302282 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069792143 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098831143 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080288983 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.069478177 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.398756803 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.065126749 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065820678 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.069740822 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.066738143 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.069380713 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068312774 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.081581481 seconds)
  done (took 21.241295637 seconds)
done (took 38.06385165 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.278728266 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.077911324 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078308937 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.078660885 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.078584167 seconds)
  done (took 1.810316506 seconds)
done (took 3.011287208 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121513535 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.100621024 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.065839718 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.09742362 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065497954 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.102025779 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.101376226 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.083091073 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.1014109 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065977473 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.09771763 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.065774582 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065856752 seconds)
  done (took 2.349604489 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08491717 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085485735 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.070865561 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084631759 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064961492 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084182068 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.081933276 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090321838 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082204753 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074210027 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064974336 seconds)
  done (took 2.060451321 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084171535 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.085230518 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.071062395 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083018568 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065032357 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.082403719 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082315102 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087098385 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083002985 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.074698321 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.064801711 seconds)
  done (took 2.049747482 seconds)
done (took 7.643980758 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078585501 seconds)
  done (took 1.25591441 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.593722677 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.292627967 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.081635617 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.111401335 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.186863627 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.120219373 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.278287768 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087542764 seconds)
  done (took 9.119097558 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.088886243 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071342108 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.083916097 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071618001 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.072434237 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071076627 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.073522571 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070914631 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073178532 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.069752199 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.070021563 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071848534 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072718094 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.072804419 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.070212202 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.072422954 seconds)
  done (took 2.431674613 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094127819 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.09206145 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.07437088 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076184597 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.073473603 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073202653 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076020834 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.074827673 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072282488 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.073416578 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.07673478 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075012773 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073192808 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066233337 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.075113751 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077021088 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072455907 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075568048 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076535939 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.075937704 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075708946 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065549004 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.072726747 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.075109238 seconds)
  done (took 3.10707304 seconds)
done (took 17.100389861 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113599714 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.07318367 seconds)
  done (took 1.370024441 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.083317496 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.084785146 seconds)
  done (took 1.359739786 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084549629 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06812627 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092256351 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07923312 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068414217 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.067654144 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.089293513 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068050229 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.067780281 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068218588 seconds)
  done (took 1.947456752 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070018793 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.079310116 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.070984036 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082530355 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.074859384 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.066010783 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074707917 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.069593946 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.079666808 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063809531 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.071889089 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.083063167 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072924044 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085356207 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074544352 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.069220099 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.07160054 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.068114091 seconds)
  done (took 2.52394322 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068047885 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06866615 seconds)
  done (took 1.337350251 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.067984329 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065041138 seconds)
    (3/7) benchmarking "month"...
    done (took 0.067695553 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068337968 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.064541451 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.063669615 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.064362003 seconds)
  done (took 1.656962792 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.397922747 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11229605 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.300743995 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.071825894 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.083500971 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.252982076 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066632448 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071560065 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.071381178 seconds)
  done (took 2.672390794 seconds)
done (took 14.068227222 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080804647 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086688349 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.097266339 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.370054039 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.090723765 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065348715 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.114140599 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.191734139 seconds)
done (took 2.309917377 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.212932408 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.616612562 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.380468885 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.198165878 seconds)
  done (took 2.398034581 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.329437827 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.087598604 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.060295229 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.068238479 seconds)
  done (took 1.753628012 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067324487 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070017631 seconds)
  done (took 1.348367759 seconds)
done (took 6.929384825 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067391928 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.066681337 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.064510504 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.086561306 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.066497173 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.064240823 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064838155 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.066797792 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.067228339 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.064594553 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070219226 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.06721524 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067485701 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066948949 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066021668 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064553876 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066911421 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064763069 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064379251 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06466914 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068085323 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.067118928 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.064426063 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064283997 seconds)
  done (took 2.855746087 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085437469 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.068598003 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.072759643 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073331729 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071421967 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.072645487 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.072486412 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067441608 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.072723177 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070171752 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.070805012 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071528381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069428464 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.071335052 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069090041 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071443802 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.072492833 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067572779 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069268493 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071132118 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072285205 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067556034 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07106561 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072013456 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071244997 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071017914 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.069465898 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067547537 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072374342 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071151082 seconds)
  done (took 3.358088374 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.071481985 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.064698352 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.065292519 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072180163 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06427778 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066296349 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.064416895 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.065408759 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.065503204 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064535693 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066263485 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.064305492 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065192492 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.065612639 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066009665 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.068191626 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.080599256 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065604449 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064705558 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.065543085 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068629548 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064938108 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.0646144 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064590122 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.064799475 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.064407468 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065403538 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.064579272 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065498034 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064515611 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.067555197 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068239282 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064990414 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.071375503 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068491823 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064453386 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.068592665 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.064265541 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.178263914 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062396655 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.063605223 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.0641029 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06437144 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.071125127 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.065471786 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.065872551 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.064806103 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.06590977 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06486571 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.067138074 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.063857307 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.064573916 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.066604054 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.065561583 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068407234 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.064235434 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.064983947 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.063645897 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.065275163 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.064135108 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.064122351 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.064000328 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.066929765 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064943423 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.079366295 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.071067281 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.064819216 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.065923705 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.065799644 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.066722581 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.065990115 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077619999 seconds)
  done (took 6.113376329 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08850458 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.088514734 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067003546 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.066481691 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063120762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065558423 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069028166 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065359446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06691548 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071003213 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065852655 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066174107 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06644411 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.078051939 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065529341 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.066411192 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.070951968 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063179505 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.064979173 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.068553564 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065575096 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068970278 seconds)
  done (took 2.756420396 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.157043853 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.07117288 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.107123577 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.073323312 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067330894 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072296659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069085185 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069388879 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069883736 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067987254 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067443954 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06948608 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066861024 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067265819 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067212399 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067510166 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069476679 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.06770858 seconds)
  done (took 2.59463159 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078949682 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067458028 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.087624615 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067503139 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.067227359 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069492792 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071649443 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075508483 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.06912142 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067068578 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.07538761 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069693523 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069363458 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067216701 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069477261 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067158236 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.069488855 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066792234 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.075069725 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071926931 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.071933322 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075197707 seconds)
  done (took 2.797301878 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080614766 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069627762 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.083477805 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069765237 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063631528 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065411029 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.071699368 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.067044486 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071200332 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.068722511 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067005189 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065624226 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.07075564 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.067179678 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.070082741 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067111136 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.068465392 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.066872301 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068840146 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062802608 seconds)
  done (took 2.614083988 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087986659 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.068211677 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069068598 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077525764 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068552141 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.068553487 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076271299 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.068429274 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068622042 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.089226916 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.068460229 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068431407 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076216242 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073307295 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.068317747 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076517425 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076002006 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.075980632 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068486704 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.068321704 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.088900811 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.068629254 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076566712 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.068329491 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.068527989 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.068617162 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068764182 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.07341719 seconds)
  done (took 3.273988231 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067618424 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.067169559 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.064654023 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064409986 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064849961 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.064638665 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064985385 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064714725 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067179291 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.064954658 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.067027279 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.067628051 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067322399 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.06709815 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.067289321 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067096164 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067262042 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.064701256 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064716421 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06481282 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.067165273 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067050269 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.066975245 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.064608117 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064509286 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.066640159 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064692158 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064648578 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066711912 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064507166 seconds)
  done (took 3.210785009 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.076669395 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074373652 seconds)
  done (took 1.38539113 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064966766 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081466939 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.064494765 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.070879922 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072034781 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067823254 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074597675 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071030683 seconds)
  done (took 1.797654797 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.083502558 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079497467 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06940316 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.082351925 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077857082 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084319031 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.13505097 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068875408 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074660482 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065399952 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.081315601 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066822171 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074331109 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067730472 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.073625914 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.073817203 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065310658 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.073729289 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069999617 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.0659419 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.068493311 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076131292 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070042108 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062916717 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.068650631 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089491491 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.078857523 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066993441 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.069940148 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.074635666 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.072946061 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.061346077 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.06718115 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.067537833 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.065432476 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077013341 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082669633 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070652554 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076270115 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068248025 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0783524 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06241275 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072562174 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.07389337 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077354861 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.067532168 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.067893912 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062178441 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.065092998 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.069808302 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062558618 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067581902 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.061940856 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077242882 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.070829544 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077896262 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.066374462 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.06888894 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.069993755 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070521401 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073953627 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.0692333 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069765289 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.066756218 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074373533 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071676753 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076439747 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.062219089 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.061396564 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065318222 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077663239 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091129598 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.072445491 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.06823999 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068794056 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.065307396 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071110253 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06877195 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073589085 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.073995413 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.067931355 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073448678 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075208345 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067903978 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.070503575 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075888807 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.066527462 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070512362 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065476315 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.084358584 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.066355929 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06546115 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.065240486 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.077797782 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.070322024 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.066868557 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.064990017 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074072837 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061282678 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.068246253 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068142836 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067979116 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.07743053 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071190522 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071861861 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.075016505 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074001443 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066530713 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.069873571 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.063207431 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.067448734 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.06580684 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074012497 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06097803 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069464841 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.06808566 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.066896864 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.201080509 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06706204 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.069174141 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076517736 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.073711211 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.066932915 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06502689 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.071131039 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068196159 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070850361 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076282638 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.066945963 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063044298 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062819766 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.071922672 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.06794091 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071972755 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073595553 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070964279 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063021848 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065966999 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.073574329 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077705659 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068548474 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.068835114 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073520133 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.069718103 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.066424122 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.074216643 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.073242061 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06713018 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.073640433 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069611435 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063075902 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.071268405 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.07170267 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.066696222 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071839345 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07135796 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.070521855 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069342004 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.06700055 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076065502 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069068725 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067011103 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068291609 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067187391 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078876391 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.06976832 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.062966485 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065528231 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.076819446 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065819945 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067239896 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066784164 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.069699402 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068494591 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066061747 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.06682927 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.069261163 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079153893 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.072013762 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069643355 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.073331428 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079357572 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.067869451 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.069802937 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.068240209 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068535823 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068824283 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.07606806 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.07335863 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072567846 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.070518499 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064115377 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072906347 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075014854 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066298952 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.065021267 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.066508827 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.071157847 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.072971988 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.071998737 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068480509 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065691356 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068235 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070697095 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.07022783 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.066970849 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.066961297 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074444803 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.066028612 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.074829566 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068274841 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078273107 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071153136 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062678152 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.070618726 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065560337 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073144033 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.062497397 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065192917 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.066621948 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068223151 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066274035 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.069979901 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.061372603 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073789594 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074183946 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.066525962 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065608183 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.066610755 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073605891 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.067698954 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070549118 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.070186736 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.073171757 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077027355 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.066308 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.069803833 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.077185379 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.066870689 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.191447875 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.074167827 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067778458 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067649602 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067971092 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.066790193 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071922771 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.078041613 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.075177164 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.062314558 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.070766121 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067290661 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066729773 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064082988 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072486636 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07149735 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068980128 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07491422 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06874706 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068915253 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072442232 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.068238478 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.069116774 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069816851 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071297907 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.069630998 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070857507 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068058751 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.070931262 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.066978965 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.066198004 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.069622355 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.068932483 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.068474702 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074335284 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067310724 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068713599 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071003842 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.06868361 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068943274 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.068610351 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.067638416 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072174183 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069284113 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.068224763 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.07029495 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.063842705 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075102055 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.067765531 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075920887 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.068680306 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.064949177 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.074713335 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.070387819 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07479693 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069130892 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069404544 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.069439687 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.06745304 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070952416 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075101352 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065921392 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079101369 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.075655109 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069209813 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.070548492 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068346236 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068874075 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.067222357 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.068437112 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.068208292 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068299961 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067995188 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.072114393 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07023518 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.067841005 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069084566 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068433014 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.067512562 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.068682526 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.061921954 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.066912005 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.067051225 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.067242661 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077476469 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068046838 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.067398724 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066455861 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068543927 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.066626631 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064278438 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.076091498 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077991685 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068399642 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074949968 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067077788 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069536269 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078795734 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062015203 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.065833241 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.065517883 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065401943 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074736284 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.067854095 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076865937 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.067513531 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.066553687 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.06429577 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068123008 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066004391 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.061829725 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.064602709 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071047251 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.065696496 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065631159 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066687551 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.069148536 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.067438816 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076104157 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.065715051 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.067635332 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.066501856 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.063812176 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.066006575 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.065530522 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.20426434 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069838621 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.066472232 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.06563229 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.06813387 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069152266 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.069704497 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.067613255 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.069753159 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077889439 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068120954 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.072081367 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071453266 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.062783458 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.071410433 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067851605 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067461983 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067835738 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072172521 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072210469 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069506744 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.07790213 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067943696 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069458398 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.067948547 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.066414745 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.067910894 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067758368 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.068228543 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.066952626 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069139009 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.07603627 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065982272 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.071287144 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068343223 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069155121 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075176343 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.068717699 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070763276 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076072271 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068452727 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.070362819 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076752742 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072795746 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071357937 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069439927 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070377457 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073962913 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.067388441 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.073983131 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.068417739 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069456919 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.069978493 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065848374 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.067781642 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067958567 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067300376 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074226961 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.068980016 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.067060991 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.067268083 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.065912841 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.068832343 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071791563 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075635609 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070065941 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070781816 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063609986 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065576317 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069501821 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066172697 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.07008308 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070092185 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073426736 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.069911001 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068323237 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066351916 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076949966 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073254667 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.071364678 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065647208 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071095356 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.06850082 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.069862459 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.06851514 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.067842625 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069082643 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071357293 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069236119 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.06702383 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074786897 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071379835 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068746164 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069068998 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.068463931 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068333695 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062781588 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.068365857 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069523006 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.073090591 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.069971499 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067807597 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078241112 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065468308 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.068384457 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071124397 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067004531 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.072371964 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.062905339 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.069244652 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06833901 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.068087046 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.062270356 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.066269381 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06513362 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.068792403 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.065726334 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.062022679 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076956924 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.075364953 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.069303178 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.06580727 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065186323 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.061763091 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.061566034 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.199943745 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070700641 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.071519863 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.079032949 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.067723579 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.067661679 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.063527753 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068214326 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070904067 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.071854418 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.065295732 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.063737445 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06765988 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071181782 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.07319561 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066857055 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.068323646 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07206362 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.070195295 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066561569 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071211239 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.065320081 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.071717121 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081059748 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068798632 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069057961 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.075021239 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076252115 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.069478083 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.063414968 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069164278 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071354714 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069123497 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.068856261 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069681657 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08388437 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071432162 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.067121878 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067655292 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.070924729 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067905495 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076383303 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.068590311 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069263242 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.072954491 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071467555 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077036439 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071001921 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075914154 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.070981531 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071643777 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.067107727 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068664238 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.066279644 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.067154175 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.06932916 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069270943 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073757801 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.076762002 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.067566111 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078732718 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077675607 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070409971 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.064555119 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067736128 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067190845 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.063559197 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06906631 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066106124 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.065421073 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066150069 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066765321 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068925236 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073133086 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.068236993 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068476699 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067578494 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062181854 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069785636 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.07004747 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068500442 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064460954 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.067682711 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067988921 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071731066 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070941475 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.065641177 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.069153911 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.069364104 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068456164 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062759833 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074162753 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066444407 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.0696092 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06678175 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067994188 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068537614 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07102352 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072523656 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068729892 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.070074706 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.071157294 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069820731 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.064940903 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.064690044 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.073023261 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.065768904 seconds)
  done (took 43.405154048 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.102527131 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.064582173 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06343746 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.063171626 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075194763 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064631855 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063673697 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064512332 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064633107 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.0667676 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063680461 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063604639 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072465963 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079551 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075414566 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068139066 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06364514 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0645268 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063750183 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064466231 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072580922 seconds)
  done (took 2.775050063 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075529122 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.072326862 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.07381853 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.077255832 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068408766 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.071728291 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074017198 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071743973 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0777936 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068593403 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077835896 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072498763 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.069319328 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.068616331 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068772786 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072501038 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.077583807 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06928971 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072010783 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083323536 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07223085 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.074227244 seconds)
  done (took 2.914373229 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068672729 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.067181616 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.069005951 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.062757282 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067496636 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063166982 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071156066 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064989858 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070990861 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.066660506 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.066626356 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.066608611 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068752933 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.063545892 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.067171555 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.065510572 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.110855163 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.070904534 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067878352 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06796486 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063206875 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.069388003 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.063410279 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.063222045 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066292042 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071337715 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.068591831 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.065443346 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066768149 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066562275 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.067607681 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064774143 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068817285 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.067772152 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066236009 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066743102 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066746974 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066967769 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062935034 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.06525652 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.06804001 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.063464921 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.06763443 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.068473095 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065252096 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064998526 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.06861399 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066805687 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062264682 seconds)
  done (took 4.619336573 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081047668 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110113795 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.068772364 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.089911407 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.082159223 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.077264651 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070868222 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091340755 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065139901 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065799592 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.083117477 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.081009766 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067171685 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071716127 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070951871 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067154986 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068356108 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065917188 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.071022659 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066328721 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.071110461 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.07387917 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.081144629 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.080221123 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071461817 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06610065 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066344193 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071236849 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079839728 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071416106 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.072429937 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.072619803 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.082428045 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072646688 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06653728 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.069585263 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082584182 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067139378 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069243485 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064779302 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.06880365 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.071041708 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.073253177 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.08316452 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067291618 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.0719141 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066987239 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063783819 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.079542681 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.069906383 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074630879 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081170897 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07088467 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067105953 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071111451 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081421476 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.06675981 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.065523678 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069512312 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.078989638 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.064715137 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070641372 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.080597291 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068519006 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073847492 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08148424 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.072089915 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070375535 seconds)
  done (took 6.457169082 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.0772503 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.07458307 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082047808 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082031442 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073732304 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.073899482 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.073673624 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.073966442 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07332876 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.078676223 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073864702 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.095348669 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.069345618 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.076483109 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.073989745 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.07415383 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.073841588 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.073756184 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.073635736 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.073620746 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.073709676 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.081283836 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.073905891 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.081521225 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.100162811 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069401728 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.073523336 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.073919893 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081816888 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.073528177 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.079723547 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.073225727 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.0736172 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.081736046 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081260892 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.073372726 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.066358139 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.073353036 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074051586 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07366162 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.068822816 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.081599253 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.073466942 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.068844585 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.073822982 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.072971337 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081339672 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08062029 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075647621 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.078176486 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.073313755 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.081395207 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073186912 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073201485 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.08139928 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.106052953 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.081601858 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081258073 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073815865 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.081007388 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.081210138 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087703982 seconds)
  done (took 6.122830387 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08446315 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076604386 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078579373 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062926895 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065261211 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.07122813 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065463457 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065585739 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.076638531 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076144913 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078525928 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071332687 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07406073 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07847349 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071038905 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.074263463 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071296178 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071536664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075836905 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.071086431 seconds)
  done (took 2.796124833 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076440458 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084323599 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067744727 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.073920368 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.0706962 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073249754 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069594564 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07047195 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069059232 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07057568 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077921517 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077372778 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068776862 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073381983 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.077210567 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.072918585 seconds)
  done (took 2.502849058 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076227252 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073345573 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082010667 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.068068686 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065543422 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.063781596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.06698172 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063081586 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063871951 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.079621499 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068005268 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069963591 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067634891 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.06573934 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.064259021 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070434861 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063895832 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064993505 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.067042081 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079981491 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.07799943 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065759338 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.067656731 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.067190056 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067492717 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072350838 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06689945 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064868529 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064596708 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067332681 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067751052 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.071185897 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064512885 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.065389196 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065754878 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064842535 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.067030915 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.067470734 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.069847212 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066769428 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.065427082 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066730256 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.067033763 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067941476 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063340271 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067288399 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063337487 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.069368145 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064726651 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067195048 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066932668 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069774861 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067791701 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073536538 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.070254893 seconds)
  done (took 5.076730469 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.0805219 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07025601 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.062957643 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065325597 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07033957 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068833051 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070749471 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068907034 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069396219 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065432821 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068914311 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070412878 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068891905 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071099457 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069125182 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071046273 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06327742 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069132731 seconds)
  done (took 2.587855149 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072900362 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067148663 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.074637535 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067472488 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.067600262 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.069666194 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063527217 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.066150832 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065815531 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068054488 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067263515 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.069628627 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066107014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.070096455 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067416172 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067003832 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069490216 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065983056 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067151322 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063206357 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069196278 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.066236718 seconds)
  done (took 2.827241924 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07365543 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093331105 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.141256971 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.085358527 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082564381 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080440605 seconds)
  done (took 1.892884788 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093230091 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080005066 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068606244 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.089939712 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075270176 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068816583 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068767146 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069007461 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077271439 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07791624 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068946823 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077746598 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077736969 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077242936 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075104115 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074898169 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068896763 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068885075 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067846154 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086106604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068941665 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07714015 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068917527 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068648077 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068754478 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076525787 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077920718 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077294645 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068434116 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077165937 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074350075 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068681919 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077160224 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077535615 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.070382773 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077468098 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068835483 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.085707601 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074557614 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077246161 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.070460235 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074705748 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077575083 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073512202 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077400522 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069229797 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073933191 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068990246 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069170703 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.087479811 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074900526 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076862801 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075063495 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077955059 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077869483 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087754701 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077815945 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076924916 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075076529 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080807079 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077395793 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075176535 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077216908 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078415282 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075074361 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077461953 seconds)
  done (took 6.318233597 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083633759 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.088864563 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069582548 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07887676 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076904686 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068851591 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069531928 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069128675 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.06939511 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069279623 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109776167 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069882105 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077382505 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077539866 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069555342 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069573996 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069024351 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077317623 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068807557 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088165136 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069148868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077026843 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077091758 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076957632 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078339266 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0748081 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069383554 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069193543 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068798182 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069152625 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074292139 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069380104 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077205157 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069029818 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076810892 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06974238 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069129772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073984893 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069366624 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074851774 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077145076 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086119175 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069171596 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069239245 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07830854 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.069133541 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06907905 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069149295 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069562157 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069054964 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077818465 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077992247 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07855928 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076918153 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069335938 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069972229 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069411566 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069104904 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069835077 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075096441 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077303251 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068931008 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087675518 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069422029 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069182005 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077103372 seconds)
  done (took 6.241756733 seconds)
done (took 130.506530533 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187105425 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169195333 seconds)
  done (took 1.686913714 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.0712154 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100351929 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.08017573 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131720256 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.066738138 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.099814928 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099195357 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077493273 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.065933532 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068030011 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068465538 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070668269 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.134462729 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.066496206 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065720898 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070437261 seconds)
  done (took 2.682050534 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.100513007 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.165456403 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101155335 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067302709 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.099191559 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.074714415 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066849912 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077344172 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073020637 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.067166913 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.075500395 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.073026976 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.066918003 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072879515 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.073515142 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075168699 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066880451 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.075140105 seconds)
  done (took 2.821931406 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103952187 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.094516016 seconds)
  done (took 1.549046409 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.159235657 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.105565981 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.149439281 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.344355048 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.166472939 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.230933323 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.130654519 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126412441 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.116872187 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.123196629 seconds)
  done (took 2.996663543 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.100975858 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.155481716 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.258932788 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.114953239 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.074428154 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.097655374 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119810994 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.080113343 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.083273358 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.082561807 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.082519628 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.078504706 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.101416992 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075836195 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.075383416 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078265894 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104675549 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074292497 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076032067 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.078981486 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101308636 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067223493 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075447754 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.074368802 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.079081362 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.079329252 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.067003734 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.067409472 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.078672721 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.075697732 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079008669 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.095997506 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.079438447 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.109802774 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.072544384 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.110577728 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078405098 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075980094 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075978448 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075565672 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.080716744 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080590675 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074192357 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.078359607 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.066868332 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078788435 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.067144921 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.066876388 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.080481054 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068803797 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.081870571 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.078720663 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10954208 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.068677777 seconds)
  done (took 6.073272802 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104441943 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.105142562 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070497034 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.107996131 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096883598 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07083958 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100747003 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.091524033 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.102282724 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092375133 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.088633885 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.070492725 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081522069 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083069341 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.109756149 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.101679044 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.09505522 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07058346 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.101645117 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101982829 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068354975 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.094356007 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.090905698 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101301617 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.067144682 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069797421 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069073702 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072567289 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079062089 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080105949 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071883736 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.104855018 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088632424 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078157165 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067688434 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069917218 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069903454 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080939066 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.100611576 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081083042 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079677379 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069378978 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069603598 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071226387 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.093170934 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069476459 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.081132584 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082574667 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.080822788 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071851677 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072261071 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.069519523 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070962269 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081919364 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079453755 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083020996 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.082682378 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070047355 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069941007 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073395582 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083080528 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.081160636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081502852 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094775007 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.081284344 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069975328 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082990149 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.087815311 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070059501 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071684035 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070654651 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071706845 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.07127242 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.07987174 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080061564 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071474542 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071492073 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069945045 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082338099 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080252916 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.069983964 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.079038183 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.0688726 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.070518636 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071437253 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071359117 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.079027242 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.081252913 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071600778 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069426825 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070720816 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.069722947 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068136431 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.078108196 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080635157 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079181371 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.079287263 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07059742 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.079652995 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079516925 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070539361 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079802075 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.199715464 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.073019825 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072418482 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.081135986 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.080678041 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.082145847 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.072299347 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07113694 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.08013423 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.083633512 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.071722311 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.08054453 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.084028314 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.082937687 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.070435816 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083487649 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070654951 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.082399299 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07015223 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.079759406 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068850879 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079306075 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07059569 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069898058 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071338762 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.081859968 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072642158 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070486432 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071803628 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072711151 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.082324985 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085332206 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073875575 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08422972 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.080922975 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07300893 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.081170904 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070957478 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081605273 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071562092 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071920272 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069621307 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085174764 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070407832 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070576916 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071869352 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.083949331 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070423641 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.082265977 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.080849021 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069903873 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.086758671 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.0823971 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.080350029 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.083055222 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072759929 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071323288 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070459551 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071377115 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080066515 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081671194 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072569485 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07030145 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.07979202 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.081904273 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.069606197 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.08024227 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080487668 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080388926 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070535695 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071463805 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.083031012 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083569103 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.080658862 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080081058 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.081495864 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070734489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079583626 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080618355 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069941951 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087846758 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070075306 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084565687 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.08156139 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.079038265 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080912239 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082534915 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08266659 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082119537 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084989844 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069901269 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.069546245 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.080688863 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069742171 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070942717 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.078858829 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.07068814 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070984633 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085230276 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06718677 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.080109969 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.068121434 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.079434009 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068158628 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070393905 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.217255521 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.06928751 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.07225224 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.081930787 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.072674967 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079852631 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.084635069 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.080788747 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070614029 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072578368 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082031738 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.082002295 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.07063009 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070462911 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073032902 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080405731 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.080584513 seconds)
  done (took 19.161485691 seconds)
done (took 38.331126025 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.211977693 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.153687899 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.181767989 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.11737798 seconds)
  done (took 2.120351165 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124476326 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.104112182 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.099705313 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066939231 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.104168427 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06693821 seconds)
  done (took 1.959946096 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.315002043 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.210490188 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.181256972 seconds)
  done (took 2.097287745 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202840445 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.191267988 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.398597012 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.253350934 seconds)
  done (took 2.546430034 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.147182071 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.092480961 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069254009 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.085323845 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.138025908 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.164678362 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.104396122 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.129915972 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080024487 seconds)
  done (took 2.45219968 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.150461592 seconds)
done (took 12.719479835 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.17024718 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.111639613 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.101129869 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.077463185 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.084066124 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.067258394 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.109800204 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.084248404 seconds)
    (9/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072150061 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079361753 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.075224146 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.11458306 seconds)
    (13/309) benchmarking ("sort", Int8, false)...
    done (took 0.15252598 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.116612268 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.202173321 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111789986 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.081716029 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.221949794 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.211292684 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.211322644 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.068674875 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199184734 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.148060085 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169497462 seconds)
    (25/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.179721845 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08098492 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068625721 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.124521172 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.166377316 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.094006317 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.198814442 seconds)
    (32/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076667954 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.090302101 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.09033618 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.152367532 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.111049881 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.073627806 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.153243693 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.072413141 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070550279 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.080189607 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.074093614 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.181382499 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.152218603 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073794955 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.175633717 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.066855072 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.06416781 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075858198 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074689364 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.199444919 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073796389 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066364557 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.17945346 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.074065933 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.066574452 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.052839934 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.186363565 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.073313106 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.173152766 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.097856797 seconds)
    (62/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.074122769 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.09433756 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077648202 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.144332095 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.068598632 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.063825675 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.066653685 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.199215281 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.066417973 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.07374389 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070921682 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.096277193 seconds)
    (74/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.206294497 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.177440491 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.123366618 seconds)
    (77/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.151476618 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 0.067222686 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074763543 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.160408678 seconds)
    (81/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089940504 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.300222288 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152110715 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.075808367 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070448062 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.074727102 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.184988605 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091041866 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102968557 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122363114 seconds)
    (91/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.110179867 seconds)
    (92/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083359567 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.130641649 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14705856 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053669401 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.126089447 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.064115863 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090613761 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.179691251 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077608838 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091178516 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.053523203 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.067422163 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.053111417 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.138477757 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.107665725 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.074761109 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.163811606 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.28516306 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.067215817 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.152165675 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.077488549 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.082624414 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.182961167 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.141533344 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.053598752 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.082358869 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.154587727 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.06837463 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.111293905 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.063021671 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077313868 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.20040766 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.077791174 seconds)
    (125/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052616499 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 0.135124419 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074592206 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.097669896 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073584981 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.105223538 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.077008165 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.115588506 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071987683 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.198860073 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073452966 seconds)
    (136/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.101421128 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.070761949 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.183646965 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.075663131 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.066560058 seconds)
    (141/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053732767 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073389949 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.075553045 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.158519142 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082482747 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.069260708 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.069728732 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.100682951 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.052603343 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066688435 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073614986 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.068169185 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067394671 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.072272125 seconds)
    (155/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.063678577 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.102652286 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054418756 seconds)
    (158/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.053448373 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063622589 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.089791104 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.092173647 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.091293113 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075236632 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.09748701 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.053061949 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.091146948 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.076478207 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079896304 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077977478 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.072725963 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088410854 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074265846 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.089337657 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.071411576 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144680278 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.198380609 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.063474777 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.052486282 seconds)
    (179/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.106060841 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.175842117 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074178365 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.097607061 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097232294 seconds)
    (184/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.068627537 seconds)
    (185/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073706717 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.131283844 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.100718875 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.073219406 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052899754 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.073521641 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052415417 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053374912 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.074330778 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072443757 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.065623766 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.160277641 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.137108241 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.072440639 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.062528073 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.06735501 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.099551061 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.073629206 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.140711086 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 0.184369434 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.064612176 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.151814838 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.052242115 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.090506455 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.065621931 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052007194 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.089842175 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.07254027 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074229023 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.074986322 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073023161 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.053347862 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052298635 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091677638 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.156969507 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.065854666 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.092594768 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.066723577 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055385018 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072421841 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053730477 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.071470115 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.065925479 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.05252842 seconds)
    (229/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052948397 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061707448 seconds)
    (231/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070369061 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064503404 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.052336751 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.072444566 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.06601463 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052460474 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.135799517 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.095523788 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.072550729 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.051391002 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.062330061 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.050301532 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.053212178 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.051176048 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.065555584 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.137218033 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.185349564 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.134619704 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.049757895 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.049933837 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.166948452 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.063401706 seconds)
    (253/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.085026561 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.059289842 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.052029387 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.050780363 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.063106198 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.065460195 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.063731937 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.06922292 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.063628964 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.075189643 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.051311541 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.064313543 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071548347 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.049567471 seconds)
    (267/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.078258223 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.052531231 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.051222599 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052384037 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065020987 seconds)
    (272/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053440549 seconds)
    (273/309) benchmarking ("sort", Float32, false)...
    done (took 0.126134924 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 0.123133962 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.065627128 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.05047856 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.089558083 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.061673928 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.066107838 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.084408085 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.070444712 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.051114058 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.062921107 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.062882913 seconds)
    (285/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.052346301 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.064744945 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090842382 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.073901369 seconds)
    (289/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.079193099 seconds)
    (290/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.054412415 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.098851861 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.05017283 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.065648505 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.050694888 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.070007267 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.065414209 seconds)
    (297/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.066704362 seconds)
    (298/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064652036 seconds)
    (299/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.06223391 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.05395576 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.137722066 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.068392043 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.108703964 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.051954165 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.064038644 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.063145068 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.051331237 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.086674812 seconds)
    (309/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.064147037 seconds)
  done (took 30.787270595 seconds)
done (took 32.184522294 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.096162073 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.09902039 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.080207501 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.099122139 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.086763236 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.082868682 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078592155 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.084435678 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086582957 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.088125389 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.084778776 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.060253175 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.079907731 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080340304 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.080166275 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.098634551 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.084154198 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077824982 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.078214454 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069784702 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.07820056 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.070682957 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.072125622 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058861958 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.082835025 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.076645992 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077263056 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.078494223 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.0701712 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.070223365 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.073300669 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.077525486 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.069850089 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.082239481 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076008498 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.077447773 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.079309062 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.0808892 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.071630171 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069811976 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.078345063 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.069927545 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07669989 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078101224 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07552679 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074545043 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.077322238 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.08109105 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.096745403 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072484124 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077757861 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.079810542 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.080246835 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075916857 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073206653 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.076490579 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.074178789 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.097336839 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076780172 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071675372 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.077219119 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076446499 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.074181702 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.076238132 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.076741241 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.078963718 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.07822435 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074172972 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078071562 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074016001 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068057442 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.076146845 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.071998331 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068792261 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078576061 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079700383 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067545842 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.074460054 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.075680187 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.074306353 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.067592032 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071530798 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.069968506 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.074899033 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071801922 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.058185371 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072052127 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074586066 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067840269 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076322756 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.07428045 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.075210352 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069916893 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079251604 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.068365218 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074559731 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.06917727 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068420415 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069689294 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072435628 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068694264 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071129182 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077542799 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.070512282 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074494444 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082400678 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.068432991 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074800594 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.067742963 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067776279 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082826392 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.078042404 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.068421184 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071606771 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.067469008 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.075329877 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.067503192 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.068210736 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.068105616 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.068329946 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073941879 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.068332871 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.071474141 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.075012587 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08088752 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.06832467 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072011095 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.071086584 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.067852286 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.073453062 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067953439 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.067975649 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.205459976 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.066101252 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07205586 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.068613966 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.0761497 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.071562229 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.076340803 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.07006264 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.076419498 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.072964003 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074137167 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073964575 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066599908 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061887153 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.071901189 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072174488 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.070423236 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.068605749 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.070192505 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068526896 seconds)
done (took 13.216984585 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069816832 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.147119247 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.10335392 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.099193966 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.089337223 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069352805 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079482941 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.105611676 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.071048191 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.106274693 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090994616 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088759913 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.116079891 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.065489245 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.067945147 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072714874 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.069883578 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.083040625 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.101769899 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.086994117 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.116166646 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066014364 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.095338592 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.090485431 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087606699 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.09330963 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067444502 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.072236493 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.071838983 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.103571417 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090138103 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072967868 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069389642 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.104513196 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.095782073 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086573539 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.068899693 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085568689 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069581448 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068257907 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.069927904 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.101611081 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.083100834 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083799778 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.07245677 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.071973923 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.069785767 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.086805194 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.092156153 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.081733018 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.089867405 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.106268327 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071499166 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.068251993 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067101221 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088633228 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.068048051 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071731877 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069063825 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.071242945 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.069255072 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.071987696 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084790087 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.085320252 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.073144772 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.083699938 seconds)
  done (took 7.017672468 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.087054076 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093268475 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086829827 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087055429 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068783437 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.06897631 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069383879 seconds)
  done (took 2.107566054 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.070416591 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091702393 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092504349 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092842409 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.088123345 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091152114 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.078914578 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.06952622 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.084170068 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.071008676 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.091108618 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.106525482 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.070228357 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.075837764 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.09469659 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06926073 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094355197 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069776147 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072726902 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093932345 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071878597 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.086019239 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.073243844 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.069801098 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.084448745 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069870844 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116891483 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074000846 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070814463 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072218508 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.067699645 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.110778799 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.083989273 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.079135816 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069476029 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084617018 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.084276217 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068275418 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086214679 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.0747658 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.083703987 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.069638051 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070426954 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067279264 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073669021 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.07982389 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070272695 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.070044732 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.071526857 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.089426858 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.069619087 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.083189065 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.072485855 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.072015891 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070601736 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.073235909 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.078987618 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.069539581 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.089298381 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070127642 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.086298284 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.085150981 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08128156 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.085338491 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07170681 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082924081 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.082758236 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.071316034 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07061914 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.072187209 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.085485349 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.067016056 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.070196687 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.080033567 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.070620889 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092544914 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.092393557 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.070452651 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.078630638 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.069694687 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069574747 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069161692 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092522411 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071695028 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069053974 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073427765 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.072293485 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.067183688 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.068036042 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.072194895 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066775576 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.070477253 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071930503 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072239117 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071569172 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.086028626 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.070844263 seconds)
  done (took 9.097279683 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071314847 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.068961478 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.069564586 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.068289285 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.068305832 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.068985394 seconds)
  done (took 1.987100462 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096057205 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070126366 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.080538928 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.075328285 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.106665136 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.086900025 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.090581524 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082328207 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.087166791 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.0828198 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.090373034 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092282418 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.096336042 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.075967594 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090805901 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.075242013 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091232948 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.077860357 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080013388 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074647744 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087666861 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074287146 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075279164 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085366479 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.078969662 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.075456213 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.070180319 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082724331 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.082227318 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082606205 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076087015 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.079112975 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073603441 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.080309174 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.087891557 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.07077931 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072657339 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077754417 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.072594189 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076224167 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.087983076 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07334976 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074963501 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077575121 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.07883217 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.070707318 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.077492125 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.076209316 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.086201302 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.077132516 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.076973203 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073049335 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.075137676 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.07706727 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.070240006 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078337807 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077460206 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.088453089 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.075065238 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.0731912 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071726996 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.078200139 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081056316 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077628874 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.081324943 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.079586892 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.07317581 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.075516256 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075470731 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074345144 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.079449115 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071349484 seconds)
  done (took 7.275298605 seconds)
done (took 29.015700386 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.545729574 seconds)
  done (took 2.077780999 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.607388321 seconds)
  done (took 2.165991173 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.632052908 seconds)
  done (took 8.190110519 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.396606594 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.47805617 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.692554531 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.131637708 seconds)
  done (took 3.297417109 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.669646664 seconds)
  done (took 2.240075001 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.212018861 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.195950428 seconds)
  done (took 1.981554139 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.379020566 seconds)
  done (took 1.94004047 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.118936212 seconds)
  done (took 2.67631627 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.263123229 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.16285586 seconds)
  done (took 1.99586698 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.47526643 seconds)
  done (took 2.045306725 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.863840724 seconds)
  done (took 6.435192567 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.207047788 seconds)
  done (took 1.818597155 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.24331134 seconds)
  done (took 1.814598534 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.692443881 seconds)
  done (took 3.262687509 seconds)
done (took 43.504924552 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082061883 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.081306367 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080406529 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.077875574 seconds)
  done (took 1.877320999 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078221957 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073030461 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076360239 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.072154459 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076601678 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071942062 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073522027 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076225321 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071921186 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.072686813 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.072260843 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.072020619 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.074302538 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073530496 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.070671345 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.074340633 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.075701558 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.072386887 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.075195198 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.072093252 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.070589679 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.0739229 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.074393493 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.072002248 seconds)
  done (took 3.334348734 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079245629 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.071923483 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.074214601 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.071628653 seconds)
  done (took 1.87805283 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.07865456 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.09128649 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088685332 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076785217 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091554734 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085737943 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.068705866 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.06864108 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.072746213 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.076215539 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.067469932 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095061784 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.087132443 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.076595353 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.078509582 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.065655927 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.068595226 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.086727034 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.077171092 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.077208206 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.06932812 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.076778702 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067519492 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.087582347 seconds)
  done (took 3.45786676 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079857504 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103257838 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.077616824 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086929582 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.089534415 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064701534 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073906985 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.088504684 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.122126676 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06471039 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069854561 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.065009463 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071619992 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.065037497 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.075709561 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.104515893 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.107782995 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.068162564 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.095187557 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.065420427 seconds)
  done (took 3.225634857 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074879145 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.069392108 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.065482985 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068262483 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077342597 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.07290228 seconds)
  done (took 2.017373566 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070715568 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068611315 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068246555 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.066605848 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.072869255 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.067179607 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.065514051 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.066802371 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.06680821 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.066482921 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.067256747 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.065974149 seconds)
  done (took 2.398172437 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.426949937 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.070941811 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068200134 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065507455 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.070025872 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.066189465 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079618196 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067556408 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.089927595 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06606976 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.06600388 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.067977664 seconds)
  done (took 2.792079831 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206901661 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075834795 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236425596 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137193578 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110881817 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114937462 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103689348 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112353654 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.142175481 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.10088756 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169193803 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165716881 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106662236 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136184562 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.088581732 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.097256293 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154600015 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161343867 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102783553 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164307933 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14292836 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12340473 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.146289157 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100312603 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105039728 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120632959 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.070453212 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.079463159 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170321061 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134462977 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148802568 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.113561108 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096643222 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180037286 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173824379 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.145448617 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135010587 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082968466 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.1008096 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.133908213 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.197861407 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087675534 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162708788 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.246702781 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081719585 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133210026 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119580873 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.119271931 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.106304202 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090192768 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145072008 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180800097 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.138340709 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.086332262 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111887761 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114915717 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.115977092 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102391956 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.181946573 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161257076 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126716556 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070223548 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.098402767 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152664533 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131826664 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.108453619 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.125167482 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092642784 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133378713 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15354212 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117886473 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142924311 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.127308967 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087747168 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11847596 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138831075 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12802704 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168905691 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.123654303 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072132594 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124189005 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102396598 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08090068 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.141913785 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074777509 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173400258 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097732377 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105044666 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.111677516 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10801882 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.108377271 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160125017 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142611204 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.243712967 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065587243 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103641895 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119696892 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146935618 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087569525 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108269902 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11538942 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.077725642 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139389058 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.074338471 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122709474 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.07473246 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125294781 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131136522 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.07533324 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120846709 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100870383 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.099881758 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13264603 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158717368 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088348584 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081429471 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166902439 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120770146 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.104080016 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142880056 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.154957171 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.098282814 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102223816 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.148448481 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178054861 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.088713267 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16210501 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106628103 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083023785 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.087263328 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123487117 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111665088 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.121543143 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081753066 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.118479754 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171662647 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.077822328 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.09747473 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134278622 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078009164 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079816369 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102271807 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099180674 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.094150523 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.099218106 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.103272882 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136507647 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122352909 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10431479 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268393785 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.100071416 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171549674 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090209866 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101901307 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103713602 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.070496586 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.136542251 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156669537 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.07887058 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162811089 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.122529962 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104886234 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118090821 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082459054 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13962231 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078842992 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070127206 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.14344271 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110065147 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109768594 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.150230784 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103728727 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.126023526 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.119185063 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135425951 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131274542 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.128600519 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105181554 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.087984148 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110362708 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125301718 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.072383949 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.090735088 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.079449817 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102865366 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095031292 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082980873 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.143156638 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124815588 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100817854 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112324095 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099048703 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.149693267 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.076654279 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130666011 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.118052426 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093560398 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150186474 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150664156 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130654636 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098623014 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144285138 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.069950176 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073301972 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.231808742 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124736531 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083803585 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084141038 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118458698 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146014592 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128442569 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137898245 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110888078 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12119949 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.154070563 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.069778607 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.114884633 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147023341 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121317672 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.103639939 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09012705 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.09853918 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141405162 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108267743 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180578262 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112818342 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125687921 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151596999 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.099526424 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079295979 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.102617747 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140195927 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103658164 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143554392 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099694521 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087667099 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109251214 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.073636107 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099502847 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126806498 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122192439 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13677454 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113909436 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134151669 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079355996 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119956464 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.123437334 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126001624 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.064705832 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11933658 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159632457 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.093300274 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117394491 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151892342 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.078488187 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.123153016 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.32010552 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146367472 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084037894 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109347318 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117479191 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12794682 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119658873 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.138664869 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107935409 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135030153 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108882225 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.085380998 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087053923 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.096795361 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104790742 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.095131034 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107325191 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113591546 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093964098 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.130561446 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102599065 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109877151 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11716481 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095837919 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088790487 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096013354 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.172601567 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119568852 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170360793 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.098103608 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143279736 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163877919 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074009355 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07818957 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.07759354 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138442645 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082877486 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130766703 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.099096129 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10651122 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123242474 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140896275 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095118136 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070139409 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109094767 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13369355 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112134886 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097860374 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103411851 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16128952 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099697331 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.078779823 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112415725 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103820287 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101778625 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170706681 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.20328935 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098711878 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.076297652 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08138719 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127583339 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.153024959 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.080332518 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102009903 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118380288 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.110209232 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127025746 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100909872 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09881997 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113940599 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150255589 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128715949 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.089723637 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111742213 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12995975 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15574089 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104961982 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.095331826 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170192417 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150552716 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.159276089 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.088728121 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130732003 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115768036 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107356803 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138161611 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082859243 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161605237 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081563597 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135660172 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103266358 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089710438 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128994976 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.098086055 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087927926 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147882015 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120203709 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085152582 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.078801015 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120105953 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120735735 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105605945 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074399677 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.137675763 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.07255173 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130761297 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167195473 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080706578 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103634872 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.23959094 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079167921 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108200714 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102754942 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090281378 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097488097 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172477396 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087760189 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149507526 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141090577 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113380646 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136534174 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099695936 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.635031039 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.07765275 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150522809 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.115715883 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172758421 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096909285 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117547194 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108115929 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123658597 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144339782 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104619523 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.176659856 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131017137 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.115887843 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.078770541 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101885664 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102305434 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088495529 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104514298 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112541351 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115790478 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.093438082 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.115521009 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.123147527 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.081142476 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094425348 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155289657 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116313333 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147028026 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143353656 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085674452 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116943412 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137315621 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079252601 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121040368 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150753338 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.105051468 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.096876926 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.079922712 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.246343814 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168800743 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073328255 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162620706 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119483318 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.109279199 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113488913 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113621681 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130935115 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107132643 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121106771 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092987557 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.110963809 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113584919 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081785587 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.077010872 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103284181 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112794354 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096947933 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097640818 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.097462765 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150064874 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070902609 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095306644 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102928676 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144247873 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173178569 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087250256 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082429725 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118124833 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1122164 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113065984 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119308624 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078680765 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081680646 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081332801 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076683507 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.10809373 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112014299 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105404507 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114565309 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165455254 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.0822321 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.224411405 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.094910538 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103945581 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070280843 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.07844855 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095041674 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.096950193 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107734873 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099877372 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168294438 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.09363845 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088989098 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.091739741 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073126458 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082321273 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.126862247 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.256747808 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118856598 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098497051 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.062005087 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107686169 seconds)
  done (took 58.756385444 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.109568124 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.082080044 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.09631502 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.149696405 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.121459228 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.211112007 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.157067496 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.198997219 seconds)
  done (took 2.813665003 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.068814262 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.095459423 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10048919 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.082598487 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06604709 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.0682202 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.223576816 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.080675989 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.066180934 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.088103761 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078646706 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.068120815 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.422734378 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065781387 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.066923098 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.06121691 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067120532 seconds)
  done (took 3.451176462 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.364682471 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.362522662 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.370863669 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073040137 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.794988465 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.088645982 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.075638614 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095923614 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.071713993 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.278612304 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702347846 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091861461 seconds)
  done (took 14.065222284 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.076715339 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070274856 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.083502257 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084664826 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074291483 seconds)
  done (took 2.079651058 seconds)
done (took 103.749155061 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081983234 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.39345609 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.053441518 seconds)
  done (took 2.165168617 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084360946 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.084311331 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.084014488 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.082894847 seconds)
  done (took 2.036078578 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.075121013 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07577954 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.083922378 seconds)
  done (took 1.926702013 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.223497387 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.138216718 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.086147072 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083077136 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077699968 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077892322 seconds)
  done (took 1.933628204 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073423827 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.074250749 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.072112939 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.075602701 seconds)
  done (took 1.984712754 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077035285 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.052930771 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.05443659 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.055979574 seconds)
  done (took 1.931464461 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087474853 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.078707973 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.07749514 seconds)
  done (took 1.938272103 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107952607 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084529518 seconds)
  done (took 1.887112295 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082800685 seconds)
  done (took 1.778999128 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.100150337 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.112985842 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128171219 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10836988 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135998951 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.108174728 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.085019875 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086147087 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076384563 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.0866875 seconds)
  done (took 2.721877457 seconds)
done (took 22.523778722 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079501576 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.366859894 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.360230282 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.090450974 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.670847661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355833752 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.014472036 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092200014 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.1128778 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067090515 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083445335 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.649126906 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.969600685 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324905455 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.954864957 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.317438986 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.649846642 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067805398 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067356203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067537727 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.999072627 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067052065 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067705087 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067810556 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.64709728 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.370634637 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067654706 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.318007974 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067588563 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069576824 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.354744249 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067706668 seconds)
  done (took 16.209582181 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072888593 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1176042 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.073495122 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.083833193 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.070009447 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069459478 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.071262084 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.068852771 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.118883878 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067575052 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083924986 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067501607 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.071534786 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.068351817 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08643085 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067768433 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068500681 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068155994 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068050846 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068097562 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085821312 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067216543 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067774133 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068153195 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067992077 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.079123536 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067965475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067588966 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067931819 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069631995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.07060937 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068179964 seconds)
  done (took 4.094433509 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.116504477 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124217393 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075920486 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10570824 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114401706 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072070596 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.147302592 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096613013 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130896986 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070323586 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086549915 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068970062 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.100258254 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069624497 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086777546 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068018861 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068898313 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.068394896 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.068066557 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068566896 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086705858 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067518099 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.068299619 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.068290347 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068545055 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.081108951 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.068561025 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068458159 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.068158185 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.070237155 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071502623 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.068812914 seconds)
  done (took 4.375647114 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073494365 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.07491098 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.082428255 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084305214 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072302424 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.072914181 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.072298221 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.070296564 seconds)
  done (took 2.318378692 seconds)
done (took 28.703891797 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.080823491 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.070672296 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.073320886 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080682353 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.074020111 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.078229756 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066832682 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.074779571 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072424282 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.073347326 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074437835 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067464275 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07134785 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.067471285 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.073470692 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.067402946 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078783341 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071411138 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078927185 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.079081305 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.069420226 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.073084256 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.07375272 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078517081 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.079470768 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.078668005 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.077369955 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072512916 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068994255 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069953338 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.076706333 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.083779885 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.069450538 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.079278353 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.067616368 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.067789336 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.071423481 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.067636835 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.07906514 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.076412657 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.069367514 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.075836345 seconds)
  done (took 4.788174082 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089057295 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.091580688 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.08415265 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.06259715 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067828189 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064939048 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088432944 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.05913642 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.059399488 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086977301 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.056382281 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058994536 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.0621472 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.053887017 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058765231 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.056381184 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061115772 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055525857 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058839128 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.058871065 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057714337 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.053989371 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059593775 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.065038001 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.056037673 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061641843 seconds)
  done (took 3.409346571 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.075992786 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.083227682 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.087868925 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126230716 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.105322495 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076288044 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077498696 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.092397415 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084350048 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066758352 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.07081593 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.09421127 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.088019235 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073738333 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.067287765 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.084276546 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.081449007 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068794804 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072965945 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.090545248 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.084035306 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083657592 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.092253463 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080543681 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066410881 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.069225249 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.071455351 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.081066598 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.07197072 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.076142921 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.071211503 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07078212 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069539679 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.078277415 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.071021753 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068803889 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089791543 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.0763519 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.077107328 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.067499022 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.070133766 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067914184 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08867117 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.121584848 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067366104 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.07362474 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.075002585 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.076201048 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.067181549 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085598557 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.078173749 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.066585486 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.06989654 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.066468234 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.067062024 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079745871 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068991109 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.06940509 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.076064029 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.070232896 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085230016 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.071003417 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082070132 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.066698625 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074960946 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.066204989 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067623025 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.066119561 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.092239172 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068497681 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.108089523 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.071402248 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.070670808 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077468255 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.08579461 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073022743 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.0675485 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081723807 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.077249191 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07084671 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.075664826 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.070641756 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.070093707 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086975225 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069401649 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.069013227 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.068760431 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.073463835 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069556415 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.069161938 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.08029403 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.067298092 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069857018 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.083575617 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066637593 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068248296 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.07313628 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071966124 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.066654946 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.078001232 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.072057871 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067849613 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076116747 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.067667228 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069799917 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.077267905 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.073087161 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.066407641 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.07168044 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.073176514 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.068232243 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068196982 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069815314 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.06875786 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.075399058 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.073855691 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071404562 seconds)
  done (took 10.600090149 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161152716 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153580429 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071192252 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.145847699 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077703503 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.079521073 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146317597 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.093458471 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.067570435 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.068130151 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.068330503 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.1091138 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.107159999 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122821663 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080766206 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.067857872 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.082890637 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.113055821 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.149228271 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.14479241 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.083958436 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.076197899 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.069399956 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068115534 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.070190306 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.077614104 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.085224824 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.07601347 seconds)
  done (took 4.476894189 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082135157 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096071172 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.073245699 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088167241 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.090458312 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.067488723 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.069953649 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068857698 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079936488 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.078435691 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067194117 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.073043159 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074277735 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070998875 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.068699299 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074292398 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.075151189 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.069065995 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070427171 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.072496594 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.07749544 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.080219488 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.071501462 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.066983724 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.074103734 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.067154456 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.064170033 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.084271346 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067793161 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.089847796 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.065852346 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074503565 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080830575 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.068459502 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.067381864 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.067275441 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.067191677 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.067388088 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068908489 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065958014 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065817201 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.057443331 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.066792947 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.079103385 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.073272105 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056502128 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.072606163 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.072766782 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.072595548 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.065048982 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.07020613 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.07001907 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.070713428 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.074598607 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.072406813 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.073081095 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.068688446 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065421607 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07529529 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067307595 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.064496555 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065868726 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.071699541 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.065530051 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.075151817 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071571201 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065775104 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066854717 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069149104 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073382179 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066996892 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.070454908 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064902597 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.069166766 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07184512 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.069250883 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067794667 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.065796811 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066873833 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.06723443 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.055117165 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.067160407 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053390937 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.070108258 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.065629851 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065572676 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066906921 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071695921 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.079258455 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.06835001 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073165462 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067918751 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.066588156 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.070130795 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.060131395 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.070042136 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.082285234 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081989252 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.067015311 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06522193 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.081659887 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.071516065 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.066097406 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.055983186 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074433922 seconds)
  done (took 9.175252605 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.095893741 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.087288383 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.069616314 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.083289788 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.09209862 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08584817 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.074526765 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.076323775 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.069312143 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081984673 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0735528 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.076216526 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067733581 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076601571 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.093063656 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.076581239 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.069640524 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.076423129 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.071599888 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.100031197 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.082370162 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.081765705 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.07446662 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.067823765 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.075440635 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.079502459 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088919736 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.079866637 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.078022687 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075163336 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.079604726 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.088547447 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.073916211 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.072396147 seconds)
  done (took 4.457332775 seconds)
done (took 38.616591987 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.806379932 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.960678605 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.793031136 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.130383553 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.872844929 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 7.018441675 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.935508806 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.787072258 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.891188373 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.825040313 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.02151988 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.831940686 seconds)
done (took 65.600185991 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.832701655 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.935303232 seconds)
    (2/2) benchmarking "String"...
    done (took 2.06757572 seconds)
  done (took 5.730722193 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.091266219 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.326117708 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.034736436 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.791049325 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.795420914 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.098378297 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.587790906 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.307523092 seconds)
  done (took 30.670593659 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 4.954685566 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.990940202 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.436948754 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.47173645 seconds)
  done (took 15.629272847 seconds)
done (took 63.758385555 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.80587736 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.833792014 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.799407834 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.774646535 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.850304383 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.802153284 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.24765056 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.817581607 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.78950282 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.773841448 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.790988829 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.228629127 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.801090301 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.239365355 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.79353931 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.796453371 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.830911292 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.375645953 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.947505951 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.799638911 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.810781277 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.821984564 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.792114792 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.796891268 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.823739212 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.791029581 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.244297828 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.796009706 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.416950549 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.790519279 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.821142846 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.33761392 seconds)
  done (took 205.068647842 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.792751919 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.864715406 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.934944927 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.837346255 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.288741129 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.998221238 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.950884517 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.337543057 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.797280051 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.805549315 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.06147299 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.792050021 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.084697931 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.741913035 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.807754137 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.801413752 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.92540645 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.080242486 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.802986794 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.093724063 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.802504374 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.949103338 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.916908646 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.027771358 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.833706438 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.812529352 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.804988607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.95082888 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.98193556 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.905456967 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.795717354 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.812502348 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.013378247 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.662839329 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.814093001 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.796176164 seconds)
  done (took 171.411784784 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.932286021 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.794652589 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.794008371 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.793808139 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.807846357 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.793463044 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.917002073 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.91788399 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.252643738 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.979111881 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.846217204 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.633589978 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.792526937 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.864073165 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.8060764 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.792267846 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.808476788 seconds)
    (17/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.795637333 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.794281328 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.820651978 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.796296977 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.921672526 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.805298234 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.800384152 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.79649465 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.80108301 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.165524205 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.838122971 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797924656 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.802507649 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.056615443 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.794256191 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.795109627 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.700754113 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.752018524 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.883427414 seconds)
    (36/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.79317376 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.800359959 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.797204135 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.795966711 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.016522844 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.794587543 seconds)
    (42/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.795818816 seconds)
    (43/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.797109089 seconds)
    (44/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.800126845 seconds)
    (45/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.979312136 seconds)
    (46/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.793978734 seconds)
    (47/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.921719062 seconds)
    (48/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.795295458 seconds)
    (49/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.320058794 seconds)
    (50/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.795010052 seconds)
    (51/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.797370059 seconds)
    (52/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.661943419 seconds)
    (53/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.504941746 seconds)
    (54/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.797569096 seconds)
    (55/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.797971631 seconds)
    (56/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.800461814 seconds)
    (57/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.798922536 seconds)
    (58/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.797885572 seconds)
    (59/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.803564947 seconds)
    (60/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.519335365 seconds)
    (61/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.871517492 seconds)
    (62/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.801197231 seconds)
    (63/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.802933581 seconds)
    (64/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.803223016 seconds)
    (65/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.798327608 seconds)
    (66/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.942836119 seconds)
    (67/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.798815414 seconds)
    (68/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.587794861 seconds)
    (69/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.854763006 seconds)
    (70/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.907097223 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.919269613 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.800816325 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.865942471 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88943509 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.796774919 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.799539825 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.798792662 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.798177723 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.879590823 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.796104822 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.924971603 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.804010221 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.799867936 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.850359802 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.866921428 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.796769107 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.700516611 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.799537956 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.798865052 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.134494366 seconds)
    (91/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.797501988 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.867289138 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.796291965 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.79831246 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.799968721 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.935381202 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.919588927 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.599834548 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.802201082 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.476562997 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.800928626 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.948168313 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.798357627 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.988588475 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.798633489 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.88227292 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.803237218 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.802733533 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.798658216 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.834150554 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.80075478 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.863650408 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.797846255 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.172690595 seconds)
  done (took 405.40436433 seconds)
done (took 785.600294639 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.500261547 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.463547946 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.584521766 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.493740729 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.470373851 seconds)
  done (took 14.247734574 seconds)
done (took 15.984630993 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.887044791 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.890587515 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.823868263 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.891032304 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.817836157 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.891933056 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.870063691 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.825070279 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.857378493 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.826586981 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.857566975 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.826836089 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.81591711 seconds)
  done (took 25.818876311 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.03097308 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.031053701 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.868681188 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.043586216 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.845896654 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.037563963 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.962888139 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.949443319 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.955020604 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.815592959 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.813794006 seconds)
  done (took 23.093641179 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.037161489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.04183253 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.871729592 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.032406031 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.848904725 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.035510068 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.963948079 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.951327995 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.952655519 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.81542572 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.814877798 seconds)
  done (took 23.10406698 seconds)
done (took 73.754232917 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.811205666 seconds)
  done (took 3.550047698 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.832678657 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.969943574 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.81722998 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.814957337 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.81051905 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.812391906 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.814940026 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.80858683 seconds)
  done (took 16.423234971 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.80643687 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.807733191 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.808912399 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.806146339 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.808260975 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.804848029 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.805250693 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.807268836 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.808023919 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.803473157 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.804461752 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.805994107 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.80735213 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.808691145 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.80362939 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.807305815 seconds)
  done (took 30.645058909 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.807235524 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.8045003 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.803606985 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.804262296 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.803282761 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.80598194 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.80758043 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.807590981 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.805424861 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.805663856 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.806642355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.805394673 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.806738314 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.804858323 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.807433675 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.807144954 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.806243769 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.806360888 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.811471535 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.804526526 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.808945392 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.806951805 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.808133392 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.811258505 seconds)
  done (took 45.099528581 seconds)
done (took 97.458901367 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.510540916 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.240824407 seconds)
  done (took 8.490020246 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.811585068 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.810302608 seconds)
  done (took 5.396078016 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.811495786 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.809917002 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.808259503 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.808459879 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.808516378 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.808214046 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.809786733 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.805706429 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.805992522 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.808691992 seconds)
  done (took 19.824663676 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.807376903 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.808328919 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.804048783 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.804623481 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.805972185 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.803792931 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.806362879 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.802027553 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.805421789 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.802628715 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.802034359 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.803116139 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.804552555 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.801305107 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.80371751 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.799792957 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.802810015 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.801769108 seconds)
  done (took 34.210683507 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.80253763 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.80358691 seconds)
  done (took 5.342064109 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.801589087 seconds)
    (2/7) benchmarking "second"...
    done (took 1.802911814 seconds)
    (3/7) benchmarking "month"...
    done (took 1.802111837 seconds)
    (4/7) benchmarking "year"...
    done (took 1.803329314 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.803260105 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.802470849 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.802398241 seconds)
  done (took 14.352926208 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.80553988 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.964903061 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.040135871 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.486708916 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.80778813 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.808804819 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.764257905 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.807539959 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.809104856 seconds)
  done (took 20.033873532 seconds)
done (took 109.392291142 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.62333118 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.799913697 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.183226083 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.841779249 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.854576925 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.099435778 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.818077613 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.028570312 seconds)
done (took 42.984633919 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.879497675 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.33248748 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.35294022 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.408507426 seconds)
  done (took 12.831185659 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.783899029 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.315227358 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.831065596 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.391943492 seconds)
  done (took 20.075646838 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.169439103 seconds)
    (2/2) benchmarking "read"...
    done (took 2.152252554 seconds)
  done (took 6.062400242 seconds)
done (took 47.587564828 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.805711406 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.804134384 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.800473497 seconds)
    (4/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.805492692 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.804886589 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.801300352 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.801933378 seconds)
    (8/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.805606186 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.805476115 seconds)
    (10/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.801358836 seconds)
    (11/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.804941836 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.804866878 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.804321878 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.807310454 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.803541317 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.800645999 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.805184624 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.801897335 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798660833 seconds)
    (20/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.803555229 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.802170043 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.800290343 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.801238908 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.800381017 seconds)
  done (took 45.011956966 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.807790917 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.797891012 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.802254523 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.79983196 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.796982331 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.801101917 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.800785461 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.797800887 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.800019818 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.799117266 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79601966 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.79702628 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.79960229 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.796989018 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799504114 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.797409391 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.799193976 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.796850505 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79886833 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.795880867 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.798527919 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.795491421 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.798504399 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.797480046 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.794746031 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794784589 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.795390271 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.793501143 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799152347 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.793981098 seconds)
  done (took 55.679794887 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.803325433 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.8056244 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.797210869 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.797775436 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.797320538 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.795855026 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.797895762 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.798656074 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.798728472 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.79732819 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.795969514 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.795860332 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.799375914 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.797323148 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.797285961 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.799106506 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.797331693 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.797577003 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.799579411 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.796612911 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.79658749 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.79851187 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.799400893 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.796245678 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.798388172 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.798535651 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.798449576 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.798363499 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.797778819 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.798531662 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.799387376 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797523053 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.798417919 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.796568495 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.798560803 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.79818418 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.804937932 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.808392217 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.797888536 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.799538368 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.798748755 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.797974342 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.798251795 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.795254954 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.797159078 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.795868151 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.797229469 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.799973564 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.797608436 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.796296338 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.797089421 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.79732499 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.796098977 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.795769761 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.795827541 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.796857134 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.797065154 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.795051208 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.798537787 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.793664252 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.795813627 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.794609933 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.795515793 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.795962699 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798369421 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.793622904 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.794911675 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.79470675 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.79408865 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.796009172 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.794890983 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.79460461 seconds)
  done (took 131.161973577 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.79681409 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791088696 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794298739 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.792020912 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.793023316 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.793168338 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792202475 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794465199 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.790595794 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.789915522 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.790295688 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.789505325 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788770804 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.793252207 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.791024787 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.789159399 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.793898966 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.790062961 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.791724608 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.792301817 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.789270671 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.786886957 seconds)
  done (took 41.142027139 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789828447 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.790194402 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.786412034 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.788690426 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.787145626 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.789606796 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.79046412 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.791777504 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.788362949 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.78596157 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.788712715 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.78969445 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.786820646 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.787886544 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786719956 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.787093271 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.791770834 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.788029397 seconds)
  done (took 33.918824992 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.788035568 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.786743135 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.789382403 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.786405927 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.786179067 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.791344715 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786859777 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.789626181 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.790565634 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.787699568 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.788701757 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.787798322 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.789477485 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787569034 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789909776 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.788982673 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.79085693 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.788657206 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.790656446 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.786432041 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.787120435 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.788306968 seconds)
  done (took 41.072947179 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.789374823 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.787088128 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.784578241 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.783735232 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.790411968 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.789294641 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.787440875 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.785425533 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.787351476 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.788008655 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.786489168 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.787968337 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.784723352 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.786058622 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.78517376 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.785978439 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.785969179 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.784502042 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788292843 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.786084233 seconds)
  done (took 37.455985557 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.792516074 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.789366712 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.786946836 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.788382276 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.787261608 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.788967991 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.788131257 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.789089125 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.786705562 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.788099732 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.790311326 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.791164072 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789286958 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.789800741 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.78863244 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.789128217 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.788283393 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.786020007 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.786847518 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.789056615 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.789009477 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.78599917 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.78749529 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.787457416 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.787164571 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.787420272 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.786307471 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.787027227 seconds)
  done (took 51.794251866 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.7880774 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.784753518 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.783507967 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.7840252 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.785219398 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.785555109 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.784254357 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.783842173 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.786221101 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.784698625 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.789998775 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.785523686 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.787266084 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.786857759 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.78541822 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.785851181 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789241438 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.782642351 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.780419852 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.782922827 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.785032173 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.784608465 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.786086511 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.781151022 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.78174308 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.785280487 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.782354649 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.784861843 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.784831655 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.780858097 seconds)
  done (took 55.26449927 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.804452377 seconds)
    (2/2) benchmarking "in"...
    done (took 1.803120801 seconds)
  done (took 5.325735648 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.785519939 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.787754045 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.784738102 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.782124204 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.784153712 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.787112142 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.786377093 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.783424525 seconds)
  done (took 16.002008482 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.787624303 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.788495411 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.786887177 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.788044955 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.790036252 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.79114748 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.797697763 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.788810755 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.791018835 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.789843969 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.794188093 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.799275484 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.793236066 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.790599427 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.787113195 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.788678383 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.788724959 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.788662569 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.785133943 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.786944196 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.787840802 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.793107618 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.794842686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.788209322 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.789217501 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.799598518 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.791883006 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.785798366 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.78791867 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.794446144 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.79047663 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.786018583 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.7892888 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.78797015 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.790049224 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.788244631 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.797814315 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.790797266 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.795711389 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.78951638 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789628639 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.782980333 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.790770937 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.792775325 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.791029934 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.789834558 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.785791366 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.78500278 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.789636218 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.793450488 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.793090067 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.788965794 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.785824939 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.800724033 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.789256017 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.795820335 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.791600668 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.791985838 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.79768749 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.803013791 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.80409526 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.797495517 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.793253604 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.790880831 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.801089032 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.81610355 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.800228663 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.787801681 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.788711692 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.788486668 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.799816444 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803954213 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.800055947 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.790618332 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.789216412 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.789982317 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.791027447 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.789793698 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.80057811 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.791939767 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.788847602 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.792682096 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.800268831 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.808652825 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.789330539 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.790264593 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.791491454 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.790262152 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.791934895 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.803369984 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.791675914 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.788858411 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.79095961 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.794591406 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.797028884 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.793630664 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.791642172 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.794669954 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.785653325 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.792832474 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.791844571 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.797177792 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.800452869 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.79187526 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.792798802 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.799769816 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.790361795 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.792720544 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.800634221 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.792003499 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.792002364 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.795710529 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.80287448 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.78851781 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.796091839 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.799273583 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.793551371 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.800675079 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.794521759 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.797229016 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.803217402 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.817897506 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.792324163 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.793299274 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.798514871 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.801205649 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.793222917 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.79950747 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.792434743 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.790703725 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.791154382 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.796351761 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.792164278 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.796602047 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.795005695 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.797845818 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.792006224 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.792980649 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.79743205 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.796088339 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.797448607 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.797436854 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.797304073 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.797766004 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.795662192 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.798155887 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.802465528 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.794686117 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.797249093 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.79732052 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.791709438 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.795886112 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.800035456 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.794635031 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.79741258 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.793776922 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.79506784 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.794308875 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.794134519 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.794405778 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.794354194 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.797714902 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.800083367 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.796006221 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.800509206 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.795480769 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.790593185 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.793262997 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.79447906 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.798040863 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.794953129 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.795927942 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.799351266 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.80219128 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.795688982 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.793450466 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.802465792 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.794244149 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.794759046 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.795413366 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.799213487 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.802468695 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.794233044 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.805094056 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.795845916 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.795518579 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.795582628 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.797072872 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.796048044 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.796134553 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.799160055 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.801240481 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.811392314 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.80482246 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.7983992 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.799072056 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.797852636 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.800816345 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.803268968 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.794159722 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.796530286 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.795699376 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.797642048 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.794458237 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.799795946 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.796126236 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.796510831 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.797310155 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.796951187 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.796206147 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.796732483 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.799455832 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.799790825 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.792982565 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.79767097 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.797127862 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.798433828 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.793609513 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.79838185 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.798054632 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.798227335 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.799153707 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.811379059 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.79490838 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.801078963 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.799801155 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.798334093 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.798275069 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.797298765 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.802270134 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.80023398 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.806979364 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.7998447 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.801823605 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805763578 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.798792196 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.797865473 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.80273971 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.797681488 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.795510945 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.800871058 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.804203623 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.799476588 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.798882659 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.799215156 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.80040411 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.797892066 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.80783499 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.79552629 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.798908404 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.799316035 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.804161896 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.79568339 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.801661554 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.800850034 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.79992636 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.802486184 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.799478975 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.799482914 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.801840745 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.79960783 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.799300309 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.799280772 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.802365234 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.804721112 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.807976511 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.802414473 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.803740881 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.802008068 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.802897773 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.803000692 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.798789998 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.801444793 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815011293 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.807330224 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.809953579 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.805876756 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.798566786 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.807911857 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.801417335 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.804845251 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.802278978 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.803776995 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.802596526 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.803115741 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.797098088 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.803253971 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.801113146 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.803348737 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.802248413 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.80435841 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.799939414 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.801806563 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.801736821 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.803014717 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.800983052 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.802216281 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.801941522 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.808148889 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.805494133 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.802885369 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.802783834 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.810138206 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804687659 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.804927187 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.803637364 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.804569949 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.800602485 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.804221956 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.801837319 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.805773059 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.807622544 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.805585847 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.813523157 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.803238242 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.813224408 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.800772175 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.807004794 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.809989521 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.798995281 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.803534984 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.805324194 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.80367893 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.813573437 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.8018616 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.805134075 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.807581277 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804064387 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.804798861 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.803672058 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.803964109 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.802617786 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.802926396 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814542409 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.805095523 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.808047287 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.806029806 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.799704315 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.804744915 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.802469585 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.804472177 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.811816619 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.804118584 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.806911591 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.804339914 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.807704558 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.802927978 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.80357156 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.805062316 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.800973441 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.801268958 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.812479115 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.805367557 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.8063764 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.803732961 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.815783443 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804063252 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.812533125 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.805105421 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.80692065 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.803379161 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.803397123 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.808207262 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.80651848 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.809792946 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.804532139 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.80629981 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.807240432 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.803012976 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.809232937 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.805342739 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.80514042 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.80641905 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.815160425 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.822841 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.806706515 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807509435 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.802338551 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.807365377 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.809087306 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.804462256 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.804234042 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.808290688 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.815209895 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811213522 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.807262675 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.804208438 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.807756299 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806274631 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.805493605 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.805898863 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.805426211 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.803967735 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.809217331 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.805856046 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.814685686 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.806460434 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.806881284 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.80933364 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.807110505 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.818490732 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.807084723 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.808531167 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.806130471 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.805188809 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.808871089 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.808788459 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.805300138 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.807602558 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.806466574 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.809584262 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.812305458 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.813031129 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.811517484 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.807403329 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.806161417 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.809474472 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.810025441 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.806380346 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.807484155 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.808590174 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.807962361 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.808351639 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.811814752 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.808811248 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.805272654 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.810037245 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.808291297 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.811625315 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.814265196 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.809531515 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.805117976 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.807142511 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808506958 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.807487397 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.811231518 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.821610673 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.812020852 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.818365761 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.816586868 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.813118348 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.81234664 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.813103817 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.817006837 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.808442771 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.813622826 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.808196698 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.813787191 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.811772464 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.814284794 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.808394089 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.820042626 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.809583089 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.810535595 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.820655843 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.813793909 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810402661 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.811862088 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.814331202 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.811643658 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.80730654 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.810549182 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.810205773 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.81857918 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.814181978 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.809756539 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.812636034 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.81043923 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.812973922 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.812380525 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809740674 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.812566783 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.805270503 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.812143573 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810999785 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.808802951 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.806794437 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.810043374 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.811835272 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.811747655 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.817391605 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.806424122 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.815162505 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.813675988 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.814794504 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.811149015 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811169356 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.808154913 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.808723796 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.812302881 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.810390513 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.812260618 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.814786247 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.813580383 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.813165316 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.811602465 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.812182048 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.815000887 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.820285604 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.817045331 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.810830347 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.813236095 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.813929541 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.817248513 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.811771052 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.812706922 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.814312312 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.816692444 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.810606214 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.812930849 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.811489314 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.816721109 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.829488655 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.810551629 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.813454947 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.814259908 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.819452881 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.812894976 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.810068534 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.812238753 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.817361405 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.816159844 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.818087562 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.813907932 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.821171339 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814326675 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.815495031 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.81447483 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.818222877 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.822330581 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.818548045 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812346537 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.812381047 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.818745248 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.832164702 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.814374992 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.824063137 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.842754785 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.817023753 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.817382132 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.813180716 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.81444576 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.813806643 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.819089202 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.814480687 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.81411942 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.813583263 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.813934477 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.816215579 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.82194281 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.817792766 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.813462551 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.815010946 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.815061063 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.819377868 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.812826763 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.814722008 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.814410107 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.815787234 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.816705912 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.816774577 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.818562697 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.830526741 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.826331708 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.815334737 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.81506482 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.811775347 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.821720344 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.819581022 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.826020111 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.821825891 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.816541069 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.81594186 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.818257967 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.814875138 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.810690593 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.81745516 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.817409465 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.817563592 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.814229276 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.830971405 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.822335477 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.82285179 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.818451475 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.816058826 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.814517384 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.82141577 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.816721411 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815900196 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.820823214 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.817221509 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.819401557 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.815481959 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.816691845 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.818925001 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.824083711 seconds)
  done (took 1076.9562748 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.813082797 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.812968375 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.814895741 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.813229558 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.814292424 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.812632149 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813310477 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.813098691 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.813779514 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.815252309 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.81541519 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.813157259 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.815017702 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.815319229 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.813815364 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.816301145 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.814296412 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.814520376 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.814241735 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.815420536 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.81564949 seconds)
  done (took 39.850997279 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.819265064 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.813504191 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.813741999 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.817050163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.814826273 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.816433475 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.815051527 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.818646604 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.817369896 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.814869099 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.818301477 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.818685754 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.815696007 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.814985848 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.815639342 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.818560884 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.819941463 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.815099919 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.818436813 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.81794972 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.818258507 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.816191599 seconds)
  done (took 41.721810301 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.820365149 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.820681642 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.820597128 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.816494513 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.820635511 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.816999742 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.818692974 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.819173656 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.820737971 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.824075974 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.818955765 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.820218545 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.827431686 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.821405384 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.824862385 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.818689854 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.963941439 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.820342054 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.821054244 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.821284213 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.818083551 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.828238219 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.818774813 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.817110511 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.82030382 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.821237208 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.822899289 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.819967556 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.821560993 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.822662833 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.82579451 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.819720986 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.82433111 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.823866482 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.823540155 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.821700258 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.82389058 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.821557378 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.815284185 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.819835844 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.831615799 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.836346096 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.819538132 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.83006757 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.821274096 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.820810668 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.825097409 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.827531148 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.817887777 seconds)
  done (took 91.172862694 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.821314222 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.819538104 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.817680147 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.821156602 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.82131136 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.82128678 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.823129737 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820884399 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.819370381 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.819409312 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.820857597 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.817517532 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.816481544 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.818185609 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.819143001 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.817392876 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.816181349 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.815756261 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.818476376 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.818190432 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.818706243 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.821013458 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.821210159 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.818867302 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.819926261 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.818010568 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.819096341 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.822072985 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.819680006 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.8182636 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.821730264 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.82017915 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.820913712 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.817483638 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.820736982 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.822502272 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.82184503 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.818704584 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.822559277 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.818074941 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.822189021 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.820771519 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.821689096 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.821791867 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.818589845 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.819807257 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.819955834 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.818645645 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.819752135 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.820657207 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.819942188 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.819696541 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.822404724 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.81959022 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.820649842 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.823109121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.819150582 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.819597053 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.822291455 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.818061779 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.81824421 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.822954564 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.819419654 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.82153829 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.822468464 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.819077565 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.820599762 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.821519888 seconds)
  done (took 125.516431209 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.823722621 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.823682785 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.822694191 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.824986588 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.822918636 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.826527827 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.827889847 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.824707984 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.822968728 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.822660471 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.824419359 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824174327 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.821476636 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.8234212 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.823752758 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.823678462 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.824587854 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.824613173 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.824828694 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.825091571 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.826613077 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.82479148 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.826292143 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824110987 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.82526347 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.823693077 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.823242481 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.824914233 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.825216569 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.824412417 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.8243772 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.825161394 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.825888993 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.82533909 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.824604941 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.825900623 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.824505662 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826356361 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.825380579 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.825964866 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.822861599 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.826007193 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.825362348 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.826573208 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.825123553 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.826499624 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.826536162 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.827278165 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.824268467 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.826494976 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.825934585 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.826930975 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.826171871 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.825475459 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.826973653 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.824935586 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.826467015 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.82706891 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.826600733 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.826723378 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.828699675 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.826791244 seconds)
  done (took 114.920323349 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.826532118 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.827473775 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.823019591 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.824042472 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.826951901 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.824291885 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.826536475 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.826824827 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.8261786 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.828399876 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.828006002 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.825539086 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.82417932 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.826439161 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.823759682 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.822814708 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.82438164 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.823548473 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.828806839 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.824603685 seconds)
  done (took 38.272926934 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.822763223 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.82847516 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.824158759 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.824438585 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.827827651 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.82449625 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.827650292 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.827985668 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.823054503 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.827274873 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.827127286 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.828048603 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.825869056 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.826654136 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.829137054 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.82606442 seconds)
  done (took 30.98344068 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.826446542 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.827722071 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.828646744 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.828543354 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.82541869 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.826989306 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.829887076 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.825263277 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.823574565 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.829189443 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.830552632 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.828882081 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.829903206 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.830739755 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.827241805 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.828708689 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.826510383 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.825796206 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.830856552 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.829379914 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.827550802 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.826828254 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.828934735 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.828460708 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.827598174 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.82756178 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.826641571 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.826875439 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.828077469 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.828902476 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.828160598 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.828927604 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.82745439 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.82662068 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.831719776 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.828150153 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.828328232 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.82947273 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.829802026 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.830829173 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.829974254 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.828510145 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.831504613 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.831019315 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.826179055 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.8296929 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.827672724 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.827809745 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.82751545 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.827562987 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.830824102 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.831010742 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.829349835 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.831638203 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.829967985 seconds)
  done (took 102.332583431 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.830596401 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.831355523 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.827401529 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.831200278 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.830741939 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.828213539 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.8316874 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.829097607 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.828295474 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.831142464 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.829435058 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.832631448 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.829612431 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.833142406 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.829903764 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.832112193 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.828068772 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.828768764 seconds)
  done (took 34.70998104 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.830005045 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.829768489 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.833128569 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.829181788 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.828858949 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.831924548 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830508988 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.83163134 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.831194646 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.829302331 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.829306305 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.831000566 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.831543375 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.830413792 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.829974212 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.830303903 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.831027235 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.830542789 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.828289801 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.829797504 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.831496845 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.832012369 seconds)
  done (took 42.037324736 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.834689302 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.833471241 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.850809395 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.872992009 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.861619349 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.832819586 seconds)
  done (took 12.85261404 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830636788 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832228581 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.829734116 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832956376 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.83371254 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.828311073 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829352098 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830408945 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833480107 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831159435 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.830863964 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832537353 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83179345 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.829118222 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832405304 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.831133545 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.83119396 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.829211271 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831682525 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83445163 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.830970805 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.832996485 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83137983 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.830763219 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831003581 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831965731 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834550691 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.832608848 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.831001993 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.832453294 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833726922 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83146216 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.832547626 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831895404 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835258919 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834381748 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832060817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83331353 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833467072 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.832936584 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.834930924 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834585733 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.836125827 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.831502981 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835203702 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832384297 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.834711765 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.831418331 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.831767363 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835278794 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835367379 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.832497136 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.834759474 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837067201 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837226038 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.837247194 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.83294956 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833722653 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835056792 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832858975 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.833572207 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835462287 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833492974 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834657658 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836461226 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.832386385 seconds)
  done (took 122.739019775 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834450255 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.834029019 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.833402893 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834879202 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833958198 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834036343 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835788227 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.833885085 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.833661498 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833782283 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835251003 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.834588131 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835672707 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.833908121 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834557321 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.834748612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834711597 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.83432293 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.83506874 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837652862 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835418836 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835010254 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835152407 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.833810515 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835205728 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.837180122 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834825192 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835530678 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.835594537 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.834625337 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835831761 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.833458175 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.835189573 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.835916216 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.83503573 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835267136 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.836094233 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835665009 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835460183 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.838083451 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835817408 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.839777065 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.834880104 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.835561841 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.83532285 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.835357944 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835328449 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836653761 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.835508716 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834388504 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836839925 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.836018155 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836144757 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835303311 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834762768 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.835379141 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.835825199 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.8374039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.836912253 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839136907 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.834717201 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.834928361 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.839943889 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.836288034 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.835800322 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.836351551 seconds)
  done (took 122.913627938 seconds)
done (took 2512.547489754 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.86081493 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.909215826 seconds)
  done (took 15.541342672 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.00529013 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.957117207 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.842938588 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.844712178 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.84387977 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.863723389 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.860032322 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.84268547 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.842442107 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.843128447 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.84491469 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.028545045 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.860346908 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.843514796 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.843962671 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.938684336 seconds)
  done (took 51.886572684 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.846194657 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.847386049 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.859696483 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.853709445 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.847409776 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.859422477 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.881302813 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.853310982 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.882545547 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.860100306 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.919306406 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.858865423 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.846599498 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.896362155 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.86139909 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.865668685 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.935460482 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.923648025 seconds)
  done (took 35.477264156 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.925783923 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.852568374 seconds)
  done (took 10.565391277 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.850016065 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.866724039 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.851418863 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.858294379 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.871761967 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.886290675 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.850047301 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.858683592 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.883867975 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.884226245 seconds)
  done (took 70.447595408 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.853613912 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.84834299 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.848502382 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.848456355 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.840997503 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.846078239 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.846255552 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.841403863 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.529492695 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.886925409 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.852962415 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.854916996 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.850098009 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.852976074 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.848146751 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.874506151 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.965231701 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.848421347 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.845945371 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.855957669 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.852676949 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.946494514 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.864174149 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.850789261 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.879492134 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.531661333 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.862597659 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.857564669 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.986104201 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.848681762 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.851950761 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.851955127 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.854067223 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.238187106 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.121153955 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.851303325 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.859422087 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.858420251 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.848299448 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.022467127 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.853607695 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.857769566 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.844971391 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.097491946 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.932917197 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.894848645 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.191645759 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.855876751 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.853877242 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.882179622 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.854205925 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.854661863 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.865337505 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.372190515 seconds)
  done (took 131.673012764 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.849362746 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.423801959 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.012142961 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.84695382 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.129209422 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.090873092 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.84794242 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.897680737 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.848912389 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.097326595 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.0242215 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.967004586 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.848434902 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.844700005 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.849753232 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.845657249 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.001040831 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.919345736 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.850279642 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.846801814 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.884412395 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.115215426 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.976858731 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.850977507 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.871873321 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.077209785 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.975053152 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.96632595 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.34897091 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.847207166 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.917050294 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.85247325 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.848234274 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.846765678 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.014312748 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.958501868 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.94650875 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.85188825 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.847319342 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.847715234 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.510978865 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.073825711 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.963323293 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.988324587 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.0989846 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.079327904 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.49679427 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.848544832 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.487534196 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.046238471 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.057301031 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.104776105 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.979115117 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.852669391 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.111685805 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.849377535 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.848889029 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.112100976 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.07688992 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963167577 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.85103655 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.84863495 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.84855369 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.164045575 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.851338961 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.960993596 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.851864285 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.849198526 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.961819238 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.968125174 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.081674928 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.093923567 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.880146584 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.754036735 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.355733756 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.134875458 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.920861166 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.115850681 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.851277736 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.849257134 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.944877153 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.602147974 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.023261312 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.168039941 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.114345052 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893823626 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.454432782 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.848552623 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.098916064 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.100604117 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.081316989 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.096891611 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.019409084 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.152862172 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.84965516 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.850956742 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.05186995 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.983890423 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.852512393 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.212633272 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102584604 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.578409307 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.882493365 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.159157266 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.990222598 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.846843384 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.478704745 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.851674549 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.053017918 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.895540594 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.852509118 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.851827033 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.09752314 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.718467122 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.850370416 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.640071521 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.918639163 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.854545106 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.118011202 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.856023248 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.094410352 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.854747163 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.162489013 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.357651559 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895859286 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.045322502 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.097149071 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.63952719 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.121310396 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.167526794 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.977830471 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.115178982 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.683341094 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.854848575 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.136781827 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.854358285 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.853015849 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.023351801 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.853969823 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.008288482 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.85493522 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.11268523 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878344867 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.025742433 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856432177 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.126518165 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.899088844 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.906190138 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.85663744 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.971708839 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.857866878 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.895198594 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.038963904 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856683027 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.853212912 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.425579038 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.855393368 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003949569 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.155231671 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.878784223 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.927602192 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.383047197 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.855306686 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.948367738 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.883250241 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.454845365 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.855648254 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.024729657 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.857470403 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.847964887 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.854496882 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.165925493 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.080335843 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.857091619 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.853989965 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.649850929 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.548702237 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855365512 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.03282516 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.090489269 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.50532841 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.07762356 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.858584847 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.988991322 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.860822233 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.932092836 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.20445193 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.855616152 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.85494461 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.857611013 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.855168845 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.856138047 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.083433534 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.885519922 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.543884039 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.994776881 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.102363988 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.169893712 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.120360848 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.905873874 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.862254503 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.125553838 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.859441005 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.925157646 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.85834028 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.882090096 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.106685122 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.859806356 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086760895 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.143530323 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.903255866 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.908211356 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.858596869 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.856967321 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.85661719 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.002112722 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.958749573 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.860565692 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.857509008 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.976583085 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.987098391 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.047602581 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.444992552 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.037409443 seconds)
  done (took 900.337206183 seconds)
done (took 1217.701846008 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.858178497 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.859086126 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.846367078 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.85403504 seconds)
  done (took 29.215192188 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.858417194 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.856827412 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.857878458 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.856292868 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.857025413 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.857447734 seconds)
  done (took 12.93149519 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.913083163 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.852700902 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.854226644 seconds)
  done (took 21.410111943 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.927801636 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.264159489 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.964329473 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.299073123 seconds)
  done (took 10.245161274 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.859376752 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.857773491 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.855670647 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.858870309 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.860235629 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.860814132 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.858022866 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.858854645 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.860740178 seconds)
  done (took 18.520853109 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.929205743 seconds)
done (took 98.047916089 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.297209471 seconds)
    (2/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.942714658 seconds)
    (3/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.858813435 seconds)
    (4/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.909500303 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.058756596 seconds)
    (6/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.247573627 seconds)
    (7/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.126704569 seconds)
    (8/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.000788568 seconds)
    (9/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.94371475 seconds)
    (10/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.896863378 seconds)
    (11/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.88247438 seconds)
    (12/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.859542537 seconds)
    (13/309) benchmarking ("sort", Int8, false)...
    done (took 4.858874398 seconds)
    (14/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.729500141 seconds)
    (15/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.103764124 seconds)
    (16/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.865169726 seconds)
    (17/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 3.542563418 seconds)
    (18/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.163206481 seconds)
    (19/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.251990841 seconds)
    (20/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.466290282 seconds)
    (21/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.859766423 seconds)
    (22/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.863566815 seconds)
    (23/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.846647229 seconds)
    (24/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.979291428 seconds)
    (25/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.050782439 seconds)
    (26/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.950511187 seconds)
    (27/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.858165594 seconds)
    (28/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.509888147 seconds)
    (29/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.962288092 seconds)
    (30/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.116558289 seconds)
    (31/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.846592447 seconds)
    (32/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 3.550981907 seconds)
    (33/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.876053799 seconds)
    (34/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.858761817 seconds)
    (35/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.228794156 seconds)
    (36/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.545569726 seconds)
    (37/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.963219348 seconds)
    (38/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.99108954 seconds)
    (39/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.081286354 seconds)
    (40/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.927634556 seconds)
    (41/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.858717012 seconds)
    (42/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.946119622 seconds)
    (43/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.120377366 seconds)
    (44/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.953789366 seconds)
    (45/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.892382148 seconds)
    (46/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.859864407 seconds)
    (47/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.247782622 seconds)
    (48/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.018960562 seconds)
    (49/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 7.862462085 seconds)
    (50/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.965677388 seconds)
    (51/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.305406549 seconds)
    (52/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.970262934 seconds)
    (53/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.081104348 seconds)
    (54/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.155419832 seconds)
    (55/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.12410882 seconds)
    (56/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.154039461 seconds)
    (57/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.224339503 seconds)
    (58/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.164588669 seconds)
    (59/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.221362365 seconds)
    (60/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.863195207 seconds)
    (61/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.158275801 seconds)
    (62/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.269693191 seconds)
    (63/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.506069289 seconds)
    (64/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.869491995 seconds)
    (65/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.996293686 seconds)
    (66/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.915011024 seconds)
    (67/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.74768473 seconds)
    (68/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.46518009 seconds)
    (69/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.740828328 seconds)
    (70/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.195046384 seconds)
    (71/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.891008752 seconds)
    (72/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.922771804 seconds)
    (73/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.104603322 seconds)
    (74/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.448165481 seconds)
    (75/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.848077013 seconds)
    (76/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 9.478323025 seconds)
    (77/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.03537077 seconds)
    (78/309) benchmarking ("sort", Int64, false)...
    done (took 5.557603416 seconds)
    (79/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.990347186 seconds)
    (80/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.2059082 seconds)
    (81/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.194948159 seconds)
    (82/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.150639304 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.929831975 seconds)
    (84/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.98176575 seconds)
    (85/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.924847484 seconds)
    (86/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.941883028 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.860877664 seconds)
    (88/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.786893402 seconds)
    (89/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.004013279 seconds)
    (90/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.869445769 seconds)
    (91/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.032575089 seconds)
    (92/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.793679457 seconds)
    (93/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.81310119 seconds)
    (94/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.867501472 seconds)
    (95/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.170044993 seconds)
    (96/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.945117923 seconds)
    (97/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.112808711 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.796087075 seconds)
    (99/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.054049393 seconds)
    (100/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.950215629 seconds)
    (101/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.878749718 seconds)
    (102/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.166435317 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.163440776 seconds)
    (104/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.16992732 seconds)
    (105/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.966040278 seconds)
    (106/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.033457179 seconds)
    (107/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.085698461 seconds)
    (108/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.846896258 seconds)
    (109/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.57396427 seconds)
    (110/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.863346139 seconds)
    (111/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 3.360158796 seconds)
    (112/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.889736091 seconds)
    (113/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.538055801 seconds)
    (114/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.871225648 seconds)
    (115/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.864956499 seconds)
    (116/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.238077059 seconds)
    (117/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.380886854 seconds)
    (118/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.945439622 seconds)
    (119/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.068912394 seconds)
    (120/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.088195589 seconds)
    (121/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.072079598 seconds)
    (122/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.955979935 seconds)
    (123/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.848249341 seconds)
    (124/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 3.230879991 seconds)
    (125/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.867214139 seconds)
    (126/309) benchmarking ("sort", Bool, false)...
    done (took 2.316134438 seconds)
    (127/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.888237653 seconds)
    (128/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.183595299 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.145010857 seconds)
    (130/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.849966458 seconds)
    (131/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 3.575696585 seconds)
    (132/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.399925813 seconds)
    (133/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.082302123 seconds)
    (134/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.47503039 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.144832824 seconds)
    (136/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.006709355 seconds)
    (137/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.884977722 seconds)
    (138/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.064524438 seconds)
    (139/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.922887435 seconds)
    (140/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.134832436 seconds)
    (141/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.361491457 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.061866432 seconds)
    (143/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.989930705 seconds)
    (144/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.383725993 seconds)
    (145/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.709952572 seconds)
    (146/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.985402447 seconds)
    (147/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.850420821 seconds)
    (148/309) benchmarking ("map", abs, Int64, false)...
    done (took 3.671056715 seconds)
    (149/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.037791027 seconds)
    (150/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.105744722 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.894983529 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.998365666 seconds)
    (153/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.866860261 seconds)
    (154/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.960810324 seconds)
    (155/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.190595622 seconds)
    (156/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.941192079 seconds)
    (157/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.239586804 seconds)
    (158/309) benchmarking ("map", abs, Bool, false)...
    done (took 2.002476202 seconds)
    (159/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.182199957 seconds)
    (160/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.882238834 seconds)
    (161/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.034974176 seconds)
    (162/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.882700538 seconds)
    (163/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.90140933 seconds)
    (164/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.853142948 seconds)
    (165/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.947163745 seconds)
    (166/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.122581046 seconds)
    (167/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.106204667 seconds)
    (168/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.458695838 seconds)
    (169/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.875719506 seconds)
    (170/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.030656756 seconds)
    (171/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.780161811 seconds)
    (172/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.882810602 seconds)
    (173/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.851319895 seconds)
    (174/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.9843334 seconds)
    (175/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.865727314 seconds)
    (176/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.855073351 seconds)
    (177/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.163405324 seconds)
    (178/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.228532545 seconds)
    (179/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.855178582 seconds)
    (180/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.927547816 seconds)
    (181/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.217580771 seconds)
    (182/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.920896015 seconds)
    (183/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.266419542 seconds)
    (184/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.387108871 seconds)
    (185/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.903142576 seconds)
    (186/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.889562356 seconds)
    (187/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.01248155 seconds)
    (188/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.89720283 seconds)
    (189/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.064031906 seconds)
    (190/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.89074165 seconds)
    (191/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.150591961 seconds)
    (192/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.382693709 seconds)
    (193/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.908964548 seconds)
    (194/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.891557386 seconds)
    (195/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.999831004 seconds)
    (196/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.065595549 seconds)
    (197/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.871354863 seconds)
    (198/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.900686323 seconds)
    (199/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.155132581 seconds)
    (200/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.869539287 seconds)
    (201/309) benchmarking ("map", identity, BigInt, false)...
    done (took 3.574370109 seconds)
    (202/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.895341105 seconds)
    (203/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.974320143 seconds)
    (204/309) benchmarking ("sort", BigInt, false)...
    done (took 6.870182414 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.926610099 seconds)
    (206/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.974542028 seconds)
    (207/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221510278 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.566462051 seconds)
    (209/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.024839969 seconds)
    (210/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.536423953 seconds)
    (211/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.91408467 seconds)
    (212/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.891890331 seconds)
    (213/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 8.136956606 seconds)
    (214/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.588513364 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.073827642 seconds)
    (216/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 8.023537451 seconds)
    (217/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.212894753 seconds)
    (218/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.669121997 seconds)
    (219/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.463118117 seconds)
    (220/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.12334837 seconds)
    (221/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.903421791 seconds)
    (222/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.87678414 seconds)
    (223/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.946308835 seconds)
    (224/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.989980781 seconds)
    (225/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.264681968 seconds)
    (226/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.895079716 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.251756647 seconds)
    (228/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.082637793 seconds)
    (229/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.009382332 seconds)
    (230/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.38014944 seconds)
    (231/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.954258816 seconds)
    (232/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.909570332 seconds)
    (233/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.755726594 seconds)
    (234/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.895035445 seconds)
    (235/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.80485158 seconds)
    (236/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.062871133 seconds)
    (237/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.867344195 seconds)
    (238/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.006394032 seconds)
    (239/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.716376292 seconds)
    (240/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.362562656 seconds)
    (241/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.205940145 seconds)
    (242/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.168688767 seconds)
    (243/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.86146127 seconds)
    (244/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.181717988 seconds)
    (245/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.182684833 seconds)
    (246/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.878064748 seconds)
    (247/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.85661194 seconds)
    (248/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.917979887 seconds)
    (249/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.0361472 seconds)
    (250/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.079772173 seconds)
    (251/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.844860842 seconds)
    (252/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.973650538 seconds)
    (253/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.905030793 seconds)
    (254/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.039655154 seconds)
    (255/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.867199566 seconds)
    (256/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 3.694561032 seconds)
    (257/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.874441083 seconds)
    (258/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.951556757 seconds)
    (259/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 8.046597887 seconds)
    (260/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.998193275 seconds)
    (261/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.970721061 seconds)
    (262/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.555147738 seconds)
    (263/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.46936485 seconds)
    (264/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.873634199 seconds)
    (265/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.269136115 seconds)
    (266/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.049826502 seconds)
    (267/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.051021781 seconds)
    (268/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.735184745 seconds)
    (269/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.253726309 seconds)
    (270/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.160369533 seconds)
    (271/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.954890294 seconds)
    (272/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.857403362 seconds)
    (273/309) benchmarking ("sort", Float32, false)...
    done (took 5.705575823 seconds)
    (274/309) benchmarking ("sort", Float64, false)...
    done (took 5.703889914 seconds)
    (275/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.999984006 seconds)
    (276/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.099413483 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.925598745 seconds)
    (278/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.931021769 seconds)
    (279/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.982924125 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.774346729 seconds)
    (281/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.972545348 seconds)
    (282/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.306158555 seconds)
    (283/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.287030051 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.953383612 seconds)
    (285/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.377218604 seconds)
    (286/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.996027454 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.255847924 seconds)
    (288/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.07555569 seconds)
    (289/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.441181777 seconds)
    (290/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 8.05089023 seconds)
    (291/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 2.03163921 seconds)
    (292/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.05649367 seconds)
    (293/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.876735901 seconds)
    (294/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 5.149205925 seconds)
    (295/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.915921004 seconds)
    (296/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.976357598 seconds)
    (297/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.078637112 seconds)
    (298/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.486772896 seconds)
    (299/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.475970547 seconds)
    (300/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.946523251 seconds)
    (301/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.898671901 seconds)
    (302/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.895078029 seconds)
    (303/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.994547787 seconds)
    (304/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.273335293 seconds)
    (305/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.183340109 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.255345913 seconds)
    (307/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.863060377 seconds)
    (308/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.690789379 seconds)
    (309/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.9688059 seconds)
  done (took 1024.045118085 seconds)
done (took 1026.05573872 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.907510998 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.903811683 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.886236359 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.907191916 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.997269577 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.919502085 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.895591901 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.88804183 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.933321107 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.934772777 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.884472066 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.918198156 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.888225254 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.886761112 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.886635739 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.899990072 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.195223518 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.912257599 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.903025243 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.894849824 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.902760794 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.885255185 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.937852879 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.918877425 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.889629188 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.888053427 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.889443904 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.906491665 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.001382106 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.888832701 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.889177106 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.89948546 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.193733314 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.911027306 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.881033657 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.90720522 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.899581032 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.896069071 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.890653665 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.918588557 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.334240481 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.892044799 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.889761266 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.888565858 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.888744071 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.891935691 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.889442674 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.895230517 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.902079118 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.903521893 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.330032513 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.909131702 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.890867483 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.889309965 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.898676559 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.887837252 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.891007806 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90274502 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.907869101 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904188874 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.185824844 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.917479433 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.889671307 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.904634344 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.89642269 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.365476523 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.889469005 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.893405012 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334742578 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.898642581 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.367558351 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.902550887 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.88945884 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.903787061 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.920904003 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.195160527 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.908472447 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.887870117 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.897467469 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.889085004 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.898811944 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.902263873 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.894447983 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.891350646 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.904538651 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.923562213 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.900221925 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.891471346 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.898824048 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.911199822 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.897447519 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.902635256 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.893121555 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.885184847 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.900969037 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.895160185 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.894186718 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.894426482 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.895269011 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.902497191 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.332503625 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.91351193 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.885913673 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.887783133 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.890025124 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.906598017 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.330887525 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.89791837 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.912344488 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.938298129 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.893558085 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.185485333 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.918207475 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.907935098 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.900235224 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.895016326 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.885834687 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.186416033 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.35536758 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.913357985 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.89306908 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.890036192 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.907549606 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.893418729 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.888046011 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.196510615 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.916911433 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.90608667 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.012929979 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.902603798 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.925209238 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.890965849 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.896417144 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.92072399 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.90810401 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.923907869 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.895602433 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.908999272 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.908955104 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.888136743 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.904290501 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.904470848 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.894649513 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.898786916 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.886617838 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.922946273 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.90552736 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.906112636 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.915079197 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.014087042 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.892191685 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.190624583 seconds)
done (took 297.007384292 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.959305751 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.881555368 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.992168657 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.888669419 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.97330659 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.974618427 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.884635104 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.884340253 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.884601045 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.267601369 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.885840955 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.884690139 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.883902605 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.886230067 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.971585821 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.887994011 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.886795775 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.231178251 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.889311714 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.960502249 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.882045405 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.885811631 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.889131976 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.270227712 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.882479409 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.890161099 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.963921432 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.889407158 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.237799808 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.887263071 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.886396794 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.237003384 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.979648467 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.906641727 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.898701082 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.896495588 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.97720279 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.893648505 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.972072328 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.971561514 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.995281745 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.931573437 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.892055776 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.885969065 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.892950799 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.892551614 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.888051514 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.918559493 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.893033399 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.888190196 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.231849822 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.901887314 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.888732101 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.889534684 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.888880248 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.922691877 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.887230747 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.891833881 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.981516697 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.894081277 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.954693708 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.275450242 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.269446211 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.890582853 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.888619853 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.888677176 seconds)
  done (took 185.701729013 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.958660732 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.968506321 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.961129495 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.897131947 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.945548929 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.967030188 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.898120453 seconds)
  done (took 15.422353738 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.900250385 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.892534984 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.945304053 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.943997284 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.892146815 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.044093167 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.892902584 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.905725117 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.889168766 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.946838596 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.893456559 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.891161116 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.900598286 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.893204773 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.942088977 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.908989257 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.008299376 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.894261921 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.893632662 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.050065158 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.889035412 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.899231377 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.947591573 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.905342019 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.893867722 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.901215842 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.477579121 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.892843988 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.891482255 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.893390791 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.888887795 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.937747839 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.893471792 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.889713744 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892050048 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.011398684 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.894679345 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.892178226 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.894788233 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.893892935 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.892266568 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.892604841 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.893914024 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.891299527 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.894177196 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.918403769 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.893808157 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.892559779 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.894405715 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.894381975 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.946832374 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.893667892 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.893114679 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.891796794 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.951174915 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.902335925 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.894931169 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.890530506 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.89490039 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892452549 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.052196843 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.943435631 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.89437678 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.943379771 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.896429351 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.894864034 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.894000852 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.893728555 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.950093701 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.894671669 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.945836638 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.892856147 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.05715025 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 2.350654666 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.895915466 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.899083371 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.899676875 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.897046285 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.8967415 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.904244246 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.892782634 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.899608892 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.903700384 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.893585564 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.892934778 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.010204975 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.00823887 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.892236423 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.91098159 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.904510402 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.893143283 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.94991106 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.894884407 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.892974113 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.950230542 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.013691317 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.953007702 seconds)
  done (took 208.699483624 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.903466102 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.905558738 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.899729584 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.913619402 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.896843602 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.897230227 seconds)
  done (took 13.245469839 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.900259588 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.897768826 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.896151099 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.896054472 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.899028209 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.897587969 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.89880913 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.899665582 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.901771946 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.896943242 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.898354481 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.898587981 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.897875027 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.898919673 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.898030956 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.897708709 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.900181276 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.894645894 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.896270846 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.896811586 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.050406066 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.897472798 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.897402117 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.900421306 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.903175259 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.898079826 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.907868878 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.897926851 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.897870715 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.905203356 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.901370507 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.898306257 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.901292682 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.906534839 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.903390262 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.900762731 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901171583 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.900660867 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.895547024 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.900276805 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.8982243 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.898888152 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.901924228 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.901371646 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.903210137 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.905677169 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.904547666 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.908443959 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.898839558 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.902458155 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.901839464 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.899424361 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.89965791 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.900149912 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.904914951 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.905962625 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.904426375 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.900557579 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.901623999 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.902886466 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.900347922 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.900357107 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.903730596 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.906652769 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.897691482 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.901236853 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.902594024 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.903830031 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.901560029 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.899459457 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.902540424 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.896781127 seconds)
  done (took 139.819878976 seconds)
done (took 564.722977155 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.18272079 seconds)
  done (took 9.014695059 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.093289186 seconds)
  done (took 9.023074933 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.445566827 seconds)
  done (took 10.280327064 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.900476971 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.908893618 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.903411076 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.898080805 seconds)
  done (took 29.45281041 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.238978984 seconds)
  done (took 9.070898258 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.914504902 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.898286634 seconds)
  done (took 15.712604574 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.97859452 seconds)
  done (took 8.811041249 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.975699982 seconds)
  done (took 8.813222106 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.916953419 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.914525304 seconds)
  done (took 15.675860627 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.887696347 seconds)
  done (took 8.718135176 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.556272276 seconds)
  done (took 11.398780595 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.907614151 seconds)
  done (took 8.75409192 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.951903185 seconds)
  done (took 8.784017824 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.968003366 seconds)
  done (took 9.800370066 seconds)
done (took 165.141201864 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.902621328 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.896778863 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.904566988 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.897580409 seconds)
  done (took 29.431951054 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.939947591 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.938008325 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.939092893 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.950413716 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.942853273 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.938454844 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.930187736 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.931356833 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.951205596 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.941412491 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.941042868 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.942188865 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.940059286 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.932427583 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.944008847 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.943016255 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.951790542 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.94166525 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.937163552 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.94458233 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.908240483 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.952103773 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.94437294 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.910975055 seconds)
  done (took 48.370662524 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.106202013 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.980527741 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.063224988 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.961536256 seconds)
  done (took 9.944884776 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.958486547 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.959832594 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.972097032 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.01260006 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.039276322 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.970363473 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.933730062 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.927337234 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.916035559 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.960195504 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.036062581 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.977175621 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.042746313 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.909097419 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.091022441 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.906777344 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.906857429 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.959805857 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.0121583 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.025630513 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.908408744 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.95984006 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.96280254 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.976641637 seconds)
  done (took 49.156949538 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.906424265 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.913822034 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.913376183 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.907120849 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.906648385 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.90710654 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.912814547 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.907057994 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.928945428 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.909358131 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.905957465 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.908334644 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.906643956 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.90733559 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.907956474 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.920236621 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.923045148 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.907721763 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.913237196 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.914684264 seconds)
  done (took 40.062475069 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.903593978 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.762682489 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.255923874 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.159837282 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.904739116 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.900978015 seconds)
  done (took 31.723182728 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.922777338 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.972366277 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.914541915 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.967522535 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.044574315 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.917079485 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.912167424 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.978577077 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.015381836 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.977734004 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.927340909 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.933795665 seconds)
  done (took 25.318879441 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.906679898 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.907643527 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.907191727 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.923404672 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.923619932 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.916847864 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.91937171 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.904963236 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.92190898 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.927669468 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.916351979 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.925622286 seconds)
  done (took 44.840835367 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.995447399 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.956059826 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.944290386 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.590221025 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290347368 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.11847791 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.509662941 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.239643856 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.906511414 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.180548299 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.990998995 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.008683015 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.163008918 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.36023288 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.938060997 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.396940873 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.205254827 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.107041972 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934482598 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.579680185 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973342676 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.026515313 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.697799534 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.965427771 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.120410813 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.036500207 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.169415231 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.906629798 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.042016957 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.943610211 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919317898 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.909631069 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.182041166 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28636828 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.012838696 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.918705179 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.52997563 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.624905365 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.90254595 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.665286016 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.631157599 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.030446591 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.919466573 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.909603748 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.84260762 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.99766511 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285991029 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.913194796 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.61995282 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.910298204 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.920946349 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.004410345 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.913970777 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.725028232 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.836213208 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.908165262 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.908929667 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.921099971 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.480565359 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.019674811 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.025766189 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.88032993 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.002028472 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.662615792 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.288547577 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.056743247 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.909804689 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.912292851 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84457772 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.582885928 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.964357029 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.236396124 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.927618543 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.560314542 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.207472691 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.050916471 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.851757399 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.169399697 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.39049231 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.881153694 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.138044107 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.908793872 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.847744208 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.853873432 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.846964744 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166564447 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944439908 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.66578798 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.950125707 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.243625179 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.920509859 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930959821 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.93518809 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.135097435 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.796860558 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.911018615 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.760774319 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.056501044 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.930721929 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.244063289 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.84619057 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.912440196 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.169467798 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.122372465 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.913778017 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.415132939 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.067474525 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.409446739 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.960061722 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.999932166 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.956105953 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.174361784 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970334968 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.031400375 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.964735578 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.911894614 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.200294431 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.447594041 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.046356367 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.000338644 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.037522134 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.232982941 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.936723232 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.994496311 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.915684376 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.913735953 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.694284596 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.465548229 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.913733621 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.918193451 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.914336605 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.956039352 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.914664913 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.868234466 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.539032436 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.016922926 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.926593421 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.138785283 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421327425 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.223716184 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.849178174 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.246881309 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.003826884 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.133312798 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.556520415 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.990039299 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175403049 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.913076759 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.948544493 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.957183195 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934073207 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.011739856 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.934538047 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 4.991918271 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.202809662 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.915032003 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.915915937 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.686699044 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.94737311 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.920694206 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.919578084 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.675444219 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.176297172 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.934948357 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.921330219 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.801320274 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.926308497 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.977242145 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.916474104 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924634112 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.445457645 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.646022075 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.91929699 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.500260954 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.140318395 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.923365111 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.595740179 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.031068481 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.995774917 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.178460635 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.971384019 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.847248588 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.625600255 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.606905043 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916856741 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.853913706 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.914587356 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.922970513 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926395235 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.111500158 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.184566426 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.954377893 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.590922173 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.95716626 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.926393922 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.921334373 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.916704461 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.427818761 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.033858127 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.035620999 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.959899229 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.059427343 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.930791444 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.853494017 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.920310816 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.922400462 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.917696367 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.917871226 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.950112818 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.607037773 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.300040291 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.176435167 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.567206333 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.930856929 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.649383091 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.973736556 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.913114468 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.641800455 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.159496949 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.952554665 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.929337565 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.929284002 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.637615174 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.618260811 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.483478219 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.225585357 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.213652602 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.343268296 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.062024925 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.945874151 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.25677326 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.852976072 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.474397176 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975825941 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.259659949 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871495604 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.001037337 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.56375317 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.261772952 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.930818826 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.146378776 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.294529232 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.707564734 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.059863101 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.129609142 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954966628 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.995829755 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.876000063 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.219585092 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.062280618 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.625876808 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.124864537 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.252992597 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.650127521 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.044510276 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.919530668 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.604361567 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001925024 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.632402619 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.09613059 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.033226166 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.929042794 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.395428246 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.927041157 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.148783654 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.261196129 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.014428342 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.040730706 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857538625 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.93235256 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931389595 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.923613369 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.91929401 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.822228378 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.17604343 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.932135273 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.854337135 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.961545059 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.199360959 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.820940643 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.927539738 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.923497053 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205448643 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.395798751 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.086035343 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.946060388 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.476500001 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.930653173 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.86076392 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857165937 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.61532679 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.930324265 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.899419518 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.120458459 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.025825025 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.874767562 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.923966889 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.001346604 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.180666155 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.934832603 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.183548833 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.198111309 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.623816083 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948421071 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.023362732 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.649670633 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.038350793 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.924020276 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.162699877 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684704399 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.15337849 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.968936783 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.876798482 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.926670848 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.137229677 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924210863 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.898841612 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.158026713 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.647939467 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.934791396 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.328363551 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999125851 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.902943869 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.971826238 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.017065101 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.934269323 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.00475881 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.936254109 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.934810385 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.9360401 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971219954 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.896681161 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.048002041 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.939992751 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.019376751 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.057380851 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.511869626 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.931892759 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.193027016 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279607569 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.241484794 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.984594429 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.924625994 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.925811297 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860781366 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.072850977 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.150870011 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.199372747 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.054749597 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.041013696 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.949979316 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.663869946 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.055258313 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.16777659 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.200082602 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.822123379 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.362820347 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.966238696 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.928931854 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939019787 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.138356631 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.129182701 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.221200151 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.076657339 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.921008311 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.292186333 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20393843 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.928180312 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.929207732 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.522981776 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.933361442 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.713499784 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.97336784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.908649335 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.207506186 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938602121 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314055927 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.954024111 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.084657221 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.703850851 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.714741793 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.216871299 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.907767823 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.987752512 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.19463453 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.303920668 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24156984 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.996818998 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.938583018 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.039858986 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.077979575 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.80384115 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.933394951 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.934041387 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.981419001 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.643387442 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.94179326 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.201818206 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.24253121 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.928230045 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.852099305 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961481112 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.943924562 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.157327304 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.190389612 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.186426188 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941189464 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.941576962 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.747734382 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202638815 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.992502813 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869996651 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.937707045 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.032486173 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.183155478 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.954769906 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.38680344 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.64558775 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.196597817 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.937828496 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.953506718 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.00737643 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.288815389 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.252616209 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.491526644 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.134677229 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.525349642 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.434109536 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.235161858 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.938941145 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.006992135 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.237510288 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.93882015 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.926561076 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.973040617 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.196993381 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.24735082 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.014440477 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.636467591 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.90847185 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.275841518 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.49537666 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871482787 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942694454 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.995723841 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.934438508 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063830337 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.946926645 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.867650401 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.009568047 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.716014495 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207283708 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.940357381 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.9301201 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.753213259 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.140734295 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.971841889 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.094853265 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944671231 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.607016147 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.284947821 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.192100445 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.931039758 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.944646894 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.938617694 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935342068 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.930204115 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.140188164 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.133493203 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.205455621 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 4.961699985 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.972881486 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.940334414 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.15440435 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.146644611 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.914836219 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.079470654 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.933906908 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.978736132 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.843991138 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.438146903 seconds)
  done (took 1697.070667111 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.953090288 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.971365365 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.944536244 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.9749645 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963396678 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.965861213 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.970621526 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.019408577 seconds)
  done (took 57.635770994 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.937586183 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.159715004 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.946190237 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.939319159 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.945583744 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.940243455 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.105438347 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.946401887 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.945208624 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.94828579 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.93815561 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.945586088 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.240991325 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.959977026 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.939528097 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.922941544 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.946498583 seconds)
  done (took 75.58127717 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.938219317 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.150193643 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.964023291 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.956551165 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.955042368 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.949553936 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.738219625 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.953965808 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.939642966 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.067225096 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.570707989 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.945405738 seconds)
  done (took 88.001603767 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.947240728 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.945312698 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.946423795 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.947084192 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.946131568 seconds)
  done (took 11.607121072 seconds)
done (took 2210.602299812 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.193336743 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.158405262 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.173898705 seconds)
  done (took 6.203530261 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.086004537 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.135639098 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.256069886 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.261106805 seconds)
  done (took 10.614813319 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.224073891 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.325133459 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.155808079 seconds)
  done (took 8.577542586 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.337281167 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.950588727 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.050919732 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.938923313 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.940448022 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.940419268 seconds)
  done (took 22.694420536 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.941867001 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.944511008 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.940317637 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.943994173 seconds)
  done (took 9.643670949 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.926277628 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.691625393 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.925566671 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.941042823 seconds)
  done (took 21.358746913 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.691451561 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.700793246 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.686366428 seconds)
  done (took 9.951927138 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.624846179 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.873237389 seconds)
  done (took 9.370208848 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.199440085 seconds)
  done (took 4.072162964 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.07299672 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.206017692 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.402450109 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.444805358 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.511646959 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.800351526 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.244779017 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.179034893 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.342947316 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.381699338 seconds)
  done (took 25.459947415 seconds)
done (took 143.351229246 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.318846806 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.181261759 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.139845194 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.277349682 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.165942004 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.140585389 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.36315998 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.257302311 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.782651208 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.782068729 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.274548431 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.169841823 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.100656409 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.179137484 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.101113402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.178794302 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.15870895 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.332054267 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.009006559 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.171406147 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.364028227 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.913085472 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.120511633 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.926150826 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.163420862 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.09201926 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.505749605 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.180649506 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.160036877 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.512987511 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.093968639 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.321395373 seconds)
  done (took 175.311342111 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.851547712 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.941452288 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.941997321 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.940997049 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.364777384 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.943342915 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.941776286 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.941266233 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.120839824 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.106954151 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944361716 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.366831136 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.941993025 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.94141683 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.942930695 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.941628737 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.233967366 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.887242058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.951344553 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.957409991 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.962586183 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.303057028 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.96753016 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.377302116 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.301633084 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.973348174 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.9442645 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.978157316 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.954176024 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.957955805 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.965835132 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.942032883 seconds)
  done (took 210.709461583 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.944108801 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.943949109 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.943670358 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.942990287 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.962866188 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.950984287 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.947352817 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.943740706 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.705988993 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.676640669 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.944853357 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.963656975 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.951441097 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.945256442 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.949985139 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.945010797 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.954697281 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.954176681 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.955729134 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.958401958 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.962815273 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.666722072 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.946651645 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.661064346 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.946064642 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.947039454 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94350173 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.948462854 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.955080698 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.955550764 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.956253599 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.947269687 seconds)
  done (took 223.222805216 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.140450575 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.952658511 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.952460348 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.885040525 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.95002269 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.951355493 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.947127614 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.140071187 seconds)
  done (took 19.814770763 seconds)
done (took 630.943168668 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.399669027 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.229195137 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.120834005 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.974510109 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.214633132 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.004960759 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.971692133 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.033763195 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.695303583 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.037857682 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.664949188 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.985872919 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.762480792 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.989852475 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.093835836 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.025934275 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.516607377 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.601528556 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.149858725 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.038272374 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.140167056 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.939495294 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.043934305 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.726899969 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.782009245 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.980229286 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.171551419 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.515935417 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.978705737 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.133503152 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.701076427 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.36092893 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.982905314 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.967692378 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.020626406 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.001332551 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.343229568 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.980079518 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.096383411 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.746986361 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.037749383 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.578562373 seconds)
  done (took 106.620400376 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.943991043 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.943079948 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.940486625 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.941736237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.942955631 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.941886029 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.940341079 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.943246016 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.944757596 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.940498193 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.940980072 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.944835508 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.942710446 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.942721484 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.943238877 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.942447509 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.942472987 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.946451156 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.942272902 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.94283379 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.943617199 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.942883266 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.94507943 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.940913917 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.943260107 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.942961731 seconds)
  done (took 52.405852178 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.953553063 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.09686249 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.173082566 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.970943456 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.953566207 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.95613341 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.974963157 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.961240233 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.954754303 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.955757901 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.053942993 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.962701777 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.976248264 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.178908341 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.970826465 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.956800364 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.955363597 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.95746649 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.107191655 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.96880618 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.978687155 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.962933205 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.974630115 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.972163543 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.960049426 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.95963873 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.961611467 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.392892588 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.968116925 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.052069562 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.000514928 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.979796783 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.352445465 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.186755699 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.006294084 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.960064556 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.957152999 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.053381083 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.964207244 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.957331103 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.976632471 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.959653213 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.178377238 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.447321938 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.968156797 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.956544483 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.404557057 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.063563588 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.999138359 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.969933297 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.180627877 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.971492616 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.958747668 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.960145635 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.994588957 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.971660589 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.955313387 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.266072992 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.969405385 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.976849154 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.963900354 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.954072144 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.108360546 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.965171335 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.101310962 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.967538203 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.96606447 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.95858841 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.17904243 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.972386845 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.457501287 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.965840294 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.956246743 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.054172607 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.119077613 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.431003028 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.972054762 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.11966166 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.365972152 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.984290285 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.96874751 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.387428155 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.987455653 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.969361421 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.96057062 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.961035114 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.956591571 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.003669578 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.976834118 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.395684122 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.459715741 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.277658049 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.987777661 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.977828075 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.959268297 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.268651973 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.963091258 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.96021273 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.174636665 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.471108485 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.970449279 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.969148871 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.444703982 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.972709505 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.977879689 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.965098961 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.181277129 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.974979373 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.005310632 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.959700047 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.969186757 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.963238428 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.981080736 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.967070557 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.959859656 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.430791477 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.07693184 seconds)
  done (took 242.052634814 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.957211823 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.952717681 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.957004479 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.956936656 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.9560681 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.961883845 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.955591048 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.956637945 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.961761747 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.956735163 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.955718037 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.954418028 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.956252118 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.959940059 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.991236825 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.965503076 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.569087118 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.95547553 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.956324611 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.956948855 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.602618498 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.959665653 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.958300217 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.959115405 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.963368256 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.95652701 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.962417068 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.983956632 seconds)
  done (took 170.026099718 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.962381867 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.074497935 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.977464996 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.992001562 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.971123324 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.961181099 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.985565231 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.979313783 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.970132259 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.958834431 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.96151407 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.021421808 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.971928788 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.059569331 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.994986802 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.99107402 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.064659799 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.973119433 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.960650213 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.963079955 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.992675248 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.96065971 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.023469552 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.085232821 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.978878423 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.076480599 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.970564191 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.964902911 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.964536429 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.078694435 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.976596905 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.021253518 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.986282251 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.981630316 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.083210334 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.079253473 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.06597672 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.99361196 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.970691917 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.963681154 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.962843286 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.952426925 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.078497543 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.980440306 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.966329518 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.069815029 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.982612844 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.965045803 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.972838758 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.962039135 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.975576076 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.982348425 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.028014289 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.089272544 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.99672032 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.984322575 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.990705843 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.250600223 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.97302094 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.064577638 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.962338785 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.079329908 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.984263189 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.955063424 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.963689851 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.968259249 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.991951943 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.993338059 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.066854571 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.979014988 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.064378964 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.000692756 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.969460959 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.966841202 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.967421829 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.080191076 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.084063004 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.00220423 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.00100836 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.996448038 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.961148166 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.967959563 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.957397755 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.984093457 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.967247641 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.07865726 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.084955995 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.97808557 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.968802931 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.968018842 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.96779736 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.992749203 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.086856397 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.003446588 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.060454718 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.036854096 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.0395797 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.977647825 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.978209537 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.968160005 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.028224696 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.97773655 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.978334827 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.301132312 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.034070243 seconds)
  done (took 212.559699904 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.058079231 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.434459116 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.017969366 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.021243956 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.254070504 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.392507364 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.737543797 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.01374264 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.016001467 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.04013723 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.170450723 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.069364997 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.027733573 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.003471302 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.419797679 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.001361108 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.017269721 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.036391042 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.016618247 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.550740083 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.326330947 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.132567629 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.017071627 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.128303583 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.994564791 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.302822588 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.340724258 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.389589587 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.04645602 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.355208061 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.35279586 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.693429647 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.215552194 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.251570374 seconds)
  done (took 77.74882524 seconds)
done (took 863.293287334 seconds)
SAVING RESULT...
DONE!
