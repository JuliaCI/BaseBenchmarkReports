cset: moving following pidspec: 27241
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.301562467 seconds)
loading group "string"... done (took 0.635678554 seconds)
loading group "linalg"... done (took 7.6014289 seconds)
loading group "parallel"... done (took 0.156749701 seconds)
loading group "find"... done (took 1.213550355 seconds)
loading group "tuple"... done (took 1.804312789 seconds)
loading group "dates"... done (took 1.262795674 seconds)
loading group "micro"... done (took 0.221366604 seconds)
loading group "io"... done (took 0.904518631 seconds)
loading group "scalar"... done (took 38.499314292 seconds)
loading group "sparse"... done (took 12.26174825 seconds)
loading group "broadcast"... done (took 0.9995921 seconds)
loading group "union"... done (took 13.043828031 seconds)
loading group "simd"... done (took 5.024702087 seconds)
loading group "random"... done (took 9.625771255 seconds)
loading group "problem"... done (took 1.881375934 seconds)
loading group "array"... done (took 21.632298233 seconds)
loading group "misc"... done (took 1.782618929 seconds)
loading group "sort"... done (took 3.308655054 seconds)
loading group "collection"... done (took 17.433558819 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.528912689 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123083471 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132401576 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.118772425 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.146505224 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.118051973 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.124615724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.087843837 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.898413829 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.14613097 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.116015588 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.397469838 seconds)
done (took 5.467618528 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.176606686 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.083610904 seconds)
    (2/2) benchmarking "String"...
    done (took 0.085069525 seconds)
  done (took 1.371752217 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.070960755 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.126783175 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.070126972 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070288139 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070182534 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069924669 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.070015258 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.070213497 seconds)
  done (took 1.753162623 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.076531606 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.07283643 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.070488857 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.075904115 seconds)
  done (took 1.504602988 seconds)
done (took 6.094753789 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.746674182 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212515994 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.190534788 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.3817213 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.131127505 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.173817416 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.642755525 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.314034726 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.187046988 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.078222186 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108059673 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.337665285 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.121713041 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.642170359 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.076140808 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.09175837 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.140297891 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.419929882 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069640006 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.086520209 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091669325 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.131378974 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.086675337 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078578108 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145755125 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.070269046 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132642182 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.083980037 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.068955714 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214389661 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.17687071 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.66508634 seconds)
  done (took 10.340153431 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.101464318 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.100202584 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.072372445 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.129213996 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100175559 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.071712765 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.07749899 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.071020006 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.092258919 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.130451374 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093300722 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.107574712 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.069262176 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.072493931 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.087758078 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.213245362 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.08526968 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.085672015 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.074939677 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.083088268 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.11331544 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.079963545 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082068966 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.082081764 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.13107189 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.185321946 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.09877607 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.100592439 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068685287 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084003256 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117295995 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.129594987 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069021856 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068194377 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.127711288 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097188864 seconds)
  done (took 4.80463366 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.961420325 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.143607763 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.093529271 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.133624078 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.069424579 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.110624314 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.070660668 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085517649 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.209474299 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.422399039 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575269048 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130983991 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113455715 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.104890733 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070194021 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071396766 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069673237 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.43734739 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.099821718 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.108533632 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.083477053 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.073573876 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.074370793 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.069154313 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.070693742 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.067930657 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.07186877 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.116957219 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079062312 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.305202935 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122349669 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070837757 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.904204424 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.163189827 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068196532 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.237145313 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.171382373 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091515532 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.138050652 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074006487 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068338451 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.154758197 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067185062 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.09374975 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072726768 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.068543368 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086435881 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.10501536 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119390759 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068890131 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.069259788 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.165087366 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067856928 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.080519435 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.085958243 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.158340186 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071391838 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.070484071 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.265447314 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091682216 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072638963 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068116301 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.172354082 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125813293 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.076525358 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072356073 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072526119 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071636252 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.373379335 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.068612764 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.929929924 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.07349846 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.082629765 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.074494801 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071512841 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067523673 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074630412 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.074831905 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.09024196 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.070674623 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.079025273 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.070770469 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.070992073 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.071229802 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.088277512 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.481472313 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069620339 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071061465 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.068746525 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091723883 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.09876164 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.068971778 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067948607 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101958707 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070638013 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068887421 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069114841 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.066676883 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.088501834 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.072337023 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115510918 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.068739549 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.092227577 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.101458246 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.07296815 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100234064 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.080751961 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071108458 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.404506194 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072475008 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070053337 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.069395011 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.073004376 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071176887 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.082853946 seconds)
  done (took 21.856538723 seconds)
done (took 39.176194366 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.254364822 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.079621092 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.079608282 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079081895 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076034572 seconds)
  done (took 1.878684352 seconds)
done (took 3.180109236 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121029698 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.099712843 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067283913 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.098510406 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.070217491 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100319202 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099886428 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078733054 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.099648369 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.068088355 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097209455 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067331372 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067730508 seconds)
  done (took 2.437134478 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088208144 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.089008329 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073792845 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.087696998 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068215541 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.087894141 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.085742952 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.093178916 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086162215 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07682201 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068420301 seconds)
  done (took 2.184736473 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084832984 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.088544198 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.073970479 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.086627354 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.068337816 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.086615744 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.0860355 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090594944 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.086508201 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.078079801 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.068143765 seconds)
  done (took 2.170370297 seconds)
done (took 8.073973871 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080750107 seconds)
  done (took 1.341662426 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.526885892 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.626148228 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082113545 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106531908 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185612555 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.113479172 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.245465796 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087225007 seconds)
  done (took 8.412368162 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.092201071 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.073065602 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.072615925 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.084967036 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.076878495 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.074098527 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.073636411 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.075378264 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07627014 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.073491211 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073948844 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.073423517 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.072098023 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.07277911 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.076619741 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.076268127 seconds)
  done (took 2.563739898 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.095235678 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.094962148 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.076967344 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079392841 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.076231608 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.07608709 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.078451894 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.077354715 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.074671406 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075941901 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.079079129 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.0771481 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.075526529 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068637156 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.077567358 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.079846646 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.075108897 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.077826659 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.078677614 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079647099 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.0790222 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.0681558 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.075528302 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.077899591 seconds)
  done (took 3.240187573 seconds)
done (took 16.831289154 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.105900622 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070423873 seconds)
  done (took 1.443142865 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082294458 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.08527035 seconds)
  done (took 1.449103311 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.08210992 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067054671 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.089957962 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.078253064 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068164126 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068698441 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.087597919 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068055895 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068096524 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068014702 seconds)
  done (took 2.028081195 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070907534 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07831065 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.07139186 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.082366882 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076836568 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.0678667 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.075852048 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.072030467 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.080532242 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.066548004 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.075270355 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.086237592 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074654774 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.087714448 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.075460909 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.072531204 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.074090975 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.07136838 seconds)
  done (took 2.647873434 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.068123032 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068802842 seconds)
  done (took 1.424507727 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.06894661 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065728492 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069098522 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068060232 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.067151741 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066445484 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067536388 seconds)
  done (took 1.753952404 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.36233496 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.120025031 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.306535678 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.075512874 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.085660562 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.25608206 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.070572541 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.075475395 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.075381713 seconds)
  done (took 2.75363656 seconds)
done (took 14.789350779 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.083937541 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.090281671 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.099033951 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.376382032 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.09565569 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069892526 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.116945875 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181951334 seconds)
done (took 2.428446219 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.209634662 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.64127459 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.41682895 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.208626159 seconds)
  done (took 2.560086895 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.332777517 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.091348499 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.063474753 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.071887308 seconds)
  done (took 1.863285218 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.070872125 seconds)
    (2/2) benchmarking "read"...
    done (took 0.072833951 seconds)
  done (took 1.448473542 seconds)
done (took 7.391664413 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071566739 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.070234789 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.089773589 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.06798103 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.070043273 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 0.067884038 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.068323299 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.070435274 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.070320206 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.070920736 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.06805778 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.070196884 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.070078829 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070576943 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067846281 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067747531 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070167765 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.06821247 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.184167474 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.067569348 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067834815 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070120081 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.067821559 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.067949837 seconds)
  done (took 3.131351525 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087232966 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.070512863 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.076140597 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.074708223 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072847653 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075973772 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.07514794 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069958922 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.075701925 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.07242713 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073215932 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073344922 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.072665142 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.073664692 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072269595 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073635088 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.075751276 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070250877 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07286524 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.073338339 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07552949 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07010711 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.072886632 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074894911 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.07314297 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073106611 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.072461676 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.070432475 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075503366 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.072913986 seconds)
  done (took 3.526800596 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.074246734 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06760158 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.068519465 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074260004 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.067742314 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.068371521 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.067002963 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.067831309 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.068227419 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.068258555 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.068486189 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067163163 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.067610086 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.068338643 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.069054132 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.071701064 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.083188177 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.068730249 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.068154184 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.068732267 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.070928634 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.07050963 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.067718115 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.067326854 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.068593666 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06721265 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.068771659 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068165309 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068296153 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067577232 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071032226 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.071539206 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067330886 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.074691038 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071693666 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067328091 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072394976 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067455331 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06860396 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.06746833 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067382699 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.067485284 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067633392 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.074601593 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.067871873 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.069120745 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.067650418 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.068945071 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068036485 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070966226 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067380282 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067610787 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.069666569 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069013037 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071482998 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067614986 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068607982 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.0674077 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068492378 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067906316 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067510006 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067548224 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070892378 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068203298 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083154773 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075137379 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068149697 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069499949 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068417262 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070769716 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069274203 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.082240682 seconds)
  done (took 6.328916001 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092244965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.089943462 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069707977 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.069659058 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067100224 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.068288841 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074110255 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068076929 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.06975019 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.086525859 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069057356 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.069471194 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069748001 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072517554 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068631693 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070098102 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076493649 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.065999449 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.06886626 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072083757 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068550296 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.073472795 seconds)
  done (took 2.933847331 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.150809583 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.074828174 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.108445689 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.079884642 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.075092427 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.079289382 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.074574377 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.074146133 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.073838832 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071955725 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071968889 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07423965 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074468501 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071441402 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071958096 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071503142 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07404031 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072400685 seconds)
  done (took 2.769927509 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.081390296 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.070114124 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.090297471 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.070866441 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.069849608 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.072415984 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.074207041 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077938132 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.07219829 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070122085 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077659295 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072459786 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.072986792 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069952277 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072498517 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.069936297 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.072471643 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070398083 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.077511659 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.07491908 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074393386 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0783744 seconds)
  done (took 2.960088397 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083142213 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.072986466 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.084138023 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.072018374 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065606567 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.067951686 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.073923784 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.070059717 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.073976067 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.072118682 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070287192 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068404981 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.072587679 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070294342 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.072222437 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070158198 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071972819 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069985328 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071972803 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065850738 seconds)
  done (took 2.767094806 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.089586416 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072115032 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.072110384 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.079136952 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.072267354 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071818292 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078315925 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.072288288 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071594445 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.09169652 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.072125133 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.071665092 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078602208 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.075641379 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.074967778 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.078433164 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.078209724 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078175885 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.072062333 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071765936 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.092417293 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071703071 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.0788047 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.0718996 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.071803441 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071773016 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.072401328 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076136311 seconds)
  done (took 3.457801526 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.072640999 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.070589771 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.068384688 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.068127977 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.068493777 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.067925082 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.068122518 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.068504077 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.07066727 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.068210139 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.070897029 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.070818282 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070550287 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.070776274 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.070394045 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.070292113 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070440154 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.068069773 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067904251 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068190498 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.070447695 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070080051 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.070374575 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.068078196 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068166468 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.071111027 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067867447 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.067837415 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070720914 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068398516 seconds)
  done (took 3.416615686 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.079228707 seconds)
    (2/2) benchmarking "in"...
    done (took 0.076916497 seconds)
  done (took 1.48857225 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067593551 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084198162 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.067962902 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.074578198 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.074049995 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.071172024 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077144565 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.073538804 seconds)
  done (took 1.915586825 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084938126 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.079731839 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.070803584 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081234032 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.079895069 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.085729389 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.137179082 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068977861 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074614039 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.067476856 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082819503 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.070980204 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.07714845 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.072849026 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.07646385 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07773813 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.068369335 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075251015 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.071755681 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.069769806 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071400781 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.079068854 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.073500314 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.066547493 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.072319943 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092496146 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.082195865 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.070636263 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074335404 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.078275309 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.077028351 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.065149101 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.070852597 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.070833566 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.068750298 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.079333353 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.085678038 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074433227 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080197619 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071277503 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.079535509 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.06745002 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074905251 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.077326817 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.081071431 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070781611 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.071094872 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.066107456 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.070238139 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.073568731 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065880029 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070892797 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065771063 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.078335104 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074238073 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081201861 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069442463 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072793999 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073803804 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074098063 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077545079 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072757885 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074068031 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.070200573 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.080894818 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.075596288 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.078871236 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.066253255 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.064969501 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.068674591 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.080243785 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.093067014 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.077044139 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.070948376 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071101006 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068418496 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074050661 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071075941 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075950259 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.077334651 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070734689 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.075031929 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078430256 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071708733 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073631687 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.077627661 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.069563196 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072973898 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.069607789 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086971417 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.069731767 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.068758596 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.069095183 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.083654242 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.074095719 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.06966656 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.068793599 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077841833 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064844923 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070440329 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070906238 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071663381 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.080534942 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074715611 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.07449758 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.0800576 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.076930534 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070855109 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.07284448 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.197697275 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070506562 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069831965 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078746516 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.065537537 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.074221131 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.073003129 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.071383362 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.080104984 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.069496592 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070774266 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.078867459 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.076354079 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069350339 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.067617173 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073682769 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.070082574 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073200783 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.079222676 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.069291192 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065787574 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.065858264 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074352189 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.070275921 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.075401922 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.074505295 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074352034 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.065925985 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.068302765 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.074800053 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.079856062 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.072168153 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.072153409 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.076831821 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.072291556 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.069669302 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.077196164 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.07338251 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.07161646 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.077391801 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.071785809 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065462586 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.073057951 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.073756127 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.069026182 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.074618427 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07304542 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.072846531 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071249826 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069245234 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.076440629 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071399055 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.07001844 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071011841 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.069574115 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.080994158 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072518403 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.065890665 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06823067 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.077742815 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068911333 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.069843789 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069799938 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.073667281 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.070571043 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068764751 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.070116833 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.073094027 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079996418 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.073886174 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070990773 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.076426119 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.083803954 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.070073053 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073637935 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.070043497 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071409461 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.071107331 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.080133909 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.076690621 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.074573308 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.073438454 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.067848223 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076311398 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078160003 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.070319662 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.068559996 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.070054783 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074554527 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.076546237 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074121215 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070964704 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068863749 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072524232 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.07387484 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073722156 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.070173589 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.070570666 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.075814639 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.068901997 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.075985726 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07078031 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080998274 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07409225 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.065943218 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073042875 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068669515 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076966147 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.066311693 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.069361985 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.070298833 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.070951636 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069685225 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.20649069 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065071528 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079167783 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.078661239 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.072252259 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.070734946 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.070414313 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078084443 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.072704491 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.074022004 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.075265801 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.078681315 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.081250678 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.07078988 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.074166929 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081542235 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070011742 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.066406837 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.079171826 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.069472079 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069637945 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.070460916 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.069415611 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074419093 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.077740691 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.077840015 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.064869645 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.073254089 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.069246217 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.070223092 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06620662 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.074817031 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.073956135 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.072598895 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077058969 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071932936 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.071826476 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.073971434 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.069763961 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.070399407 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.07078629 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073616806 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.070723365 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.072127354 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.069870193 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.073559803 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068566023 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.068497917 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.071328447 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.069959549 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.071408542 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.076164212 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.069879611 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071679964 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.07331467 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.070636851 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072136593 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.071894977 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.070391644 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074279955 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072195212 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071208593 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.073196535 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.065781389 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078217593 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.06965843 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078927404 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.07165701 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.067652955 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.076221173 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.073545869 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.075725186 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.071589067 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.071531766 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.072933223 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.07030647 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.07337008 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.077699087 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.069234184 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.08142689 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.078919385 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072272901 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073867015 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.071181693 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.072227378 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.070187132 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.072019561 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.070902636 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071856045 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.070519651 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.076951434 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.073931844 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.071605169 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.07281907 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.0710773 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.071404679 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.071463316 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.065877918 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.07071314 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.070870087 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070381941 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.080860009 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.070698904 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.070936489 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.069726509 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070885193 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.069394132 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.067837018 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.077122751 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077776314 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.071120964 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.077112795 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.070302821 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.072708934 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.08060069 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.200775801 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067890656 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.068043526 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068150241 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.076290947 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.068610041 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078001046 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069410506 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.068725004 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066429918 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069265537 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.067252066 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063876923 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.067215647 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.072456432 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.070046243 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069273633 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.07055469 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.073299053 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070949863 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.08013505 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069923023 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.07225215 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.07006266 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.067957884 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070453869 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.070589385 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07404156 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071288545 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.069655994 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.067728515 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.069432309 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.072092855 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072293246 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069716197 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.07221354 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077702464 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070282994 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073658324 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.073003526 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065804109 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073792375 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.070052818 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.069961089 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.069970944 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.073992871 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.074350013 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.070829862 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.079823046 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.069980721 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.075323476 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070758247 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.06841062 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070427373 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.071022253 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069990336 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.070137025 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071478144 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078006294 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.068744652 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.074318384 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.071584302 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.072155494 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.077220139 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069056674 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.072042009 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.07392104 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.069856493 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071278052 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.076617112 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072275541 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.073281676 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071133192 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072568422 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077120306 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.070645552 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077493963 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.071668412 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071284835 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.072819569 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.069739883 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070412572 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.070583324 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.069098435 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076258931 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.07129295 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.070124847 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.071066017 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.069322438 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.072443226 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.073179001 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.078938773 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.073368677 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07437211 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.066269967 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.068216808 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071362301 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.069401765 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.073761117 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.074021866 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.077486604 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.07430306 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.072323499 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069240606 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.080300553 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076748134 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.07423025 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.069476539 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074159014 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.07047993 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.072839587 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.072290529 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.071515637 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072863157 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.074231534 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.072553652 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.070904962 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.214438532 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.07573605 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072489776 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.073277653 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.073323491 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.072363806 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.066136375 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071093973 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.072874726 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.076375582 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.074107719 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.07069619 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081557479 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.069228289 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.071739106 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.073248807 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070719569 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075509225 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.065802418 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07288918 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071883819 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071966451 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.066530575 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.071372295 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.069798981 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073528185 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.070002952 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.065880072 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081768451 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.079857569 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.074083716 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069913917 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069411351 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.066725167 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.06550949 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.070172159 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071250071 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072583523 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.081188062 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.070246136 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.070713156 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.066100906 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070498193 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073822422 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.07407214 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068090438 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066136481 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070500675 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.07491146 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076518329 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069530778 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070602705 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074131603 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.073139091 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.069011331 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073719068 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.067833061 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.075192325 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.082922898 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.070652611 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071813071 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076862247 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.078230539 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071074261 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.066176637 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070594753 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.075072567 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.071935412 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071626626 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.07208827 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086262298 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.074662495 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.070570337 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.070411028 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.074222919 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.070659601 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.07951447 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071691806 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.071430517 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.078798385 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.072664397 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.078200753 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.073857974 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.078451471 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.074115456 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.074726856 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069808733 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.07180343 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.069260898 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.070208598 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.071635935 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.071421299 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.07557208 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.077585904 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.070967976 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081792969 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.080358947 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.073449391 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.068729817 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.070553842 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070539432 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065801812 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.070696829 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06907942 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.068829577 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.06899877 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.0696669 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.072465753 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.075540013 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.072385231 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.070646429 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.070158468 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065394733 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.073756956 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.073369948 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072133917 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.204324805 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.070022925 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.069349868 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073988639 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071810094 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.068399756 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.07283531 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.073405569 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072490217 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066173965 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.077640318 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069960966 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073058954 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.070520986 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.072628661 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.071153385 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074760506 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.074869241 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.071800305 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.07377404 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.075755105 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.073049083 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.068754358 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068584317 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.07596623 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068752835 seconds)
  done (took 45.391887902 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104058108 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.067323773 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066376969 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.066300706 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.076521925 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067973483 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.06628505 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.067401327 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.067448243 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06913671 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066468794 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066038639 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07411099 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.08107886 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076639576 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070532621 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066651554 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.067911091 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066059822 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.067091603 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074140047 seconds)
  done (took 2.904519552 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.077127142 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.081109101 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079615371 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.085948902 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.07515583 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.074221572 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.079027177 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074286977 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082258446 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.07670595 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.082479624 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.074330515 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.076043086 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.075870387 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.076382037 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.074551333 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.082077752 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.074955976 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.074207898 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.07838661 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.074610627 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.078521082 seconds)
  done (took 3.106536094 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.071097479 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.06983913 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.071743469 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.065457152 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.069541072 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.065342326 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.073472485 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.067555128 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073023424 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.069516727 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.070069825 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.070310722 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.072279632 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.065775488 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.070368125 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.068320285 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.109528098 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.073182135 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.070599484 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.071154727 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.06571659 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.072819059 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.066677394 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.066113596 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.070594431 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.073344243 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.071190504 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.068418924 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.06980336 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.070338663 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.070786459 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.068479192 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.072351833 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.071012189 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.069918239 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.070213778 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069724855 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.070452247 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.06589331 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.068733214 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.07109007 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.069216984 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.07058358 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.071920986 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.068813765 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06838309 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.073341158 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.070433011 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.066015319 seconds)
  done (took 4.861241069 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081691858 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.113153662 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.072387373 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.092266127 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.083589033 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076629327 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074625122 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.093455916 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067824567 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068711736 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.08521002 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082621222 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.070347584 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.074 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074538964 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069660736 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.071115904 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069111816 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073191354 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069857437 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073538895 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077667617 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.083909642 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082167595 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073323879 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.069409792 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.06943262 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073880345 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081392111 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.073591844 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07407387 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.075065206 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084335975 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072370585 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.069522338 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072002029 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.0851221 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.070487028 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.072304861 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.068064201 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.071804768 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.073793235 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.077662837 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.085895011 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.070262314 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.075007315 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069713831 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.067380507 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.081344235 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.072195103 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.077353133 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.082775338 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.073163642 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.07076652 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.074636359 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.084659821 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.070344886 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.068299213 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.07291875 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.081194895 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.067532123 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073344648 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.082169357 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071963613 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.076256438 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.08290539 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.075750779 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073177 seconds)
  done (took 6.707499805 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.080287946 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.100483708 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08668011 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085982732 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080128836 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.079885325 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.080623204 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.080172788 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.07974692 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.083569878 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.080106834 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.119415727 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.075901125 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082360842 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.089034888 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.079295981 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.079342923 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.079557576 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.079975929 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.07959334 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.079764075 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.086246833 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.080072291 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.086226409 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.083519916 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.075516037 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.079521722 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.079671548 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.086070122 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079758583 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082763333 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079636245 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079316715 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.086267185 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.083092272 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.079844951 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.069799574 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079297824 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.079873118 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.079443775 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.075338883 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.086496364 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.07927192 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.07534773 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08019275 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079551309 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.086341274 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.08426661 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.082515542 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.083843364 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.080185297 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085326956 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077421562 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077688174 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084513121 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.086590385 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.08417057 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084094313 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078970586 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.086199386 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.086099856 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.089071275 seconds)
  done (took 6.533723256 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.086592574 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.078266552 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.085166701 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.066289248 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.069391707 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.076646316 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068812513 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.069151632 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077611595 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.079989063 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079745805 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.076495215 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.079046999 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.080309862 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.076508728 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079254997 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.076242802 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.076161468 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.077417799 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.076658921 seconds)
  done (took 2.960492424 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078830029 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.087851521 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.071074147 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.075934175 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.074341148 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075887607 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.07362625 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.074096133 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.071543327 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07535026 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.079986222 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.080026441 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.07227835 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.076754699 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.079731386 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.075725717 seconds)
  done (took 2.633022013 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.102444984 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.076922731 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.082840618 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.070101533 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.071087204 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.0665023 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069946552 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.066239206 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.066547676 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.082314317 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.070044401 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.080543522 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.070551308 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.068853543 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.066690743 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.075234304 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.066450816 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.067739726 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069844882 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.081883951 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.0736066 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.068487332 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.073131713 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.070250559 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.071884929 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.073692995 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.069011986 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.070308491 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.067734024 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.070540244 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.07280787 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.073705486 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.067171819 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.068283614 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.069182317 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.06765609 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.069933257 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.070558807 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.076416944 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.070581149 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.06910286 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.072180076 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.07043589 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.071701388 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.066559231 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.07057965 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.066750241 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.072599342 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.067828061 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.072947203 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070518363 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.072618535 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.071145289 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07681689 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.073368557 seconds)
  done (took 5.364976414 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083637231 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.073436132 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.065792172 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.068092762 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.07394751 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.071829774 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.073847887 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.071934505 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.071549503 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068393519 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071483678 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.073790707 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071764062 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07391926 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072496477 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.073714752 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.06601138 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.071127986 seconds)
  done (took 2.741746856 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.075676172 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.070132225 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.077185618 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.070753969 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.071220765 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.072753286 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066689933 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.068809866 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068658935 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.070627178 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070351153 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.072564233 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069224735 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072844487 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.070408092 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070503043 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072691829 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.068937009 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.070384246 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066227856 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.072513552 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068783911 seconds)
  done (took 2.993717411 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.096828131 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.086046415 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.142935309 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.082620917 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.089881302 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.076140545 seconds)
  done (took 2.008300443 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.095635416 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.103740638 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071429756 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073406223 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079638962 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074555509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074273478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074827244 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081665154 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079711784 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074097741 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082206506 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081437137 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.081591105 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079210644 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079515022 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074252368 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076731071 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070847774 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.086690496 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074372051 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081836551 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074627879 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07447447 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074879928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0815551 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08141193 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079459773 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073809518 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.081803887 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079613988 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074305735 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.082018023 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07930811 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.073015393 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080312918 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073734603 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08676755 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079386238 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080873195 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.073276745 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079506996 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.081537047 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078217901 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08179152 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074477951 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078347393 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074285486 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074389765 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08828155 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07975907 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081141263 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079366542 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.082065582 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.081793686 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.088595089 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079458299 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080723518 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079577673 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079991182 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081092888 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079471811 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.082388352 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079776526 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079415924 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081186555 seconds)
  done (took 6.680115351 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1088321 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.071337384 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074370427 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.07935238 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081230802 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074595711 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074588347 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074337276 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.075065436 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.071380129 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.111983336 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074755808 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080849724 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080882122 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07435665 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074129254 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074170381 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.081026209 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071339283 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.088162867 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074388268 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0810581 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.08091424 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.081010264 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079619334 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079473039 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074609782 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074245518 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074505308 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073971651 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078149602 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074340225 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080862407 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071054076 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080356896 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074677641 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073964639 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078346269 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074103925 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079383453 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080549721 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086162271 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074115367 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.074280702 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079363511 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074790611 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073997046 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.071006732 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074262277 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071125504 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079483687 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079122599 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079905997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.080946112 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074438838 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074188637 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.074275988 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074628801 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074435524 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079907359 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080916703 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074366677 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08836876 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074849779 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074488456 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081149307 seconds)
  done (took 6.597516107 seconds)
done (took 137.490627398 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.198839271 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173589818 seconds)
  done (took 1.791058985 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.073449358 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.100734249 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.080514933 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.13343661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068639993 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.102984365 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.10165566 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079068878 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.0684289 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.069858307 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069261107 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.071725716 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13530818 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.069538117 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.068740449 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070679915 seconds)
  done (took 2.803513721 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.102306006 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.162083814 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.10572501 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.069426467 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102070333 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.076730554 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.069616021 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.079713307 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.075429331 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.06991676 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.07690858 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.074821069 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.070063495 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.075184754 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.078054996 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.077231941 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.070104818 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.076345686 seconds)
  done (took 2.955583529 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.101109844 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.095856686 seconds)
  done (took 1.644127578 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.156472732 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134752388 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.200488328 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.329530172 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.155734614 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145899887 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142264006 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140245372 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.113540804 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136343982 seconds)
  done (took 3.093988841 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.102364375 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.152745183 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.272275669 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.119152296 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07760277 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.096334993 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.120966339 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.083153061 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.084383008 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.084163714 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.084043582 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.081205513 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.102802075 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.077532424 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.078563119 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.080444538 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.104818558 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075220177 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076574508 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077409952 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.101097135 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069684339 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.077565151 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077211734 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.080994365 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.081148823 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.070994304 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.07060949 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.079995378 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.079168194 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079159945 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092269598 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078336377 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104071071 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073552133 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.104910388 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.07875433 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.075020753 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.079124969 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.077605207 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.08178084 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.0818228 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.077642427 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.079480028 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068513045 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078228608 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068332815 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.06909184 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.07877183 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.069895148 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.078724702 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077691118 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.10410768 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.070160248 seconds)
  done (took 6.218409621 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.112546255 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107312658 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071812153 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113515955 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.105518961 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071833523 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.107046024 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099652211 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108151253 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07212368 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070237566 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071920626 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081945674 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082539888 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.116922616 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108402625 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074100908 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071715711 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.110941779 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.111403527 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071014722 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.102404658 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098096098 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.111453841 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.070198063 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072322928 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070748824 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072288917 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.079838556 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.0820348 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.073569011 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.083316369 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.088002313 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.07846287 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069436786 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.069925614 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071321291 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.079774116 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080164357 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080385664 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.078799857 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069848952 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070747944 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071282925 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.073131296 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072947689 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.08200119 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.08337094 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.081668731 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.073232705 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.074039754 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.073531861 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074173079 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.083577247 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.080974011 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.083839582 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.083676432 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.0735108 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.073586117 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.075743989 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.083644225 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.083054729 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082964388 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.073641301 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.08370998 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.072996168 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.085063023 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.086366284 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072324222 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072333615 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.073177469 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072775023 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.076543018 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.081148099 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.080865763 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.074389237 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.072664532 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073202807 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.08340393 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.082270106 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.07324808 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.080525025 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072026524 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.072840677 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074682712 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.074270746 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.08014565 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.082243447 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.074613052 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072736655 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.073033152 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072413764 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.071891711 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.08057417 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.082459169 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.082334876 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.081951473 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.074396723 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.081269393 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.218827805 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.073077639 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.080999232 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070998074 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072912225 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.072137124 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079187718 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078632221 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080776755 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.071240579 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.07137926 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.079367416 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081805209 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070889947 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078375457 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08084719 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079561594 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069564882 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.08178769 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071677597 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080752508 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071331414 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080838284 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070523213 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079882994 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.071085902 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069858028 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070500944 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079337509 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071986086 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07100185 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071398347 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071038927 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.08237653 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.085828203 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.07398641 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.078903182 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.07919438 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071954795 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078589552 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070605255 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.07979553 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070453307 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071898566 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070363014 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081926574 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.071826477 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071113172 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070912006 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.08070199 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071294121 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081137946 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079540314 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069335198 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082222436 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080906588 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077941985 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081019805 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071785312 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.071024777 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.073599942 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.072472476 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.080531042 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.08277418 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.074184262 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07310787 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.080731744 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.084289716 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.07108292 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080317858 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.081534213 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.081141721 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.071837622 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.072178272 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.084382883 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.082241331 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.078679882 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.079560817 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079064643 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071229739 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080810682 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.082365024 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073018754 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08766499 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07348116 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.086522298 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082133976 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.080097599 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080867226 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082860568 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.083653642 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.083954708 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.086483329 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07215973 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.072892425 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.081810154 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.073375974 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072266947 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080542933 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.074545022 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.073050711 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.22463775 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071602975 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.0815271 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070721276 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080152198 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070749371 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.07246002 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084234517 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071078337 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072633307 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079118035 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070470427 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079200622 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081134515 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078778712 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070988505 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072119274 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.080322175 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.080124022 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.0735213 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070994737 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072778858 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079503555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078889773 seconds)
  done (took 19.37271307 seconds)
done (took 39.340145213 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.195876862 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143552617 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156561505 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111830477 seconds)
  done (took 2.137656797 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.114843663 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.10125188 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.093917681 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.069723705 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.099516301 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.069884848 seconds)
  done (took 2.02915987 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.274743545 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185695565 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169276941 seconds)
  done (took 2.111000678 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.195768373 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.182747164 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421104945 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.256308021 seconds)
  done (took 2.637414797 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.140826669 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.08937783 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.071214955 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.086997516 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.129290816 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.15707364 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.099895789 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.124008104 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.082764443 seconds)
  done (took 2.510270403 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.144111031 seconds)
done (took 13.049403424 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.106044468 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.233488037 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.108497797 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076650852 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.171446785 seconds)
    (6/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.191766753 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072761578 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082269982 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.157955208 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055959717 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.204080818 seconds)
    (12/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.079007414 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.172131753 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.080418513 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206025941 seconds)
    (16/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.173174176 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080008969 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.20182192 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.185035221 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.22965799 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.073214086 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.078944867 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.183370473 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.077343946 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.182014789 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.109543238 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.077536603 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.102873853 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.076359568 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.203604485 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.114201908 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.125226525 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.206077606 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.083140095 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.299913768 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07853959 seconds)
    (37/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.203800588 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.133572925 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.172939725 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.148680943 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.093383963 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075456252 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.090318758 seconds)
    (44/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.075068786 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.079006854 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.14495485 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.070578007 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.092611995 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.213118075 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.090352584 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078271117 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.076765622 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.14873714 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.112095856 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.068909106 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.160078091 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.14740936 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.180075559 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.108326779 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.192408406 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088886599 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.116360007 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.190021564 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.080354573 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.103335989 seconds)
    (66/309) benchmarking ("sort", Bool, false)...
    done (took 0.153228845 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.163334273 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.102200297 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 0.071045511 seconds)
    (70/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.077967395 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.093862592 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.086605789 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.078415076 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.194816418 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.077691793 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.074146097 seconds)
    (77/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.069572776 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.078250374 seconds)
    (79/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.07263273 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.242603916 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.172661659 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.05540311 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.152097644 seconds)
    (84/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.06749096 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.091230481 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.079090809 seconds)
    (87/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.112201856 seconds)
    (88/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.158137026 seconds)
    (89/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.090066164 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078468128 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068482357 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.079735522 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.159755108 seconds)
    (94/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.077953242 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.13024846 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.055615592 seconds)
    (97/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.158862679 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.09607755 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 0.145159534 seconds)
    (100/309) benchmarking ("sort", BigInt, false)...
    done (took 0.189115225 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.096770017 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.07971723 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.13560061 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.065163507 seconds)
    (105/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.199874614 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067709205 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.088615746 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.075019585 seconds)
    (109/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.101396908 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.090897751 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.054930918 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.076878086 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.090155881 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.09657573 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.057065259 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075861806 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.055082071 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.101696376 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.071454246 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.075896783 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.079502198 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.09122486 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.077505154 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.125214741 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.070830403 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.093477268 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.072242379 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.070823978 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.094802338 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.102854064 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.076858251 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.087454115 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.08226097 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.078414417 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.056892928 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.056140703 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076088172 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.169147133 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.152219899 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.054768563 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.155365611 seconds)
    (142/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.114777754 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.10418999 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.077524706 seconds)
    (145/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.065734749 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.091505951 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.077522493 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.166365804 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085588722 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.077039369 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.175463193 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.071920475 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.076852595 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.105873986 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.156818752 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.171247168 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.091554574 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.056514516 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.077951116 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05848898 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.084192811 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.083241041 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.069438364 seconds)
    (164/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057795936 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.070268179 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.068540882 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.069590093 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.092721412 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.076387528 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070409636 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.069668185 seconds)
    (172/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056371727 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.055989063 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.175096672 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.17016446 seconds)
    (176/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.092554739 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.097846513 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.143088124 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.076314928 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056327187 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.058008545 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.239773891 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056746686 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.081656668 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.069403641 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.139827121 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.092348942 seconds)
    (188/309) benchmarking ("sort", Float32, false)...
    done (took 0.130472258 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.079502333 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.068826543 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.089021957 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.096081658 seconds)
    (193/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.076423972 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.080750867 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.181110671 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.077448231 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.180542855 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.07252575 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.091650656 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.054137002 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.075369942 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055907859 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.057974781 seconds)
    (204/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.057190457 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.078252687 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.179304735 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.069563805 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.077404966 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.070362511 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.112137143 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.068610332 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.059283974 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.056739919 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.076461996 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056810066 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.056853044 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.056114992 seconds)
    (218/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.076867209 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.078923995 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078237754 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.070163799 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.206115574 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.056822372 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.070868499 seconds)
    (225/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.057010493 seconds)
    (226/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.074142446 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137749877 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057207131 seconds)
    (229/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072263319 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069100205 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054418712 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055598804 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.093187186 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.068265743 seconds)
    (235/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.078976037 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.057383706 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.070112735 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077414552 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.056497469 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.07177832 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056492726 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.056295944 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.068312862 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.06898611 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.056908453 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.057414015 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.070926049 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.082287091 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.072589409 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.056412946 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.122413509 seconds)
    (252/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.156972758 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.068302729 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.1115592 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.083475666 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.073652522 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.079876301 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.069071448 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078631044 seconds)
    (260/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.057631548 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.070491573 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.094012336 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 0.131989238 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.070251643 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.071095317 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.058074246 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.071859163 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.057282846 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.072121835 seconds)
    (270/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072483126 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.078611407 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.070466267 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.057370671 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.076865233 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.070461072 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.057061316 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.057798185 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.090025054 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.113218484 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.072325069 seconds)
    (281/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.077706153 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.112234856 seconds)
    (283/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.103077036 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.05813629 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.069355328 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.057313121 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.077983469 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.082627791 seconds)
    (289/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.056906111 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.076150885 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.05705058 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.090227512 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.111144152 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.071422752 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071788993 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.057593892 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.058618945 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.075944737 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.058887524 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.068467871 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.071703909 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.119322628 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.075861069 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.069323786 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.071396486 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.069846011 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.226534152 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.082920266 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055765238 seconds)
  done (took 32.055213183 seconds)
done (took 33.548619244 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.087130188 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.093862346 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.077825623 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094238353 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.083143334 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077982183 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.076278433 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.08010824 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.082461219 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.084498228 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.080736862 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058404726 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077202793 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.076974436 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077486011 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092237537 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.08131507 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076585185 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.075963435 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.06767809 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.076199199 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.068457756 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070191581 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057861801 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.080939399 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.07447708 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077129176 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076728649 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067816265 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068522378 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072612152 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.076824143 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068214828 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.08241892 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.076167514 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076967817 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077417062 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.08013544 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070302392 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.069265851 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.077206608 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.06862074 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.075674489 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076066246 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075048598 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.07386556 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075990079 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.079593304 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092594172 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070120032 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077658797 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078173284 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079071127 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075539783 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.073075867 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075853053 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.075639632 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095848533 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.078547059 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073415757 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.079210376 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.07895045 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.07592542 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.07789151 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.078499694 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.080887267 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079727274 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.074242039 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.078033896 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074557117 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.070642949 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.078621319 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.075201508 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070895888 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.082092187 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.08258891 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.06941083 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.077304787 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.078528381 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.078504719 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.0696818 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.072404353 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.071638281 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.077901616 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.072637882 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.061580948 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.074775021 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.077634599 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069200455 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.076486706 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075627732 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.076080898 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.070257898 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079548248 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067541292 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.074283319 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.069414598 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070161034 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.071968124 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.074522453 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.070820544 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073270282 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.080386691 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071913917 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.077630631 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.083377013 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070188009 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.077948619 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.069092629 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069464491 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.083536445 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.079614846 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.070095539 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073001282 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.069259188 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.077198179 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069513238 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.069807935 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070238805 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.07042299 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.076464734 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070358371 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072456977 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.219192097 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.084135212 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.071280992 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074930748 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073648783 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.070783521 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076670092 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.071098995 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.070747416 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072257093 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06766393 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073216223 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070597081 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.078020085 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.072832397 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.078013387 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.072051622 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079068936 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.075642798 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.07673611 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.075832031 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.069678256 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.064649982 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073147227 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073267013 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071991119 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.070191368 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.07208111 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.069970745 seconds)
done (took 13.14708738 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.071558517 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.135659484 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098504979 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.097319411 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.088376573 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.07125222 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.079622231 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.09805932 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.069793261 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100833633 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.090224267 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.088153486 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110630573 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.067296307 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.068344142 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.072542369 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070165346 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.081598614 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097284131 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.087260753 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.111404301 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.068105331 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092319135 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088760206 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087532004 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.102438188 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.069588097 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.07263557 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072212731 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.091626174 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.08877158 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.07236373 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.070554871 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.095690508 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092000065 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083232209 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.069288882 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083375672 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069447041 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068857302 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070373928 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096214595 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081655244 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082078537 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072294878 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078032499 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070476725 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.08354384 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.09044861 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.079616123 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085443202 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099159438 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071030647 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083833273 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.067347378 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.087675533 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.080709615 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.073067126 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071574046 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.079107945 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.071056194 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074423163 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.084463203 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.082843343 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072911747 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084640486 seconds)
  done (took 7.004029179 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08840028 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.0966203 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.086967966 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.087404124 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.070767711 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.071255697 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.072014666 seconds)
  done (took 2.161064297 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.071620675 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091017119 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.092564043 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.092514876 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.085247644 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.091039608 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.082778063 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071696892 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.092091515 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072673121 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090794831 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.102447355 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.07467833 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.078440401 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.094092741 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071093957 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.093767473 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.071716087 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.074657223 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.093493123 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074214339 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.100828277 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074734306 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071759227 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.085303406 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.071495423 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115566551 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075495609 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.073172157 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074794165 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069652954 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.11029653 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.085568445 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.07975887 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.072073771 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.085693389 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.085719649 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.070430658 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.087052925 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.080010829 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.084438731 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.071823601 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.072355342 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.069750807 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.075714341 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.081678256 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.072788521 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.072693757 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07428274 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.090148612 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.072330844 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.084744906 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.074216146 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.077126849 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.072996166 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.078457126 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081828323 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072550178 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.090425894 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.073431811 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.087016544 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.086174755 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.085721178 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087447725 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.073881969 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.084936705 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.084995528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074082542 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073601101 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075748313 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.086287023 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.070902628 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073369445 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.081047739 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073988543 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.092983879 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.093181973 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073154226 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.085485538 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.071914043 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.071748641 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.072181761 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.092610985 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.077270532 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071898924 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.076163144 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.075808258 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.070144094 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071147928 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.076168059 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.070062851 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073104394 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.074886444 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.074304175 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.074547438 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.087651186 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074525438 seconds)
  done (took 9.346692837 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.074178089 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.073112482 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.074395506 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.073356342 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073014591 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.073277647 seconds)
  done (took 2.05171923 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.094981486 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.07309786 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.083993365 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.076233951 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10648226 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.090470901 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.091468613 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.082556186 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.086578554 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.081110766 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.089467068 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.092142565 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.095319778 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.076858133 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.090820793 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.076221511 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.091257355 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.079155114 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.08245014 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.0779471 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.090193993 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.076847578 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.076973961 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.085982225 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.080356372 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.076492925 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.083733657 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.082770538 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083146425 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.082274812 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.076771719 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.080024252 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.075774744 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.082143032 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.090944381 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.075511534 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076273456 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.08157121 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.076747259 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.080769742 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.091944141 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077424734 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.078550949 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.081413419 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.08081308 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.073048174 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078967072 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080886331 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.08739887 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078819048 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.081217626 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073129245 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077106393 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078654678 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.072703047 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07885237 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.078684315 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.087702763 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074187561 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.072709611 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071022143 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077279738 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078890901 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.077815462 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079162503 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078750194 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072993219 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074053229 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07719057 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.075181004 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.08220589 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.07397718 seconds)
  done (took 7.413302923 seconds)
done (took 29.549518564 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.536275825 seconds)
  done (took 2.096566129 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.599268268 seconds)
  done (took 2.19817087 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.732903422 seconds)
  done (took 8.320184256 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.372683176 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.467452805 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.696127745 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.135268061 seconds)
  done (took 3.298463085 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.723811868 seconds)
  done (took 2.327595687 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.236560941 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.223341336 seconds)
  done (took 2.074864279 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.380589608 seconds)
  done (took 1.97292556 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.100715089 seconds)
  done (took 2.695597826 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.237886775 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179593141 seconds)
  done (took 2.014312191 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.464149952 seconds)
  done (took 2.063005856 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.860248885 seconds)
  done (took 6.461916901 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.220694327 seconds)
  done (took 1.862067425 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.238717909 seconds)
  done (took 1.83862928 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.77117474 seconds)
  done (took 3.370183239 seconds)
done (took 44.204930054 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.089084275 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.09089511 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086961106 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083553795 seconds)
  done (took 1.923848467 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081626668 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.078395766 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.081406388 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.077873196 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.080663308 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.077476024 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.079795995 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.080076321 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075041158 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075571681 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075866491 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075367834 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.07772173 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.076823513 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.07608329 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080393872 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.081409296 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.077776586 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.081145413 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.077395552 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.076371043 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.080076095 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.080202207 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.077218337 seconds)
  done (took 3.479135701 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.084112261 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.078155845 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.080783378 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.077804404 seconds)
  done (took 1.930546618 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.08321411 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094757294 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.091819709 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.082193805 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.092924763 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.087851052 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.072434745 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.072416884 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073320527 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.080205525 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070897239 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095944223 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.08946449 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.080057348 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082654115 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068799569 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.071050894 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.088817239 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081023909 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081771273 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.073055832 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.081060156 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071688481 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090395299 seconds)
  done (took 3.564746681 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.091606732 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.105180202 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082382615 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.091608224 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093166029 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068824613 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.087747568 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093717028 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125288345 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.06924006 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.074203899 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.069846453 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076399662 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068573451 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082775743 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.109195391 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112155043 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071882855 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099668734 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.06882624 seconds)
  done (took 3.357569462 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078749709 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.074971708 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.076281077 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068916559 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.080064208 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.074881295 seconds)
  done (took 2.07398201 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.073407384 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.076189991 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.072650755 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.07237928 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.076852082 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.071126002 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.070792564 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.073878928 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.072750291 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.073678207 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.071342396 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070706438 seconds)
  done (took 2.48814805 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.193688686 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.075141761 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.073772807 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.069010472 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073589567 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.071615288 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.086727967 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.073765746 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.097449275 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.072478146 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.072817875 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.074299443 seconds)
  done (took 2.647698635 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198271342 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080540187 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229293918 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153565277 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112616668 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.116517634 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114657919 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.114536842 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.139550295 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100258379 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159439227 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16062499 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105843365 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137130382 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093177428 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.101351814 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149156704 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160800936 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105591703 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159024104 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142587582 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.128356934 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.147499853 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103578186 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105962741 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118493624 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.073846042 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08160367 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162933836 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1294492 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139828002 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11577626 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092243935 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170026576 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162940382 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137255284 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144498941 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085180321 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.102721589 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.13049535 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188220068 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.0898071 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.304207592 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110822756 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084024719 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130855629 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119243367 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.11880694 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103973776 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093939077 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145556281 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.178313394 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.133250249 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.089837133 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.125791857 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112804311 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.111324313 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.111673813 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171591872 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158332436 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129506655 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.077086798 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113624578 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14944416 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129755598 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.106426918 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.123602783 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095981679 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133824375 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151411528 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.120094765 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139309481 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.118756643 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.09338371 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120716732 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138350239 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124638631 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.16014943 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126570381 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.078017793 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12363225 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102873782 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08343795 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.146445067 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079500185 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173006723 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.103714318 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.109714269 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.125291894 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.110212934 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111242815 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157037459 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.295105399 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104830211 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.069037356 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105331505 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.117839971 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140511773 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088590513 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.106669273 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11504599 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.079339359 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131258037 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078366215 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120522448 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079095419 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124440362 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131864336 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.083242485 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.124118332 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107157629 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.104292764 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132599917 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158027093 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092590451 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087214981 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163596832 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121666618 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.10517675 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143657242 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156310779 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.104892648 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103399241 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147773022 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171764131 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099538267 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162870472 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109138511 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.0884824 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092301999 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126249735 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114598551 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.126037599 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085157622 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.119126079 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16245332 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.080216874 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.099926696 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133381534 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081673128 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083557831 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106614736 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104741612 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.097180602 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098273105 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.10410858 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137349711 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.283644382 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108089251 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127113528 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10319483 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166572635 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092384712 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.105967378 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107571652 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.076538897 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.135181445 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155540856 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085318302 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159313508 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.123464423 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118518111 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12134401 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088460492 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137931484 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084145102 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.075847276 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142434984 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.113992877 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110711049 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.148094655 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116942876 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.124409827 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.120275591 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13314407 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131573461 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130918382 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110682547 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.09279143 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114900095 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129862037 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.079025688 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.095021469 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.085349906 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108635591 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100107048 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08818664 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.14159495 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125195057 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115001317 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115397154 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100228042 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.146355509 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.08095544 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126786344 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.120394664 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098981039 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.151431798 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150932588 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134162298 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.258287323 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135952681 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.074830602 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080118167 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.093161922 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124063197 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.087619709 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088181905 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117574128 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144879754 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12525057 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132349073 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121072627 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12013788 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.15105997 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.073153322 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.11882603 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14455148 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123013817 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.108415525 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095278072 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.102809245 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.14250457 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106521332 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17226125 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112542093 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121801838 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149687421 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.103973931 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084012732 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104062589 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129759961 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103689365 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13950036 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.099274046 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090032045 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10772164 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077903612 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098516327 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124643985 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116925855 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132314836 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.11362131 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131381227 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080427825 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112984818 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122288341 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119222611 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.06680024 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117287203 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153909829 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095756394 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114990412 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.303159671 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081968286 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.134746586 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166511391 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141727318 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.088892583 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109252854 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.120408352 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.126354126 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12221326 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13871746 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110178713 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137637642 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113159512 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090034736 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092432135 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100139015 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107606001 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.099067614 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.107793015 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.115640326 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.100764004 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132165811 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107782333 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113618392 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.120358619 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.103087323 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096642358 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.101150032 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173317147 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119210425 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168334019 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.103995822 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.1428726 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160453924 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.081003074 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084879709 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.083527615 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138676051 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089651206 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13339546 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.113292169 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119938412 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125714117 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141241079 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0997048 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.073869376 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111589707 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13426911 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125761627 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101893188 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.105452059 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160096107 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.10177952 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.238197079 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111118687 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116245363 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.109134645 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169223916 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.068229933 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109840287 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.082479253 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085752983 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.127840798 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.149594734 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.085428791 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.104450046 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122251842 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114603353 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.127672445 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10318991 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.114662992 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.127839748 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.146924958 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128660798 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.093923715 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113252344 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.128049296 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154578762 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105939097 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.102193296 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170185136 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150851612 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.155925471 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087633146 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114678318 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117620501 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113838689 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137398992 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085555539 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15601657 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084174829 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137395969 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106049057 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.089778782 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126345619 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111348128 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090497192 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141336981 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115052068 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084325211 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079324199 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114662194 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117094637 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106062235 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.078778399 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.293322539 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.077579236 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134098078 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160060988 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086411813 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108258311 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100082647 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085433421 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109988825 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.106992637 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.092698949 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.104142303 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168940623 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091225637 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147449153 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134678744 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114561401 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135372243 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10737971 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.643337695 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.08249114 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149619104 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.116909677 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16846559 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.103874111 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119843262 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.113139482 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12355853 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.141013933 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102590767 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.178533921 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131350915 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.117236291 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083672262 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104690517 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105543035 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088375976 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.107454378 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114124539 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114691965 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094194705 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.116165296 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124846981 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.087642958 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.099837948 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152113961 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113392079 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13939326 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.134321478 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085751511 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115541 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290938455 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085541987 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.121212767 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.150643635 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109125335 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104270963 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.085866403 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.103893136 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.158500362 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.079051972 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156713538 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122626097 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112727485 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115971992 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.113988269 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.135596124 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109098712 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124903929 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096343203 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.111239237 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.116574099 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.086459882 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.082436936 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.109201773 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111982998 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.101288816 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.101600545 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.104107939 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151404383 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.078283083 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103867966 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118012943 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143832886 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171569898 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.092480783 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087994895 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122337173 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117796433 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.113389207 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121778088 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082628235 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086292584 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.085125496 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.086083829 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110477591 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.115119974 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.114240623 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109656652 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156376886 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084995541 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.227344831 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.09977052 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107347128 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.074821747 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.082270225 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099802212 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.25669711 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111713408 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117300678 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159622917 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.100876392 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.095778793 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096649769 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.081177058 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089437755 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.129004036 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111846351 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120621014 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105178107 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.068838416 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110260659 seconds)
  done (took 59.689146986 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.112967099 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.085465998 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.098919377 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.145498258 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.122753557 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.200840905 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158084544 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.190965929 seconds)
  done (took 2.843302246 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.074659464 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.100820233 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.108360938 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.089528412 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.073320333 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.076338482 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.227263663 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.088500654 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.072625578 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.098028212 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.086032768 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.077048025 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.424712296 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.072404509 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.075299387 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.068644199 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070498865 seconds)
  done (took 3.597605993 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.395433753 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.634444636 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.335808124 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.079991554 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.97216004 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.094337263 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.20276303 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137074408 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.083023529 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.548728488 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.414835779 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.134688202 seconds)
  done (took 18.762558607 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.088393443 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.082282064 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.095920903 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.095337212 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.08488566 seconds)
  done (took 2.174129311 seconds)
done (took 110.187377892 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.088869133 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.598541484 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057346741 seconds)
  done (took 2.408828711 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.092579804 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.091529886 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090723865 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.088388876 seconds)
  done (took 2.093522749 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.080131728 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.08244089 seconds)
  done (took 1.888203919 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.232333193 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.173638818 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.100858829 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.088762951 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.085019099 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.085642854 seconds)
  done (took 1.995407485 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.078080324 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.080918574 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.078204649 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.082221494 seconds)
  done (took 2.045018033 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.082832466 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.058436584 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.061298783 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.06357498 seconds)
  done (took 1.993402721 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093484215 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.087175546 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.083829817 seconds)
  done (took 1.995441322 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.104980657 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.093064901 seconds)
  done (took 1.923080543 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.087667311 seconds)
  done (took 1.819398595 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098675073 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.104052169 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.133603921 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.114670426 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.14063158 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.111490921 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.090141935 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.091024018 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.081537509 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090966588 seconds)
  done (took 2.786068872 seconds)
done (took 23.272978313 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.084216632 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.370231937 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.367130047 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.093189211 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.672117661 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.358721122 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.97046088 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095179552 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.140403656 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070460689 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087291973 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.656548507 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.960024816 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.327917255 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.931118495 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.325621512 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652358259 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07134458 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071059075 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070751752 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.958628643 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070543565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07106206 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.07177301 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.652512284 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.374990418 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072565691 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.325790331 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.071431843 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.072897148 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.358741622 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072235164 seconds)
  done (took 16.248166712 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095366368 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125742669 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.079070355 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.088627465 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.07328628 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072928771 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.074646302 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.071839026 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.12221764 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071568849 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.087533791 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071000824 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074573306 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072100227 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.09068104 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.070824327 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.07202962 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072740208 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07150248 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072121051 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.089567874 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071615725 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071811254 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072102966 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071440874 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.082721077 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072091212 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071982212 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07206635 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073924841 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075439833 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072294159 seconds)
  done (took 4.270374197 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.123691597 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.128098758 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.076655468 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.107210703 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.114752308 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.074088328 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.143760051 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.096123632 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.129667266 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.071204288 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088163244 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071424933 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.10390165 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071864334 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.091014536 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071721543 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.072454252 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.072124122 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071767858 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.072436189 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.091245739 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071597516 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071982425 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072459959 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.071676372 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084917584 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072072475 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072512744 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072236505 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073924083 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075521472 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072799155 seconds)
  done (took 4.497101846 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.07901904 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.080458184 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.087873867 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086795494 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.072949983 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074628289 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076831897 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.073434164 seconds)
  done (took 2.37551395 seconds)
done (took 29.127614197 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.084703017 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074702891 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.078386447 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.091408541 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.076268388 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.07997285 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069693727 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078219841 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075843487 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.07597443 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.07804739 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.071193135 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074361585 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070416528 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077248885 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.071813653 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082057768 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.076538162 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.084880779 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.085124072 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.076493575 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.079581633 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.081119227 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.084792553 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.085244664 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.084763148 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.08376052 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079432046 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074100467 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.074746409 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080512501 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.089110034 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074657969 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084965898 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.074439776 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.074095126 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.07794595 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.074379742 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085537917 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.082595082 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.076483093 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.082984636 seconds)
  done (took 5.024658195 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.094593642 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.096920641 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089902079 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067435237 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.072344587 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.070568879 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.094686177 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065542632 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.065388215 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.093776904 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.06216011 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06527193 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.068675217 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.060327911 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.065721397 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.063331475 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.068021578 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061960353 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.06576869 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.065594528 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.094400227 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.060409629 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.083433593 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.068475853 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.059849397 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.065032813 seconds)
  done (took 3.64732325 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.080235076 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.088476054 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.093904276 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143916147 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.114295246 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.083890082 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.084297189 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.098442161 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.10053467 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.073024422 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.077245427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.098738298 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.093242186 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.080181829 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.073955651 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.090622919 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091724365 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.075295592 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.079304986 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.097176311 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.091107214 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.08881802 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093729402 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083802292 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.070275465 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07268094 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074769498 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084188587 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073679948 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.079641106 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.074394598 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073676294 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072950822 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082172584 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073866885 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072504284 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.09631099 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082403977 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081047546 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071091485 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.078100326 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.07385184 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.097260366 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.128567886 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.073064158 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079407498 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.078028788 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.082848048 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072998509 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.099140556 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.084960421 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.073061538 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076143419 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.070727399 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.072232172 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.075975109 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.075028096 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07561087 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.081718919 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.079012405 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.09701709 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.078046783 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089731275 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072817402 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.081121079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.072676897 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.075641924 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072188314 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.09882197 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.074674691 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.114149094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073882482 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.07403344 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.082750253 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.081016217 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.079732054 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.07308782 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.089453999 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.083624246 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.076620188 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.08122206 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.07463811 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.074416449 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.099418559 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073849001 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.072116222 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.071444944 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.075834945 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.072965139 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071791425 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082851843 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.072753097 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.075847799 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.089908265 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.073943514 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07487762 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.078738754 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.077835165 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.072947372 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.084364808 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.07758538 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.074385424 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.083186716 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.073411024 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.076325704 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.084910193 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.078931076 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.072110926 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.077020466 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.078482136 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.073621006 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.074357208 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.074114843 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.07485654 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.081402348 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.079797911 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.077629746 seconds)
  done (took 11.29699576 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.168757477 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.155148507 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.077121194 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.148072635 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.082754024 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.084883706 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.15008062 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.099273867 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07412578 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.074917221 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.07460906 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.113875114 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.109939811 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122196455 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.083550752 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.074466809 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.095965862 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.119307189 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.152809033 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.148105678 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.096456913 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.08227655 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.076071741 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.07486366 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.075953285 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.084235032 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.094195879 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.082988917 seconds)
  done (took 4.670353858 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.086202501 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.107701773 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.080839836 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.096234421 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.096121672 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.073527531 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.076086726 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.075586975 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.090083002 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.083309717 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.073378488 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.078650348 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.080510696 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.076633718 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.074503694 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.081073326 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080668821 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.075250475 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.077056434 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.078746638 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.084321087 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.097234757 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.077230043 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.073216513 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07873071 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.07334685 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.069297063 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.089309033 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.074351019 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.097849769 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.072387792 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.079177005 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.087172845 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.074653897 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.074042365 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073748363 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.074197623 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.073687996 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.075976388 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.074739158 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.072006918 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.063753939 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.072891187 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.084773962 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.086599021 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062722826 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.078679026 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.077898859 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.07847771 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.071094687 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.076674334 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.074066764 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.073578348 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077814904 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.074894247 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076213301 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072016508 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076508199 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07915667 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.071358901 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.069446905 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069495383 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076475568 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.069121804 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.086886347 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.076053037 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.070588598 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.071267356 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07255508 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.084473886 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.070971365 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.075881549 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.07013129 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.073711104 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.076163933 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073732643 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.07514626 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.072294718 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07272496 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.072459126 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.059709814 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.072895728 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057625251 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074491787 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069317436 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.069408078 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.07109158 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.075691065 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081887284 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.073531297 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.07896245 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073787918 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.071375909 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.076543968 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.066323613 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.076354207 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083554614 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085967144 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.070876694 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.069367763 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082796158 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.075691176 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.070784503 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.059518927 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.074732958 seconds)
  done (took 9.797231603 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.096608556 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.075710895 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.087811126 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09457398 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.091874704 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.080640384 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.082780515 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.075474474 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.089596788 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.079494982 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.082007567 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.074265259 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.084171574 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.08376037 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.075401684 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.083503288 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.077644803 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.088807989 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.08804502 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.073900667 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.081979181 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.086777136 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.094099876 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083673942 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082252214 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083768523 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091931598 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079493422 seconds)
  done (took 4.150232362 seconds)
done (took 40.321630511 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.842009356 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.995033059 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.825148197 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.168388207 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.164351379 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.846885669 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.919821183 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.824012207 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.147228746 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.864733276 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.121340082 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.900965781 seconds)
done (took 66.507438074 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.860996799 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.955678064 seconds)
    (2/2) benchmarking "String"...
    done (took 2.05968863 seconds)
  done (took 5.763414049 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.079258632 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.48108386 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.064603396 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.82183588 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.82413251 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.135947116 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.632090116 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.3382633 seconds)
  done (took 31.046051026 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.074708413 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.051086849 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.558578715 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.595761157 seconds)
  done (took 16.088284072 seconds)
done (took 64.803485026 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.817966175 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.865521608 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.856877965 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.802298229 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.879304301 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.830539259 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.222941364 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 8.073427127 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.816779036 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.813836388 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.822105398 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.254384349 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.83514587 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.304932759 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.81761556 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.832810623 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.84710302 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.351931747 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.978189701 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.832028353 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.825439593 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.882392205 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.82476647 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.833839856 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.822513079 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.8188652 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.228796669 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.828616341 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.685136104 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.826706711 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.876805538 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.878421651 seconds)
  done (took 206.934020364 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.823127559 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.912152197 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.989673821 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.847563128 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.384078488 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.999459039 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.930658167 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.548572075 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.821854498 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.82460484 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.139425761 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.822219805 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.183719377 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.771254616 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.85321207 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.905239878 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.108680252 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.142268595 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.851488283 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.973373065 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.843732035 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 4.0000812 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.943368613 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.056718588 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.864067547 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.89708936 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.830927057 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.84573788 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.021125059 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.044678751 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.836598675 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.869824877 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.023908963 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.69705086 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.837999706 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.847760036 seconds)
  done (took 173.043556569 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.015067239 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.826798778 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.825092661 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.824816865 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.831002974 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.826957431 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.949865448 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.94693578 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.440055772 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.474211379 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.87680381 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.825135943 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.617611765 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.821472683 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.893666574 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.835584088 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.824691725 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.841152797 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.851516796 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.828051969 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.825028615 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.952220215 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.836278615 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.823370818 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.832632511 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.824158403 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831319427 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.196691664 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.82119346 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.149622335 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.82710342 seconds)
    (31/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.832449595 seconds)
    (32/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.068253333 seconds)
    (33/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.823531736 seconds)
    (34/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.826827453 seconds)
    (35/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.684304384 seconds)
    (36/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.030736203 seconds)
    (37/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.904987936 seconds)
    (38/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.824596931 seconds)
    (39/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.83190923 seconds)
    (40/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.825457376 seconds)
    (41/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.046512176 seconds)
    (42/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.822589909 seconds)
    (43/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.827990877 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.826870148 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.827010409 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.829754685 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.975782772 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.827639597 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.949093397 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.828621404 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.311476182 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.823803698 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.827800226 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.864583901 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.418504707 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.823454661 seconds)
    (57/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.825843031 seconds)
    (58/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.831903941 seconds)
    (59/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.828679172 seconds)
    (60/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.827727701 seconds)
    (61/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.834009831 seconds)
    (62/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.86763881 seconds)
    (63/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.900480362 seconds)
    (64/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.82665968 seconds)
    (65/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.831611984 seconds)
    (66/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.833595089 seconds)
    (67/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.828531401 seconds)
    (68/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 22.006978604 seconds)
    (69/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.82928812 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.856330459 seconds)
    (71/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.885586201 seconds)
    (72/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 3.04821167 seconds)
    (73/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.949215218 seconds)
    (74/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.830165681 seconds)
    (75/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.828111888 seconds)
    (76/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.894761338 seconds)
    (77/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.919260635 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.823981025 seconds)
    (79/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.82870566 seconds)
    (80/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.829505768 seconds)
    (81/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.830252426 seconds)
    (82/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.907759145 seconds)
    (83/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.826040519 seconds)
    (84/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.956597373 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.834666062 seconds)
    (86/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.831226491 seconds)
    (87/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.881015602 seconds)
    (88/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.899467462 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.82455811 seconds)
    (90/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.686313953 seconds)
    (91/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.83164475 seconds)
    (92/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.828837104 seconds)
    (93/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.117075691 seconds)
    (94/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.891818443 seconds)
    (95/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.826500725 seconds)
    (96/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.831284809 seconds)
    (97/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.830108124 seconds)
    (98/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.956613238 seconds)
    (99/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.948353097 seconds)
    (100/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.562025471 seconds)
    (101/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.829899941 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.632218628 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.970599709 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.82700534 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.976987751 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.826674883 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.912862061 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.8321483 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.831653643 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.864395862 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.832651637 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.891624001 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.828312338 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.203514415 seconds)
  done (took 407.466673255 seconds)
done (took 791.269504643 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.454192288 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.415556801 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.519755002 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.43490189 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.413865581 seconds)
  done (took 13.993297935 seconds)
done (took 15.750481361 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.919046901 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.927487834 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.856097846 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.923127045 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.850856235 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.922088467 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.905893846 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.857583133 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.889629098 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.856063382 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.891368996 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.856344228 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.844248029 seconds)
  done (took 26.25592999 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.061509579 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.06510565 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.901632706 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.074224625 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.878786493 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.059170353 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.9946686 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.983525781 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.987349308 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.846955581 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.843326442 seconds)
  done (took 23.453798787 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.057654558 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.074109424 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.909626301 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.07179189 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.879979363 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.065611335 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.996769161 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.987963727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.981961956 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.847058968 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.843435717 seconds)
  done (took 23.471302915 seconds)
done (took 74.938309813 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.833667984 seconds)
  done (took 3.583564884 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.861069047 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.027944182 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.843778076 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.837371565 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.831788173 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.833626962 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.838190955 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.834643057 seconds)
  done (took 16.660703035 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.829787433 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.831326011 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.829141994 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.833728115 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.835671629 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.830797191 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.83129888 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.834740992 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.83524103 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.831582268 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.827914021 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.829062314 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.822726422 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.8241768 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.827152192 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.829173061 seconds)
  done (took 31.036706724 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.827027771 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.822461962 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.824217112 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.825711238 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.81821538 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.814793033 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.816103021 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.815009635 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.814927737 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.815216345 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.815197347 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.813461989 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.813988442 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.814466114 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.815387591 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.814974989 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.814810593 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.8153679 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.819855875 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.815919057 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.815269317 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.814806444 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.814498125 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.815517477 seconds)
  done (took 45.355559789 seconds)
done (took 98.39351722 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.564695028 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.452424516 seconds)
  done (took 9.752735407 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.822053845 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.819087599 seconds)
  done (took 5.441974191 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.817812171 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.817767249 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.819914621 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.818069211 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.817683543 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.818485575 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.818062439 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.817632958 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.817810045 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.817925085 seconds)
  done (took 19.920192033 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.816465208 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.817223382 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.817924075 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.818733241 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.818294992 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.815246037 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.818004556 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.817808272 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.820281975 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.813928843 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.818247282 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.81579143 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.819010808 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.81810888 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.818077083 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.815734028 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.81606311 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.814721113 seconds)
  done (took 34.446432811 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.823293019 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.817503704 seconds)
  done (took 5.378130847 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.81515586 seconds)
    (2/7) benchmarking "second"...
    done (took 1.815966417 seconds)
    (3/7) benchmarking "month"...
    done (took 1.81705123 seconds)
    (4/7) benchmarking "year"...
    done (took 1.815669668 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.817016672 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.816322952 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.817256848 seconds)
  done (took 14.451152477 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.820901807 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.963046319 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.031409702 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.480884776 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.819789083 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.826613307 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.777813334 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.822523196 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.825188906 seconds)
  done (took 20.106077156 seconds)
done (took 111.233581465 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.665645887 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.816026313 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.054190729 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.868313833 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.873836193 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.150273485 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.819843854 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.115351741 seconds)
done (took 43.102119182 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.837270716 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.461595268 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.753728485 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.871341593 seconds)
  done (took 15.818360789 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.791728393 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.34809361 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.857937941 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.476206929 seconds)
  done (took 20.209704461 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.177299229 seconds)
    (2/2) benchmarking "read"...
    done (took 2.165193401 seconds)
  done (took 6.079259298 seconds)
done (took 50.677819575 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.81219045 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.811059692 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.813482823 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.809089785 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.812065954 seconds)
    (6/24) benchmarking ("zero", "Float64")...
    done (took 1.810512073 seconds)
    (7/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.809424795 seconds)
    (8/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.811805407 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.81356642 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.812610638 seconds)
    (11/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.808940974 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.810941709 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.81229527 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.812525805 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.810336134 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.808209682 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.813039561 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.810102182 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.809023625 seconds)
    (20/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.810336953 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.809588525 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.813535575 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.810295415 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.810765755 seconds)
  done (took 45.195167073 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.808207955 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.804985241 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.805660464 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.806170477 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.804538801 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.810869983 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.803647458 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.799908411 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.803114371 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.802858184 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.79950659 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.803440711 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.801990125 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.799433141 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.801767242 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.799103575 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.804009822 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.798765061 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801170068 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.798674465 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.799520542 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798597362 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.801399044 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.799402425 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.797493857 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.797093363 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.79923139 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.80075056 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.799232754 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.797022736 seconds)
  done (took 55.780210061 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.80513855 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.80843711 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.803634379 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.843340086 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.839953242 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.798123559 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.798323209 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.802590656 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.797391731 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.798130423 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.797123703 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.797158126 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.797434119 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.797355323 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.797867449 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.796408369 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.798876245 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.799707777 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.796616595 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.800172608 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.800013365 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.799506612 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.79692968 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.797885331 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.799329355 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.799063669 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.797338103 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.797634052 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.796586855 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.798375508 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.798197934 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.797426952 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.79769833 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.797445301 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.797403998 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.79998619 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.8015349 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.805424819 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.798666107 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.798568876 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.797257783 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.799772002 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.797929504 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.797272391 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.796931134 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.797683819 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.80019225 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.798240416 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.798580676 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.797399719 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.798266168 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.797973606 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.798359862 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.797158087 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.798790774 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.798942588 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.799318342 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.798701812 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.799798996 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.797488684 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.798329571 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.798559709 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.798985214 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.80282984 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.798665427 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.807034286 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.797832156 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.798859782 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.795962067 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.800094562 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.796883216 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.798779974 seconds)
  done (took 131.328230358 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.797184372 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.795847233 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.794454393 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.795056592 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794739355 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.797209608 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.795664111 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799591866 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.79396646 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.797633383 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796349772 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.79394087 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.798728656 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.796853023 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796855704 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.794861476 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.797376565 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.795068388 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.798900158 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796887814 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795571861 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793001247 seconds)
  done (took 41.233856009 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.79770787 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.798327967 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.794594758 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.797277186 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.795991897 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.796495304 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.799448217 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797668145 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.79768671 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.792939341 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793583459 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796508971 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799395632 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794685266 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.794814825 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.79307617 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.794948092 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.794580364 seconds)
  done (took 34.045138151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.793312798 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.793193967 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.796449107 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793489479 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.79684468 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.795847676 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.794840494 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.796354993 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.797787623 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.79757484 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.795390951 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.797356072 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.797400945 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793478169 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.79633033 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.794940218 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.796471122 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.793631798 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796938899 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.793246924 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.794335702 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79869591 seconds)
  done (took 41.219847062 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796701578 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798669388 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.793831117 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.797698054 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.794045856 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.797015732 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.796808163 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.794604813 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.798615963 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.801500583 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.794648956 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.797470505 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.794134284 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.795664169 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.796666124 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.793975882 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.798192909 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.795276634 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797173245 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.793734709 seconds)
  done (took 37.641986359 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.799191026 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.797853015 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.798607437 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.798728602 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798623595 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.799940052 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.799040145 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799032211 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.799199709 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.800146348 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.801380475 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.7974281 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.79847728 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.797344976 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800302628 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.798256767 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.802405381 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.798429014 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.796876395 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.797853399 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.799816774 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.79868667 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.798526786 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.797055715 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.799681167 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.80003061 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.79864691 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.802040886 seconds)
  done (took 52.096041471 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.796762876 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.797203395 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.793719971 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.799154353 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.794512437 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.794021496 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.794270327 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.795518193 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.79578897 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797870797 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.797225549 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.797763707 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.799621216 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.797806091 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.797791329 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.797659111 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796713857 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.795417058 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.79462467 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794287688 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.801595301 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799042249 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.797103197 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.796592588 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.794618244 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.798787395 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.798904134 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.796076086 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798328023 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795097904 seconds)
  done (took 55.621748087 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.818672609 seconds)
    (2/2) benchmarking "in"...
    done (took 1.816452426 seconds)
  done (took 5.351563649 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.796724546 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.798358619 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.79796563 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.79871348 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.796663461 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.800411778 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.799540204 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.798159742 seconds)
  done (took 16.105906063 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.797349421 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.800455163 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.799418017 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.798284066 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.799854977 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.802812129 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.805742411 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.801398791 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.799453462 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.800226208 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.803921447 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.807406381 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.802328536 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.802937752 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.801378869 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.801316343 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.805516963 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.801067553 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.800659304 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.800641264 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.801573114 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.803519086 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804554829 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.797236237 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.801323289 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.810833169 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.806573754 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.801928449 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.799993902 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.804884905 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.800544559 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.79808118 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.802710163 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.803374886 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.802220087 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.803907835 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.809899903 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.803891699 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.808732383 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.80429309 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.802834572 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.800665686 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.803456389 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.803042699 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.805111278 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.802624341 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.802787221 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.799218922 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.801367841 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.807133853 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.806593427 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.801646809 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.801722344 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807258019 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.804004359 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.811919609 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.803696252 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.804220197 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.810307798 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.810471893 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.817005433 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.81162148 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.804827655 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.803918984 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.811210478 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.824396449 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.812318679 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.801170987 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.800692934 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.803251908 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.811715277 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.818666755 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.812707818 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.803898738 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.802685704 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.803821989 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.803550422 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.805193126 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.811334799 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.807807559 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.804484593 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.804266813 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.813097492 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825745239 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.803115645 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.804544481 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.805721516 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.805305224 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.806763012 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.815506401 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.803352253 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.804918267 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.804786278 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.803645181 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.811454551 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.805766917 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.805773729 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.805790692 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.803469653 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.807968938 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805552401 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.808168041 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.813486209 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.806697875 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.806001134 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.814895571 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.806151118 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.806254964 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.812600071 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.805237132 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808599637 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.805416241 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.811052544 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.803412415 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.809249203 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.813579147 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.807638284 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.807409507 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.806664427 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.805362155 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.814510536 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.829322037 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.806747748 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.807358035 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.809916989 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.817170772 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.805665285 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.812259942 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.807937768 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.804268127 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.803935177 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.809089896 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.810304072 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.807062999 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.808519143 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.807690918 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.803249285 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.807175606 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.811842322 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.810152722 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.808597019 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.807997236 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.808684 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.811121647 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.809939067 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.808186081 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.816459603 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.808909116 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.807938838 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.812323101 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.806598501 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.807434567 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.808730997 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.808061348 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.811972279 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.809777378 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.807976241 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.809450928 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.809806718 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.808386992 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.810717852 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.810277397 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.812866461 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.810419407 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.813424093 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.812386592 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.805049661 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.815338114 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.809439399 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.808653994 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.808198467 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.812315218 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.812330085 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.814561274 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.809323692 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.80984276 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.812122428 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.81171114 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.809065067 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811484574 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.81230961 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.816326417 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.811452183 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.817451755 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.809509679 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.810997867 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.8103769 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.809147475 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.811539642 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.810836438 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.812517141 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.817452311 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.822264918 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.822308306 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.812753885 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.813585895 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.810987851 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.814667541 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.814760576 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.810194606 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.810869576 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.809926499 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.809957688 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.812711106 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817179251 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.810458176 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.81178439 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.811968422 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.812113805 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.813674018 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.81247585 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.81353859 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.81264918 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.809931405 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.811065538 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.814400346 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.812117203 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.80974948 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.810891716 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.811730682 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.811598502 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.814824701 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.818087258 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.810342473 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.811322504 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.813548156 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.815219862 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.811318042 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.812144435 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.814441911 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.810531894 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.819353411 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.814523697 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.81370637 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.817777278 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.813690299 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.813771262 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.818121986 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.812940629 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.81030182 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.814548626 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.820138335 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.812667958 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.815691708 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.814268278 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.812480081 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.814716972 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.818430532 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.812353696 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.813306642 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.813095898 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.814833146 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.812033607 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.814296866 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.814697102 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.814427579 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814564329 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.814953338 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.814001556 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.818017809 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.814132747 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.814726089 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.81571361 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.817041759 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.821448719 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.823240224 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.814468354 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.81889019 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.81505607 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.819485089 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.816057719 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.815169556 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.814992978 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.826453099 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.823838364 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.821058261 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.819996411 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.817001156 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.820050381 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.816575152 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.817119271 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.816870546 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.815302501 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.814659311 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.816796975 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.812272978 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.815379887 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.818890374 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.81697249 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.815609195 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.820010809 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.814687673 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.816720172 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.816545475 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.815526712 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.816781844 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.816756973 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.81705806 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.820894912 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.818071085 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.81703845 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.817121626 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823417256 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.818345247 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.816651884 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.816114262 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.816228836 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.818042958 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.818365921 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.819777055 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.818972155 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.823930495 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.820490075 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.823865382 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.818815969 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.825437375 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.816363429 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.81974505 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.824114347 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.815060556 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.816229889 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.817623441 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.819041224 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825355407 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.817976242 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.822349777 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.820955953 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.818014649 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.819606498 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.818748551 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.817023787 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.819934407 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.819860155 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.827150613 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.820127238 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.821243421 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.822647928 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.815136724 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.818750635 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.819081195 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.81660789 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.821661953 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.820931805 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.819555479 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.818949719 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.818558098 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.819221468 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.820026357 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.817651832 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.814049536 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.816902521 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826747137 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.81982689 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.826330275 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.818293457 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.82743967 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.819833577 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.826653846 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.8219208 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.820945927 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.820645689 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.81926366 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.822311741 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.818223237 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.822780457 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.821406286 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.820398386 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.823718214 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.820716201 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.823625703 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.821921974 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.821165699 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.820306487 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.827649522 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840821626 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.82454454 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.824250097 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.81858082 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.823126126 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.82354819 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.823370583 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.820217902 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.823310047 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.830689746 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.828414777 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.822018258 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.82378914 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.822246527 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.821700598 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.821186079 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.822271059 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.823543374 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.822374279 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.822811494 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.82152641 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.825020524 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.822400042 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.825209664 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.825643268 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.821061804 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.831144784 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.821251479 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.823911978 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.823307244 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.821080753 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.823263051 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.821736667 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.821878076 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.825356666 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.823062874 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.823353919 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.828589987 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.826397249 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.826515831 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.82073307 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.821879308 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.82209743 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.823249078 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.824269539 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.823396024 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.823924683 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.824862192 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.823246825 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.823986101 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.821791722 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.823174883 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.822808117 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.822024671 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.825200302 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.83084745 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.823883128 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.821730164 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.823322595 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.824716628 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.823099789 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.825810211 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.831631419 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.82677096 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.832288651 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.830837415 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.828384554 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.824856919 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.825771558 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.83098929 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.823916381 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.824626448 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.825643498 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.825883894 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.825564037 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.826647026 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.824426253 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.831984972 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.824642736 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.824562571 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.834909937 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.8260737 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.825271523 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.826396011 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.826227122 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.825266026 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.821749723 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.826093049 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.824692095 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.830887333 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.82617247 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.82489682 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827121328 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.825157587 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.828185703 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.828060259 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.824623882 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.827036521 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.822571652 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.828354036 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.826727705 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.82742761 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.822277051 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.824419446 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.824886348 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.827905174 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.832300324 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.823080787 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.827672657 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.82609619 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.828526982 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.825425433 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.827042581 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.824460713 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.823075314 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.825484972 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830576337 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.824939575 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.829098068 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.825177359 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.827754525 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.827435047 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826638407 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.827925683 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.835541463 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.834645718 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.822990805 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.830350927 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.827645494 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.829249476 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.827985285 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.826626495 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.829417894 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.827694633 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.826950804 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.827526802 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.828882364 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.828935915 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.844322897 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.828477834 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.826299298 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.828080282 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.830809283 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.828977195 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.825142155 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.827504809 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.83305013 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.829177812 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.833820443 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.829075034 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.835625802 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.830331111 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.828763886 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.830515608 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.831580478 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.835373164 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.829773926 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.827846322 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.830033518 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.834879698 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.844090402 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.830092558 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.838234912 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.85671896 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.829346044 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834449624 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.829280922 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.828770944 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.829218607 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.830450215 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.832997826 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.828944943 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.831033514 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.829973068 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.830450063 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.834537322 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.832048772 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.830949545 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.831472809 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.829251445 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.82999907 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.826611382 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.829127766 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.830366278 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.830230624 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.829243774 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.830484653 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.831246086 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.842320416 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.839728677 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.82905462 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.830374475 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.830569652 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.833515626 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.832028749 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.839937994 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.835720483 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.830145849 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.832889266 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.831722854 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.832192542 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.826816505 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.830452244 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.832241399 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.831297942 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.826867872 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.842857584 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.839499359 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.837767613 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.833918846 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.831587133 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.829843202 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.831489459 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.83267619 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.835988002 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.832343506 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.832106597 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.834121277 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.830178801 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.833618206 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.834007176 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.839627905 seconds)
  done (took 1085.362548373 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.829318382 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.830187988 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833634893 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.831257754 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.829493109 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.828346642 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.829250378 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.831232056 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.829096716 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.829808969 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.831730756 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.829893968 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.830007483 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.831973931 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.831724619 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.828813897 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.830260205 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.829531443 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833943022 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.830584703 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.829089748 seconds)
  done (took 40.191403765 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.83288628 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.829597016 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.832776112 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.833087496 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.830565292 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.833061377 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.830462986 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.833679272 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.833895849 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.83150768 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.834941683 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.833882198 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.830042263 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.830159343 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.829827812 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.833791153 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.833998285 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.830374994 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.835118036 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.830255191 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.833534793 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.832229453 seconds)
  done (took 42.060857407 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.833408069 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.837167721 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.833308342 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.830646141 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.833493646 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.831620743 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.837360681 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.834876039 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.834087597 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.835771482 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.834783994 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.835460224 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.840629256 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.838559732 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.837148199 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.835641746 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.980375419 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.836029395 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.836389576 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.842510623 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.832894799 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.841791094 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.834037417 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.832639431 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.836191088 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.834627485 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.834151628 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.835425879 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.836247135 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.836225182 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.839698235 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.834959025 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.835221863 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.839557225 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.834827231 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.836619379 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.838622081 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.836505658 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.833239229 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.837770327 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.844832687 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.852521222 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.835960432 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.843224102 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.839658331 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.837121084 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.83709603 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.843993394 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.832568068 seconds)
  done (took 91.900832085 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.836452064 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.836133721 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.834628603 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.838509365 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.835496643 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.83753242 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.83771979 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.836025139 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.834384338 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.83496519 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.838140669 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.835012899 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.834010954 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.838009344 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.837109224 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.834113546 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835702901 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835333391 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.833569271 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.836022066 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.836122642 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.837957987 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839171655 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.835579609 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.837351648 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.834448521 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.83563353 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.837686982 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.835103233 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.834717822 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.836761195 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.837145571 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.839382059 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.836552691 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837666301 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.839506588 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.838279797 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.834960739 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839856117 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.835568166 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.839764272 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.838322186 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.837770433 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.839139769 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.836393086 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.836751599 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.835308281 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.837093189 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.837898766 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.840070083 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.84077726 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.835299634 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.838941553 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.836356469 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.839094416 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.839976097 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.836561161 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.837203521 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.838803485 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.837329626 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.839367859 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840044601 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.837454198 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.837930868 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.84016646 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.838991229 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.838260634 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840089674 seconds)
  done (took 126.687017897 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.841747149 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.841963135 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.840619889 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.841407661 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.839735313 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.840578606 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.84074416 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.842248232 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.841476889 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.842152938 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.840984912 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842319995 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.843618843 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.841523796 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.840864428 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.84093903 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.840764426 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.843285201 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.841028379 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.840575445 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.841784305 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.841363657 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.842263477 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842523669 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.841101612 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.842809789 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.842255982 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.843299204 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.842834837 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.842412695 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.842685592 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.842987924 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.840805681 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843874788 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.844835178 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.842274281 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.842603021 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843009273 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.845013897 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.84280472 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.842195898 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.84287235 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.843108832 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.843422906 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843047645 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.842194936 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.842353894 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.843550164 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.84261763 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.842387635 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.843685164 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.843572359 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.843773356 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.843274378 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.843491499 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.843559268 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.843702628 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.844086562 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844885567 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.846512716 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.844622152 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.844996216 seconds)
  done (took 116.001093278 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.843072537 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.845180443 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.841211455 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.840289838 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.842559617 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.839787296 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845107457 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.843486874 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.844157854 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.844920171 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.844334368 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.840077759 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.841782795 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.841459233 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.84269485 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.842489865 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.842121071 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.842146392 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.842677671 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.842255617 seconds)
  done (took 38.61532196 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.842375651 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.845827699 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.842068669 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.842666898 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.846105614 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.842373279 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.844221876 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845956374 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843199406 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844405758 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.846225664 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846474321 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.8421316 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.843276896 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.844441647 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.843689419 seconds)
  done (took 31.268366675 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.843090486 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.844724327 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.846076661 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.846645092 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.845000258 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.843030441 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.845074657 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.843986636 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.843497967 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.84807209 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.847024311 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.846497708 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.846118825 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.845786086 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.84619862 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.847413531 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.842935841 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.843386199 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.845585083 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.84773906 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.844705691 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.845074011 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.845823237 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.846136614 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.845554669 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.845939735 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.843589838 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.846768762 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.845243728 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.846581194 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.843236525 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.847005975 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.845202708 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.845442547 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.847533624 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.844407488 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.846752562 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.846395335 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.84702623 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.847083752 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.846823931 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.845704244 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.848635378 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.848044859 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.846106925 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.846942777 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.844350766 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.845622255 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.845471357 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.846186129 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.848342024 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.847697683 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.848660965 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.848208996 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.848517024 seconds)
  done (took 103.293460106 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.8485593 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.848971555 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.846418976 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.848593021 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.848071563 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.844931069 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.847967749 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.847958145 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.845321579 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.847650383 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.847853126 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.849067369 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848138486 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.851238986 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.846934458 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.848542782 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.845048458 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.847861683 seconds)
  done (took 35.026274079 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.848338948 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.847258653 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.849886176 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.846411744 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.846222479 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.853496762 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.846701124 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.849795611 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.850961253 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.846760836 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.84731194 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.850439793 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.85003569 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.849630052 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.847021752 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.84943392 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.850790343 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.850827624 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.847471057 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.847363965 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.849858279 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.852403466 seconds)
  done (took 42.449036661 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.84933405 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.849026984 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.86502264 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.869711346 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.868851997 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.880680379 seconds)
  done (took 12.950964521 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.847986773 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.849670035 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.850798575 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85017472 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851489752 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.846846197 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849311271 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850107561 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852607295 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.848840298 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849816709 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851937543 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851308215 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.84971419 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853399459 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853423212 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.849485375 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.84855905 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848814251 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85309012 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851001483 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85138737 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849437044 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850151796 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.847890329 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85091465 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853849695 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.849399399 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.848703036 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85311889 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851531021 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.847665556 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853380304 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.850267348 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853764021 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853538554 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.849243979 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853508107 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85159178 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850738276 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852484118 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854135354 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852562471 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850378092 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853102314 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851766047 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851781949 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851796788 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.849978203 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85398158 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853732196 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85044381 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852556964 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852782559 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854508208 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.851928183 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.850799787 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851113176 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854171343 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851141262 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850459114 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855418595 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852418621 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85106325 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85349813 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851071647 seconds)
  done (took 123.958590385 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85088809 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.852130889 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852747196 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852262188 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851567742 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85320145 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851671332 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85161718 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.851566975 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852748498 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857452816 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851352705 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853042635 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852325335 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851811114 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851579236 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852760776 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852022439 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852122608 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857378225 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852349527 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852590359 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853227569 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851626644 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853063723 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.856554963 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.85220724 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852537137 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.8523097 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853172529 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85205017 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.852669837 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854211629 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.852867752 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853941724 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852645808 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852853103 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854547111 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853440639 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857888027 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854645127 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.85565132 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.853603144 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854364461 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856503385 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85617651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853673655 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854125515 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854179359 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854706344 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85515778 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855109408 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854759921 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854396512 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85477244 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854878717 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.855637904 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855650618 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.855132356 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857910203 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855859198 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856194092 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858192338 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854973478 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855463193 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856974808 seconds)
  done (took 124.132058276 seconds)
done (took 2531.2518478 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.87734362 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.882990722 seconds)
  done (took 15.535092019 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.020133495 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.973399041 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.857988894 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.886737825 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.856138826 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.878422371 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.877672837 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.854477882 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.859389699 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.859041312 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.85866819 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.043602563 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.914989289 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.855277163 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.858667087 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.950700457 seconds)
  done (took 52.188302035 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.862416658 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.863604532 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.874034392 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.863584373 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.862484709 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.874821605 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.897139418 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.86365508 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895726935 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.876904675 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.927788716 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.870176581 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.863596527 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.909386293 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.875512805 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.87695126 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.95623848 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.931401023 seconds)
  done (took 35.7256564 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.936702284 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.859168937 seconds)
  done (took 10.581038809 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.864521958 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.875615386 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.882739198 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.884741931 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.871948086 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.851591163 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.856060495 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.897649454 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.859382985 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.887735129 seconds)
  done (took 70.517859887 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.870793751 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.865819528 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.865570185 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.863252596 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.857993071 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.858331878 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.863605258 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.86625284 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.514534489 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.895802189 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.871727052 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.869896002 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.86582473 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.867035396 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.863338914 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.889317331 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.955880632 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.862636922 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.865824555 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.870075495 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.86429434 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.921730977 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.878020901 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.869499753 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.894322758 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.518150066 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.869681746 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.873265505 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.952640297 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.863642581 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.865095757 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.867753782 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.869527122 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.233468605 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.140786563 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.863626133 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.876967413 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.87394413 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.864291982 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.960018293 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.866497932 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.877195679 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.514508852 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119761208 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.979035202 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.909090984 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.172491331 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.878411367 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.871860348 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.894378974 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.868998449 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.868869566 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.878864536 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.347206851 seconds)
  done (took 131.860822254 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.864131997 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.213820617 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.032846453 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.863790285 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.149039471 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.070031643 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.862130587 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.911386497 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.861339816 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.0963162 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.118582585 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.969891046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.860247743 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.864700588 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.862043161 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.859162086 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.022144654 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.937961872 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862971837 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.862324505 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.893504013 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.106846274 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.984319183 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.867077973 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.893398162 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.07612056 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.986513807 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.970734284 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.798397284 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.862857088 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.929444523 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861550377 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.867672058 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.860377887 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.021950409 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.961042092 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.947942609 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.862156531 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.865354098 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.862906438 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.536109538 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.068358308 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.959393305 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.003067761 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.064611077 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.071220888 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.645625255 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.864989201 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.605890277 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.032076708 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.093152626 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.099203435 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.983762264 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.865754829 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.394625224 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.863141039 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.863869451 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115073877 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.00619407 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.963779091 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.863778375 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.867357931 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.862910198 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.112806215 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.865874809 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.961166002 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864946513 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.862598796 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.965138659 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.963497219 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.002672574 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.07671259 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.894714248 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.84175816 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.411119629 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.114355491 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.931193106 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.11444267 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.865122835 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.863290974 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.946550909 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.707063305 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.122878901 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.115411491 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.117616738 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.899948231 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.595149235 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.865408159 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.096506747 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.087228978 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.124306442 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.073874574 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.106617997 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.195493869 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.864692384 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.871564076 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.079695776 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.001035026 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.868040484 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.218928956 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.09871296 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.41259616 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.887744097 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.176447572 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.996931076 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.869690776 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.509708996 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.868864359 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.101720999 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90857554 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.864714846 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.8684062 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.085599467 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.856146076 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.867993337 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.513097682 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.930344512 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.866696127 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.102636234 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.866695839 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140287023 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866549312 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.109578469 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.913525669 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.901613892 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.096904977 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.074025649 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.86894503 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.113546374 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.11156807 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.981405438 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.090224471 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.562191094 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.868233666 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.157866016 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.866548003 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.867185023 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.040784398 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.869899957 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.013775704 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.870495465 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.164618069 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890518262 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.101765978 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870677161 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.127560114 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.902058886 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.920332819 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.869717161 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.003472913 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.871601538 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.706209621 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.03290674 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.870668964 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.867975261 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.791970344 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.868503232 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.020513757 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.102542143 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.891181845 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.942776854 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.538379512 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.871138876 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.952445585 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.891726317 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.263841825 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.871747907 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.124861509 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.872703687 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.871700014 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.872314219 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.119777042 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.053964161 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.874486764 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.873221684 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.781126392 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.872822127 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870553501 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.055753482 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.229201861 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.86952742 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.075432097 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.872715871 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.998004943 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.874679457 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.943338548 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.218323693 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.870764191 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.876925443 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.872250964 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.8726346 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.880642461 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.137794591 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.904688005 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.390077538 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.013487432 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.149204012 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.182749911 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.124423728 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.91446468 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.871804229 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.129104977 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.872668458 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.937159535 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.870321082 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.896078379 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.102091455 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873138846 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.084972524 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.148921885 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.725217218 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921862555 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.872472131 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.873802399 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.871501277 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.021505783 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.961203975 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.873005941 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.873079815 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.989661528 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995661087 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.082620917 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.872506508 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.075710777 seconds)
  done (took 903.339101062 seconds)
done (took 1221.523256307 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.873213379 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.869281657 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.857883184 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.872479192 seconds)
  done (took 29.266482841 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.880508908 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.878922959 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.87830421 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.87686193 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.881720461 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.876492195 seconds)
  done (took 13.067404231 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.332842024 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.870535581 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.873425053 seconds)
  done (took 21.872452323 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.951187244 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.25853789 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.982811898 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.294530175 seconds)
  done (took 10.284146191 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.880682899 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.880342825 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.880199303 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.882278443 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.882670119 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.88399657 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.882808427 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.881524378 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.883451273 seconds)
  done (took 18.735669978 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.003720521 seconds)
done (took 99.024283981 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.019019258 seconds)
    (2/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.218404203 seconds)
    (3/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.548943848 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.927915478 seconds)
    (5/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.871693696 seconds)
    (6/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.854998323 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 3.175024168 seconds)
    (8/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.1033857 seconds)
    (9/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.26896035 seconds)
    (10/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.226246152 seconds)
    (11/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.314773271 seconds)
    (12/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.904644125 seconds)
    (13/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.966836312 seconds)
    (14/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.896956968 seconds)
    (15/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.859621161 seconds)
    (16/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.145372059 seconds)
    (17/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.895643638 seconds)
    (18/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.435405211 seconds)
    (19/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.094762727 seconds)
    (20/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.29716118 seconds)
    (21/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.940383989 seconds)
    (22/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.002996902 seconds)
    (23/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 7.742898401 seconds)
    (24/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.255215281 seconds)
    (25/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.046329433 seconds)
    (26/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.764278546 seconds)
    (27/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.040231161 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.946813583 seconds)
    (29/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.95456896 seconds)
    (30/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.344630642 seconds)
    (31/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.699254829 seconds)
    (32/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.861501959 seconds)
    (33/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.722065626 seconds)
    (34/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 7.032682506 seconds)
    (35/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 2.005581086 seconds)
    (36/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.888729108 seconds)
    (37/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.406138299 seconds)
    (38/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.006287012 seconds)
    (39/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.015492059 seconds)
    (40/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.875783109 seconds)
    (41/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.986552909 seconds)
    (42/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.185697042 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.106674661 seconds)
    (44/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.987493142 seconds)
    (45/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.996858551 seconds)
    (46/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.891723198 seconds)
    (47/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.890503408 seconds)
    (48/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.724522688 seconds)
    (49/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.457477944 seconds)
    (50/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.047166653 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.063564832 seconds)
    (52/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.98428741 seconds)
    (53/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.890903711 seconds)
    (54/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.010105461 seconds)
    (55/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.000517697 seconds)
    (56/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.141115442 seconds)
    (57/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.984653563 seconds)
    (58/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.890273465 seconds)
    (59/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.858968617 seconds)
    (60/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.182912674 seconds)
    (61/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.86746977 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.881262173 seconds)
    (63/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.475261716 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.903248858 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.549916487 seconds)
    (66/309) benchmarking ("sort", Bool, false)...
    done (took 2.122106507 seconds)
    (67/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.281831519 seconds)
    (68/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.168849376 seconds)
    (69/309) benchmarking ("sort", Int64, false)...
    done (took 5.594235346 seconds)
    (70/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.920367903 seconds)
    (71/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.989584189 seconds)
    (72/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.142047287 seconds)
    (73/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.915938605 seconds)
    (74/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.056019886 seconds)
    (75/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.923197797 seconds)
    (76/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.880254238 seconds)
    (77/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.12539443 seconds)
    (78/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.914701004 seconds)
    (79/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.954658488 seconds)
    (80/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.067343174 seconds)
    (81/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 6.041033803 seconds)
    (82/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.964278062 seconds)
    (83/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.943552083 seconds)
    (84/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.98734059 seconds)
    (85/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.276149556 seconds)
    (86/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.978734141 seconds)
    (87/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.959591678 seconds)
    (88/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.985038017 seconds)
    (89/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.913199197 seconds)
    (90/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.893349155 seconds)
    (91/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 7.005734007 seconds)
    (92/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 2.006506418 seconds)
    (93/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.029862448 seconds)
    (94/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.917792481 seconds)
    (95/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.908648835 seconds)
    (96/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.271638272 seconds)
    (97/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.360762346 seconds)
    (98/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.924015131 seconds)
    (99/309) benchmarking ("sort", Int8, false)...
    done (took 4.790706287 seconds)
    (100/309) benchmarking ("sort", BigInt, false)...
    done (took 6.891997895 seconds)
    (101/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 2.013638504 seconds)
    (102/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.895037324 seconds)
    (103/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.961227525 seconds)
    (104/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.332875254 seconds)
    (105/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.879875239 seconds)
    (106/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.877715109 seconds)
    (107/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.278639145 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.903506634 seconds)
    (109/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.986228182 seconds)
    (110/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.826781334 seconds)
    (111/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.999394157 seconds)
    (112/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.919304407 seconds)
    (113/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.050308738 seconds)
    (114/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.896990909 seconds)
    (115/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.259083192 seconds)
    (116/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.908670594 seconds)
    (117/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.172139928 seconds)
    (118/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.963517551 seconds)
    (119/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.961859762 seconds)
    (120/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.890492749 seconds)
    (121/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 3.522934953 seconds)
    (122/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.242295958 seconds)
    (123/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.986493481 seconds)
    (124/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.416691338 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.125993533 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.704022545 seconds)
    (127/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.896415853 seconds)
    (128/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.951445238 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.701148528 seconds)
    (130/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.000729008 seconds)
    (131/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.106113185 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.090492755 seconds)
    (133/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.027039285 seconds)
    (134/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.916160171 seconds)
    (135/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.318441583 seconds)
    (136/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.142294351 seconds)
    (137/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.915242962 seconds)
    (138/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.073080113 seconds)
    (139/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.991194165 seconds)
    (140/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.124404861 seconds)
    (141/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.879205289 seconds)
    (142/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.251799176 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.972813738 seconds)
    (144/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.923714335 seconds)
    (145/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.033742875 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.190728983 seconds)
    (147/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.918877645 seconds)
    (148/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.51107369 seconds)
    (149/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.403250388 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.150203334 seconds)
    (151/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.80451628 seconds)
    (152/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.98346275 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.138025276 seconds)
    (154/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.962719758 seconds)
    (155/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.023546066 seconds)
    (156/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.894528412 seconds)
    (157/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.930008302 seconds)
    (158/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.207085801 seconds)
    (159/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.92429673 seconds)
    (160/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.1798278 seconds)
    (161/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.483644334 seconds)
    (162/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.916512107 seconds)
    (163/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.9103623 seconds)
    (164/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.396248781 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.217707292 seconds)
    (166/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.070776564 seconds)
    (167/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.28550607 seconds)
    (168/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.907464345 seconds)
    (169/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.145767186 seconds)
    (170/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.222629575 seconds)
    (171/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.052739591 seconds)
    (172/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.175250923 seconds)
    (173/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.539890121 seconds)
    (174/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.063689112 seconds)
    (175/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.892011898 seconds)
    (176/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.920230144 seconds)
    (177/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.881591054 seconds)
    (178/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.9866477 seconds)
    (179/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.990576739 seconds)
    (180/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.316878605 seconds)
    (181/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.87830593 seconds)
    (182/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.83792183 seconds)
    (183/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.309503496 seconds)
    (184/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.614671864 seconds)
    (185/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.895292591 seconds)
    (186/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.985076918 seconds)
    (187/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.726787871 seconds)
    (188/309) benchmarking ("sort", Float32, false)...
    done (took 5.625441939 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.178393471 seconds)
    (190/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.517737452 seconds)
    (191/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.857170756 seconds)
    (192/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.944196657 seconds)
    (193/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.901300863 seconds)
    (194/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.908970029 seconds)
    (195/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.072737056 seconds)
    (196/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.92430087 seconds)
    (197/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.894599078 seconds)
    (198/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.035089974 seconds)
    (199/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.139439326 seconds)
    (200/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 3.199080298 seconds)
    (201/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.098625282 seconds)
    (202/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.23686054 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.167653621 seconds)
    (204/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.019921974 seconds)
    (205/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.91070668 seconds)
    (206/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.89555118 seconds)
    (207/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.187499752 seconds)
    (208/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.955109948 seconds)
    (209/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.198519823 seconds)
    (210/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.968527739 seconds)
    (211/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.977449659 seconds)
    (212/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.412964734 seconds)
    (213/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.441947008 seconds)
    (214/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.125569805 seconds)
    (215/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.807275283 seconds)
    (216/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.99909642 seconds)
    (217/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.00079473 seconds)
    (218/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.983710589 seconds)
    (219/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.733076492 seconds)
    (220/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.085764696 seconds)
    (221/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.271763246 seconds)
    (222/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.882338809 seconds)
    (223/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 7.070975921 seconds)
    (224/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.357262356 seconds)
    (225/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.250972908 seconds)
    (226/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.999089719 seconds)
    (227/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.792383837 seconds)
    (228/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.419450482 seconds)
    (229/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.092781674 seconds)
    (230/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.897444903 seconds)
    (231/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.25805235 seconds)
    (232/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.235253608 seconds)
    (233/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.564163042 seconds)
    (234/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.151667748 seconds)
    (235/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.993209294 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.074449435 seconds)
    (237/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.192943936 seconds)
    (238/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.925051806 seconds)
    (239/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.084491259 seconds)
    (240/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.912462175 seconds)
    (241/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.244652429 seconds)
    (242/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.138088683 seconds)
    (243/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.124997015 seconds)
    (244/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.031078908 seconds)
    (245/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.200474426 seconds)
    (246/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.044955344 seconds)
    (247/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.896844997 seconds)
    (248/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.051542994 seconds)
    (249/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.031324322 seconds)
    (250/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.097808681 seconds)
    (251/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.896428356 seconds)
    (252/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.987300542 seconds)
    (253/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.244965999 seconds)
    (254/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.058016128 seconds)
    (255/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.821090517 seconds)
    (256/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.965170501 seconds)
    (257/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.897463406 seconds)
    (258/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 3.172140286 seconds)
    (259/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.940183693 seconds)
    (260/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.96801924 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.287023639 seconds)
    (262/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.902706954 seconds)
    (263/309) benchmarking ("sort", Float64, false)...
    done (took 5.76131985 seconds)
    (264/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.121956165 seconds)
    (265/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.234413785 seconds)
    (266/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.186921448 seconds)
    (267/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.902737625 seconds)
    (268/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.000031325 seconds)
    (269/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.134283956 seconds)
    (270/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.967790892 seconds)
    (271/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.261806488 seconds)
    (272/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.226060987 seconds)
    (273/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.889934096 seconds)
    (274/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.978022934 seconds)
    (275/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.040299232 seconds)
    (276/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.085725086 seconds)
    (277/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.883990573 seconds)
    (278/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.870190578 seconds)
    (279/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.17655885 seconds)
    (280/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.936967062 seconds)
    (281/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.685659261 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.881973955 seconds)
    (283/309) benchmarking ("map", identity, Float64, false)...
    done (took 3.033435938 seconds)
    (284/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.885420286 seconds)
    (285/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.217568917 seconds)
    (286/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.971346673 seconds)
    (287/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.930605927 seconds)
    (288/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.604505102 seconds)
    (289/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.986487962 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.946187756 seconds)
    (291/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.141681177 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.877914458 seconds)
    (293/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.003397779 seconds)
    (294/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.136720202 seconds)
    (295/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 7.863265337 seconds)
    (296/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.990362321 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 7.45194156 seconds)
    (298/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.076459598 seconds)
    (299/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.886860763 seconds)
    (300/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.689007095 seconds)
    (301/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.244730875 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 2.031766445 seconds)
    (303/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.056769794 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.123448277 seconds)
    (305/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.04510339 seconds)
    (306/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.574551282 seconds)
    (307/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.994864514 seconds)
    (308/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.420486456 seconds)
    (309/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.089660343 seconds)
  done (took 1014.93526488 seconds)
done (took 1016.796312376 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.936061846 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.932319152 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.914803441 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.934682561 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.029359605 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.940784147 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.924872662 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.916062003 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.961775216 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.965476743 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.913300833 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.940848228 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.917497845 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.915395305 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.914819156 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.929828495 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.236149242 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.95247386 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.932240546 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.924685928 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.93402153 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.914635637 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.963683654 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.939325328 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.923626546 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.9184926 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.91977059 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.934916712 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.029164918 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.920822494 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.920118522 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.928426151 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.235514983 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.947897162 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.910536553 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.940694807 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.929533345 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.924876526 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.918596798 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.949413184 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.328077608 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.957867932 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.918993506 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.916967478 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.918195414 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.923111717 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.920456719 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.921932327 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.930938452 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.931245406 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.32353348 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.975815292 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.921326728 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.917431506 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.928484508 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.923319702 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.921656642 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936662019 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.938854146 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935113074 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.22313507 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.958669248 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.920464565 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.936265475 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.927119917 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.358992215 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.955368321 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.921182048 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.325528626 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.96226241 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.361611713 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.96812516 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.919632305 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.934028094 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.951514155 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.240814411 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.953236915 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.917869051 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.928648785 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.916551366 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.928591735 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.933638866 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.923821869 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.921268503 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.935413484 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.94785987 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.928270713 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.922445049 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.926703913 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.939916288 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.931332903 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.933530682 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.922904596 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.914644375 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.928876207 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.92613529 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.923166776 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.925028196 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.921721069 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.92995428 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.328351794 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.976324181 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.914857801 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.915395351 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.918529547 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.935226601 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.325933892 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.962307683 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.940711392 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.96720466 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.922252711 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.221657425 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.960508429 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.938628836 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.928703673 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.922505743 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.916328204 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.222201976 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.359767313 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.976998465 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.924630367 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.918941635 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.938181042 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.922750399 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.91777585 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.242420429 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.956218075 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.936842219 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.044762949 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.930372431 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.960589085 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.920373211 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.925397307 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.950098788 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.94197719 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.95534068 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.925739715 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.94047424 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.941337231 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.918344632 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.935256762 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.935106176 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.921777267 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.928331611 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.91649337 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.94968895 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.940161689 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.936205069 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.943972478 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.045125765 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.920382018 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.226164709 seconds)
done (took 301.671315129 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.992375878 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.912649167 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.015025857 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.918500429 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.001101009 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.009582732 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.914960883 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.914839162 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.914338099 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.291942298 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.920894778 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.917326683 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.920124533 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.915146019 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.000941352 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.918673534 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.916391174 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.257457378 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.920286171 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.989466029 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.913027454 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.91655608 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.919663302 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.332908816 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.912653826 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.922037107 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.99125624 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.919772181 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.263663976 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.914245473 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.921742348 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.263342443 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.010684934 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.938305843 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.930450181 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.92777579 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.002789106 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.925872155 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.001933212 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.001116388 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.016310949 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.959632326 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.917723249 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.920879551 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.923598488 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.921527219 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.918334739 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.94701558 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.921225269 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.916661306 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.2584413 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.929904708 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.920280311 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.919710326 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.919887009 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.954117663 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.918669604 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.923155623 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.013658316 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.9227508 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.983012972 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.302713153 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.296274399 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.9214693 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.91900317 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.91907206 seconds)
  done (took 187.709811331 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.987805016 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.998295614 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.989122965 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.922673973 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.971868108 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.98978987 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.923377916 seconds)
  done (took 15.618429062 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.92776992 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.921101579 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.97358921 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.974166892 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.923627657 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.071658861 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.921863338 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.933261598 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.919344196 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.975154422 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.925298652 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.922161835 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.930290861 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.924150767 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.97327018 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.932981475 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.038478314 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.923404167 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.923768156 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.071956356 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.920880437 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.929662146 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.975661036 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.934898825 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.92698534 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.930034439 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.509459744 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.924127568 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.921608353 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.923814443 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.921117244 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.964353831 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.923551922 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.921027353 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.922080409 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.039806497 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.924661026 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.921997895 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.924608484 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.920455711 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.925063374 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.924034958 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.923499693 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.921477498 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.924482381 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.947248663 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.924783618 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.924552711 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.923765645 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.925174105 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.973669043 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.925412455 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.921204751 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.924253315 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.979298354 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.932637223 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.925699192 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.923275613 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.925654581 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.922313525 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.074619719 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.975736681 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.92565969 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.976143844 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.92608898 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.925323714 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.925868579 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.925778054 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.02344225 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.924315273 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.975698399 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.924512113 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.086272968 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.948841148 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.927099786 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.930863748 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.930816 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.925167288 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.928833316 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.933527087 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.924995637 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.928824937 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.931802681 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.92521178 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.925199688 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.038976089 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.035155584 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.925648232 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.939808142 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.934301259 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.924543202 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.97877496 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.925378283 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.924509562 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.986474371 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.046171371 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.983727964 seconds)
  done (took 211.238143216 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.931668951 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.935147855 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.930192617 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.944280836 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.929856377 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.929155037 seconds)
  done (took 13.440912942 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.930279906 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.930796145 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.9276532 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.92855598 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.92908268 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.930044036 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.929189968 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.93023464 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.934266948 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.928563097 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.930308102 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.930462718 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.931797088 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.93100552 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.930339494 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.928241526 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.931294809 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.926401278 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.928922102 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.930240028 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.089894179 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.930111207 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.929769913 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.931943181 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.938613958 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.929037092 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.939257899 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.930820802 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.928932956 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.940915408 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.933172696 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.931549073 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.932298151 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.937924025 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.935302906 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.932460167 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.934627228 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.931886204 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.927146879 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.932506672 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.93399503 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.930621251 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.930753825 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.932148881 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.932983621 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.935674954 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.937525069 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.939688103 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.932938385 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.933161276 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.933001281 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.931025338 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.933555827 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.932681 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.934071607 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.938379214 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.936897952 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.932449122 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.932078338 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.934037245 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.934908347 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.934295471 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.934488088 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.938940427 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.930802962 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.933639719 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.933844633 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.938149202 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.932074024 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.931456711 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.932942108 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.930761577 seconds)
  done (took 142.142809353 seconds)
done (took 572.00226511 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.078281171 seconds)
  done (took 8.923356526 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.085566827 seconds)
  done (took 8.970917948 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.544627147 seconds)
  done (took 10.392158726 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.961614117 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.944178108 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.934875007 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.931672883 seconds)
  done (took 29.647182891 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.041954837 seconds)
  done (took 8.889088027 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.950862893 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.923048139 seconds)
  done (took 15.752084104 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.004756103 seconds)
  done (took 8.851525795 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.048134977 seconds)
  done (took 8.921294004 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.943494623 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.960278874 seconds)
  done (took 15.764845243 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.914076057 seconds)
  done (took 8.760881758 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.542389566 seconds)
  done (took 11.481530197 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.948661506 seconds)
  done (took 8.897605068 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.009841154 seconds)
  done (took 8.856177488 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.032276105 seconds)
  done (took 8.880379062 seconds)
done (took 164.835887643 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.932238668 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.925018188 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.925310274 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.92424315 seconds)
  done (took 29.553283449 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.967023054 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.968445736 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.969543659 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.980006476 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.971507535 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.968685817 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.960241618 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.960261001 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.977759605 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.971731609 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.969169898 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.968748595 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.967399812 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.960327325 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.970401881 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.970686256 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.979284111 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.968728953 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.961341112 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.971064404 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.935736486 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.979665457 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.97069635 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.934189477 seconds)
  done (took 49.050574803 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.13278662 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.005484468 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.089160636 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.98757557 seconds)
  done (took 10.063422316 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.987741312 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.989964586 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.000431529 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.039449988 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.063203062 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.997673464 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.963084234 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.958899972 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.943880972 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.990293895 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.064693416 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.982945392 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.074251849 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.935638441 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.120261643 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.936293342 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.937119924 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.987515278 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.039641965 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.073680508 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.936083094 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.987197673 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.990660347 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.983086653 seconds)
  done (took 49.832245887 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.934575954 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.944058694 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.941260514 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.936494762 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.935719724 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.937500452 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.941459791 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.936855753 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.957100023 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.935903257 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.935078396 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.935745437 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.935695318 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.935801948 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.936381238 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.948235456 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.948405565 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.935810706 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.938723258 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.942184274 seconds)
  done (took 40.644544416 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.931015645 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.785597403 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.282431404 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.187277963 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.930419072 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.928596196 seconds)
  done (took 31.897636552 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.950432879 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.942276356 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.937962712 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.997085246 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.078099827 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.942398594 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.938832035 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.95036236 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.98552141 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.00213214 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.958989111 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.968101816 seconds)
  done (took 25.504886637 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.935337465 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.936870428 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.931340608 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.952508862 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.948701897 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.944686381 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.945186839 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.931614077 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.948869127 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.955629782 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.941997626 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.949688894 seconds)
  done (took 45.178553618 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.021548745 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.817424006 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.576495833 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.649695 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.470582112 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140210851 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.453549728 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.103028988 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.935817776 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20793267 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.520099679 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.17655439 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.187908592 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935184119 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.005017182 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.404696907 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.233028413 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.166649426 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958771649 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.65858683 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.050589665 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.552652596 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.69091962 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.058721734 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146055046 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.067854656 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.199122554 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.901032536 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.06491881 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.970871485 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94558698 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936063305 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209667797 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.145798505 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.062497564 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945377805 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.588788903 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.656771026 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.926597826 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.6547579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.564506171 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.065516067 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.944790317 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.937796694 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.867478714 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.545741583 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.1120478 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.937523984 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.63434442 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.931665835 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.93911789 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020270888 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.931433442 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.746536925 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.880450695 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.199002064 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.920877953 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928226352 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.494366991 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.985212921 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.673816452 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.871424634 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.030026283 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.656483205 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.400304722 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.095157373 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.937672857 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.937647972 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867793119 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.652319932 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.056935614 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.083710442 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.951923476 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.591803809 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231777475 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.576631571 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018795392 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2288858 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.829275341 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.869993223 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.163604502 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.8929111 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.867058199 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.784765269 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.868276942 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.205901562 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.973725111 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.599011819 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.970318179 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.101337049 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.938959922 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.954196567 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.938024425 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.153292245 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.812219191 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.933144549 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.462839747 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216646157 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957959917 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.110601971 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.871238823 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.937486023 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.19221562 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.146471149 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.280305605 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.399103211 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.093201378 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934671875 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.024259279 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.968190073 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.944194005 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.211946923 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003609947 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.005388394 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072694917 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.908367229 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.2477619 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.968306245 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.115698455 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.555745601 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.20396139 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.266740786 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.198267951 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.024737858 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.942993641 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.952840578 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.687860438 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.567379274 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.172764982 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.948832435 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.552760252 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.958749569 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.953285349 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.882731161 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.572053724 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.555377498 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.054891236 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.169794008 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.851711278 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.353176787 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.879291851 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.094072848 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.053885809 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.166385324 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.592428982 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.023565105 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.20719738 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.414226775 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.299642398 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.076588037 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968073142 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.067331476 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.970698109 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.346362519 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.318253174 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.949540174 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.955576338 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.684962581 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.014550011 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.958462564 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.955184798 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.747548698 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.22602286 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.978175033 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.948480925 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.872810893 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.959499542 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.03193055 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.948718491 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.953957328 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.472328172 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.691615806 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.954265082 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.627078652 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.164692822 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953759444 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.674043516 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.135500279 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.034067095 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.225838742 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019052203 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.88492401 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.65422408 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.655433616 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.951264431 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884611072 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.954778891 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961047275 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.963705894 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.175838937 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.231643636 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.002560411 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.69453559 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.063122058 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.962428469 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.955934541 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.949982858 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.47484229 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.027918947 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.545760448 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.076300259 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.085913382 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.961903453 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.88400216 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.950688247 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.950836192 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.948003658 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.90538593 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.001129577 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.629350777 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.288313637 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.206804779 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.600214547 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.966543865 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.655407672 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.081400661 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.974956753 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.511000496 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99595242 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.05843375 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026869151 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.965108078 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.696936975 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.72793133 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.52209394 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.259983647 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.283177302 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.402450066 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.409320548 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.290180017 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.125818817 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184484947 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.48299031 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.013656357 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.12612117 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896733295 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.033573322 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.598625314 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.309804035 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964230172 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.180668189 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.344405291 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.572088321 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.113352917 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.164743442 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.987193871 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.828854017 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.993334846 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.475038513 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.110764471 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.490752218 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.180652771 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.120774535 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.505161561 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.060716649 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.955408627 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.426895495 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.035054053 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.6650893 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.315980265 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.577408888 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.577696013 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.325208346 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.953733908 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.402036898 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.321603554 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.407288217 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.040252985 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.888829486 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.966603913 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.966322153 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.954456439 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.936028068 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.862297356 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.224536762 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.964414748 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.189636749 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334010682 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.228019584 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.868152181 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.961108924 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956387274 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.260057753 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.707967926 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202953242 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.377561915 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.545051161 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.966224076 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.888747846 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.88836439 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.658885327 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.956754141 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.931346697 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.188597451 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.065946104 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.908744952 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462503312 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.283209046 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.211408529 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.970209924 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.236495911 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.240621303 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.691305424 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983857825 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.056611016 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.524791565 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.708438661 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.184588152 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.190637908 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.751894197 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184993904 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.620661764 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.926936271 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.956637158 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.166302698 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.177902265 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.564519733 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.211122398 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.684011152 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.967347554 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330436248 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.026269381 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.582306697 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.173695732 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.056281116 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.971562548 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.040944008 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.969704133 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.970303707 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.971639636 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.008000856 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.578211633 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.093146582 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.974715456 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.053188126 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.061401925 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.551908012 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.969358505 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246560691 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.322082653 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.30410088 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.030999567 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.962636817 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.960288654 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.895527826 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.093482389 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.405498064 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.228437321 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.083953516 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.091800311 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989222865 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.517202094 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.516221478 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.281538798 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.233518999 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.853785373 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.957754392 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054120606 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.179745029 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.963638369 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.163838381 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193448421 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.292465781 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.426969758 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.174763323 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.237149969 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.219833689 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.323306321 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.957972829 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.539302456 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.960773028 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.498597411 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.007874687 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.596489901 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.251648263 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.977581859 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.190001127 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.980320881 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.159718567 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.414099259 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.660740731 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.324282737 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.961623314 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.026266229 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.251615364 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.373010518 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.283789794 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.045906768 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.973326519 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.661305704 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.102371914 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.906926719 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.22092375 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.964965717 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172894755 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.676028691 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.974164537 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.25405415 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.285054724 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.963166983 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.930440048 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018853355 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.970197642 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.184256683 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.240987531 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.216319652 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.968877946 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.960913768 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.778999903 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.242918633 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.026142062 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.896064246 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.956496928 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.055239169 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.203120343 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975265489 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.471609395 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.656309558 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.26378481 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.874759165 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.972935348 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.434996451 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.416030753 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.298724102 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.486879012 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.194351056 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.513234955 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.8652254 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.332851022 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.951257906 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.437982409 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.330599349 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.946784616 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.530694034 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.066618058 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.222993122 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.279041479 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.953105844 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.786605769 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.013667982 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.187451138 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.564003186 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.902157084 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.963535957 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.023503406 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.958655135 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.092155404 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.967738178 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.959247237 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.919699888 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.8104074 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.447792518 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.956852035 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.977815761 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.519503257 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.580810941 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.072350988 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.114173648 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.955939906 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.660931341 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.249776947 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.210680689 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.537270506 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.036977618 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.958372586 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.956654405 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.884174235 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.151935676 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.151884639 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.265480609 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.375906111 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.073068392 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.962492304 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.165388927 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.163047401 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.569378985 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.108773261 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457043274 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.073774471 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.880319417 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.664515474 seconds)
  done (took 1719.337278884 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.970972044 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.960483356 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.954154795 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.9924169 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.963010768 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.957093185 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.006609694 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.031457798 seconds)
  done (took 57.705173491 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.941297949 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.125793868 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.943733417 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.935273845 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.95383937 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.933200055 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.124645325 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.941276899 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.943899058 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.941124464 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.934907426 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.940934344 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.223591534 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.957532698 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.936252338 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.947383101 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.948494534 seconds)
  done (took 75.545217075 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.936529705 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.118093534 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.95475582 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.958622819 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.80758395 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.934677295 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.916212536 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.958794778 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.934671662 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.103937121 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.272088198 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.939382424 seconds)
  done (took 90.686240106 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.950761144 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.94187036 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.943153204 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.942555394 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.939876385 seconds)
  done (took 11.579387863 seconds)
done (took 2238.441782371 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.176903339 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.12653454 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.175553957 seconds)
  done (took 6.150599975 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.08350562 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.131382738 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.24979742 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.256221915 seconds)
  done (took 10.577934161 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.232277072 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.305931529 seconds)
  done (took 6.388086169 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.266812904 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.960811696 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.325009503 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.936947633 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.93574945 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.934725066 seconds)
  done (took 22.664603031 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.94053626 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.943320634 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.939014478 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.942625536 seconds)
  done (took 9.618073761 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.921475669 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.667756912 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.922691396 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.936884606 seconds)
  done (took 21.298669518 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.688326918 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.065356118 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.683493803 seconds)
  done (took 9.289746104 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.592561459 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.574220169 seconds)
  done (took 10.019457746 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.114057286 seconds)
  done (took 3.979357184 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.978333132 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.221845192 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.50822692 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.53299933 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.632640407 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.215070686 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.292391059 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.181419897 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.396085367 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.441683979 seconds)
  done (took 26.266649611 seconds)
done (took 141.831767727 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.498440373 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.982688116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.153108804 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.313824018 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.179139394 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.153636801 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.170764685 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.3294411 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.006619044 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.992027471 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.312689605 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.179514138 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.113453872 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.974583896 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.118092571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.973409504 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.184476826 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.325029956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.997020569 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.212930294 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.168770309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.961299258 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.149047732 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.97489036 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.181890432 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.181574087 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.506861987 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.974591769 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.136069298 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.516300565 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.129453655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.359781956 seconds)
  done (took 171.27718582 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.953426689 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.94765094 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.948452905 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.946733573 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.519384184 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.942932193 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.94254265 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.941296349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.348443975 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.346343014 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.940050655 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.508746958 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.940492789 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.937550862 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.937418358 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.935633965 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.516160283 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.936333413 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.933306728 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.929225711 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.932668309 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.33404638 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.933320299 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.343121823 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.514469408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.93221514 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.928955366 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93123885 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935787508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.935542881 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.936534665 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.928162734 seconds)
  done (took 211.809643196 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.932910586 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.930041356 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.932188526 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.931563431 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.930425567 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.933100572 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.933017937 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.932617473 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.554928812 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.555745725 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.9375645 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.941824365 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.944223057 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.934396293 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.943709147 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.932112897 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.944749686 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.940725566 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.946578969 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.946384893 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.94883831 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.630410702 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.944988929 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.620679644 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.935348271 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.930408406 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.921817344 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.93303333 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.935408508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.933872474 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.938374511 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.9185181 seconds)
  done (took 222.430895696 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.111722012 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.92805182 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.930328584 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.858187972 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.929809644 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.929160489 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.921856198 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.111193069 seconds)
  done (took 19.58283376 seconds)
done (took 626.974192546 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.403075137 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.257251673 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.110930027 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.950953906 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.197802994 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.984540698 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.95025157 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.01807964 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.575734841 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.023962787 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.621135778 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.971485415 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.704827724 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.977365683 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.076003234 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.004456999 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.495749809 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.585157183 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.132547418 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.009481516 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.128605144 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.872082566 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.03091546 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.616299846 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.721647545 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.924849799 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.007062139 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.497942092 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.959102164 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.115986123 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.678180757 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.246501169 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.960887274 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.950520537 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.006918153 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.981845142 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.210242703 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.961330248 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.076524476 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.673070973 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.01953205 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.48498108 seconds)
  done (took 105.014442589 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.919034579 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.920337685 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.916574982 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.918376231 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.918248403 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.918050924 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.916804334 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.918207972 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.91726944 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.919205274 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.915390972 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.916828026 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.916545165 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.916218558 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.916155467 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.917410311 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.919947757 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.918703803 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.919633394 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.919269205 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.918894662 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.918327325 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.933929888 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.919293264 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.921065176 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.919952632 seconds)
  done (took 51.74615122 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.933699632 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.084898248 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.171933854 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.955225048 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.93245055 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.937647796 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.953442304 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.939441249 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.936982492 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.936446935 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.023465445 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.938184659 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.952974326 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.173361104 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.951975791 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.93316506 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.935188243 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.932957342 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.091436851 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.948917529 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.954906792 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.937089328 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.952612596 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.946303461 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.933880936 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.936083716 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.93917313 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.369470796 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.945211576 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.026633583 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.995433053 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.958241719 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.316908667 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.18352608 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.990402256 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.946155566 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.935931788 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.030814705 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.941159416 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.935279624 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.953870651 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.944126885 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.172915203 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.430126923 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.948896596 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.934260875 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.3785799 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.036742762 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.978367136 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.948183354 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.18033936 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.951627188 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.936759656 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.934273538 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.973885285 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.939044995 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.935463343 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.234212892 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.947207522 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.953248022 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.941669327 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.936926683 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.096123747 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.947456716 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.087094312 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.947482065 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.94313927 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.937080016 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.175570803 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.951608591 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.430419765 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.950792486 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.938225888 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.034029263 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.090841296 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.408063328 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.947227501 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.098675752 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.335642396 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.961552857 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.94529675 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.360442213 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.966383142 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.944573234 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.939828688 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.940081156 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.939045989 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.980708962 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.95376679 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.369338817 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.436161633 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.250420923 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.966443359 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.953928569 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.938769258 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.237810457 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.947382856 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.940736874 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.17167059 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.443553824 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.952694046 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.945364803 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.419448406 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.956019152 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.955499519 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.94712064 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.178741698 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.953358594 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.981832727 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.938347966 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.947855072 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.943698103 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.959226578 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.948754927 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.941858987 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.415257291 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.048565704 seconds)
  done (took 239.618710892 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.935671935 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.954229666 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.936929347 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.955259404 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.933351353 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.941921187 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.932940191 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.932348409 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.938757662 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.934157485 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.934697718 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.934855632 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.936788809 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.980055567 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.958505617 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.940591196 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.539985251 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.934392744 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.935215952 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.936672052 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.603011599 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.939223282 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.936632858 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.940176916 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.942790321 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.935890676 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.968431057 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.952606474 seconds)
  done (took 169.497635226 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.942852892 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.056813308 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.958932467 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.969228612 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.946053375 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.938254102 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.96421033 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.954475142 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.948883183 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.940327474 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.939689265 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.003016614 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.952991222 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.040638028 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.969132309 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.971690362 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.048694591 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.945504788 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.941868776 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.940446918 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.971285561 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.934117863 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.004153859 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.066419868 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.955942302 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.058770969 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.945233534 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.942202117 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.943158222 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.060673968 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.959026732 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.003925603 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.967738542 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.959533809 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.064994239 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.060734296 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.046207906 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.967431366 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.943315567 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.940888549 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.943652795 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.931148855 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.062297063 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.961452023 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.946051337 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.046141081 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.959639443 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.944126934 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.952253526 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.940951728 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.959677749 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.964112542 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.011633473 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.075001421 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.975539913 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.969651525 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.970701954 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.220006572 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.952344486 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.045618662 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.935129266 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.060777732 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.964386778 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.932335731 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.944707741 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.947197727 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.971464364 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.969559111 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.05168301 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.94809263 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.04556575 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.974657856 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.949356183 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.942456732 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.94642422 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.062480297 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.060827905 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.976146939 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.982413697 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.975744768 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.938914984 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.946127223 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.9324414 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.961334696 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.946995329 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.063072371 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.065445262 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.950832957 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.946666571 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.947994634 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.947126442 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.972206334 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.073088435 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.980599819 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.041878795 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.010579702 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.019781228 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.959313856 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.959712033 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.948682649 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.009992986 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.960877236 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.956123344 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.268037556 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.018165279 seconds)
  done (took 210.323930898 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.432309163 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 1.993681528 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.003422766 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.277592468 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.293632435 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 2.885255994 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 1.991596468 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.995587428 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.018873897 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.180466854 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.064671729 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.013097258 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.983341466 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.969189623 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.997836629 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.017831526 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.003933976 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.323696748 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.102904401 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.121136977 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 1.975324472 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.275454433 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.267204911 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.38932937 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.02825335 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.350305085 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.659821332 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.13277224 seconds)
  done (took 63.615680628 seconds)
done (took 841.655553901 seconds)
SAVING RESULT...
DONE!
