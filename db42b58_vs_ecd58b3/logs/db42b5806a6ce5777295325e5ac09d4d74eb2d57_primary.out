cset: moving following pidspec: 2643
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.284386638 seconds)
loading group "string"... done (took 0.625154143 seconds)
loading group "linalg"... done (took 7.595833922 seconds)
loading group "parallel"... done (took 0.167752594 seconds)
loading group "find"... done (took 1.111967101 seconds)
loading group "tuple"... done (took 1.75569298 seconds)
loading group "dates"... done (took 1.230467543 seconds)
loading group "micro"... done (took 0.215551484 seconds)
loading group "io"... done (took 0.878860267 seconds)
loading group "scalar"... done (took 37.511181555 seconds)
loading group "sparse"... done (took 11.77105248 seconds)
loading group "broadcast"... done (took 0.94205357 seconds)
loading group "union"... done (took 12.109598533 seconds)
loading group "simd"... done (took 4.462235327 seconds)
loading group "random"... done (took 8.944961121 seconds)
loading group "problem"... done (took 1.834919702 seconds)
loading group "array"... done (took 20.665023365 seconds)
loading group "misc"... done (took 1.698142785 seconds)
loading group "sort"... done (took 3.268057635 seconds)
loading group "collection"... done (took 17.069000839 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.5172535 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.123664709 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.132814105 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.119246987 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.147364557 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.1175438 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.125093724 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.08677719 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.834634712 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.147903338 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.115820023 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.396952731 seconds)
done (took 5.329178897 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.174661218 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084412316 seconds)
    (2/2) benchmarking "String"...
    done (took 0.084444752 seconds)
  done (took 1.310048066 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.068103945 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.128071721 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.069758057 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.070370619 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.070431671 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.069609839 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069639977 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.069312644 seconds)
  done (took 1.691085969 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.07509999 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.071726377 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068855152 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.074430419 seconds)
  done (took 1.428261676 seconds)
done (took 5.82005768 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.743893285 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.212313075 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.185927376 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.380270254 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.12720209 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.169277223 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.645748622 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.336952818 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.186790501 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.077706166 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108900997 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.338123387 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.121010764 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.637665567 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.078187813 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.091387013 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.141908531 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.417949339 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.069993942 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085075415 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.091897976 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.130538711 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087895968 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.078933831 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.145879292 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07051637 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.132835754 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.084292694 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069193519 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.214669141 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.174986641 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.660413543 seconds)
  done (took 10.271543072 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.100795952 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.099562367 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.071220619 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.127995432 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.09984104 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072956944 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.077116629 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.070309128 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.091507607 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.131788628 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.093439215 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.106899431 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068590606 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071212109 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085461115 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.210071422 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082015912 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.083841823 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072792765 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.080786899 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.110660046 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.080324906 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.082103817 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.08208016 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131059861 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.187176964 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101900549 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.099846793 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.068996244 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.084279449 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.117275528 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130450096 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069508328 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.068426722 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.128359087 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.097655424 seconds)
  done (took 4.724789546 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 0.95542544 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.140295775 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.090194669 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.13136163 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.068352948 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.10722726 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.068344189 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.082699381 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20558541 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.345820697 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.574303876 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.130383571 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111813546 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.10516509 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.06999547 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.071097189 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069694762 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.430768664 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.09973338 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107513594 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.082556903 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072591708 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.073679255 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.068601161 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069424363 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066494712 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070287966 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.115261542 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.076151396 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.30299136 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.120530506 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.091710359 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070021879 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.905754358 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.164606775 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.069379269 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.239767479 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.167987578 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.093188632 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.140344963 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072070274 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.068883958 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.155611213 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.067678268 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.072382177 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.069572037 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.086430827 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105225065 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.119882343 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.068140275 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.068591728 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.164359135 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.067690999 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.08116492 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.139199358 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.157788794 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.071856692 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.264401101 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.091716114 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072836385 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.068284148 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.194315249 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.125991319 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.070872483 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.072223977 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071496843 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.071075828 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.361783729 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.06876982 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.144892656 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.070944016 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079040872 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072238144 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.072252717 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.074748475 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.075852542 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.091356539 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.069075113 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.076039547 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069254169 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.068906535 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.069675985 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.084684676 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.36481868 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069550739 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.173645222 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.070632571 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067905377 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.091804294 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.097910388 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.069334897 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.068105741 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101434319 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.070156243 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.068235477 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.068978438 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.067578508 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084306104 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074570687 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.115917185 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.069045703 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.096408055 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.069595243 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.098602051 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.070956879 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100535309 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079957368 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.06999206 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.404120516 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.072377007 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070936473 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.068533186 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.070362055 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.068815154 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.079862473 seconds)
  done (took 21.887426744 seconds)
done (took 38.977150369 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.249385714 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.080110727 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076816714 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.075900021 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.076311008 seconds)
  done (took 1.792935201 seconds)
done (took 3.016816599 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.121245728 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.098001563 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.067036759 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.096455878 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.069737483 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.100020865 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099876116 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.078332619 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.098890728 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.067016469 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.096794034 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.067425847 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067122631 seconds)
  done (took 2.362336787 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.088209543 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.08617993 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072374683 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.085291385 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066268337 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085421393 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.084348538 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.090780055 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.08422323 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.075193651 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067220596 seconds)
  done (took 2.097749716 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.084580692 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086193583 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.072021425 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084352092 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065952563 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.084357435 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08398685 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.087452727 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084935984 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.076105642 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066627563 seconds)
  done (took 2.085557102 seconds)
done (took 7.752336066 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078691474 seconds)
  done (took 1.275505486 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.527392911 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 5.639481251 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.082470072 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.106485817 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.185272106 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.11631904 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.251914448 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087850225 seconds)
  done (took 8.368125919 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.093738516 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085539431 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.071861807 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.071615053 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073835769 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071712213 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.071581329 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073538529 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.074545468 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.073238664 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.07468984 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.073998678 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070997468 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073395203 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.070695562 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.07193273 seconds)
  done (took 2.483228043 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.094315501 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.092001618 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.075050798 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.076628349 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.074077876 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.073795649 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.076454859 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.075252318 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072901243 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.074751276 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.077101782 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.075687829 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.074145492 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.066501015 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.07544919 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.077853013 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.072866085 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.075841033 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.076210103 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.077748974 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.077080796 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.066677942 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.073345211 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.076057604 seconds)
  done (took 3.134347389 seconds)
done (took 16.4682819 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.107815618 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.070016101 seconds)
  done (took 1.387763437 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.0848096 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.083262986 seconds)
  done (took 1.390320819 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.083563517 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.067642038 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090110863 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.079378781 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.068315902 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.068192604 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.088308937 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.068619426 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.068105452 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.068140522 seconds)
  done (took 1.969037956 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.071872791 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.07731304 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.071669711 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.081819156 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.076736861 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.067984792 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.076021037 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.070835344 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07780105 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.065894184 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.073435827 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.085152362 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.073119978 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.085979342 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.073395393 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.070967842 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.073516509 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.069787418 seconds)
  done (took 2.566931757 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067236459 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068263228 seconds)
  done (took 1.35512178 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068710171 seconds)
    (2/7) benchmarking "second"...
    done (took 0.066114597 seconds)
    (3/7) benchmarking "month"...
    done (took 0.069090395 seconds)
    (4/7) benchmarking "year"...
    done (took 0.068621002 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.065762922 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066251019 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.067445219 seconds)
  done (took 1.689123125 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.36298367 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11961482 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.308800632 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.076283661 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.086807436 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.255198207 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.069099023 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.074123659 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.074265037 seconds)
  done (took 2.688629595 seconds)
done (took 14.276037339 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.081827884 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087832434 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.096474394 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.36834049 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093588145 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.069907686 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.1159446 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.181962477 seconds)
done (took 2.330400963 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.208184117 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.639476488 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.408936616 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.205588203 seconds)
  done (took 2.484046826 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.33124174 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.090381984 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.062518327 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.070768701 seconds)
  done (took 1.787543334 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.06962994 seconds)
    (2/2) benchmarking "read"...
    done (took 0.071691665 seconds)
  done (took 1.374753111 seconds)
done (took 7.094083143 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.071215615 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.068759759 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.066965262 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.068679884 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066535716 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.066487782 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.068701734 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.06865111 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 0.068686049 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 0.068656818 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068661284 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.089655075 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068071658 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069002029 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071260715 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.068558101 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.068094127 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068342969 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.183809826 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.070456318 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067964097 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070601562 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.06829125 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.0682321 seconds)
  done (took 3.046695336 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.086180945 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06932259 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073470011 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.073727174 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.071237896 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.07327827 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.073704297 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.06818495 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.073876183 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.070631397 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.071787486 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.071833035 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.070676536 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.07127552 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070671983 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.071492743 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.074068939 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068289951 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070744307 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.071798648 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.073570838 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068878183 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.071998556 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073353621 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.071379212 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.071423545 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.07130878 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.069284297 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.07357379 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.07158824 seconds)
  done (took 3.40959281 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072619522 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065579931 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.066152569 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.072862097 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.065859674 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.066873974 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.065357506 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.066087409 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.06698152 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.067010802 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.067866167 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.066183146 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.066266271 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.066805139 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.066721435 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.069967013 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.081872184 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066349794 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.066454079 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.066870245 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.069489612 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.068811052 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066609671 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0660926 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.065887608 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.065798001 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.067233976 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.068283085 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.068774895 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067869613 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.071344391 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.072081065 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.067787149 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.075256932 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.071815577 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.068415053 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.072133514 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.067858752 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.068593964 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.067601462 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.067648242 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.068122237 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.067696232 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.075152432 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.068488032 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.06908059 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.068674498 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.069223092 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.068598281 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070096829 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.067582238 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.068389185 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.070427536 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.069187349 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.071888238 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.067679164 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.068987104 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.067640239 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.068554142 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.067993746 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.067263907 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.067685952 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070969521 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.068526049 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.082845047 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.075035699 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.068707331 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.069640472 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.068712261 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.070869421 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069447321 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.081840302 seconds)
  done (took 6.226443152 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092084376 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.087458337 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068948134 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067761013 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064061762 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.066870021 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07180297 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06723721 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068350356 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083968133 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066716182 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068121741 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068386154 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070153 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067281116 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068175788 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.074625096 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064344973 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.066942201 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.070239939 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067322278 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071485786 seconds)
  done (took 2.831275129 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.149302267 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071917606 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1053806 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.077967585 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.072081193 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.077234934 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072166613 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.072600493 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072323256 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070196721 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070067126 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072429694 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.07216944 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.070138103 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.070736942 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070206677 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.072459182 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070322193 seconds)
  done (took 2.663224068 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.07947717 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.068447384 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.08785276 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068525684 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.068391143 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070800877 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072849449 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077539123 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.072240416 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.070032001 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.077759138 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071564005 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.071726899 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070124286 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072115716 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068475766 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.070585987 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068663083 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076293631 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073381402 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072713993 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075914956 seconds)
  done (took 2.861149011 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082550991 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.070049231 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082211502 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069754508 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.064236233 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066747516 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.072301732 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06834111 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.07265434 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.070404743 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.068214418 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.067262107 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.070782359 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068655045 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.071963716 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069179177 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072005027 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069526503 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07083419 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065157931 seconds)
  done (took 2.668237772 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.088382485 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.070581795 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07040715 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077244446 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.070618813 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.070567713 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076972865 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.070056351 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.070069025 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.090656009 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.070367199 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.07092771 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.076883595 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.074935216 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07260923 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.076558532 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.076841205 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.076812143 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.070435561 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.070407184 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.090010834 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.070697633 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.076552048 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.070937812 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.070243053 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070285196 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.069989256 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.074620119 seconds)
  done (took 3.345083654 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.069634715 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068362932 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.066896915 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.066250166 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066553917 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.066243413 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066551041 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.066266326 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.068508988 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.066891409 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.068669993 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.069013426 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.068509184 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.068414565 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.068924085 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.068541682 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.068964049 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.066396827 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.066200884 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066213179 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069831278 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068685455 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.068750077 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066263639 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066820742 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069006022 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.066251145 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.066353478 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068995349 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.067292332 seconds)
  done (took 3.293598418 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078003126 seconds)
    (2/2) benchmarking "in"...
    done (took 0.074605469 seconds)
  done (took 1.416262899 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.067570046 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081165749 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.065823389 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072928732 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.072054295 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.069004922 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.075494694 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072194363 seconds)
  done (took 1.833798337 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.084026612 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.077944011 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.068888799 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.07889428 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.077633127 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084690373 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.134945488 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.068711905 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074678573 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.066838745 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.082077652 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.069242789 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.074768526 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069642042 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.075493396 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.075569778 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.067042209 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.074114602 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.069962498 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.067516669 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069163406 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.076988101 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071622076 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.064589026 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.069949656 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.089705923 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.079412441 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.068820773 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.071669527 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.075476828 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.074423964 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.063427918 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068259968 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.069134735 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.066692844 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077507384 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082696268 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.07140549 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.076808579 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069888192 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.076953557 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063691896 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.073140334 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.075235862 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.079039305 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.068768381 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06891857 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.064609297 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.066983253 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.071047778 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.064148054 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069602929 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.065120949 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.077860212 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.074617983 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.081433251 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.069810587 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.072878542 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.073816698 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.074056386 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.077477895 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.07305298 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072903047 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.068330006 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.078760645 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.073982553 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.076483136 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.064527444 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.063230751 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.066979064 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077909183 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.091017485 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.074779746 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.068940473 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069238507 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.066815381 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072076511 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069747006 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073836321 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.075400973 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.068892697 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.073534375 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076459292 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069330635 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.071698219 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.075103318 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.067407249 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.070766241 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.067021809 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083534576 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.06765816 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.066508349 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067048331 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.081069627 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072720531 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067596383 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.066449234 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074931595 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.06274217 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.06779549 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.0679986 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069127421 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.076630634 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070861524 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071409141 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076467153 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.074993409 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068846317 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.070074258 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.192623535 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070991816 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.069227398 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.077160861 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06363914 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.072395828 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.070075184 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.069597345 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.07727447 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.067014781 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.068815867 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.076022784 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.074778154 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.067215105 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.06646017 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.072580972 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.068337046 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072425937 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.077230566 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.067150871 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.06467342 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.063931793 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.072181428 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.068625984 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.072226794 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.072289621 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071949147 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063481132 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.067065854 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.072521224 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.078092437 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.069300446 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.069345718 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.074339294 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.070522891 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.067733452 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.075081529 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.071113799 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.06854847 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.074603512 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.069622294 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063768341 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.0714203 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070913433 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.067823549 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.072382904 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.071080061 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.071521666 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.069185486 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067476775 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.074594738 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069312674 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.068600927 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.069457306 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.067578882 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078758902 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.071082872 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063981166 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.066605056 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.075735497 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.067045046 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.067971723 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069009195 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.071473971 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.068939162 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066934477 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.069339226 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.07293888 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.076381311 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.071598663 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069336318 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.074394246 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.080555718 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.068808682 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07101477 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.06813612 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069515937 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.069284259 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.077537753 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075021798 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073180967 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.071476248 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.066592701 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074160695 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076348427 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.0686048 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067007343 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.068687472 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.072366431 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.074726352 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.072783291 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.069230885 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.067297567 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.070129007 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070689518 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.071259381 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.068600728 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.067853765 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.073082928 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06694726 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.073277821 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068287695 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.078073044 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071441976 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.063227255 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069653794 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066311129 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.073313343 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063007314 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.066294972 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.067293581 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068314243 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.066926954 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.200582531 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.064592677 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.076958039 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.077776331 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.070032859 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.069308488 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.068867373 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.076582699 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.070752788 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.073376917 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.072483646 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.075346091 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078728825 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.068637105 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.073006138 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.078577514 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068828241 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.063177193 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076500677 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.067745878 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.067496119 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.067623288 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.067119238 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.072302294 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.075543166 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074510264 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.063148104 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.07162308 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.067743105 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.069011806 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.064375794 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072944987 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.071869581 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.069384 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075244261 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.069100533 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068077178 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072097824 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.0678173 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.0688671 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.069181458 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.071637593 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.068728174 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.070015715 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.068348887 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.071621835 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.068901659 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06642068 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.070384834 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06908923 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.069181197 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073676679 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.067905684 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.06925837 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.071642787 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.068932052 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.069918698 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.069693341 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.068640788 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072128012 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.069791401 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.070028968 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.071702727 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.064161076 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.075988963 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.068426185 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.076254294 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.069184159 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.065931284 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075252093 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.071376807 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.073418996 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.069025047 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.069148754 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.070618622 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.068837565 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.071824505 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.075942015 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.067318513 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.079536945 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.07646098 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.070015572 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.071917141 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.069975083 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.070950253 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069396819 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.070557771 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.069106436 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.069809264 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.068898384 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.07348839 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.072031593 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.069601409 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071091968 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.068854905 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.069836909 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069515546 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.063680905 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.067849295 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.068556207 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.068218255 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.077386429 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.068463129 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.068552257 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.067941046 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.068827579 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067629091 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.065519332 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.074115174 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074193903 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.068580311 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.074142951 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.067389231 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069329277 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.077583016 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.196495724 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.067879885 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.067538919 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.067820129 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077177557 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.069786809 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.078468813 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.069972573 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.069315275 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.066420776 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.069541093 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068564411 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.063903039 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.06736316 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.07223214 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.068228241 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068446837 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.068962659 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.071467419 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06935885 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077951141 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06913915 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.069903313 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.068706462 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.066360268 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.068775328 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.068012345 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.072220955 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.069614128 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.067341267 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.066470015 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.0687044 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.069814179 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.070605376 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069126742 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.070630728 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076373545 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068957167 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.071793022 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071097286 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.064149726 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.072915281 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.068526844 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.06837609 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.068559014 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.072851714 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072382099 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069298388 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.077940075 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.068458784 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.072652328 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.069604699 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.067105693 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.068737639 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.068527526 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.069163078 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.068519866 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.070339289 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.076728411 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.067243082 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073259145 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069202235 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.069764911 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.075981616 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069292181 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.07262903 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.076167688 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.071542041 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.071185298 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07794493 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.072292363 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072027173 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.069304557 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.070499017 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.074513575 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.068389236 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.075205701 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.069865383 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.069328179 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.070668144 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.067656276 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068183235 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.068240642 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067941194 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.075556146 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.070093593 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.068806221 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.068625933 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.067186172 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.070724284 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071120448 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076635764 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.071438422 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.0721713 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.064842527 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.066916703 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069214431 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.066692294 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.069754258 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.070910633 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073973632 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.070627085 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.069365762 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.067618349 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.077372054 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.074100959 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.072499491 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.066886773 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.071503476 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.068315114 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070060798 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.069472264 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068051928 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068448213 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.071296739 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.070435884 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.067418616 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.207396309 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.072916088 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070271935 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.072149337 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.070538348 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.07080834 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.064283354 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06908597 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.071118968 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07439082 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.071749446 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069208757 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.079456327 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.067089982 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.070266009 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071008361 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.068551743 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.073138606 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063969175 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.070913346 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070058116 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.069300932 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.064733248 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.068941724 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06832002 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.071094646 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.068145378 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.063993304 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078902221 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.077885408 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.071914407 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068209776 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.067333991 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.064792684 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.064827018 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.069546447 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.06912114 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.07032188 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078551435 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.068449835 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.068652892 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06436672 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068870551 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.07316411 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.073606202 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.068122073 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.066793162 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.070360974 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.074226522 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.076406884 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.069524792 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.070058552 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.072297182 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.071027801 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.066880731 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071336485 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.066556841 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.072804725 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081383366 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.069550168 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.070147247 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074994708 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.07617751 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068849568 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.064226804 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.069204187 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.072564846 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.069853103 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.070168436 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.069850145 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.083472545 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.071796602 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.068655887 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067711477 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.071615342 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.068941901 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.077667302 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.069640858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.069168324 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.075788922 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071594576 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.075779625 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071962324 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075960389 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.072489837 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.072617563 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.068575194 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.069442005 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.067275825 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069461253 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.070233463 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.069678645 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.073384061 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075457851 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.068517205 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079151949 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.077093149 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070415042 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.065699186 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067996724 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.068186106 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.064097266 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.068616585 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.066956829 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.067217664 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066368663 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.067615073 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.069447629 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072792514 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.069080108 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.06766005 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067319806 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.062435024 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.070171095 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069906936 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068917786 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.200057713 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.069462155 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.070001313 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.073598459 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072703294 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.067782272 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.071185656 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071523 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.07065168 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.064949011 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.075534365 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.068036759 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.071064137 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.06852104 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.069196275 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069836907 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072482846 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072990729 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.070317655 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.071002996 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.072588196 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070334619 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.066568652 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068387609 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.076037573 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.068828269 seconds)
  done (took 44.185725194 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101755089 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.065681288 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.065448412 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06595799 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.075918135 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065566711 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.064527053 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.06603228 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.065911605 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.06728044 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.064919741 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.064457747 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072497921 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079018735 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075069811 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.06896853 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.06469161 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.065391 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.064735797 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.065881919 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.072271838 seconds)
  done (took 2.806142502 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.074685695 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.078672844 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.076292048 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.083098016 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.072335442 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072448851 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.07715547 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.072849728 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.080059096 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.073901693 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.079831532 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072638176 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.074213249 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.074212921 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073978066 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072574544 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.080287415 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.073107673 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.072328074 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.077000153 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.0726785 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.076803849 seconds)
  done (took 2.994087109 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.068723755 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068903512 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.070505743 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063963082 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.067381726 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.063143542 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.071244508 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.066195569 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070831868 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067712449 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.067651685 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.067711045 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.07013606 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.064615808 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.068968699 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.066260066 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107075746 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.071379034 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.068517998 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.06901794 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063898057 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.070212838 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064074352 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064742379 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.068629448 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.071231154 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.069094969 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.067118403 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.068182842 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067982266 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068036112 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.066960883 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.071687136 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.069087517 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.067938793 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.068402261 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.069614787 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.069959678 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064341805 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.066589635 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069102931 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.066780683 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.068538304 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.069826531 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.066710492 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.067448414 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.070103671 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067854719 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.064049189 seconds)
  done (took 4.704547826 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.079202434 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.110454081 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.071675449 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.091776003 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084096781 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.076378795 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.074158047 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.092912107 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.067378266 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.068175128 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.085399302 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.082417075 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069832601 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0744123 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.074235214 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069859458 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.070596414 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.06897741 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.073572107 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.069556726 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.073476955 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.077358969 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.084470234 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.081716733 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.073905268 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.068803405 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.069814993 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.074030695 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.081400355 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.074238414 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.07431516 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.074831702 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084401708 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.071862332 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068866306 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.072413477 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084262314 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.067892619 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.070041667 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.066025728 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.070912794 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.072251441 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.074893613 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.083237225 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068512246 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.073099536 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067688641 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.066909652 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.080930274 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.071211247 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.075676034 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.081548073 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.071992955 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.067973531 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072019062 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081963701 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068254224 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066538236 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.071281751 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.079082458 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.066177438 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.07142186 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.079979197 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.070083284 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.074339792 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080252644 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.07265943 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.071719923 seconds)
  done (took 6.573706789 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077459015 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.096714425 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083943505 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.083334178 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.077127129 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.077295923 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.077398953 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.077442355 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.077998879 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.08180689 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.077366535 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.115481896 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.073614107 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.079813674 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085628782 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.077696238 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.078030052 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.077317914 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.07718144 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077693643 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.077862417 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.084228288 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.078603695 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.083664266 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.081283123 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.073364843 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.077013236 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078301084 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085505656 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079657362 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.083500918 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.079969853 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.079538843 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.085350872 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.081091036 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.077299204 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.067901846 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.077515838 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.077736205 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.07757874 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.073015605 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.084187465 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.077565482 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.073219769 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.077795968 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.078366752 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.08482531 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.081743579 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.080748031 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.081405312 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.077770076 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084611237 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077469364 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.077592403 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.084282847 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.08698565 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084273758 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.084051796 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077674718 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.084301746 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.084575106 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086671635 seconds)
  done (took 6.360559148 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08280012 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.075406996 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.083207254 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.06416192 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.066495425 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.074075527 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.0667325 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.066837106 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075592377 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.078000904 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.077981737 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.073932886 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.077440803 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078256321 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.074444383 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077114821 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.074206099 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.074225351 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075900535 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.074294301 seconds)
  done (took 2.85245753 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.076352978 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.084050365 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.0690088 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.072860158 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.072316908 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.073953514 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.070984237 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071962392 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069767066 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071680683 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.077730524 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.077897594 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.069014858 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.073572548 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.078111357 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073788036 seconds)
  done (took 2.533098279 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.084780077 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.074206964 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080836062 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.069087269 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.069076159 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.065000085 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.068327407 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064093347 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.06517691 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07983599 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.068866266 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.078955195 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068191796 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067630136 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065867722 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.073769765 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065144483 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.066190812 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.068279157 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080209169 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.071920331 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.067083047 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.07205818 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.068104173 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.070829925 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.072555162 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.067838344 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.068692211 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065940279 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068872357 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.071168294 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.07176773 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.065422268 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.067106347 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.083827778 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.066380293 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068118432 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.069256791 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073724786 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067893939 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.066507001 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.070137814 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.068170606 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.068930611 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.065188508 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.068641103 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.065211627 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.071258069 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.065816844 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.070307316 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067819319 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.070791275 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.069449327 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.075591038 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.071711273 seconds)
  done (took 5.2081014 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081286897 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071615317 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063862594 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066327862 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.071247986 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.069681871 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.071458369 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.069069358 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069291991 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.066901983 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.069756828 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.071666451 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.069941234 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071935228 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069516422 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.07229298 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.063806694 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.069241927 seconds)
  done (took 2.639896097 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.073118723 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068076438 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.075330037 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068909706 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.068048962 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.070742407 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.064167263 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.067420857 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067245536 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068480238 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068420353 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070631726 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066697305 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.071051609 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.069024885 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068491654 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.07098762 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.067131057 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.068382737 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064427652 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.07058498 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067347728 seconds)
  done (took 2.884299419 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 0.093612954 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 0.08359455 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 0.137417274 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 0.080707774 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 0.086736179 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 0.073259778 seconds)
  done (took 1.927622842 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093089812 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101170532 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.068430961 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071842838 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077692462 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.071754101 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072302716 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072802451 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079586626 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077303301 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072079199 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079634225 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079687587 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079013681 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078007644 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077724811 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072384519 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.074746526 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068567214 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084624125 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072410614 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079824248 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072166055 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071964434 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072274619 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.079243706 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07968988 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077756843 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072202492 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07991946 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077721447 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072663468 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079620526 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077127427 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071517459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079395359 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072679223 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.084396461 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077356731 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078835403 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.071230052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077144397 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.079565312 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076659777 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.079626604 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.0725882 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076206681 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072186673 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072738889 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086410744 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078029956 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078807694 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077561599 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.079984606 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080120348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.085968212 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077671458 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078923875 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078607585 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078372853 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079421812 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077666848 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079022403 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077226318 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07727406 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079141606 seconds)
  done (took 6.486790072 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.104597879 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069169346 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072526752 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076840305 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.078620975 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072207894 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072495746 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072332841 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072597698 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069643639 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108417825 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072776824 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078937902 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078984998 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072631802 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072580217 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072216189 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078763218 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069539664 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086677884 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07209864 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078969979 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.079476104 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078802288 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077167273 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077454929 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072314809 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072324645 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072246092 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072022761 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076667821 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0724195 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078927243 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068978157 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078930774 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072518906 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072376817 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076494269 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072157842 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077753004 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078925982 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084505923 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072311558 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07312238 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077634421 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.072589354 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072366568 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069260985 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.072429426 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.0692335 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077418471 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077852222 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.077537719 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078687899 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07233269 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072629762 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.072490816 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072660247 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072278283 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077387934 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078938625 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.072298609 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086326524 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072274716 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072767513 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.080234138 seconds)
  done (took 6.408053092 seconds)
done (took 133.39551449 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.194337003 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.173263494 seconds)
  done (took 1.732286623 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071078784 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098178949 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.078137923 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.131578303 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.068878709 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103182513 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.101565636 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.079402186 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068213032 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.068415856 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.068321064 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.070912567 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.13345675 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068667704 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.067986468 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.070658752 seconds)
  done (took 2.731028107 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.098584879 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.155816784 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102004003 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.06747668 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098863372 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.073936226 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.067323961 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.077027464 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073333019 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068131141 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.073903915 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072138676 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.067991446 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.072154832 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.075397381 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.074535324 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.067782057 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.073960814 seconds)
  done (took 2.850377889 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.097616932 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.091662691 seconds)
  done (took 1.580875352 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.150475001 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.134189811 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.201182713 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.330833528 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.156061751 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.145827029 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.142851399 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.140635762 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.115158015 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.136780678 seconds)
  done (took 3.040192192 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099241213 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.148016968 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.264880025 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.115597277 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.075411566 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.093293891 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.117169185 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.081237909 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.081631152 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.081068715 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.081267441 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.077759627 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.099940023 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075337414 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.076211609 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.07805273 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.103022663 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.075271865 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.076651081 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.077142692 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.100943944 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.068622549 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.07554225 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.075746321 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.078850858 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.078315759 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.069475407 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.068707782 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.077428097 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.076463276 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.077893097 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.091961422 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.078520209 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.104524357 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.073249347 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.105414153 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.078925411 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.07514121 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077152317 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.075433415 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.079371083 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.080042191 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.075191659 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077976708 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.068632227 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.078186794 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.068819402 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.068860235 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.079623994 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.070063806 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.079070836 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.077954429 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.104774432 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.069783569 seconds)
  done (took 6.078073911 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107291341 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.107154677 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.073795325 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.113285926 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104898978 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071115441 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.105624482 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.099099359 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.108511772 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071719798 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.069983067 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071712359 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081678509 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.083115496 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.117794765 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.108300551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.074644995 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070987968 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.108018938 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.108042036 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.07074074 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.101985491 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.097609268 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.107865811 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.069685393 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.072180557 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.069965489 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.072227153 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077596715 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.079342589 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070655058 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.080502422 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.084543639 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.078628861 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069118642 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070028019 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070234112 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.080454578 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08088469 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080083157 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.079054555 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069790077 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.070510305 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071527706 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.071371503 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069399733 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.079436458 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.080824888 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.079075471 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070921487 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071814691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.070692473 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071428691 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.080581145 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.078188177 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.081735079 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080394694 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.070559265 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070613872 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.073308696 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081261767 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080451791 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.080189251 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.071511291 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.080552539 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.071374613 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081201471 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.084707336 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.07158928 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071963689 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070740438 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070648838 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.074237112 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.078574512 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.078950091 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.07265765 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071217155 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071249544 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.080619137 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.078976709 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070375985 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.077745063 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069636174 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.069812686 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070993499 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070990608 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.077264857 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079346962 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.071695387 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.070045531 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.069376639 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.068991253 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.068182798 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.07674031 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078593279 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077978467 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077079372 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069912019 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.07738793 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.214144766 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072416997 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.079854218 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.071191645 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.072361001 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071958059 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.078770295 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.078161115 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.080181133 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.070770113 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070503723 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078829938 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081180497 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070516427 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078237549 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080693793 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079009409 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069458041 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081389917 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070604508 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080774097 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071370047 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080575883 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070372605 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.079939375 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070368949 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.069796921 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070655321 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.079407344 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.0717925 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069850005 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070878713 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069935956 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078675162 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082853737 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.071899407 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079122288 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078331941 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.071676763 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.078688731 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071213493 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.079562914 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070396934 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.071593829 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070071803 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081724588 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070920483 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.070940558 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.070536977 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.081275229 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070816983 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.081156493 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078141914 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069957397 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.082636088 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080964516 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.077562501 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081059017 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07199903 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.07028825 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070435827 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.070956251 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077876222 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079926377 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071928082 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070423973 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.078702183 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.080646978 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.070034838 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.079127083 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.078800737 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.079557692 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070930688 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.07119579 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081392415 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.081543453 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079445776 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.07915472 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080047274 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.071047482 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078560629 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079183667 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071197863 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084051459 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070382504 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.081998086 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.078272183 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076714804 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.078466502 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.079991959 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.079647731 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.080085896 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.082098583 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069103557 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.070102895 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.077416288 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.069357417 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069981384 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.076471434 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.070881858 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.070866452 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.221562417 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071505391 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.08150432 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.070438234 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.080343296 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070780789 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072325612 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.084385749 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.071102711 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.072342119 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.078953881 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071007975 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.079300674 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080782933 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.079392539 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070666749 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.071674041 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.079736375 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079373296 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.072875089 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.07027894 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072147588 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.079036066 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.078171043 seconds)
  done (took 18.99111987 seconds)
done (took 38.403986115 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.191848618 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.143331627 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.156408267 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.111497331 seconds)
  done (took 2.086050728 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.110946079 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.097383891 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.090408827 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.068218802 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.096570809 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.06767548 seconds)
  done (took 1.96044565 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.267187926 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.185555197 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169962503 seconds)
  done (took 2.046889069 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.190983611 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.178046043 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.420218601 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.255993417 seconds)
  done (took 2.570982366 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.138339502 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.086617926 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.069167252 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084745295 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.127131609 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.154001587 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.097292318 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.121861481 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.080806706 seconds)
  done (took 2.434481629 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.14128017 seconds)
done (took 12.668018976 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.216341807 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.098102413 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.091671055 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.076647545 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.113323046 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.081829247 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.07047105 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094083684 seconds)
    (9/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.166503123 seconds)
    (10/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.249312111 seconds)
    (11/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.078816056 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.23232109 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.082666832 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.080568501 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.18491993 seconds)
    (16/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.14841955 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.103356541 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.074887232 seconds)
    (19/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.116066598 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.102643114 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.140814854 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.075566653 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.076891845 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.170078189 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.077839762 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.202813137 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.19160739 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.183059876 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.181532379 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.183769163 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.057139335 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.077322858 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.359533738 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.234891408 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.19999863 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.21242623 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.177545882 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.184146492 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.211705944 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.13065059 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.140274285 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097842075 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.094264135 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.077229093 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.09299185 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.115220619 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.054856194 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.06695282 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 0.153134339 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.190931181 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.075878212 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 0.06980394 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.094099168 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.083915346 seconds)
    (55/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.099330236 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080919043 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.067894532 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.076452547 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.075535689 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.088740056 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.080965901 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.067535478 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.143929391 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.079625094 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.066306262 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.18271674 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130521562 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.12415623 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.15083321 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.0781991 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.199634902 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.176376091 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.07732805 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.09021943 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.074799547 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.15206599 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.075291145 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 0.128705232 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.082816694 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.241806084 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.07761763 seconds)
    (82/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.145375022 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.172408063 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.152252754 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.055748741 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176699122 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.167608646 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.068898119 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.111099134 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.156228045 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.083689757 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.074479678 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.070038452 seconds)
    (94/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.199443543 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.066118707 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.178573231 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.101340319 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.055036987 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07495692 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.09212815 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056623653 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.054209438 seconds)
    (103/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.159476567 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.074316154 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.054244699 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.078377786 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.108609958 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.074875377 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.054769368 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.152974728 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.069172698 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.122159846 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.067354311 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.069388399 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.084101173 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.076559692 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096172067 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.068645884 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076607673 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.188673685 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09258451 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.079026441 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.089198927 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074876177 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.07936871 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.136456208 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.090895931 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.055247764 seconds)
    (129/309) benchmarking ("sort", Float64, false)...
    done (took 0.128033693 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.07724426 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.054233203 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.054529384 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.088971867 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.068227143 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.084634676 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069974114 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.072189955 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.053988287 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.074522515 seconds)
    (140/309) benchmarking ("sort", Int8, false)...
    done (took 0.145186841 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.151340384 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.140152542 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.088613239 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.076007361 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.110654355 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.091165198 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.078365924 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.168499024 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.074138139 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072966354 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.054971148 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.119576074 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.109237502 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.06723397 seconds)
    (155/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.05644315 seconds)
    (156/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.113174554 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.078370451 seconds)
    (158/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.055298173 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.093592757 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.088806294 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.068027659 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.05407108 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.086844397 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.054038767 seconds)
    (165/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.065842745 seconds)
    (166/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.069771812 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.085951465 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.142431142 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.080686194 seconds)
    (170/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.1581405 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.057538359 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.109750991 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.076926774 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.073999607 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.074948551 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.065678423 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.05529777 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.079100544 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084215011 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053830409 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.075519271 seconds)
    (182/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.076141814 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.0674079 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.250651529 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.070821816 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055585863 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.092669329 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.179049818 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.075553424 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.10800848 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.054095104 seconds)
    (192/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.07764802 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.076722052 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.104712905 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.078934873 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.054192865 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.064391574 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.055095822 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.071457453 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067455679 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.055551975 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.074233963 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.055817416 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.054719376 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.054118565 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.054696899 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.069794609 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.079027889 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.074485038 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.068019587 seconds)
    (211/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.056107236 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.070698533 seconds)
    (213/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066780556 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.054168243 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.075230011 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.076778341 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.068495822 seconds)
    (218/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.06629413 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.11421705 seconds)
    (220/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.074011322 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.137827763 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.06876461 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.070666325 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.080245924 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.053948283 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.054714675 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.068388227 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074906455 seconds)
    (229/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.055064158 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.067741461 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.157441379 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.080477518 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.054170436 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.066340342 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.081348149 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.10018907 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.076260908 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.078135007 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.128766403 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.068020696 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.068234563 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07116308 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.090338716 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.055440343 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.055698793 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.06702236 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.055841268 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076560049 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.054347419 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.055624379 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.068110195 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.076498778 seconds)
    (253/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.058395603 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.057072352 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.0718184 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.055395498 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.07576379 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.079493746 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055511725 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.069087119 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.070083439 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.054960614 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070121641 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.076068461 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.055009984 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.068936432 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.073689347 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.070862328 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.074998419 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.054902238 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 0.188157783 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.091802258 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.067004846 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.071547462 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.090224043 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.067999258 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.054262838 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.056316358 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066169179 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.070076298 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.120982689 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067762496 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.068084105 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.054132905 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06823276 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.09494862 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.075408204 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.088561026 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.07455373 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.107193857 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.145047404 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090294611 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.167868315 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.11725772 seconds)
    (295/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.06604151 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.056052297 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.067528892 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.073653706 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.135439607 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.06783844 seconds)
    (301/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.054081757 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.093010748 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.069917176 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.067336126 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.07527008 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.173302563 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.235552818 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.095199761 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.069654932 seconds)
  done (took 31.486749961 seconds)
done (took 32.926492324 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085765497 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.094426626 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078325006 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094382079 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082798084 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077709043 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.075605587 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.081073863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.083150175 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.08427896 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081346198 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.058296056 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.077491534 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.078332327 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.077665708 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.092445386 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.081871605 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.076082859 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.076075111 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.067685384 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.075837084 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06842072 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.070199273 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.057566673 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.081119667 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.074203748 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.077503324 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.077013585 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069014699 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068467907 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.072071054 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.07616576 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.068381529 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.081966116 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.075691231 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.076236373 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.077128383 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.079393001 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.070004335 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.067993068 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.076941812 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.068059351 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.07555159 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.076387803 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.075910057 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.074947003 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075861898 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.07973327 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092221497 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.069992834 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.077724129 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.078357207 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.079518649 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.075926536 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.072332255 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.075948437 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.073230966 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091677267 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.076698735 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070638236 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.076621215 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.076751733 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.073650208 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.075672779 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.075936741 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077891955 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.079240878 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.073874424 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.077586415 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.074039194 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.068698854 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075626967 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.072611653 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.068366275 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078363036 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.079930744 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.067424885 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.073903932 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.076419547 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.076245478 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.068049072 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069785924 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.070187766 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.075332557 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070044599 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.05999392 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.072330621 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.074683919 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067601151 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.07652987 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.075045306 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.07516481 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.069774728 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.079865699 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.067845316 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.073139481 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.068067065 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.068386562 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.069601881 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.072746452 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.068318613 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069682865 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.077919338 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.069229408 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.074027351 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080231085 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.067950241 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074870741 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.066836515 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.067202836 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.081391967 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.076939351 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.067426874 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069704626 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.066671838 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074665411 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066200014 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.066603276 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.066885577 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.067088257 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.073642655 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066769773 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068743667 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.214727668 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.083091032 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.068212072 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.072561946 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.070640161 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.069455599 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.074088935 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.068125549 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.068009858 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.069437827 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.064555517 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.070710003 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067714399 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074899971 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06995208 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.075644625 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.069659234 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.075789534 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.0732183 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.074431366 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.073093361 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066972025 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.061998666 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069653039 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069643602 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.069675478 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.067789817 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.069547347 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.068379073 seconds)
done (took 12.871072972 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.069333105 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.131707169 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.094966823 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09464777 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085905347 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.069926883 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077447344 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.096441597 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.070520803 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.099072405 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.088675991 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.086604436 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.111337094 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06768698 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.069718861 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.07296832 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.070387179 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.082073007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.097898064 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.088056066 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.112130693 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.069073334 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092682653 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.09025057 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.087974246 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.103391765 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070158624 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.073079174 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.072784213 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.092247892 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.089436397 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072985069 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.069657722 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.098048755 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.092899156 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.083853673 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.0690734 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.083832341 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069954804 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.068649998 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.070364516 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.09679908 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.081752467 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.082314497 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.073134583 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.078573169 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070633609 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.083829782 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.090056519 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.080183052 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.086114514 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.099760102 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.071543372 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.084727905 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.068205673 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.086113707 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.078402177 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.071138909 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.069561619 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.077286167 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.06937481 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.072476087 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.081639045 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.081233321 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.072647452 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.084902992 seconds)
  done (took 6.943773773 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.086112976 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.093033005 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.0846067 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.085581345 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068314542 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069617769 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.069245863 seconds)
  done (took 2.097204337 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069691015 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.088620152 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.089598862 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.089250275 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.083104736 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088976868 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.080528951 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.070022297 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.089680082 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.070566438 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088619361 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.098792131 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.072416165 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.076207492 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.091848626 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.069447482 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.091749838 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.069932445 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.072606088 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091696258 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071602152 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.098707799 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.072929491 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.070599371 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.082899338 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.069741562 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113389162 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07380707 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.071823005 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.072753691 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06766311 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.107193125 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.082137093 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077600002 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069863429 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.084013994 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.083613765 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.068254221 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.086178837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.078021634 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082149965 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.070590324 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.070608369 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067932186 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.073287249 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.079221324 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.070807702 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.071056638 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.072191009 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.088998781 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07027829 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081971708 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071748526 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.074843718 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.071721334 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.07588721 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079208368 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.070739113 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087526535 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071041879 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.084968357 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084107571 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.082582607 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084352211 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.071954828 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.082492491 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08296068 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.072955733 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.073383154 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.074202007 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.083837395 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.068731984 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.071220373 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.079713699 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.072032773 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.09069606 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.090778899 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071260497 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.082506206 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.070505083 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.069824804 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.069546187 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.090227453 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.074620128 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069549698 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073724271 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07327681 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.068300969 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.069307815 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.074140225 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.068016728 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.071623046 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.072837529 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.072505655 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.072180284 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.084938929 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.07258369 seconds)
  done (took 9.095337368 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.072374389 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.070546682 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071711646 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.070519979 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.070667727 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.070465961 seconds)
  done (took 1.996210285 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.090805915 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070761013 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081428733 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.073746906 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.102255974 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.088352278 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.088174628 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079627942 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.084352393 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080118914 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.087867887 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.089158141 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.093071892 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074560731 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088048032 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073948307 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089240055 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.07709806 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.080343389 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074934257 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.087760451 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074774337 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.075580595 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.083013917 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.077795399 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.073984286 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.080356899 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.080169158 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.079720678 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.07971258 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074286913 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.077722136 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.073035781 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.079446699 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088376209 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.073381441 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.073373473 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.078660896 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.074026567 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.07777065 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.088474908 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.07466219 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.075845179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.07898362 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.079448614 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.072723394 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.078831666 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.080924529 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.088235813 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.078653746 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.082033537 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.07411786 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.077904894 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.078991689 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07345251 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079477413 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.079705145 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.089042173 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.074526183 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.073558232 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071202905 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.077658238 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.078904641 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.078821503 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.079779156 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.078926908 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072957 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.074419075 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.074935372 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.073357182 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.078817522 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.070952302 seconds)
  done (took 7.25603626 seconds)
done (took 28.918636143 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.532835298 seconds)
  done (took 2.05042137 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.596773222 seconds)
  done (took 2.146910464 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.99626736 seconds)
  done (took 8.546722277 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.363410975 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.466797239 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.699092352 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.136185581 seconds)
  done (took 3.253691825 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.713389234 seconds)
  done (took 2.27054672 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.229232328 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.221849381 seconds)
  done (took 2.020887685 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.374502115 seconds)
  done (took 1.921736146 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.080680266 seconds)
  done (took 2.632762211 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.231279406 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.174883386 seconds)
  done (took 1.961723916 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.451739609 seconds)
  done (took 2.002278905 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.830975039 seconds)
  done (took 6.386437483 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.222138715 seconds)
  done (took 1.819470407 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.236549239 seconds)
  done (took 1.792723654 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.758895218 seconds)
  done (took 3.314522659 seconds)
done (took 43.680416529 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.085258819 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.086511738 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.086941703 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.083707337 seconds)
  done (took 1.878382717 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078845206 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.075122771 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.078560709 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.075125618 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.078715235 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.075058265 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.076341844 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.077464615 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.075008599 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.075237022 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.075235312 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.075481695 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.077469765 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07674325 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.073465904 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077938353 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.077994179 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.075463558 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.077916177 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.075302624 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.073231479 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.077224229 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.077312122 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.074224078 seconds)
  done (took 3.388572482 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079458755 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.07558746 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.077025227 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.074360208 seconds)
  done (took 1.872468054 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079749991 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.090869786 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.089376433 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.080114098 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091871154 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.086753972 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.07112473 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.071742566 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.073083606 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.079909524 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.070852307 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.095961326 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.089340096 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.079917787 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.082267522 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.068491371 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070881927 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.089360751 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.081533947 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.081117349 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07320074 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.080818278 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.071201079 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090810746 seconds)
  done (took 3.502084801 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.086831516 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.101040996 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.081587928 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.090640238 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.093748691 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.068305502 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.088095932 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.093418808 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.125762549 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.068226 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.073600254 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.068179244 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.076523617 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.068452284 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.083330286 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.10909876 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.112144129 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.071727502 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.099461058 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.068606741 seconds)
  done (took 3.299540738 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074374367 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.072173813 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.073440558 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.068720067 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.079651747 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.075026545 seconds)
  done (took 2.01357602 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.070931822 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.072574187 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.070020138 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.069795196 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.073919492 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.069442749 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.068052735 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.070077915 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.07091312 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.069490304 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.069655947 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.068482002 seconds)
  done (took 2.409493657 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.182800035 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.071238737 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.070771926 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068034885 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.072962577 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.069210904 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.083208306 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.070361045 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.092782499 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06920583 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.070049016 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07108914 seconds)
  done (took 2.559761364 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193477147 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078212083 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22283053 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148799628 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108610924 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.112439084 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111076986 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110932648 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.135646789 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.099098199 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159235633 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161162029 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105777696 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134025553 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.090143174 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100474566 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148769823 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159736188 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105489234 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159468395 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141140456 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.123748565 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142755878 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10139564 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.105423964 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118857699 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.074112191 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08116398 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163900172 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129762591 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139846479 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11127893 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096940848 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170131174 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.162970316 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.13679209 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144057444 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085342476 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.103232626 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.129774064 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188176658 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088800132 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.154054551 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108683527 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08082904 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129462968 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115490921 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118113564 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.103183199 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090713805 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137063721 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167594912 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.121725081 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082599185 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11387285 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103810702 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.10248655 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.10418329 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15702477 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143291738 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117885344 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.070895815 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.103580363 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135935198 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.121125867 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.099203875 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.113663519 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085664898 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120604827 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138807468 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.110871052 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126578423 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.107239163 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084691581 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110421599 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128682823 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114464592 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143140457 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114418106 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.072104039 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111833031 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.093625293 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.077710265 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.139111559 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074592248 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157402478 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.094684275 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.100232002 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.114548026 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100792733 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101469391 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141082675 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.392654519 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105579919 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.07086089 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.107235635 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.119541114 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142371352 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.089567202 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107414082 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116960463 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.08054144 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13220338 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.078461729 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.121917419 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.079313855 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12207858 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1276303 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079864851 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.121051389 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.103711816 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.10126647 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129039874 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155551103 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090053099 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.0832771 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.161767573 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.121309036 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.102865086 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140371923 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151546991 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.10124786 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099654427 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144756125 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.167080932 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.090432728 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157724095 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105219643 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084825113 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088235613 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121397255 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110237554 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.12178798 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08300914 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.116677077 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160063115 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.076427544 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.095568933 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131101386 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080060953 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082446634 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.104648369 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103570846 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.09579232 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.097854052 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.101233369 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133415284 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.276796426 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104823762 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122883651 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.098139099 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.160049677 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.088731839 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.101618954 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102679657 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.072008368 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.130852203 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149069128 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.080078865 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155231885 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.119874974 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114771794 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117540969 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086152841 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13452332 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081339727 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.072594707 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139032051 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110166416 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.108165186 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.145568835 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114265083 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.121835344 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.116426161 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.128462348 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126877809 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.126257808 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.105610422 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.08925152 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.110585839 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.124823255 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.076031421 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.091050458 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081870731 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104468328 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095599915 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.085089205 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137290457 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120784411 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111534355 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112213247 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.098987252 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140275768 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.077719553 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123501772 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117124299 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095930119 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.145454713 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145173819 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128978461 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.253742198 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.138139554 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.075281945 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078981119 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.091737352 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.121990803 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.086420716 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.084662966 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113060734 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.140824844 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124550707 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131751412 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.119892862 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116977932 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148566951 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.072789267 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.118380805 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140816756 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120000697 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.104722726 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.092144105 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.098957691 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13825378 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10551338 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171392262 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112527306 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.121624133 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149223473 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.101695896 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.080732907 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101298937 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.129030657 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103054943 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.137850165 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.098382112 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.0893804 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107281083 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.077159912 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098569495 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124539949 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116913746 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131635713 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.113426889 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131396712 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078876636 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112304221 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.121811537 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118794736 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.066222653 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11526893 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152890726 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094893247 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114719937 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145364591 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080457826 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.131414056 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163378752 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.137514674 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.085268814 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10485282 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116397702 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.121501079 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.114119437 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131485845 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102512018 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129753911 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105609534 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084185413 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086190385 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093585165 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100216806 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.091561673 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.099995099 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.108810203 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.094336731 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124075226 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.099904623 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105685801 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112900959 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.097384096 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.090793343 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094534159 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163139732 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.113748088 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.157146272 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097893426 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.13361052 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150423646 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.07539152 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078911023 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077848845 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131297037 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08472531 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124200302 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.106345402 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112455047 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.117894577 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131024676 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.094245012 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.069443397 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104710341 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126288002 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118923854 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.095708472 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.09964078 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151205305 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.364543823 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082870588 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113026758 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116986816 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105562875 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165028911 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.066213596 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106741976 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080469264 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.083669979 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124968038 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145477786 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083942379 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.101167894 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119508329 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112330569 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125799284 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100718276 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111507889 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.124737343 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.1453176 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126101694 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.091615215 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110878909 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125929444 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150753443 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103152796 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.098458833 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166191904 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14767528 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.154294935 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.087908182 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113584934 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112935467 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110739817 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135754822 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08500868 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156978917 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083834633 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133136238 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102813815 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.08994922 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12628113 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.111322129 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090107766 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140258167 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114928018 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084352703 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079072516 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114884151 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116447979 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103533616 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.076976143 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.292556106 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.078762808 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.132383647 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.155657465 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082393636 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103540081 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095390633 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081515058 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103675898 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.101081922 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08832964 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.100046356 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163365471 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.087518184 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143657091 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131247124 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112446305 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.131564183 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.10244812 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.640468321 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.080127118 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146274348 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113658034 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164908034 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100699349 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115891113 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108797552 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118999201 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.139633383 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102683809 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.179168509 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.129214911 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.114831799 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081518651 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.102198846 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103606313 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.088401592 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106062818 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111503711 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113918127 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.094309949 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.114178499 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.122471529 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.083984024 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096860664 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148709266 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113400123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139138842 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133957167 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.085461249 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.115212728 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.289891181 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08156115 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.117156355 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144891556 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104825113 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099909374 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.081945773 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.098678832 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152612727 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.075105881 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150765626 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118311082 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108093978 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11208585 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.110471394 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130743835 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.104874315 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120587417 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093020527 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.107568242 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112316651 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.083327374 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.079318741 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.104668365 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109458209 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.098183334 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.096919474 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.100253566 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146049445 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07520204 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099518929 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114066803 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139347407 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166146639 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.088453471 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084601971 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118000044 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.114870367 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111158368 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120263744 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.080775987 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083223488 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.082386502 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.082319776 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.106583742 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112764913 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113261031 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109690718 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156250607 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.083901462 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222257378 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.095158598 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103473258 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.070967951 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.079801637 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095945369 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.097346598 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.104311411 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111213651 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.152649314 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.095436668 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.089774265 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.090689837 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.076159639 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08417598 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121573276 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105571854 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.113900712 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098838109 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.064065726 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103298962 seconds)
  done (took 57.593764311 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.113884217 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.086537232 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.100747194 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.147012007 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.124732336 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.201403588 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.158646149 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.191129092 seconds)
  done (took 2.925081086 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.073057592 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.097183583 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.105189884 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.085766547 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.069849318 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.072676283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.22041705 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.084548885 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.070354938 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.09566773 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.080652803 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.072297099 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.416140516 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.071507653 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.071437461 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.066416823 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070550776 seconds)
  done (took 3.555903609 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.383033866 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.625786714 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.334367185 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.07993517 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.966393165 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.093096284 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.17038775 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.137148645 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.081325177 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.546026676 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.417044895 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.135334408 seconds)
  done (took 18.715523701 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.084221497 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.077956337 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.091418084 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.093394864 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.083928142 seconds)
  done (took 2.17965163 seconds)
done (took 107.48089005 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.085034003 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.594112318 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057225854 seconds)
  done (took 2.424352396 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.089136834 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.087274113 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.090256317 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08512001 seconds)
  done (took 2.100182624 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 0.076623689 seconds)
    (2/2) benchmarking "Float64"...
    done (took 0.078964714 seconds)
  done (took 1.90730731 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.225209144 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.168355124 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.096987816 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.084626037 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.081800561 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.081889501 seconds)
  done (took 2.006747247 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.074614861 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.077218857 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07484462 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.078901271 seconds)
  done (took 2.057495326 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079388414 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.055721478 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.058220965 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.060853811 seconds)
  done (took 2.007683726 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.088655083 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.083884832 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.080838029 seconds)
  done (took 2.008669915 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.100197984 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.088250413 seconds)
  done (took 1.941815059 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.083836175 seconds)
  done (took 1.839273016 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.094072891 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.099911095 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.128711911 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10960159 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135518935 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.107721178 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.086651421 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.086966991 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.078593468 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.088011896 seconds)
  done (took 2.770696392 seconds)
done (took 23.384337555 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08036062 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.369072018 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361861934 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.091723256 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.673411305 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.360452147 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.970615167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095558163 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.141029115 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070668306 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.086999687 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.652751813 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.952522147 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.326648641 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.95025446 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.32684809 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.652006913 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.071189327 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071283329 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.070908771 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.957457135 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.070606715 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071781232 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072145132 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.651603864 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.407600001 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071715033 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323495254 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.07113938 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073223135 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.392026917 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.071605526 seconds)
  done (took 16.340164009 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.089771516 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.120155385 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.075304959 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087721479 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.073041657 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072197887 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.07400191 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072501072 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.122268421 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.070518454 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.088161293 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.070717123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.074557642 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.071809042 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090161504 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.071542093 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.071744496 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07197598 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071496388 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071781561 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090403963 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071012475 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071559215 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072434191 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07200476 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.083279135 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.071800072 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.071812504 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072032847 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.073704888 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.074884396 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072517051 seconds)
  done (took 4.278841208 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.119323325 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.125708926 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.07571334 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.10615847 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113596626 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072828039 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.144609052 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.095868453 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.130083612 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.072251986 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08796652 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.071324759 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.103647879 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.072183509 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.090999571 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.07201336 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.073307556 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.07181892 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.071608912 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.071319363 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.090437525 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.071506343 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.071804772 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.072565356 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.072381528 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.084780892 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.072785077 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.072927739 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.072237791 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074063398 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.075930075 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.072267701 seconds)
  done (took 4.516940678 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075503422 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.077408865 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.085810724 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.086805145 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.07357348 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.074654724 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.076435462 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.072442078 seconds)
  done (took 2.396403119 seconds)
done (took 29.291180492 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.081641203 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.073229471 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.074948479 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.090853 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.075811829 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.08055698 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.069521222 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.078460563 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.075670156 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.076115888 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.077491781 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.070720203 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.074583698 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.070083291 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.076451335 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.07106404 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.082113836 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.074980045 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.082213682 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.081989147 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.073523687 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.076294761 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.078389926 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.081805774 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.08206319 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.082219396 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.080081921 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.076453201 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.071697386 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.07426689 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.080359583 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.086647504 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.071791101 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.081381337 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.071031531 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.071128 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.074604458 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.070902148 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.081301175 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.079239686 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.072509055 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.079238828 seconds)
  done (took 4.976924939 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.089732966 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09379807 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.089826878 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.067469781 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.07140043 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.071012955 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.092555318 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065416514 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.062893363 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.089916652 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.059659306 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062309892 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.065523344 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.05777795 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.062759999 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.060389391 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.064433993 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.059242845 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.063071228 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.062601316 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.0907642 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.05771931 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.079966793 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.066046429 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060436393 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.06561241 seconds)
  done (took 3.621525921 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076914562 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085446541 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.09149445 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.143376138 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.113522267 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.080505201 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.080863955 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.094428629 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.09637433 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.070239614 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.073888377 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.095154538 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.090339465 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.076560568 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.070831861 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.086966353 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.088024451 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.072143624 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.076264738 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.093418307 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.088289273 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.087880227 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.09400631 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083940875 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.069920878 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.073258664 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074180658 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.084234661 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.073709349 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.081800373 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.076241564 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.073819802 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.072448537 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.082535657 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.073731071 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.072378083 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.096263331 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082858586 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.081129288 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.071559263 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.07813848 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.072670874 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.094354033 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.126633822 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.071635453 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.077178025 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.074815933 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.081238944 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.071446032 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.097455813 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082035743 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.070777554 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.073623995 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.069950624 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.070735537 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.073306655 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.072471474 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.072942825 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.079429976 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.07659306 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.094144268 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.075482702 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.086593491 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.070586972 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.078635326 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.069995872 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.071489556 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.070027591 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095505751 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.072408972 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110198094 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.073874594 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.074034626 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.079372732 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.078945533 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078531702 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.070697765 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.086482202 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.082289326 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.07572902 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.078425028 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.073957278 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.07310506 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.098857487 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.073828243 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.073057291 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.072207977 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07642537 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.073357077 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.071716346 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.082992852 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.07024354 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07321523 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.087333508 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.070779072 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.071964982 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075865769 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075233308 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.070218937 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081584017 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.074751932 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.071623057 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.079932522 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.070768011 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.073126878 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.081815874 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.076429279 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069757088 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.074240732 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075520233 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071020367 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.072498578 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.072901445 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.072258396 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.078895432 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076857568 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.074523033 seconds)
  done (took 11.114354646 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.160808532 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.150588702 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.073582798 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.14457119 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.079115356 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.081622202 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.145485365 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.095076758 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.07078593 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072031508 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071968954 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.110118371 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.105743337 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.120692059 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.082784366 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.07124645 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.092443092 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.114601022 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147146537 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.142742461 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.093815712 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078831372 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.074156529 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072892209 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.07284286 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.080411574 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.087367998 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.079086497 seconds)
  done (took 4.59675461 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.082380859 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.10378662 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077043463 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.092407953 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.091446476 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.070760497 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.07277057 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.07247762 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.086921852 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.08092871 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.071425834 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.075572277 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.077848958 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.073554027 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071883639 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.078038735 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.077225178 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072543679 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.074290124 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.075883328 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.080944087 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.094475663 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.074207776 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.070287596 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.076176561 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.070383503 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.066802199 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.086296778 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071513231 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.094748324 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.068964425 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.07579414 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.084037668 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.072181426 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.070656264 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.071401886 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.070871957 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.070754766 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.072544376 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.071858466 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.069611657 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061113336 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.070384931 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081848495 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.084243897 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.060118893 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.075954322 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.076138869 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076287375 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.068656303 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.073869062 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073690276 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.074301577 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.077982071 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.07471221 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.076128808 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.072249865 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.076727988 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.079111374 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.070912435 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.068665711 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.069773301 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.075753949 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.068266047 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.085771267 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075725498 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.069564388 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.070917736 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.07434625 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.086899828 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.073973543 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.078384821 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.071155494 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.075454654 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.077548405 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.073683723 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.074486149 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.070083117 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.070806338 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.071689592 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058953159 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.071175643 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.057255036 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074644384 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.071758371 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.072512723 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073501626 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.078474164 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.085482785 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.075000036 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.079242938 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.073675711 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.070526997 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.074334698 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06423538 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.073390764 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081017993 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.085234679 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071412172 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.06914336 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.08245515 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.076873762 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.072373327 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.062325952 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.077597261 seconds)
  done (took 9.688940282 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.093906227 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 0.072535279 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084999367 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 0.09045341 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.088481332 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 0.077025702 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 0.080437629 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.07218301 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 0.085860186 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 0.076665774 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.079624422 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.071270603 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.080867471 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.079762063 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.072907665 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 0.081140168 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 0.074956882 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 0.085350816 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.0850498 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.071612728 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 0.079244291 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.083109954 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.092729757 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 0.083347226 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 0.082273865 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 0.083201926 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 0.092155858 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 0.079994446 seconds)
  done (took 4.118885998 seconds)
done (took 39.883037678 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.885282887 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.03567853 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.863296016 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.190634228 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 7.194560942 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.884069115 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.953081423 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.85108741 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.141691929 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.893585909 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.210950374 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.94186133 seconds)
done (took 66.965832128 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.902113732 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.990331457 seconds)
    (2/2) benchmarking "String"...
    done (took 2.094866015 seconds)
  done (took 5.868164302 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.187074567 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.510945665 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.100035488 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.856223224 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.860672901 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.176477626 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.653842541 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.367403969 seconds)
  done (took 31.311466336 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.099893124 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 2.08336263 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.590866083 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.62457339 seconds)
  done (took 16.23553903 seconds)
done (took 65.500561987 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.847900465 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.901652024 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.885997856 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.838409859 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.912908037 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.871283891 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 7.313931649 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.934536334 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.850398846 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.840028689 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.858425444 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.292581082 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.860857389 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 7.333214782 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.857450953 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.860134656 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.883903792 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.43490738 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 2.008060593 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.861373189 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.857072842 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.914934502 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.857109898 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.866854822 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.862338161 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.852047229 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.259342426 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.86637005 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.707084651 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.855013699 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.910156114 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.41467967 seconds)
  done (took 207.455474597 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.85419087 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.837003261 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.949766731 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.884878359 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.356263512 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 3.038969638 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.943578172 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.401243673 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.862407448 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.868385854 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 3.069128527 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.86047513 seconds)
    (13/36) benchmarking "trsv"...
    done (took 3.107469994 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.804288091 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.88274714 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.924532147 seconds)
    (17/36) benchmarking "trmv"...
    done (took 3.100074233 seconds)
    (18/36) benchmarking "symv"...
    done (took 3.145632919 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.885522298 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.007805349 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.865827689 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.952259429 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.887589423 seconds)
    (24/36) benchmarking "symv!"...
    done (took 3.076845464 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.858769509 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.946802187 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.874299614 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.865600882 seconds)
    (29/36) benchmarking "asum"...
    done (took 3.048646033 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 3.0489146 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.87662777 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.899494816 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.060357404 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.734477211 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.865613043 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.880088921 seconds)
  done (took 173.313456227 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 2.049562572 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.857145096 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.856896037 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.856129962 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.862724093 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.856464844 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.977533558 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.985815677 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.482327339 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 22.158206405 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.909920679 seconds)
    (11/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.859297016 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.661387773 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.855107188 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.927035599 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.868833809 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.857503973 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.873403958 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.882845858 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.857984775 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.856904257 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.991508179 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.869997665 seconds)
    (23/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.856910595 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.863678051 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.858496393 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.862507964 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.227666469 seconds)
    (28/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.856445777 seconds)
    (29/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 22.002222099 seconds)
    (30/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.857237286 seconds)
    (31/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.854749021 seconds)
    (32/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.860360199 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.098446042 seconds)
    (34/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.857364212 seconds)
    (35/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.858659452 seconds)
    (36/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.712396118 seconds)
    (37/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 11.498312548 seconds)
    (38/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.950060517 seconds)
    (39/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.859522193 seconds)
    (40/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.863622405 seconds)
    (41/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.855418169 seconds)
    (42/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 2.074713899 seconds)
    (43/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.858885878 seconds)
    (44/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.858565858 seconds)
    (45/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.861512555 seconds)
    (46/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.863482176 seconds)
    (47/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.008340252 seconds)
    (48/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.861554688 seconds)
    (49/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.982676909 seconds)
    (50/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.857988306 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.349222009 seconds)
    (52/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.856256931 seconds)
    (53/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.861174601 seconds)
    (54/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.731173601 seconds)
    (55/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.45846456 seconds)
    (56/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.86117144 seconds)
    (57/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.86148331 seconds)
    (58/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.858289283 seconds)
    (59/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.856704427 seconds)
    (60/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.868321354 seconds)
    (61/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.782688748 seconds)
    (62/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.931488658 seconds)
    (63/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.858310737 seconds)
    (64/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.862135791 seconds)
    (65/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.866694747 seconds)
    (66/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.86019025 seconds)
    (67/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.874703888 seconds)
    (68/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.859809016 seconds)
    (69/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.600906165 seconds)
    (70/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.921576394 seconds)
    (71/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.974400308 seconds)
    (72/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.989297537 seconds)
    (73/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.860467375 seconds)
    (74/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.925017404 seconds)
    (75/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.950765046 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.8602729 seconds)
    (77/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.86089294 seconds)
    (78/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.861564304 seconds)
    (79/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.858907631 seconds)
    (80/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.939255827 seconds)
    (81/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.861396784 seconds)
    (82/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.986772448 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.867211956 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.861668368 seconds)
    (85/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.859754567 seconds)
    (86/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.910976605 seconds)
    (87/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.931008554 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.857341726 seconds)
    (89/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.723437122 seconds)
    (90/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.861851132 seconds)
    (91/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.859060233 seconds)
    (92/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.154983527 seconds)
    (93/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.929897766 seconds)
    (94/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.860729619 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.861805915 seconds)
    (96/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.860600395 seconds)
    (97/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.986838618 seconds)
    (98/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.982965664 seconds)
    (99/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.578117994 seconds)
    (100/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.863357107 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.675071167 seconds)
    (102/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.86992413 seconds)
    (103/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.997130137 seconds)
    (104/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.860997856 seconds)
    (105/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.012163531 seconds)
    (106/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.86240577 seconds)
    (107/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.943414215 seconds)
    (108/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.862878248 seconds)
    (109/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.867187123 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.894181181 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.862184331 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.921163952 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.861064596 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.235931561 seconds)
  done (took 412.299016855 seconds)
done (took 796.963841516 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.459845937 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.431297356 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.53560604 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.45358447 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.426235684 seconds)
  done (took 14.09796159 seconds)
done (took 15.889276437 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.95016401 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.962211908 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.8913044 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.955300876 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.886502763 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.956388843 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.937057897 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.890748121 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.917807133 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.892652892 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.922633077 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.890298666 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.876413754 seconds)
  done (took 26.71560246 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.095745599 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.104187858 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.931116249 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.091299355 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.909829205 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.10349738 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.024265657 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.014752508 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.011095549 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.879148187 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.874611226 seconds)
  done (took 23.835036431 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.096831169 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.100653655 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.94446859 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.09910803 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.915845841 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.092325989 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 2.024945508 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.018448127 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 2.020725568 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.878027084 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.877366552 seconds)
  done (took 23.859874119 seconds)
done (took 76.199362368 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.872830562 seconds)
  done (took 3.663742596 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.898597049 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 2.065186296 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.883574055 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.878002615 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.873488046 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.873452449 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.876474078 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.871826506 seconds)
  done (took 17.0142244 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.870165958 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.870961954 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.870177141 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.869070911 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.870168937 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.868546129 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.872619855 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.872381932 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.868501716 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.870102764 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.872463585 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.871648969 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.865732169 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.87180075 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.87056814 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.869479542 seconds)
  done (took 31.721234807 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.868590692 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.869600298 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.869384957 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.86771441 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.868136599 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.87248075 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.868063321 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.867320209 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.869694535 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.8715467 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.870946438 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.869397758 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.867899064 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.867480822 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.872351988 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.870445659 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.86771764 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.869192227 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.873310425 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.868830222 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.872143049 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.870207803 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.871829 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.871760121 seconds)
  done (took 46.671562584 seconds)
done (took 100.865446771 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.614777772 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.516581621 seconds)
  done (took 9.92726867 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.878518448 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.875411585 seconds)
  done (took 5.610582538 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.873442382 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.876905527 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.872723479 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.874663419 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.872896423 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.876022748 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.873386215 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.870902037 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.873877425 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.875715501 seconds)
  done (took 20.536037935 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.873056045 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.876233307 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.873617672 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.876082663 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.874774628 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.871729145 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.872925539 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.875485436 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.876493329 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.873221769 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.874141858 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.871106197 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.875151023 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.874582331 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.877206829 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.875235026 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.875077236 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.872818628 seconds)
  done (took 35.536474389 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.875533602 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.877602735 seconds)
  done (took 5.549361226 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.877015352 seconds)
    (2/7) benchmarking "second"...
    done (took 1.871055929 seconds)
    (3/7) benchmarking "month"...
    done (took 1.87322068 seconds)
    (4/7) benchmarking "year"...
    done (took 1.873962955 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.872946745 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.873657673 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.87386437 seconds)
  done (took 14.912444877 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.878872807 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 2.021919438 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.083325284 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.534157006 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.879121695 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.881187752 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.845235901 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.879632651 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.8813733 seconds)
  done (took 20.683974549 seconds)
done (took 114.552090259 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.70279505 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.872792266 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.161693414 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.925386172 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.934169179 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.216547351 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.907832285 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.164647493 seconds)
done (took 43.684320725 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.936779511 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 3.568338531 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 3.610264867 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 7.012658759 seconds)
  done (took 15.990640895 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.85940071 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.406906021 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.918293005 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.538681211 seconds)
  done (took 20.728717477 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.244060689 seconds)
    (2/2) benchmarking "read"...
    done (took 2.230556763 seconds)
  done (took 6.278798044 seconds)
done (took 51.735241626 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.881622943 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.878471109 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.877958975 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.878643522 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.876541378 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.876584366 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.879014462 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.881553103 seconds)
    (9/24) benchmarking ("zero", "Float32")...
    done (took 1.877640311 seconds)
    (10/24) benchmarking ("one", "Float32")...
    done (took 1.880500727 seconds)
    (11/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882685183 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.88090793 seconds)
    (13/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.876141426 seconds)
    (14/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.875866415 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.881116211 seconds)
    (16/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.879980832 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.875664977 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.879282694 seconds)
    (19/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.879179956 seconds)
    (20/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.878075104 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.878193581 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.880030569 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.875793635 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.877148087 seconds)
  done (took 46.887664224 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.880228948 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.876142533 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.877854441 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.878854262 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.878745351 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.880279609 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.882155272 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.877869728 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.880419841 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.877902137 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.87837462 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.879104084 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.881789312 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.87763449 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.882990258 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.879367265 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.87824612 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.878488404 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.883524331 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.879584166 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.881295069 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.878670206 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.879848954 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.881317057 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.88115706 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.877324677 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.883395569 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.88084891 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.883989187 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.880353524 seconds)
  done (took 58.198007165 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.888116586 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.890999695 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.884061486 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.882991868 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.883596275 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.880722694 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.884759438 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.882815906 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.884357928 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.883051137 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.883569835 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.883818511 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.885939155 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.882367671 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.882325928 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.883905776 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.882699023 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.883412892 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.883127915 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.882048787 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.882747293 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.883737214 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.884832491 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.884156574 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.88341167 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.88262431 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.884732321 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.884235128 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.883561264 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.882142975 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.883530898 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.884379532 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.88643198 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.882744525 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.885703999 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.884854854 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.886083216 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.89341495 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.882650143 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.883044048 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.882324503 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.881812803 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.885229144 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.883815739 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.886028542 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.884654143 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.885442525 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.884768495 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.887119342 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.886772463 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.884140352 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.883350487 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.886092908 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.882729809 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.886260307 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.8850049 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.882126564 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.885915677 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.887070829 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.883993793 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.886443055 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.885933016 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.884811741 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.886899262 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.886699683 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.882427302 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.882372972 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.885293885 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.885659469 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.883487941 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.884808768 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.884967963 seconds)
  done (took 137.491506352 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.885741117 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.880944966 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.884378596 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.885295254 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.88138149 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.888476379 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.885845731 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.884039186 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.881252152 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.882543262 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.886299637 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.882706984 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.882553567 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.884361374 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.886903577 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.884427458 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.886333226 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.886889713 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.889350546 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.888951446 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.885119179 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.886012951 seconds)
  done (took 43.275500598 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.88922076 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.88697362 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.884701556 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.887488611 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.886834604 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.889008838 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.886787374 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.887164393 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.890413658 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.88805076 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.889334106 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.88930117 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.887842719 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887906476 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.88627978 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.886424516 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.891942011 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.887445743 seconds)
  done (took 35.79633151 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.889159927 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.888322339 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.889935362 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.889521317 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.888948621 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.890132921 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.889283543 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.890113866 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.88936518 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.888460415 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.890357093 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.889248228 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.89158866 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.888983198 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.891181011 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.888662509 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.890313395 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.887765638 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.89060534 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.887605604 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.889677039 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.889838741 seconds)
  done (took 43.383922438 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.89127525 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.892672696 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.888337225 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.890188285 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.887827515 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.891184372 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.889871134 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.889078736 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.893059093 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.890603202 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.889134573 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.892278181 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.889256571 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.887766866 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.891074964 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.890925566 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.893001777 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.889755846 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.893785701 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.889606696 seconds)
  done (took 39.625066701 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.893961633 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.89272055 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.891072535 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.892110787 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.892241781 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.894420352 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.893825891 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.895104274 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.894516295 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.894024292 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.894382342 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.89372332 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.894751383 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.892710514 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.894961092 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.894282313 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.891384338 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.894651345 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.892616155 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.895592821 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.894788249 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.893659207 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.89489376 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.894832332 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.892753103 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.89383025 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.895870571 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.89514068 seconds)
  done (took 54.845407296 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.893036268 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.893645635 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.891491185 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.891200056 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.890497722 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.890861015 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.893675392 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.892882922 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.893661558 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.889576383 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.897958735 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.894305032 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.891439335 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.89667009 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.89469561 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.896286867 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895056263 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.890193864 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.892875018 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.892558474 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.894212977 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896072075 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.895676017 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.890324957 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.890080622 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.895955841 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.892596121 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.893956681 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.895532327 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.892219467 seconds)
  done (took 58.61769146 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.91154139 seconds)
    (2/2) benchmarking "in"...
    done (took 1.916859512 seconds)
  done (took 5.6459514 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.892047267 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.896427175 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.895790655 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.893749369 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.893982318 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.896562473 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.897272612 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.8884258 seconds)
  done (took 16.973090767 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.897914207 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.897809814 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.898056938 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.897300873 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.899039018 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.896999635 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.904053727 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.897588684 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.897158614 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.896824065 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.90370389 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.905461149 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.896857227 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.897428563 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.896888701 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.897841481 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.896466303 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.89742172 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.896113339 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.89842561 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.898249254 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.89776808 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.898474903 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.894260809 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.899251343 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.907209607 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.900127708 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.897566855 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.896814731 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.900903681 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.897743354 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.895104266 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.89846589 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.899561085 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.898594896 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.897064557 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.908124946 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.898650216 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.905461036 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.898953201 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.898632063 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.89460299 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.898806469 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.898993941 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.900842583 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.898614972 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.898437577 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.894328787 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.898657014 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.901307904 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.903573057 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.898166876 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.894693735 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.901131058 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.900328468 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.905655168 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.898990705 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.904345471 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.908088087 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.907963916 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.912253554 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.906778093 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.901312424 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.89835819 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.909715624 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.924113889 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.905806772 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.897398664 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.898796704 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.89964561 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.906368514 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.913395448 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.908482914 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.901584046 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.898136041 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.897978736 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.90112427 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.899974065 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.91050502 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.902872637 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.900122718 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.901023949 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.908304472 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.923044102 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.899215967 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.900639931 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.898807878 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.89995461 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.899554283 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.909243655 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.901387098 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.90177248 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.900790559 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.900321309 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.90230831 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.901638509 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.899564303 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.902360999 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.89969453 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.904193797 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.902521177 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.905206879 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.909766735 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.902195345 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.902370908 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.90833913 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.901218301 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.897998197 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.909762603 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.901683016 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.902310961 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.9035064 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.909020964 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.89934392 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.904379277 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.912276364 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.902595028 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.89978887 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.901889109 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.901444694 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.913036293 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.929278561 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.903112257 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.903318173 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.907800802 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.915266436 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.903087849 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.906962661 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.902344318 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.899651235 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.900281876 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.903916927 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.904043767 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.904094918 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.902534871 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.903806973 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.899820159 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.904823031 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.905117572 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.903871592 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.904800993 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.903306345 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.904740359 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.907249471 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.904898925 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.905887698 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.91042323 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.905041184 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.906099021 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.906628659 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.900092045 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.904601681 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.904648743 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.90404078 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.904066562 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.903870605 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.904505943 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.906575498 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.906365245 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.905634151 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.906231129 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.904968468 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.913208687 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.905494743 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.90760498 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.905990389 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.902772712 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.905394831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.905939735 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.906661166 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.9057358 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.90647362 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.909919696 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.915374728 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.906252988 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.907162078 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.910500996 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.906618334 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.906243679 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.909568785 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.91016603 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.91436723 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.906655274 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.913675329 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.906322321 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.907115595 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.906466795 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.908330336 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.908377895 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.908140308 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.91128985 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.916054955 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.922377303 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.917130159 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.906974701 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.913278046 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.907916075 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.912799683 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.911127136 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.909107019 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.907916802 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.906647583 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.908447024 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.908625099 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.910650438 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.907895787 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.907361464 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.907473064 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.907006039 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.90824993 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.908762563 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.907738865 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.909086 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.907074765 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.909244792 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.906936882 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.908415532 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.9063511 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.906279708 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.909317584 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.908108021 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.909873897 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.915448415 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.906430402 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.910198784 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.908224402 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.909764462 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.907287012 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.907837495 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.91092922 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.908971596 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.915812744 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.909043611 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.909419345 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.915567484 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.911191563 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.908316724 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.913845707 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.910061132 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.906444266 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.91261298 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.917400884 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.909540496 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.910512834 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.909994198 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.907031415 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.910665947 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.915385356 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.908327818 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.908441594 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.911633682 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.912715019 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.907262488 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.912787864 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.909089641 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.911104034 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.912560779 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.9086241 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.910220249 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.911933162 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.910270741 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.912157571 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.907280764 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.913265629 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.920621712 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.916364023 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.910860572 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.913440467 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.913615088 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.915087156 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.911879463 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.912485048 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.911030681 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.924029846 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.920964196 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.919387632 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.914085056 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.912437857 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.917019344 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.914270343 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.916835937 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.910620539 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.912147628 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.911759729 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.911509441 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.908267176 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.9110903 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.913174793 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.912825638 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.912774405 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.916276625 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.914249765 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.913120247 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.913423279 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.91325648 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.912086753 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.912763115 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.91322913 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.914609295 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.914121724 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.910458614 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.914704794 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.920908755 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.914246897 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.914287751 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.913339331 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.91356882 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.91314418 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.915129848 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.915164633 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.916461691 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.921494235 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.91808675 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.924199776 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.916583015 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.924675762 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.914423067 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.918177883 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.923611277 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.911845873 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.911810953 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.913960365 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.915192107 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.920471792 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.915416934 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.914294287 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.919295686 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.915021315 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.915040051 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.912967123 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.914742282 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.913652251 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.914157775 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.922839463 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.916717031 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.919610574 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.917807256 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.91169355 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.916868271 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.914041218 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.913170547 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.918158689 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.915858874 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.91729966 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.912690717 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.914883468 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.914169468 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.914675589 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.916260043 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.913088452 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.915475452 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.923280216 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.91758009 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.921246477 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.916376629 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.925403394 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.916804853 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.923534703 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.918899425 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.91722871 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.91600719 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.918926831 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.916843953 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.916527158 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.916430949 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.918009289 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.919871419 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.920338469 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.916884789 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.91997918 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.918368231 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.916876552 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.916877245 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.926842984 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.941823507 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.918457818 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.920912775 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.913465039 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.918489558 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.923416251 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.917754436 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.916066049 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.921951425 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.929402269 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.92561542 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.918648355 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.918816067 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.91900392 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.918516333 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.918570601 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.918284765 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.919247077 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.918798884 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.920484839 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.918538302 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.923021795 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.918227124 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.920029736 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.919704565 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.919042251 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.93078008 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.918875367 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.920522731 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.920562354 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.918645782 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.920270533 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.92034183 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.917609941 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.919181912 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.919706102 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.922011694 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.926400789 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.927770857 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.922739148 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.92034913 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.919608997 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.920856601 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.922388711 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.92053535 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.918296567 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.920160288 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.921042762 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.921130435 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.920695027 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.919004396 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.918691615 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.920903888 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.921258561 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.923308392 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.928133271 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.920633031 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.917465526 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.920021191 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.919886581 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.920791997 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.921784213 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.928584562 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.924458019 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.932652326 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.92853323 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.925662395 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.920976664 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.924811724 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.929015927 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.919734566 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.922036445 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.922448822 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.922560473 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.92284166 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.925912245 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.922581745 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.927679134 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.92191012 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.921181913 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.930719655 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.924966231 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.922896719 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.925468861 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.926599605 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.921500409 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.919807746 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.922928945 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.922237096 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.931195868 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.9239966 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.922954804 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.92520513 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.920683331 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.924238459 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.928666132 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.924218031 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.923637022 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.919975393 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.921183558 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.923895017 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.924618312 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.922414949 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.9225413 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.923615986 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.927513237 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.92909534 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.920404268 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.924315021 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.922786398 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.924734924 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.922807121 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.923975616 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.919143668 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.921545971 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.924404031 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.925272364 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.925673085 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.925489785 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.924238541 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.9265023 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.926364443 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.925361191 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.927537397 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.934954337 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.933681182 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.923311249 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.924426044 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.925828282 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.928523618 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.926366377 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.924242248 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.923851822 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.927388339 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.924503848 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.926632066 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.924398642 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.929003406 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.941516576 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.925389342 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.925991658 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.92597987 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.929916188 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.925973816 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.922142054 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.925211906 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.927923994 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.929153828 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.932573164 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.926698128 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.932782178 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.926051598 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.927279458 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.929678978 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.92912092 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.933370367 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.929695223 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.925294304 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.929127043 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.931689414 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.943907909 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.927365943 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.937078136 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.956672269 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.926034994 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.926978457 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.926471144 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.925957699 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.927090911 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.92977814 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.92721942 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.926983926 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.927305167 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.92627493 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.928839026 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.933163282 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.928810241 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.927756677 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.926419763 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.927009874 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.929013172 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.925554771 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.926718782 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.9280065 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.926643314 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.927022264 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.92977408 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.928441508 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.941671114 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.938173239 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.927885209 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.926241094 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.924696 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.931780781 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.930916047 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.940059294 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.935546629 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.928727641 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.926544674 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.929813999 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.928492732 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.925004001 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.926517897 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.92772738 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.927030114 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.925442366 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.94154642 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.936875615 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.936071955 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.927641446 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.928494918 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.927917499 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.92901605 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.928291488 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.928158362 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.930015427 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.930077171 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.932678021 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.92826491 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.926792522 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.930242303 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.934695344 seconds)
  done (took 1143.082586584 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.924671441 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.922491923 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.920614296 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.918652906 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.922271761 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.921564384 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.916642066 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.911982423 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.912753997 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.911388716 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.913099796 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.915103984 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.911235423 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.912399773 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.913271522 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.91286658 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.913629357 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.911781461 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.911717909 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.913137726 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.912978857 seconds)
  done (took 42.072667973 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.916659843 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.913602624 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.912973825 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.915460416 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.913280072 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.915347505 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.912804969 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.914826077 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.916332113 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.912196132 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.916316123 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.915600743 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.917613701 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.911966038 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.912006499 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.917247437 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.914998154 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.912026158 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.914244942 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.912108917 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.917086281 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.912718935 seconds)
  done (took 43.950149214 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.917399626 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.914845966 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.916972947 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.913865596 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.915096613 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.913454174 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.916429786 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.915885231 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.919267944 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.916986346 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.915810875 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.918041155 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.922403997 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.92610187 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.918210067 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.916516713 seconds)
    (17/49) benchmarking "13786"...
    done (took 2.059665643 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.915620565 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.918859457 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.916169432 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.913225381 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.922122659 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.914983677 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.913450419 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.917565078 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.916557133 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.916148997 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.916510131 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.91721485 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.919120961 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.922185136 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.917207772 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.917083639 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.919191899 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.921434023 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.918191042 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.920485496 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.918182503 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.915094172 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.920573442 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.927037138 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.940410328 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.917874776 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.923317587 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.91872944 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.916952497 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.918747654 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.926625302 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.914652092 seconds)
  done (took 95.981889643 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.917270996 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.914462124 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.911405479 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.914323137 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.914532296 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.919793263 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.911609781 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.91625859 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.912229292 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.912893513 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.912878815 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.907519827 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.906976362 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.908962019 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.909994222 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.907003892 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.905383167 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.906425676 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.906046632 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.907964963 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.907202262 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.914284939 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.909870514 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.909340942 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.913322641 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.908760063 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.909509557 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.910893805 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.907292942 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.90779779 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.907670716 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.913773509 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.910924276 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.907252889 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.905943909 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.911201157 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.911517599 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.909455724 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.913332978 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.912265152 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.909791757 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.910947248 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.90982251 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.910662157 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.912715648 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.908462089 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.905733587 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.909955151 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.909031016 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.910990474 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.912732226 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.906374334 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.910074003 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.906493951 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.910287154 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.910027518 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.910007593 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.909498296 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.912890777 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.910034979 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.908107964 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.910550872 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.908828738 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.908784875 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.912411668 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.910437947 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.910879269 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.90926315 seconds)
  done (took 131.736788588 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.911597857 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.911538792 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.914150094 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.907992078 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.916601802 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.91026023 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.90949031 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.910215534 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.909619712 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.91446635 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.908851945 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.907499493 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.908271883 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.90758573 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.911703485 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.899975256 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.903377054 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.902041338 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.904329727 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.90263609 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.908089842 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.901169741 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.902192059 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.901679535 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.902847783 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.90637235 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.901113994 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.906878149 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.901045562 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.901895876 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.9071825 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.898794434 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.899504924 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.900077466 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.900644774 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.903380094 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.897321176 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.902114302 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.899649063 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.899374732 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.900021635 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.904110687 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.895243299 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.897695791 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.897415106 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.897456456 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.900230725 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.896664853 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.896578985 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.89793515 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.897733285 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.898766939 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.897383124 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.897684987 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.898833798 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.898676617 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.898023829 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.897482531 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.898842778 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.897732442 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.896958112 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.898010219 seconds)
  done (took 119.809465582 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.896356347 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.895808939 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.892769947 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.893342056 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.897377119 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.8940979 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.895831627 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.896250774 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.895621101 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.898246311 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.897079875 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.893702521 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.895173873 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896277915 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.895737979 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.897110774 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.893975777 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.894639125 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.896319231 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.893666532 seconds)
  done (took 39.723679424 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.893823402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.894756383 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.893709185 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.893630724 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.896278881 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.892288611 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.895130612 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.895194783 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.893803884 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.896575601 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.897075684 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.894869088 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.892313854 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.893855169 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.895902086 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.893211889 seconds)
  done (took 32.126371059 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.893781078 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.895705111 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.895307578 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.898565906 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.89279883 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.891608719 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.895533976 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.892570851 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.896085491 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.893269426 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.894684709 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.893439473 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.894434618 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.896135329 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.897257404 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.896045653 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.89270973 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.891880172 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.896336004 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.895606972 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.893136795 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.892532866 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.895384859 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.895850506 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.895273528 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.892976275 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.891407653 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.892730098 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.891238214 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.893500816 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.89260181 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.894441138 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.890874503 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.892373016 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.894171151 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.891983638 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.893294952 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.893834173 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.894266577 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.892998397 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.897076388 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.89218352 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.894517216 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.89408704 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.893217064 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.89753486 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.890069361 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.891492163 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.891534231 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.891576313 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.894591254 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.89847925 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.894651211 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.894190613 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.89390422 seconds)
  done (took 105.982795872 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.89305473 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.894455059 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.892826725 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.894251807 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.892867736 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.891491659 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.893777398 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.890887014 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.891739168 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.894362156 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.893561251 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.896677046 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.890849527 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.896218756 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.891961846 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.894060592 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.892349812 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.89084805 seconds)
  done (took 35.887731284 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.891816472 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.891601464 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.89801022 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.891924575 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.892170449 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.893407443 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.889710104 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.895528343 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.892065908 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.894618621 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.893033399 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.894546989 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.893797111 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.896828133 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.892084194 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.891139765 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.89557451 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.892633591 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.893715032 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.891593693 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.895748552 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.893292845 seconds)
  done (took 43.466713149 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("#779", "UInt64", "+")...
    done (took 1.895469019 seconds)
    (2/6) benchmarking ("#778", "UInt64", "+")...
    done (took 1.892760536 seconds)
    (3/6) benchmarking ("#779", "BigInt", "+")...
    done (took 1.9067383 seconds)
    (4/6) benchmarking ("#778", "Int64", "+")...
    done (took 1.91225346 seconds)
    (5/6) benchmarking ("#778", "BigInt", "+")...
    done (took 1.913510969 seconds)
    (6/6) benchmarking ("#779", "Int64", "+")...
    done (took 1.925238253 seconds)
  done (took 13.257721366 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890844597 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893444585 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.890386635 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893595351 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.896650567 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891180151 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893365448 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.891339906 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893991131 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894897386 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891954002 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.89336771 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893485445 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.890990533 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893313833 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893590355 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891334983 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890404897 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891451301 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894474828 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.89115415 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894024927 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890011646 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.890354729 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.890953475 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892989574 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89375038 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.891869365 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.891107419 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894603765 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895389591 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.891549858 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89542546 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893813235 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893925117 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894590454 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893330748 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.892712949 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893333584 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890207728 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.894112567 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895931082 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894291876 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.89180217 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895237381 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892153566 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893498952 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.892048193 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.890872934 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893861641 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894303077 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893960065 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893197997 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896395135 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894824971 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894901402 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.892345698 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895379106 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.894059103 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893275932 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.892523219 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893813485 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893994331 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893184053 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.895636777 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.892889082 seconds)
  done (took 126.762489054 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893663541 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.893670001 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893218195 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893695646 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893022677 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893685242 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893972958 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.893622767 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.893746748 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893574722 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895403859 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896015275 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.89305896 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893683137 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895299697 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.891937732 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895637528 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.893509713 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893513294 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896003786 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893094539 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894622975 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.893559276 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.893578063 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893059929 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.896042874 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.894456017 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.893172881 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894487083 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.894523382 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894800441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.893893018 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895905103 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.893582367 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.894411745 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894788254 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.893764704 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.895460475 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894667401 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.897233505 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894965881 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.899053479 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895685323 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.895653131 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896179119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.895848382 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895839457 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894367664 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.895342427 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.895259554 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896232388 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.894947664 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.895758392 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.897501833 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.894630062 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.896210403 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896825219 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.895559933 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.897101904 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.898535695 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.896098492 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.89544084 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.899830955 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.896397741 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.898428691 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.896172966 seconds)
  done (took 126.890331569 seconds)
done (took 2643.276287516 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.903372298 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.897074871 seconds)
  done (took 15.616652598 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.062622344 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 2.014507667 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.900491943 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.909990826 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.899631463 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.924760427 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.917638015 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.89925871 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.901447983 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.902126162 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.901766563 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.088891128 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.954910436 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.900502049 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.902933511 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.994509208 seconds)
  done (took 52.899471346 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.905568175 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.90762193 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.918923964 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.909240511 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.905345815 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.917055301 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.936489661 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.90911999 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.94672016 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.917584956 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.979502204 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.912651274 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.907476914 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.957274259 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.917678844 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.920231227 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.996445335 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.978341294 seconds)
  done (took 36.565022456 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.981857292 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.909549742 seconds)
  done (took 10.722157952 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.928027727 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.952215018 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.919433395 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.906430759 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.917003164 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.934920864 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.945230584 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.920303097 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.911669988 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.922574787 seconds)
  done (took 71.086534849 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.910822416 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.906154603 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.905736081 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.907952346 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.900047632 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.901092863 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.904301586 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.903237434 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.560825159 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.934896331 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.910804743 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.910114796 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.903687431 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.907678702 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.902909033 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.93180968 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.015269468 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.903743854 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.902785118 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.911169834 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.905741475 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.97477088 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.917659425 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.906667021 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.934757779 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.558710794 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.908755417 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.910356977 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 2.006326856 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.904865569 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.904306921 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.908935537 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.9088531 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.314089921 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.175377187 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.902191085 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.917996397 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.914360137 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.908024594 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 2.041784785 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.907381286 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.91193172 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.672116397 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.158283976 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 2.010682675 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.947785231 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.206294501 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.919804242 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.907058177 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.935849345 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.910694505 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.906858559 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.919916182 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.400302859 seconds)
  done (took 134.303336547 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.906126669 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.251659204 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.073765651 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.902423958 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.188458185 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112071438 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.903164299 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.953012289 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.90447431 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.13645317 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.164751836 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.008680333 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.903426901 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.899975078 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.901938385 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.900004942 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.060912171 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.977823972 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.903347981 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.9013056 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.936588426 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.148466623 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.025557903 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.903612292 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.930893672 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.115244162 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.027208683 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.012153498 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.695066629 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.902390461 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.968035704 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.903623931 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.905786917 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.899425478 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.060008352 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.000090141 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996446064 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.903820964 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.902385895 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.902148779 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.574828692 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105361941 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.003062053 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.046593077 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.103528496 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.109813072 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.686635832 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.901846053 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.647323952 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.070369232 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.134028039 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.1399761 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.026506029 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.904958853 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.437604503 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.906935461 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.903461903 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.154833182 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.049054767 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.002335728 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.908866405 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.90563636 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.901086595 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.153286356 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.905694693 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 2.001423958 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.907216107 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.903993193 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 2.00639641 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.007285174 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.042807789 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.118052468 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.936733076 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.851940551 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.443475016 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.156886283 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.971780943 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.156088981 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.90875213 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.902310625 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.984974095 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.748285107 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.160233697 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.154904363 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.161713729 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.943507872 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.628432167 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.907200656 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.135918891 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.12968509 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.165466787 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.111541273 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.142608448 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.221630795 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.906448281 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.908999616 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.127562826 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.042637296 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.909038087 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.2574457 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.139723591 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.461996412 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.927133372 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.216596421 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.039408353 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.909204914 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.549872867 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.907729938 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.140106694 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.947490342 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.906100914 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.904459668 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.127995938 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.898850187 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.905945659 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.547470088 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.969229895 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.907938034 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.142431897 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.906897454 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.17905496 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.90925072 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.146871793 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.903041511 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.941742281 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.135653127 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.109452841 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.90890762 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.151871109 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.153301218 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023149059 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.12946784 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.605552405 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.908674214 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.198043079 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.908746116 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.90703103 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.079872292 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.908536536 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.053113843 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.910720677 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.2080377 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.931672039 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.143547111 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.908872111 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.168833887 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.943674755 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.958998097 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.910144542 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.041361526 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.907352486 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.836541209 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.068684342 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.909362474 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.90811997 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.726409486 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.91055269 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.059453025 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.146273336 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.933168847 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.982495215 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.581697275 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.908880832 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.991190091 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.934004829 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.29551449 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.90736603 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.165622807 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.91010909 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.909184063 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.910771848 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.152805181 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.09285166 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.91075479 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.907072907 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.819369939 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.910730489 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.911357792 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.094172386 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.33557406 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.908702497 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.112352137 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.914238191 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.037512507 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.913063806 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.985557418 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.253922752 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.908885681 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.910459034 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.912777629 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.91119813 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.910499224 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.179243291 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.939944206 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.428661995 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.051092291 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.186792038 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.224801092 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.164242033 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.957725107 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.909842777 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.168185989 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.912222654 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.972923432 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.912043305 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.932277635 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.142649526 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.916198123 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.122879974 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.195669941 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.772936961 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.959613776 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.915263244 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.911880645 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.910834268 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.060067469 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.000355732 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.914919207 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.912660555 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.027912413 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.034538198 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.121123164 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.911716957 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 3.984556586 seconds)
  done (took 911.990313422 seconds)
done (took 1235.001042309 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.912675481 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.911368099 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.900588789 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.912887755 seconds)
  done (took 29.472990875 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.921320038 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.917334264 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.917517463 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.918448927 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.920339461 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.916202257 seconds)
  done (took 13.348494447 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.34234593 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.910467522 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.914295357 seconds)
  done (took 22.003879999 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.985623208 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.299400637 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 2.023824227 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.339444262 seconds)
  done (took 10.483641141 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.921035469 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.92211975 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.919395267 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.922540737 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.919271033 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.919213899 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.922086131 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.921956694 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.921327719 seconds)
  done (took 19.128414562 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.976865507 seconds)
done (took 100.250946517 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.126263911 seconds)
    (2/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.935751401 seconds)
    (3/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.070722249 seconds)
    (4/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.981208871 seconds)
    (5/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.611084697 seconds)
    (6/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 2.059190174 seconds)
    (7/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.016611418 seconds)
    (8/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.928064354 seconds)
    (9/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.979394843 seconds)
    (10/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.38690168 seconds)
    (11/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.941536211 seconds)
    (12/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 7.307759556 seconds)
    (13/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.068264079 seconds)
    (14/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.933257966 seconds)
    (15/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.044291274 seconds)
    (16/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.036308162 seconds)
    (17/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.603803774 seconds)
    (18/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.980481836 seconds)
    (19/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.135905632 seconds)
    (20/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.996088267 seconds)
    (21/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.917346994 seconds)
    (22/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.084573834 seconds)
    (23/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.93952382 seconds)
    (24/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.012948489 seconds)
    (25/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 2.060491333 seconds)
    (26/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.918839264 seconds)
    (27/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.159331102 seconds)
    (28/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.092098043 seconds)
    (29/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.905979166 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.152165517 seconds)
    (31/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.210176734 seconds)
    (32/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 2.008185125 seconds)
    (33/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.99035952 seconds)
    (34/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.872716131 seconds)
    (35/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.212506826 seconds)
    (36/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.477159459 seconds)
    (37/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.918755522 seconds)
    (38/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.151495916 seconds)
    (39/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.904244562 seconds)
    (40/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.443460872 seconds)
    (41/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.919663045 seconds)
    (42/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.945326367 seconds)
    (43/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.829716051 seconds)
    (44/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 2.09082683 seconds)
    (45/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.178131542 seconds)
    (46/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.013281365 seconds)
    (47/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.205594221 seconds)
    (48/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 2.024364313 seconds)
    (49/309) benchmarking ("sort", Bool, false)...
    done (took 2.135653961 seconds)
    (50/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 7.032640182 seconds)
    (51/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.944743971 seconds)
    (52/309) benchmarking ("sort", Int64, false)...
    done (took 5.572602109 seconds)
    (53/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.576278232 seconds)
    (54/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.177975443 seconds)
    (55/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.006014782 seconds)
    (56/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.100626237 seconds)
    (57/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.077090757 seconds)
    (58/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.940530952 seconds)
    (59/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 2.055032355 seconds)
    (60/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.25773737 seconds)
    (61/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.42776399 seconds)
    (62/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 2.009771772 seconds)
    (63/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.918787473 seconds)
    (64/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.930292111 seconds)
    (65/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 2.009553842 seconds)
    (66/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.090856197 seconds)
    (67/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.948884389 seconds)
    (68/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.933174325 seconds)
    (69/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.954072576 seconds)
    (70/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.942537866 seconds)
    (71/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.903378138 seconds)
    (72/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.360829905 seconds)
    (73/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.941727945 seconds)
    (74/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.537283032 seconds)
    (75/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.240328778 seconds)
    (76/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.146830189 seconds)
    (77/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.946166131 seconds)
    (78/309) benchmarking ("sort", Float32, false)...
    done (took 5.65402262 seconds)
    (79/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.923875869 seconds)
    (80/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 2.017226108 seconds)
    (81/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.254831955 seconds)
    (82/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.195792154 seconds)
    (83/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.821361219 seconds)
    (84/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.150154008 seconds)
    (85/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.905365048 seconds)
    (86/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 7.002880878 seconds)
    (87/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.915801742 seconds)
    (88/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.603027255 seconds)
    (89/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 7.072144216 seconds)
    (90/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 3.064673519 seconds)
    (91/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.755360787 seconds)
    (92/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.159074418 seconds)
    (93/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 2.057653739 seconds)
    (94/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.325049492 seconds)
    (95/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.95482867 seconds)
    (96/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.282221686 seconds)
    (97/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.010636222 seconds)
    (98/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.907554593 seconds)
    (99/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 2.638455324 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.723589259 seconds)
    (101/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.217741628 seconds)
    (102/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.342889566 seconds)
    (103/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.400478828 seconds)
    (104/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.940695551 seconds)
    (105/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.824373078 seconds)
    (106/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.077856461 seconds)
    (107/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.038983618 seconds)
    (108/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.303027426 seconds)
    (109/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.906859737 seconds)
    (110/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.321536951 seconds)
    (111/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.231338262 seconds)
    (112/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.995815396 seconds)
    (113/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.835745008 seconds)
    (114/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 2.007720692 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.130790891 seconds)
    (116/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.943385635 seconds)
    (117/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.909785936 seconds)
    (118/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.924010681 seconds)
    (119/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 2.067304489 seconds)
    (120/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.347715385 seconds)
    (121/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.572289332 seconds)
    (122/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.925471376 seconds)
    (123/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.950953254 seconds)
    (124/309) benchmarking ("perf_sum", Float32, false)...
    done (took 2.013542197 seconds)
    (125/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.271008473 seconds)
    (126/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.909757223 seconds)
    (127/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.991205979 seconds)
    (128/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.249965854 seconds)
    (129/309) benchmarking ("sort", Float64, false)...
    done (took 5.667485848 seconds)
    (130/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.955868734 seconds)
    (131/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.259966284 seconds)
    (132/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.210557289 seconds)
    (133/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.068040283 seconds)
    (134/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.331467275 seconds)
    (135/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.175987722 seconds)
    (136/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 2.014744596 seconds)
    (137/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.025436512 seconds)
    (138/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.012316252 seconds)
    (139/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.179082903 seconds)
    (140/309) benchmarking ("sort", Int8, false)...
    done (took 4.814594695 seconds)
    (141/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.907443488 seconds)
    (142/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 7.463133873 seconds)
    (143/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.869275922 seconds)
    (144/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.956202394 seconds)
    (145/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.912312792 seconds)
    (146/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 2.034912945 seconds)
    (147/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 7.037290958 seconds)
    (148/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 7.054213215 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.087042002 seconds)
    (150/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.070189616 seconds)
    (151/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.490256831 seconds)
    (152/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.93625151 seconds)
    (153/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.055742224 seconds)
    (154/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.949828607 seconds)
    (155/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.212586486 seconds)
    (156/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.914907778 seconds)
    (157/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 8.098029536 seconds)
    (158/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.991276056 seconds)
    (159/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 8.006127008 seconds)
    (160/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.139584646 seconds)
    (161/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.147316157 seconds)
    (162/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.023866282 seconds)
    (163/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.845541249 seconds)
    (164/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.999903378 seconds)
    (165/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.124136918 seconds)
    (166/309) benchmarking ("perf_sum", Float64, false)...
    done (took 2.021211317 seconds)
    (167/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.850186244 seconds)
    (168/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.932614972 seconds)
    (169/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.936812888 seconds)
    (170/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.355273822 seconds)
    (171/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.91841059 seconds)
    (172/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 2.250527233 seconds)
    (173/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.940238059 seconds)
    (174/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.595597414 seconds)
    (175/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.929877602 seconds)
    (176/309) benchmarking ("map", abs, Int8, true)...
    done (took 3.43627813 seconds)
    (177/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.417322627 seconds)
    (178/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.615690723 seconds)
    (179/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.794309675 seconds)
    (180/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.548119768 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.949463307 seconds)
    (182/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.931922093 seconds)
    (183/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.591293737 seconds)
    (184/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 2.958962387 seconds)
    (185/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 2.025972202 seconds)
    (186/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.28869298 seconds)
    (187/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 7.058385714 seconds)
    (188/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 3.040441601 seconds)
    (189/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.074976727 seconds)
    (190/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.913131899 seconds)
    (191/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 3.457064702 seconds)
    (192/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.931704662 seconds)
    (193/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 7.025871054 seconds)
    (194/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 3.40843716 seconds)
    (195/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.187929263 seconds)
    (196/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.235995225 seconds)
    (197/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.381457535 seconds)
    (198/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.920828528 seconds)
    (199/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.993951175 seconds)
    (200/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.401811832 seconds)
    (201/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.326243588 seconds)
    (202/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.999313544 seconds)
    (203/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.372504598 seconds)
    (204/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.001308106 seconds)
    (205/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.126453804 seconds)
    (206/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.240431983 seconds)
    (207/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 7.059725277 seconds)
    (208/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 3.31247686 seconds)
    (209/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.174483202 seconds)
    (210/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.332046353 seconds)
    (211/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.354076697 seconds)
    (212/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.999735088 seconds)
    (213/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.100916626 seconds)
    (214/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.115675461 seconds)
    (215/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.124728459 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.770393691 seconds)
    (217/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.225747634 seconds)
    (218/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.176380378 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 2.001684283 seconds)
    (220/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 2.016966933 seconds)
    (221/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.783574607 seconds)
    (222/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.92766483 seconds)
    (223/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.142194716 seconds)
    (224/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.439777252 seconds)
    (225/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.028489462 seconds)
    (226/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.062699982 seconds)
    (227/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.24351063 seconds)
    (228/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.954222959 seconds)
    (229/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.036489114 seconds)
    (230/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 2.019490833 seconds)
    (231/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.033793488 seconds)
    (232/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.505718299 seconds)
    (233/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.109924034 seconds)
    (234/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.449573663 seconds)
    (235/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.836005923 seconds)
    (236/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.027413828 seconds)
    (237/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.956385682 seconds)
    (238/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 2.01023358 seconds)
    (239/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 2.050941388 seconds)
    (240/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.237344965 seconds)
    (241/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.183352211 seconds)
    (242/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 7.178399174 seconds)
    (243/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.126706648 seconds)
    (244/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.314696508 seconds)
    (245/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.203342834 seconds)
    (246/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.030224817 seconds)
    (247/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.876283431 seconds)
    (248/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.9464106 seconds)
    (249/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.300039019 seconds)
    (250/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.432473507 seconds)
    (251/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.207590493 seconds)
    (252/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.945148663 seconds)
    (253/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 7.353737171 seconds)
    (254/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 7.465221033 seconds)
    (255/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 2.10158359 seconds)
    (256/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.19343472 seconds)
    (257/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 2.074797881 seconds)
    (258/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.935242672 seconds)
    (259/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.246865521 seconds)
    (260/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.930857194 seconds)
    (261/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.008976158 seconds)
    (262/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.057397095 seconds)
    (263/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 7.203468542 seconds)
    (264/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.355419189 seconds)
    (265/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.995438256 seconds)
    (266/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.927795685 seconds)
    (267/309) benchmarking ("perf_sum", Int64, false)...
    done (took 2.037840359 seconds)
    (268/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.990256469 seconds)
    (269/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 2.061783699 seconds)
    (270/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.015671029 seconds)
    (271/309) benchmarking ("sort", BigInt, false)...
    done (took 6.93211515 seconds)
    (272/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.932092908 seconds)
    (273/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 2.108985322 seconds)
    (274/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.946971076 seconds)
    (275/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.258261572 seconds)
    (276/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.226562724 seconds)
    (277/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.300864274 seconds)
    (278/309) benchmarking ("map", abs, BigInt, false)...
    done (took 7.205835147 seconds)
    (279/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.31356856 seconds)
    (280/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.098450264 seconds)
    (281/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 2.996859588 seconds)
    (282/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.299313546 seconds)
    (283/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.122009895 seconds)
    (284/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.082853811 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.347828585 seconds)
    (286/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.981795357 seconds)
    (287/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.955550212 seconds)
    (288/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.944850485 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.752353471 seconds)
    (290/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.9173075 seconds)
    (291/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 7.019353318 seconds)
    (292/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.744267421 seconds)
    (293/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.930449623 seconds)
    (294/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.040806956 seconds)
    (295/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.171001745 seconds)
    (296/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.919291098 seconds)
    (297/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.37219933 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.972592959 seconds)
    (299/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.931914386 seconds)
    (300/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.930507474 seconds)
    (301/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 4.087520005 seconds)
    (302/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 2.05484594 seconds)
    (303/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 7.321296908 seconds)
    (304/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.245045006 seconds)
    (305/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.942632839 seconds)
    (306/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.930267591 seconds)
    (307/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.928026948 seconds)
    (308/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 3.324160635 seconds)
    (309/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.958036711 seconds)
  done (took 1024.113878058 seconds)
done (took 1026.015349121 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.963621224 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.960427772 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.940154576 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.962537686 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.055206853 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.968135515 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.952873624 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.943177126 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.988341266 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.989829846 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.942512881 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.972753113 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.943661466 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.945325066 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.941364011 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.957067238 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.249033024 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.969764291 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.962020948 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.951191215 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.960684492 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.944350221 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.99123663 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.96843486 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.946105763 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.945980378 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.948727683 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.964862336 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.057596165 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.947680553 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.945537027 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.957952857 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.252479551 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.965896953 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.937403939 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.963278519 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.957134857 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.95301146 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.945864715 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.977503019 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.332792604 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.977201538 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.947179671 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.944292764 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.944600128 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.948981216 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.947703172 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.950702941 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.959054785 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.958517823 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.327215892 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.993788877 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.948944843 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.94397548 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.955382675 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.945614857 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.946797535 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.964919382 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.966502022 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.963494962 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.233684851 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.974250718 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.947892204 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.965604788 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.954813188 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.364036703 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.97053283 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.950607081 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.334871472 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.980951922 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.364167735 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.98841064 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.946279597 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.962385299 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.981395142 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.252187243 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.964606476 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.945774188 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.956337222 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.944986542 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.955432 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.963192461 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.95060471 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.946406413 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.962987787 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.974190075 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.958916635 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.949114542 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.955356682 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.967439991 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.958023163 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.960982245 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.948298513 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.942147001 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.955322985 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.949212865 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.953147156 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.951169689 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.950927177 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.956749027 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.333251258 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.99632511 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.941739743 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.943699022 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.94662738 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.963662044 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.33435038 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.979944075 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.968093632 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.994068908 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.94881721 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.234564024 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.975338118 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.965246072 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.955228823 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.950363855 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.94403135 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.235880693 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.355981207 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.995564337 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.949404155 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.946637926 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.967303681 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.949206795 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.945005428 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.254320249 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.972897904 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.965506198 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.071447238 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.960386873 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.984208294 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.947504797 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.951938172 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.979840117 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.966021963 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.980659658 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.951943561 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.966165545 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.966827658 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.944416879 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.960854439 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.960402548 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.947008656 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.954227518 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.941468199 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.980521471 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.964217001 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.964920466 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.969450981 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.072662693 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.946135272 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.238238427 seconds)
done (took 305.497130921 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 2.017867222 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.937667583 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.044201298 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.944481689 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 2.023760094 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 2.027176149 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.942065858 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.94331392 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.941946478 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.350794938 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.943084088 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.943375273 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.943413519 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.943329516 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 2.030842977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.948562703 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.942994269 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.287834926 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.946622431 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 2.016300259 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.944206311 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.945120097 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.946172479 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.316550006 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.94090818 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.942275801 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 2.018153887 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.94681988 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.281928551 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.946875309 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.941360737 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.282756339 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 2.038570183 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.964349677 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.956608245 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.95558678 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 2.027647767 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.946491968 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 2.02607116 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 2.027838122 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.046851674 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.985503394 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.94670548 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.941960745 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.94843922 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.950917131 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.944128596 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.976982703 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.940873449 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.944643473 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.288963337 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.957337367 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.948969609 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.945464505 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.944526893 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.979476299 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.945173041 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.950376886 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 2.040459591 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.948913423 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 2.01033915 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.320604952 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.32354131 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.946843306 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.941790153 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.945597973 seconds)
  done (took 189.442788488 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 2.015632378 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 2.0246999 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 2.012746454 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.951357816 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.998919892 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 2.014553764 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.951266891 seconds)
  done (took 15.83302713 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.961621763 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.949413851 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 2.000548416 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 2.000249993 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.952124633 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.097168388 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.949042313 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.960279852 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.956155027 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 2.002356472 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.953832796 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.950154746 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.946442152 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.944942947 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 2.001009532 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.960877297 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.067016872 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.951515949 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.953499265 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.100439787 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.947559951 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.957090756 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 2.003700605 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.960662662 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.951559165 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.957057619 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.535828929 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.95405164 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.94550781 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.949653897 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.948529157 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.990745766 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.951280546 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.950002481 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.94703684 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.070172009 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.950165929 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.950242928 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.949619866 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.948373031 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.948925406 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.951114626 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.950961182 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.949218961 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.949496696 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.973869725 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.951565416 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.950615826 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.952923153 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.95125228 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 2.001823815 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.95065729 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.948243425 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.953174964 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 2.005886757 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.959021489 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.951701531 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.94863131 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.953299968 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.948652769 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.103923561 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 2.003418935 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.951778283 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 2.005733872 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.951997644 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.952980583 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.951613204 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.952238526 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.049124222 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.952318766 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 2.002521957 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.949714916 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.110328357 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.980045376 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.954103193 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.954280023 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.954731922 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.953024269 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.956802861 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.95812586 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.950659815 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.955233713 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.958785377 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.950404163 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.949523391 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.064768685 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.05930189 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.950182205 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.96702124 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.960078928 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.94894334 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 2.011400268 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.951624745 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.948257015 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.008540594 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.069763843 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 2.011375992 seconds)
  done (took 213.859997572 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.957193208 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.959226773 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.953898257 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.971041083 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.95214029 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.952849889 seconds)
  done (took 13.615230704 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.9566624 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.955499213 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.954301503 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.954073276 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.954207658 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.955195565 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.956224536 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.954109389 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.957686376 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.955041281 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.956015392 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.96022698 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.954310901 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.954022119 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.954885793 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.953640559 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.953989089 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.952350831 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.955756033 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.956579372 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.109433409 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.956821274 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.955664924 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.953421532 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.958478021 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.951293621 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.964003835 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.953073329 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.953329763 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.963767085 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.956618305 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.956859288 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.955128419 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.958086135 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.959139958 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.955478062 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.95823997 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.957070691 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.95345615 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.957856307 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.955399233 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.956663723 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.956389179 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.95694786 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.956655666 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.957922845 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.960160988 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.962262227 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.957371803 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.958651121 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.956451322 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.955118869 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.958178552 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.957551998 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.95816237 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.959200926 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.961503548 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.958386841 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.956079381 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.957666049 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.956625558 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.958702719 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.961094977 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.960083843 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.954356498 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.957680578 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.957741085 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.960911397 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.958023725 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.955544317 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.95853219 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.954233446 seconds)
  done (took 143.913235071 seconds)
done (took 578.538689561 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.157766196 seconds)
  done (took 9.030095059 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.105816366 seconds)
  done (took 9.021667835 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.231626208 seconds)
  done (took 10.123034385 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.979394178 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.966379904 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.964490232 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.960635405 seconds)
  done (took 29.765511698 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.169649556 seconds)
  done (took 9.047725704 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.973776027 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.953004208 seconds)
  done (took 15.833535484 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.968494305 seconds)
  done (took 8.846679621 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.009552251 seconds)
  done (took 8.908661397 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.96571158 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.996875238 seconds)
  done (took 15.852716093 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.942622712 seconds)
  done (took 8.820747596 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.632357055 seconds)
  done (took 11.614266935 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.969089304 seconds)
  done (took 8.953223198 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 7.035463633 seconds)
  done (took 8.919768639 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.003671947 seconds)
  done (took 9.889740735 seconds)
done (took 166.500228315 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.983058478 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.964673971 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.963462416 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.965749296 seconds)
  done (took 29.761762792 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 2.001591521 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.998532883 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 2.001976254 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 2.009960206 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 2.005010188 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 2.000573708 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.988820616 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.993532367 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 2.010294081 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 2.002551748 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.998142847 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 2.0014127 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 2.002195232 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.992866736 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 2.002672047 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 2.000775875 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 2.011906302 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 2.001584303 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.992799587 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 2.003848269 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.970450379 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 2.010969474 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 2.001369563 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.96773918 seconds)
  done (took 49.853983629 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.16395295 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 2.037130482 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.117612284 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 2.022842558 seconds)
  done (took 10.228682339 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 2.021535408 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 2.019838339 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 2.033008199 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.069156665 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.095905306 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 2.033204998 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.997019876 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.990262302 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.976728032 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 2.02212356 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.098196442 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 2.016957067 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.114032924 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.969000289 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.157458317 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.970043746 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.97069618 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 2.022963772 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.071604874 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.090816774 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.970498844 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 2.021535806 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 2.029836719 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 2.017306969 seconds)
  done (took 50.666107579 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.972614995 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.976743451 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.976729756 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.968407446 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.96757113 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.971529245 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.977592741 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.972816575 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.991813429 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.974710693 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.971491208 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.968761771 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.973044253 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.969105982 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.970689858 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.984998254 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.982185791 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.973060347 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.974808589 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.977780966 seconds)
  done (took 41.387996616 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.966195543 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.815923694 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.320889313 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.221758438 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.965964764 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.968643522 seconds)
  done (took 32.149825695 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.983944704 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.97708865 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.972289875 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 2.026965465 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.110401205 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.978981931 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.972518441 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.981206898 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.015444264 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.032936552 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.994243154 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.99946456 seconds)
  done (took 25.936112659 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.97046653 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.973880488 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.971673371 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.987024612 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.980517605 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.981768201 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.979683512 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.967249855 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.984942015 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.985384224 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.982158555 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.986940947 seconds)
  done (took 45.647975724 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.05765986 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.854181794 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.618484144 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684565448 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.503206981 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.179295193 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.489542443 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.142759587 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.974359644 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.242135417 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.619048203 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.488010119 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.233240074 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.98072096 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.016536346 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.435635079 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279279552 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.203919254 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008798949 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.749320074 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.103112538 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.602056671 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.69940842 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.109664443 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.189750693 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.115250889 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.243256999 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.940556955 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.112246495 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.019570885 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.994774353 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.984951064 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.255092964 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.193149449 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.115242162 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991381775 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.637476192 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.700086249 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.975759268 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.667427089 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.688584466 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.1165735 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.991608544 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.983461848 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.915113086 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.58278609 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158469982 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.990998512 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.68525614 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.984708068 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.99316348 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.078202146 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.986862603 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.798150621 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936197297 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.262572579 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.98204789 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.989038712 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.552347831 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.073397487 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.70809976 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.91719546 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.076101069 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.672890701 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.453400982 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.142986764 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.986632238 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.988558919 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.916723531 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.719400163 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.112017972 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.126776082 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 2.003610559 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.632365408 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.290836088 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.654147074 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.066013261 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269559961 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.865253323 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.916988261 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.209480464 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.941206881 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.919120178 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.83975389 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.918452645 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.245469894 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.020240857 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.62216491 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.025998539 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.153590467 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.998194745 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.002380702 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.990971157 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.210481852 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.869644028 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.986547558 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.522277239 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267645432 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007410387 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.155921124 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.920364217 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.991510976 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239506042 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.195192719 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.198737698 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.558109809 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148098551 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.990521026 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 2.076247838 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.881766625 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.112460256 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.259548674 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.051620982 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.076782381 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.121118347 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.943387445 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.280921709 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.016959255 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.161740736 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.609647598 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.256864772 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.305558306 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243686501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071012483 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.994483418 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.988319899 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.733294982 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.615399151 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.211362645 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.986108322 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.443217782 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.114081878 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.989972555 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.922030064 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.811547371 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.589346764 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.095287222 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.21419466 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.898833181 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.379190153 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.921355872 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.133695466 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.103349308 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.210067908 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.635075418 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 7.067969798 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.248115058 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.458845652 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.317015251 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.117085987 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.009966739 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.107722012 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.01041514 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.388214136 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.35915275 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.99406537 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.99394819 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.730582264 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.058198348 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.995080175 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.992432347 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.783424732 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.272107609 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.019692251 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.99146224 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.924850849 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 2.005025475 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.075965072 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.995132976 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.001961921 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.54764084 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.741892943 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 2.000761907 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.655002689 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.214643188 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.000405329 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.71486193 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.185309408 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.07556866 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.26792927 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.054526638 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.92336493 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.697621782 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.692216941 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.992413742 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.925812882 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.993696184 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.999183869 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.000814547 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.214476977 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.269762079 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.041320134 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.669085058 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 2.102165578 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.003017786 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.998729377 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.99262363 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.496097434 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.068297613 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.572204148 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.119366449 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.127441916 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 2.005396368 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.926915922 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.995956618 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.998167552 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.993874904 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.948732849 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.04614997 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.664175691 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323481249 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.2531151 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.639135407 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.010287463 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.738519299 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 2.122052231 seconds)
    (217/481) benchmarking "4d"...
    done (took 3.028877486 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.516551875 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020253974 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 7.102100768 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.068430206 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 2.00455271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.717891762 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.760606553 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.561188984 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.304154618 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.313198156 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.4351999 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.436119226 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.332602166 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.170271107 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232535074 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.52279235 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.056227626 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.173068683 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.942534166 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.077401073 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.640056989 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.36813795 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009754245 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.220952828 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.379667736 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.592304007 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.153745998 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.20538637 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.029456911 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.87611006 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.035421964 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.517321418 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.150037041 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.579057929 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.224118262 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.164564551 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.521281733 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.101470665 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.994917443 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.444890925 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.073552684 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.708300335 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.357065512 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.611362012 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.575281688 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.362758635 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.996766405 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.440888576 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.356861337 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.423133219 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.080695915 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.932065888 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.006848078 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.00401599 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.995060098 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.977091411 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.878592446 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.267916826 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.007475025 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.231885011 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.227206541 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.394900171 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.904170979 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 2.003630418 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.997930375 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.28572613 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.727944394 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.239877254 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 5.420180501 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.582274299 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.008927217 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.932443802 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.931005502 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.70055388 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.006482782 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.97180997 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.222810404 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.103707312 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.950047814 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.448802652 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.321933462 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.250671352 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 2.011401217 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.272977059 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.276429983 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.738331401 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.025749426 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.098013436 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.51044365 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.693817166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.21878815 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.234404816 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.79399155 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.228583818 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.632175379 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.96813729 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 7.000944994 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.214400372 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.220547109 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.585371899 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.24303257 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.724402787 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 7.011519477 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.368702883 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.063580288 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.609637411 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.213824352 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.093079131 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.01040356 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.081525255 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.009925681 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 2.011201933 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.011394349 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.047282452 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.625006634 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.132527187 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 2.01576842 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.092264652 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.087659936 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.58242176 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.01338445 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.279743706 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.360845389 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.335371356 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064677924 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 7.004121652 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.004373172 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.934655169 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.141013214 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.445523019 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.276176783 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.132764624 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.142774015 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.027078415 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.532446051 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.359588605 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326381331 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.27508291 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.895819136 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.003176978 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.088942735 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.224880887 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.010602419 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.20968222 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.22240278 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.316988519 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.467949347 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.223318368 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.284376713 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.278281604 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.370893396 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.001305241 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.59099314 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 7.007466477 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.51731827 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 2.038115784 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.60311577 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.287461575 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.015724795 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.210819087 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.024438975 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.202647699 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.456711814 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.72735147 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.361164836 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.984534473 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.057273089 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.279925807 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.40053241 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.317841965 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.083564312 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.013390637 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.704607105 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.140335473 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.92297515 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.262963225 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.004581509 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.211685605 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.71612557 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.011336861 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.281500752 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.316340357 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 7.002667987 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.955088072 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.054270409 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 2.013885335 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.22671135 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.263408138 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.251871694 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.013126673 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.01306029 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.819386706 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.281835459 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.069898655 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.936010759 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 2.006849018 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.100361284 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.250607192 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.024213348 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.522926588 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.708574248 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.298738248 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.921331952 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.022420726 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461899703 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.459079249 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.337493892 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.533487282 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.237816355 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.562222159 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.916250378 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.390403409 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 2.010880633 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.472933407 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.39564053 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 2.010699086 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.585895767 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.126751102 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.279218855 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.337239124 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 7.022886406 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.755987019 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 4.049810719 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.228352638 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.600090395 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.946728811 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.00949371 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.068860566 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 7.00980925 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.136004982 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.019080079 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.989330578 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.959439994 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.856936445 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.501538802 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 2.012989836 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 7.000602373 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.529280158 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.621821808 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.124807849 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.161285713 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.020027091 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.729969505 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.301321838 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261190432 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.574349148 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 7.089317169 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 2.011939331 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 7.010294552 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.936261421 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.205975611 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.205313202 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299608195 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.427515685 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 2.123609635 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.008651114 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.223921935 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.215703196 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.608307187 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.165430689 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475638292 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.125569823 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.930492854 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.715658954 seconds)
  done (took 1739.963154128 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.01726483 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.014519227 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 7.008439309 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 7.046346314 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.027770779 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.016337008 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.067161254 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.09100101 seconds)
  done (took 58.214324133 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.995369686 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.179946774 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 2.003533591 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.994376067 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 2.018257294 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.995574954 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.172684017 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 7.007430743 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 2.026813237 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 2.004450161 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.995097257 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 7.005346966 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.291569275 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 2.022294938 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.995583268 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 7.000738501 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 2.04192185 seconds)
  done (took 76.679222092 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.997199917 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.174328383 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 7.027059374 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 7.0266311 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.883536572 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 7.009545737 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 9.987427903 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 7.021632555 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 7.002005818 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.179406158 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.339095225 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 7.00286753 seconds)
  done (took 91.571024038 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 2.010708555 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 2.001455704 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 2.00180282 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 2.001525333 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 2.002317869 seconds)
  done (took 11.946623981 seconds)
done (took 2265.979015023 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.356160308 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.203355595 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.227965917 seconds)
  done (took 6.351679893 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.136920656 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.187146745 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.31159682 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.315379194 seconds)
  done (took 10.869841059 seconds)
  (4/14) benchmarking "parse"...
    (1/2) benchmarking "Int"...
    done (took 2.296185588 seconds)
    (2/2) benchmarking "Float64"...
    done (took 2.378464463 seconds)
  done (took 6.593674734 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.322114136 seconds)
  (6/14) benchmarking "18129"...
  done (took 7.031432141 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.390843484 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.996288057 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.999185681 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.999317882 seconds)
  done (took 22.919427855 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.998878757 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 2.003508182 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 2.000451334 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 2.002666658 seconds)
  done (took 9.925512107 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.98317299 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.756861592 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.982955043 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.998264981 seconds)
  done (took 21.641245665 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.749565251 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.124973651 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.744498359 seconds)
  done (took 9.538937707 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.874304939 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 3.351498269 seconds)
  done (took 10.1456427 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.169685749 seconds)
  done (took 4.099382435 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.038927352 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.282488123 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.592738441 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.584740563 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.694877042 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 3.276922844 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.354385276 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.245159744 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.454153405 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.497877041 seconds)
  done (took 26.952724978 seconds)
done (took 145.059669141 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.563677334 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.041279305 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.216471522 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.378612149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.244130599 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.215833445 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.21834636 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.388538397 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 3.075164927 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 3.054953569 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.40535319 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.242567352 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.177288122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.028966744 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.180123506 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.029372706 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.238078434 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.394065454 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 4.058450274 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.273291749 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.228171992 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 3.01738586 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.208596813 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 3.036585687 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.241357633 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.119804152 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.560850155 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.036501152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.194903367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.577195428 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.12401409 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.411783588 seconds)
  done (took 173.112666366 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 7.008083491 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.006999429 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.005356116 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.005983389 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.558956029 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.008657664 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.010998305 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.00608111 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.485699613 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.470257551 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.006203965 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.540373167 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.006684425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.006555758 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.00411886 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.003535176 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.634913737 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.004373299 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.003162043 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.003249193 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.001275867 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.373169378 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.004836899 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.383604504 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.626839193 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.000659982 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 7.001421372 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.002877356 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 7.001580641 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.00191995 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.002905569 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 7.003917916 seconds)
  done (took 214.114649705 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.972404979 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.003973993 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.004424452 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 7.004565167 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.004399109 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.005345244 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.00367219 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 7.000727873 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.760623101 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.748285299 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 7.002552479 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.002853341 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.003354918 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.00165107 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.003651125 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.001679736 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.003531734 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 7.003360637 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 7.00329254 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 7.009172434 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.005013064 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.577620153 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 7.002610089 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.586674779 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.000343858 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.000200365 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.99774273 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.997078834 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.996219678 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 7.004862194 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.994428128 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.996200366 seconds)
  done (took 224.627892856 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.255347664 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 2.000119138 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 2.001690528 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.915168057 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 2.001683606 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 2.001338767 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 3.00725288 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.248340583 seconds)
  done (took 20.352827702 seconds)
done (took 634.145041886 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.473765319 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.318635401 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.18039795 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 2.024724944 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.287821397 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.059122692 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 2.020763001 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.094890907 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.639323921 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.096685159 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.672745097 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 2.045031151 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.754829303 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.050749035 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.146990071 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.084143399 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.603954699 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.701354322 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.203675989 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.1126319 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.19277482 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.938371416 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.104815496 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.672213754 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.775970069 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.992819689 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.091473886 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.61135929 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 2.0338025 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.184800693 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.775626353 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.343794412 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 2.037449998 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 2.01976974 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.077770479 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.054406796 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.282353998 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 2.034382977 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.147878476 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.745410959 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.091025631 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.554960185 seconds)
  done (took 108.253838941 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.989488343 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.988291295 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.986584607 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.987777086 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.987025854 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.987182307 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.98715239 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.987069616 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.991605427 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.987852212 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.987546808 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.987754722 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.988081241 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.987624808 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.988365188 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.987298499 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.988465938 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.989412294 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.987742811 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.988078667 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.991912469 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.98947501 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 2.002300038 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.988589842 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.989377532 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.989418499 seconds)
  done (took 53.641551693 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 2.002086544 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.154322853 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.241625185 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.024188613 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 2.002489212 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 2.005967053 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 2.023047182 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 2.008274235 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 2.005327986 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 2.005243852 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.108676466 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 2.01099746 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 2.022509556 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.239989012 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 2.022820962 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 2.004101914 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 2.00450015 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 2.003286905 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.160243946 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.020273467 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 2.022874429 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 2.008277441 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 2.022188986 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 2.017822457 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 2.005093248 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.003019822 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 2.006409854 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.488982823 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 2.014953352 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.10891103 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.064619726 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 2.030032695 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.411454027 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.251313749 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.063299062 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 2.016550597 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 2.004691878 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.111663219 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 2.014774791 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 2.005351658 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 2.023232847 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 2.014301156 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.237890016 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.498147882 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 2.022570178 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 2.004817938 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.501305541 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.12273332 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.047853773 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 2.020037625 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.243520588 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 2.024215405 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 2.00679033 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 2.005910135 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.041729717 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.013448515 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 2.005791704 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.355345907 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 2.02181154 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 2.023473326 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 2.012776226 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 2.006520761 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.163864702 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 2.019332527 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.155483729 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 2.017853109 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 2.010906273 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 2.006633055 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.240984207 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 2.023579805 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.493281585 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 2.02826826 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 2.014872453 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.120500047 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.173164032 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.544299516 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 2.030259526 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.174719442 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.433889198 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 2.042886512 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 2.025037651 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.490468993 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 2.045743475 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 2.024074608 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 2.017117646 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 2.016191197 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 2.01505149 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.06160461 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 2.030842782 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.448889563 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.516956019 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.382061495 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 2.045765958 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 2.032895722 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 2.014697931 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.363019178 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 2.026918621 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 2.018795137 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.248176409 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.523027772 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 2.035401759 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 2.02463255 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.497925802 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 2.034838576 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 2.035469002 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 2.028656575 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.258533039 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 2.033006346 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.060205423 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 2.015121417 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 2.022277265 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 2.017513524 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 2.032220491 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 2.022359885 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 2.013459632 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.48561021 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.143147483 seconds)
  done (took 248.721901687 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 7.009885617 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 7.014651436 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 7.009848641 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 7.013939103 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 7.009889398 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 2.013229321 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 7.007753503 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 7.007259956 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 2.013659396 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 7.005862874 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 7.010577186 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 7.010172063 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 7.009392219 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 7.010786863 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.027680309 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 2.024262278 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.626553028 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 7.015882425 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 7.017140885 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 7.018200845 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.673306276 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 7.026939405 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 7.017476416 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 7.010029821 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 7.014825081 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 7.01331917 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 7.020726903 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.018669974 seconds)
  done (took 171.60734262 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 2.021397317 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.136214708 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 2.041316135 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.049484864 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 2.030251948 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 2.018502484 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.043460224 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 2.038276929 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 2.026324077 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 2.019276373 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 2.017341008 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.081849619 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 2.035661901 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.117211788 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.051007301 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.050636924 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.122271131 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 2.026734355 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 2.017775694 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 2.017222744 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.049763404 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 2.017100813 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.081379933 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.150188235 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 2.041563513 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.137716676 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 2.026401233 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 2.021400768 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 2.019728966 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.138566808 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 2.036270977 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.082079371 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.051260951 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 2.03835699 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.142189406 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.139359846 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.125266321 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.049101841 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 2.025761215 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 2.018846123 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 2.018999498 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 2.007913405 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.135845859 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 2.042220956 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 2.021897818 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.126426943 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 2.04180253 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 2.023532282 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 2.031869067 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 2.018508494 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 2.03749121 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 2.039214893 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.08975701 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.155093958 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.056922967 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.050321554 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.045895031 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.297942909 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 2.031621628 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.119769485 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 2.014218931 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.137524264 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 2.042373519 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 2.008998291 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 2.023133229 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 2.025347007 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.05121819 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.054488878 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.124507003 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 2.028087661 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.118886549 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.057062301 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 2.031613268 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 2.020380626 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 2.023720486 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.136099491 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.139859686 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.057115786 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.063165684 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.057201775 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 2.017289098 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 2.022970325 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 2.009707739 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 2.042476657 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 2.027274327 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.138814068 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.14215231 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 2.030274314 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 2.024276574 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 2.024904047 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 2.025510844 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.050393039 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.150306158 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.061550288 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.11913681 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.091965412 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.102473623 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 2.042402638 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 2.037055033 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 2.026677498 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.087720689 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 2.042748242 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 2.035223765 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.347122373 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.097735915 seconds)
  done (took 218.700095983 seconds)
  (6/6) benchmarking "deletion"...
    (1/28) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.481942621 seconds)
    (2/28) benchmarking ("Vector", "String", "pop!")...
    done (took 2.077544805 seconds)
    (3/28) benchmarking ("Set", "Int", "filter!")...
    done (took 2.082582293 seconds)
    (4/28) benchmarking ("Set", "String", "filter!")...
    done (took 2.357053638 seconds)
    (5/28) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.371324421 seconds)
    (6/28) benchmarking ("Set", "Any", "pop!")...
    done (took 3.058948848 seconds)
    (7/28) benchmarking ("Vector", "Any", "filter")...
    done (took 2.074235579 seconds)
    (8/28) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.072954423 seconds)
    (9/28) benchmarking ("Vector", "String", "filter")...
    done (took 2.097165062 seconds)
    (10/28) benchmarking ("Dict", "String", "pop!")...
    done (took 2.260064379 seconds)
    (11/28) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.144303184 seconds)
    (12/28) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.092718135 seconds)
    (13/28) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.061488912 seconds)
    (14/28) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.046991161 seconds)
    (15/28) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.070990662 seconds)
    (16/28) benchmarking ("Vector", "String", "filter!")...
    done (took 2.097729135 seconds)
    (17/28) benchmarking ("Set", "Int", "pop!")...
    done (took 2.091417799 seconds)
    (18/28) benchmarking ("Set", "Any", "filter!")...
    done (took 2.392636585 seconds)
    (19/28) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.180827115 seconds)
    (20/28) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.245559175 seconds)
    (21/28) benchmarking ("Vector", "Int", "filter")...
    done (took 2.056708159 seconds)
    (22/28) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.386283331 seconds)
    (23/28) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.346561364 seconds)
    (24/28) benchmarking ("Set", "String", "filter")...
    done (took 2.478779288 seconds)
    (25/28) benchmarking ("Set", "Int", "filter")...
    done (took 2.111899877 seconds)
    (26/28) benchmarking ("Set", "Any", "filter")...
    done (took 2.405098544 seconds)
    (27/28) benchmarking ("IdDict", "String", "filter")...
    done (took 2.736686305 seconds)
    (28/28) benchmarking ("Set", "String", "pop!")...
    done (took 2.218482149 seconds)
  done (took 66.045467386 seconds)
done (took 868.88725622 seconds)
SAVING RESULT...
DONE!
