cset: moving following pidspec: 31637
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.304231858 seconds)
loading group "string"... done (took 0.550469529 seconds)
loading group "linalg"... done (took 6.979425589 seconds)
loading group "parallel"... done (took 0.16131348 seconds)
loading group "find"... done (took 1.117515129 seconds)
loading group "tuple"... done (took 1.807649818 seconds)
loading group "dates"... done (took 1.320450824 seconds)
loading group "micro"... done (took 0.229695679 seconds)
loading group "io"... done (took 0.944745974 seconds)
loading group "scalar"... done (took 38.309679901 seconds)
loading group "sparse"... done (took 12.720022724 seconds)
loading group "broadcast"... done (took 0.978494504 seconds)
loading group "union"... done (took 13.034681389 seconds)
loading group "simd"... done (took 4.641964391 seconds)
loading group "random"... done (took 9.178859991 seconds)
loading group "problem"... done (took 2.087595734 seconds)
loading group "array"... done (took 22.364130889 seconds)
loading group "misc"... done (took 1.831324307 seconds)
loading group "sort"... done (took 3.522383213 seconds)
loading group "collection"... done (took 18.22794954 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.510145135 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.140622515 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.131349801 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.134469669 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.169033975 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.128389496 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.140005726 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.099393591 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.039932228 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.155091445 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.133697312 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.465819572 seconds)
done (took 5.021649674 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.203859348 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.084664661 seconds)
    (2/2) benchmarking "String"...
    done (took 0.095351601 seconds)
  done (took 0.898213716 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066403469 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.122337819 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065536914 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066354931 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066095065 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065331077 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.084845288 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.066308892 seconds)
  done (took 1.260253479 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074199534 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.068762162 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.083900606 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.06927633 seconds)
  done (took 1.020357774 seconds)
done (took 4.183150871 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.840657205 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.247345494 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.184329887 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.429461024 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.154361292 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.186975239 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.665789007 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.332322104 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.201184522 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.083278511 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.121817907 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.359233558 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125947944 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.664296909 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.075311311 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.105518377 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.160930204 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.427125882 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.08052014 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085356697 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.105385852 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.135089938 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.105013195 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.092948603 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.156900085 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081296784 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.147306451 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.082423521 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.082657377 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.225910092 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.188417236 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.674733131 seconds)
  done (took 10.370019745 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.096468382 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.113394854 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.069562296 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.139015832 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.100646833 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.070723848 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.071566015 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.067990994 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.107114833 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.144236461 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.089248707 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.1179421 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065820076 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.084765031 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.085347099 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.222678977 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.082502757 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.09956883 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.072046465 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.092468424 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.109685254 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.093490836 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.079738175 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.093290843 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.131023659 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.209812672 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.101529505 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.113633641 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.071171218 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.098503331 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.130005298 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130809257 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06781686 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.085188349 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.126132618 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.111431608 seconds)
  done (took 4.483227548 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.055726131 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.1559514 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.091507342 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.178654494 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.067556924 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.124093332 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082566491 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099174717 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.217937749 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.086264397 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.464031157 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.128203008 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100410228 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068428553 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082615611 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.084004767 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.082511604 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.539196494 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.109059777 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.148276915 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.085602936 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.095686062 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.088448723 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.346022937 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083254236 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.066855569 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.084243541 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.05948057 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.129988178 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.069797877 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.143608587 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.089179085 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.08849613 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.119522031 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.183141158 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092541463 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.155415664 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083904747 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.066294614 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.167587485 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.090422544 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092019888 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065625439 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101383365 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.121668467 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.107096924 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.085654196 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067966989 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.178004731 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.066973993 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.10175308 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.825943224 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.166286832 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.079726584 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068774234 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.283963562 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085316652 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.083644013 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.065640287 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.248890898 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.150520416 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068387654 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.083108954 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066681544 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.067593462 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.369612002 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.083170014 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.065131213 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.067644317 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.093923019 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.783946969 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.072459919 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.085803839 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.07552489 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.072518332 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.101768509 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.067106592 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.084463735 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.066322205 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.06633808 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.085262556 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08550687 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.206141599 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.083977962 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067746142 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.064984588 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.103385996 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.111422633 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.072515564 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.067241872 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.117274789 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068798311 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.084095108 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.103472613 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084931853 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.084912469 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.085094611 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.128237414 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.070173838 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.133577137 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.071631355 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.065646316 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.11515868 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.086584117 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100062299 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.095458079 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068652718 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.238601197 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.082331121 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.065622139 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.066834399 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.083108417 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.067416025 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.085130073 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.080853008 seconds)
  done (took 20.951134065 seconds)
done (took 37.583371168 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.290335301 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.092605988 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.076076114 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.093061276 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.092201713 seconds)
  done (took 1.444819325 seconds)
done (took 2.22535744 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.12134997 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.116512327 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.064183674 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.113596647 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.065106891 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.117736837 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.099045933 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.098271369 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11606819 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.064751946 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.097056717 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.080939945 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.065215281 seconds)
  done (took 2.020392753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082799638 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084076876 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085795324 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.083160886 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.064213197 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098359046 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.080861065 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.104175307 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082690193 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.073465131 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.080290127 seconds)
  done (took 1.688787756 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08263423 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.084670553 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08623878 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.082913239 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.066028341 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098864723 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.083376596 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.10488967 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.084374744 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091538663 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.06659119 seconds)
  done (took 1.704071479 seconds)
done (took 6.176859839 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.078382006 seconds)
  done (took 0.843026512 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.695237849 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.924065158 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.080706319 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.133302531 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.203133077 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.139963357 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.320615404 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.087652447 seconds)
  done (took 9.546398753 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.102283775 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.089792874 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.071239693 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.088718499 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.071064202 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.070886037 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.086142386 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.073190729 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.08452406 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.073158909 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.06823444 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.085265213 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.070519139 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.084823319 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.072118345 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.087945057 seconds)
  done (took 2.113708793 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.092497818 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.107827774 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.073823371 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073862113 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071646987 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.092067287 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.075113581 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091101413 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.072136148 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089677327 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.076003224 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.089952909 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.073087271 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.081431637 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.076049062 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.092470629 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.071793123 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.089799625 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.075576292 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.091175035 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.075860347 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.065668465 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087952319 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.074293536 seconds)
  done (took 2.821397411 seconds)
done (took 16.097589049 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.113919 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.087716049 seconds)
  done (took 0.973908068 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081660968 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.099262298 seconds)
  done (took 0.957273082 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084081238 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081375783 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.092181232 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094139728 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.067025056 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.082521043 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.105171496 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.067724347 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.066713387 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.082671205 seconds)
  done (took 1.603233239 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.069072225 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094651629 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072362885 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.097687746 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.075755909 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.080627533 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.074280711 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.084383679 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.078481648 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.063798961 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.070340154 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.100678617 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.072004809 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.101796455 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.074366065 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.085422504 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.072443378 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.067168237 seconds)
  done (took 2.212361062 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066589973 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.06768171 seconds)
  done (took 0.916716572 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068110906 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064292835 seconds)
    (3/7) benchmarking "month"...
    done (took 0.082942566 seconds)
    (4/7) benchmarking "year"...
    done (took 0.067358888 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.079500125 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.064354893 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.079965627 seconds)
  done (took 1.288337059 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.41714004 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.11257768 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.340611594 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.07442693 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.103440847 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.289653106 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.066990472 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.071737986 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.089204866 seconds)
  done (took 2.387339946 seconds)
done (took 11.119193302 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080057981 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.086297622 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.110839444 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.380338532 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.093079393 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.081978528 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.13385827 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.227403457 seconds)
done (took 1.978065046 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.126936761 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.617536127 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.389780457 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.217020378 seconds)
  done (took 2.011135836 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.335978475 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.110855234 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.061444061 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.086011247 seconds)
  done (took 1.383889946 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066464439 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070131022 seconds)
  done (took 0.92158642 seconds)
done (took 5.231174862 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067230153 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067136031 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.103390706 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.065388241 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083274134 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.065355822 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069471883 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 0.083674502 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.064878046 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.067744905 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.083427626 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.069376076 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.067239728 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.083095392 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064419692 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064502894 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.08234629 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06699674 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.064683335 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.080126721 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.064909502 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066621914 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.080475786 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.064663169 seconds)
  done (took 2.562422595 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.085341862 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083548322 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.073149863 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.072154075 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.08848914 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.075460733 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.089041207 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.067855718 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.088205768 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.069973676 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.087391086 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.072440356 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.069272123 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.087595894 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069995765 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.087346189 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.073265383 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083464852 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069739718 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.088096175 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.072874647 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067686139 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.086700199 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.072594539 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.087469496 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.070976127 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.084997773 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.067909151 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.088868474 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.071176142 seconds)
  done (took 3.143734598 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070928235 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.0643898 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.080828439 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.071490708 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06478613 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.082270691 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.06489035 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.064670263 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.081722453 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.064779045 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.066172706 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.080902863 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.065018749 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.08209871 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.065457682 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.067999475 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.096155276 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.065541216 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064799328 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.082131835 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.068477171 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.064214822 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.081391125 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.064729221 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.08057068 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.06504933 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.065532935 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.08029637 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.065334142 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.064177321 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.084073161 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.068142674 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.064617709 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.087449007 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.068506423 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.064300468 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.084841151 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.065323305 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.065187291 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081263268 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.064889551 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.064091504 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06365599 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.070298942 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.082953767 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.066622445 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.065604552 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083391485 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.065651788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.066711127 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.080759206 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.066677773 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.082596097 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.066650824 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.068572112 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.080567122 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.066446295 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.064374492 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.064446242 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.06276011 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062851265 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082345482 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.067581593 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.064942586 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.095869545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.072226429 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.080733933 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.066865156 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.066607267 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.083167519 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.06676823 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.077795685 seconds)
  done (took 5.960445163 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.092532253 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.105809433 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.066448316 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.082673275 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063049643 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081891121 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.069436773 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065629481 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082988585 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.071726797 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08185799 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.066626016 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067481397 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.094479701 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066029718 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.083247726 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.07192658 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.062845369 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.081717845 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.180826912 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.081846433 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.068999793 seconds)
  done (took 2.589807705 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.174887792 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.071691864 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.125135046 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091699647 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.069399999 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.092119329 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070691684 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071043558 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087898812 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.06929755 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085612877 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071908778 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.085363962 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06996782 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.086319838 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.070581932 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.087287079 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.069331756 seconds)
  done (took 2.351111228 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.078441912 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067147959 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.104155654 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067663612 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.083823987 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.06990784 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089673252 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.07626472 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.086572239 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.067644317 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.075794354 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.086578724 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.069611018 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083594743 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.07015423 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.067324205 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.086108414 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068034439 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.09266422 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.072907839 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088492972 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.076064845 seconds)
  done (took 2.53016067 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081112748 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069474561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.101279345 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.069878228 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.080410508 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066345242 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.088594914 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.06718701 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.071319237 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.086916928 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067310337 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065297028 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068905901 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.066037319 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.089531704 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067683057 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.085329662 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.067128664 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069528492 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079785354 seconds)
  done (took 2.312252184 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.087953333 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085026436 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069266222 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093808178 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.068978777 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.086034315 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.077566405 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.085663767 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.068901537 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.106080112 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.069373734 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.068171467 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074439467 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.091455899 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.069611246 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095111738 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07732661 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.093309401 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.069119282 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.085322791 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.08922747 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.067670169 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.074889256 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08740252 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.06910744 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.085359239 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068963989 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.090777811 seconds)
  done (took 3.060646876 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.067365874 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.066921351 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.080990248 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.064872996 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.064298624 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.080764561 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.064727991 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.064937749 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.08415369 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.065143619 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.06652868 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.083730567 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.067087711 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.066540442 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.083648284 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.067527538 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067351703 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.081380876 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.064928543 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.064477994 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083277648 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.066920987 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.065887271 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.082307033 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064894909 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.083503213 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065196579 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.064209082 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.08372018 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.064962185 seconds)
  done (took 2.946528493 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.077141767 seconds)
    (2/2) benchmarking "in"...
    done (took 0.0736458 seconds)
  done (took 0.958367965 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.064603076 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.081081995 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.081073638 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.071217847 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.089048132 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.068073243 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.074444706 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069188313 seconds)
  done (took 1.40802551 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.082436137 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.078002911 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.0856026 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.081394287 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.094539056 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.084159858 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.155540592 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.085749407 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.074234999 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.065011895 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.09837848 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.066775232 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.090586631 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.067895891 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.072696002 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.090739761 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.065387481 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.09080584 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.070588418 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.065261009 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.085619268 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075576917 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.087222132 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.062972666 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.067974445 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.107500926 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.095874876 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.066987044 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070881618 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.091781605 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.073725012 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.078398664 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.068486751 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.068512759 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.08237383 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.077129306 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.10029892 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070444824 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.09343528 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069423152 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096765046 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.063179823 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.072543537 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.091276864 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.077440612 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.084977638 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.068908905 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.062794108 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.082188967 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.070467781 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.062703098 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.084133748 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.062225294 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.073403993 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.069907689 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.078968998 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.085886887 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.069236032 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.087180808 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.070892353 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.073320974 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.086750015 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.069808592 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.083816643 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077366362 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.071424906 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.09405849 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.063063361 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.078291693 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.065835146 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.077064309 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.108053933 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.073555539 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.085291037 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069281573 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.082603823 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.071598752 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.068820097 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.090534914 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.074006377 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.084608154 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.074435614 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091976817 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06755874 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.069767918 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.093848476 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.065849569 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.087450183 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.065272788 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.083104763 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064775745 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.064635225 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.08509778 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.07814294 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087843289 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.067421109 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.065106238 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.091585414 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.061958261 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.085259925 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.068821045 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067785072 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.095302986 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.072629174 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089783702 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.076675893 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.092229521 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.068002694 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.086862949 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.064199169 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068799056 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.083733961 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.074348167 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.06091208 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.069159793 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.067044775 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.086386066 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.076704315 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.06488201 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.085152758 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.075638398 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.072059244 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064383375 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.063106265 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.089676245 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.067865464 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.087847865 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.076479381 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.082782028 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.063149213 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.062696719 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.088342991 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.067776942 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.071118208 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.090394512 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.071362861 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.079476701 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.066254044 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.089931076 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.077366357 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.068230465 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.085565561 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.073632651 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.085693683 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.06707543 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.073667955 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086868341 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.067631903 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.090551211 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.068833157 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.063079025 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.088601862 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.070508855 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.082935364 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.071411508 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070615773 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.068871654 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066920932 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.085254734 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.075373159 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.086244059 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.067608067 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067803485 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.083570165 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.078533289 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.086546578 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.063427715 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.065474331 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094817099 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.065962886 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.084270223 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.066696457 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.0699514 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.086584721 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.066475091 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.067389842 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.087122355 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.079266442 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.089795449 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069159217 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.090496239 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.079616901 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.084304226 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.07039771 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.067964225 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086413855 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.068889152 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.093975324 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.073691273 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.072258842 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087476896 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.064844955 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090045606 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.075100703 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.066737098 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083848444 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.067055828 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.089554418 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.073868631 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.089241159 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.068608232 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065914021 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085317805 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071700675 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087324721 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.067634702 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.06703082 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.092351813 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.065948382 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092280174 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.069087826 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.094699669 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.071608896 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.062423044 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088344725 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.065509457 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.090522371 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.063431309 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.065298479 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.084514915 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.068482239 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.06641849 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.087003113 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.062795377 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.090886263 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.075819126 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.067939391 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.065239678 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.065746707 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.093782692 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.069399437 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071152107 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088761512 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.074869701 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095680856 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.067119993 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.07046912 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.095022378 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.068096355 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.0792852 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.07328988 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.065189119 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.083814766 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.066781118 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.082717308 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.070272089 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.094429186 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.074542624 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.061647989 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.087451533 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.066311892 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.066510917 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.080929161 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.072208043 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.088019788 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.068683441 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073683953 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086394459 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.068024966 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.089289071 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.067833304 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.068156039 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086529926 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.070645574 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085956613 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.069620836 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.066548999 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.08790528 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.067836796 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.064756989 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067903849 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06639992 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.087381274 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.073139809 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.084580014 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.067788489 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.069657681 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.086428172 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.06926382 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.08517016 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.066793193 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.070719441 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08622194 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06797951 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.068617458 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.080469189 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074958989 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.084428083 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.075541128 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.067708282 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.082066405 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075924095 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.087582202 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.07359588 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.086161749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.068741249 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.06874921 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.085493025 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.070858807 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.091961953 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.065805113 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.078179519 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.093312961 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068030156 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.088540076 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.068330671 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.068311062 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08462038 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.069066445 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.08552252 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.068096575 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.067499246 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089662304 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.07076363 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08584966 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070038155 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.069161835 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085550487 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.069801987 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.062600225 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.084866887 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.06772442 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.085406033 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078223227 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.067513537 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085468861 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.066759597 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086583993 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.067278647 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.064208229 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.093731151 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.077823501 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.086634086 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075086249 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.084949853 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.069493767 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.095778807 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.062741371 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.066042945 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.083163835 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.065354391 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074791008 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.086642887 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.076253407 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.085511058 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.067051181 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064062306 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.086944785 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066866406 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.079012355 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065774518 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071136442 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.084672323 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066959177 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.067328309 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.088195065 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.068499524 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.095110552 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.067651886 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.068649769 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.086051446 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.065075542 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.084041786 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.066954089 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.07013896 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.086219354 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065718271 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064632387 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.085249354 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.068788735 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.086639016 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.068033357 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.068542818 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.091930432 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.067842223 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.08785692 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071781636 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065294202 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.08812406 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.067606635 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.084908505 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.067125466 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.071175783 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.08910649 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.06893645 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.094204222 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.067947563 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.06772759 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085907107 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.065361007 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.084546887 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.067253888 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.067806515 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.085245842 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.069318767 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092522881 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065956571 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.070330224 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08545269 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.06854847 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.092161578 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.069105919 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.070808234 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.092247843 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.068150399 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.086989141 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.07610183 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.089930603 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.07085309 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068697885 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.086606197 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073996637 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.084264951 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.074368073 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.067149498 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.085683283 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.06931831 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.065465746 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.084917778 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.067956419 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.084358907 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.074198022 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.067825248 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.085041568 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.066889096 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.083200787 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.069491117 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.070738246 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.092029175 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.070528618 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.088085202 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.063523854 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.065001377 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.086854677 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.065923025 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.068750557 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.088395344 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.073048224 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.08752483 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.068725717 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.066643188 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.094798993 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072869401 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.089042843 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.065478222 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.089002173 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.069213988 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.070877222 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.086662219 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.068373393 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.068603926 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.089636147 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.069689635 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.085290353 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.074539474 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.071093043 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087341265 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.069703363 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.087017813 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.068148397 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.062721891 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.086629824 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.069727442 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090473651 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.070776551 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067313952 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.096412586 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.065513325 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.085946377 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.071735995 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.066756144 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.089875822 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.063331324 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.087333629 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069483999 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.067904752 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061816394 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.065590885 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.064504921 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.090319135 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.0670201 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.081747129 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078304011 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.09412867 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.070587695 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066330871 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.084608983 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.063473127 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.062449781 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.085065426 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.068674906 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.087536561 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.078551147 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06587875 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.085649456 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06380074 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085688018 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070793609 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.070635466 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.082815169 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.0635424 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.06659538 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.089782698 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073852564 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.08408345 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.06839716 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.07022597 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.088252265 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.065492008 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070209205 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.063935081 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069535647 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.10080833 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.068317955 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.086854464 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.074294837 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.093586022 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.068409051 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.062740796 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086637017 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.071141438 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.085326191 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.06892436 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.068283788 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.101599371 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.070425084 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.085028908 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.067068664 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.08794741 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.067282161 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.076318977 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067833708 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.066386489 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.091212449 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06988716 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.077226775 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.069282662 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.074014848 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.090883898 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.071025589 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.085160676 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.068459159 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.065911954 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.084408153 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.069003094 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.068412109 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.092363036 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.075340639 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.085796577 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.078051497 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.094572929 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.070190553 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.082614825 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.067237143 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.067502942 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.081611501 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.069132343 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.06472908 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.084749752 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.066001312 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.06516551 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087175835 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073111667 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.086784347 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.069180355 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067089878 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.080447659 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069446172 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08740699 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068593014 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.063970806 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.085800591 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.068871394 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071216944 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.069430796 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064116849 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.089801102 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06976621 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068002984 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.0814543 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.074294647 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.08464528 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069696794 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.067242217 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.086550546 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.069277946 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.089454465 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.073399799 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.068494381 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.068926903 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.070751877 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.090601498 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.065425139 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.065210973 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.092895613 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.066821564 seconds)
  done (took 46.392913404 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101407494 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083127606 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063825445 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.06318468 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09516046 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064357284 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.082314796 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.065053846 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.063352283 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.064500933 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.061307307 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.084171034 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.073124894 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.098449164 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075861996 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087013231 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063572791 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.08260128 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063213665 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.063227155 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.070866697 seconds)
  done (took 2.425219057 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.075138841 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070564864 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.072148445 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.097634531 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069789969 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.091398554 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.074244899 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.090752104 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.0782135 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087329952 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.077234603 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090660263 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.067945361 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.08693844 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06892038 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090776389 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.076991117 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.087676096 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.071917142 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.093280298 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.072634088 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.093094499 seconds)
  done (took 2.639744786 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067883631 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.066889045 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.086628341 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.063115345 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.066660884 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.089624711 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.070989079 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064248173 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.068331977 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.064416395 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08786362 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.065806713 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.068061924 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.081246036 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.066995413 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.064393072 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.130771405 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.089499096 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.067147319 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.086735497 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.063607781 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068951247 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.082052473 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.064012057 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.065200975 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.089723456 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.06776324 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.08352984 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.067294278 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066355254 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.086564758 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.065066578 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068005425 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.085755624 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066665781 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06519875 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.085747378 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.06673152 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.081491766 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.065250212 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067416709 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.081590074 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067829657 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.067807762 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.08409841 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.06534552 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.086677261 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.067020966 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.062034302 seconds)
  done (took 4.478894033 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081086142 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.128553164 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.06827652 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.087093448 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.104724558 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.073993921 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.068567369 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.111423786 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.065304291 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.065181735 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.105174666 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.103835299 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.067827859 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.091104469 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.070811016 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.085099608 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.06954325 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065668776 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.069714894 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.064541754 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.09280541 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073380605 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.101314701 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.09965761 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071308902 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.084809189 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066792331 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071772998 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099676571 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090602645 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071915987 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091008066 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.083261274 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.09143476 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.067509899 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.087549641 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084018018 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.086461472 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.069989231 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.064776846 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068259579 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070098597 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.095559807 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.10417476 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068159864 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091158453 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.067919237 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.064836403 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.100134759 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.070089468 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.094259909 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.101740675 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07123867 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.086542702 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072333679 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10158267 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.068017084 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.084719514 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070452861 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099385049 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.065102821 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070714278 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.101712092 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.087813317 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.07494761 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.100186086 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.073425532 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070036476 seconds)
  done (took 6.575520889 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.076310415 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092688485 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.082525561 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101618117 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073582958 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.094207146 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.092118925 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074958939 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092293451 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.07889399 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.092315354 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.114661039 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.068934779 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095805587 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074872815 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092755348 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.075334786 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.092597737 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.074701729 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.092659515 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.074334878 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079765789 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071549449 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.078694187 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.121539733 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.069170798 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.092458159 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.074687582 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.102017077 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.09276349 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.082062676 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092015036 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.074803123 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.100808257 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.08151424 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.07190742 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.065905989 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.095783642 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074473157 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.092902111 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069247456 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101588783 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.092800392 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.069125175 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093101838 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.074109744 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.081160486 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078872576 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.098355857 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.098254319 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.074603816 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.101534266 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074199092 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09232241 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.100431934 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.107733086 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.10063626 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101259212 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074412691 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.100641164 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.10244348 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.087869011 seconds)
  done (took 6.264501128 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084953632 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.094536609 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.078040219 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.082076624 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065901462 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.091245373 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.06534134 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.06502548 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.094776753 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.076771381 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.098036532 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.090236263 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075592215 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.096678603 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.072670447 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.092884269 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.072249522 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.090939706 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.076063848 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089701537 seconds)
  done (took 2.52383786 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.074924109 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.08459239 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.087903317 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.074119436 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.089286191 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.074204293 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.088278939 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070641659 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.086865094 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070637913 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.078014348 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.096736244 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067919257 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.091941715 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.097021205 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073784558 seconds)
  done (took 2.180118941 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076522094 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.093227649 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.081530029 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.086860357 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.06599671 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.064969742 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.086731919 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.063240448 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.062703932 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.099337752 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067406555 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.089310059 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.068356561 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.085162654 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063876799 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.070111511 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.082918229 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.065795083 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.085890846 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.080131624 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.097484908 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.066330407 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.0683958 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.086907447 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.068293037 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.09213369 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.068183478 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.085009349 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.065167482 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.068341473 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.087168118 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.0720756 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.08360457 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.066008121 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065850651 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.084630289 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.068072928 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.087798875 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.071109402 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.067157657 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.084714875 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.068094457 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.086451148 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.069587483 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.06277785 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.086978837 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063983161 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.088080113 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.066295367 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.086774381 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.067287275 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069653175 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.086424185 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.07444651 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089451586 seconds)
  done (took 5.087164721 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.079868336 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.071224397 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.082265968 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.065585605 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069861868 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.066983698 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069231983 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.090940649 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069446183 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.084680969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068988715 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.070527034 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088004199 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072057657 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.087541371 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070770938 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062547119 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.088078477 seconds)
  done (took 2.234827238 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.072422425 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067416143 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.092780079 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.068175739 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.0664876 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.089298824 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.06399809 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.085294209 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.066170562 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.06711898 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08559557 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.070391216 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085283527 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069434125 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.067442361 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086147508 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069894735 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.066001895 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.086473063 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.064208638 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.088305696 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065986509 seconds)
  done (took 2.521164373 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.072642144 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093241454 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.160493088 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.105158214 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.083116118 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.079664723 seconds)
  done (took 1.472152421 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091843032 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101247214 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.06863095 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088040613 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09618334 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068746719 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08974433 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069636261 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099008 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.097765506 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.070175974 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.096800579 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078809337 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097453838 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.094182018 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075698308 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089215226 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069818445 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067100085 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.106008898 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088986211 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0784703 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.08881622 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069170166 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088721359 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.078669242 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097033782 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07808816 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067053026 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099478608 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07691806 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.090427366 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078739528 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098199184 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071758432 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097298189 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069013856 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107152349 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094335354 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077587616 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.089580115 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076334878 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09746316 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075226841 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098167919 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.069280028 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.094243805 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.069261945 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088882062 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107439832 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07593306 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.09683893 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075269832 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098300615 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.097611035 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089397389 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098418426 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097326695 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076343135 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097325788 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078126072 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094265158 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09719585 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078540825 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.095050389 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.081410548 seconds)
  done (took 6.588634001 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.084149323 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107107037 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07059477 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076557172 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075116312 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.094873199 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.071632065 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.091144151 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.071193101 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.089286536 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131587049 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06999432 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097887596 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079350001 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.0893773 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.069657895 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088555166 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078445301 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088256032 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109509803 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069922868 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09696914 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.078049688 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096955203 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097678144 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.075583996 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088213568 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.069713613 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087805848 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.069817643 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093434965 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070087693 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.096536678 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068704423 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.075898291 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.067698594 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091160488 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.074971326 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.089196548 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074713669 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098138245 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106838644 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06992544 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088125275 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.078301864 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.067752267 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.067397379 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.091395401 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.070011261 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088417222 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07880046 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098060341 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098177116 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.078206471 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088823169 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070509938 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.088814377 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070206736 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.089576856 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.075846223 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097207373 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07033581 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107952936 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069259219 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.067737795 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.075377961 seconds)
  done (took 6.404924231 seconds)
done (took 128.401878362 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.197999162 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.184273936 seconds)
  done (took 1.260003664 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.06932082 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.098109281 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.097465648 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129803031 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.087148205 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.100584388 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.099806059 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.099089721 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068634418 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.087472375 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.06760311 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.069820578 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.151544839 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068640605 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.066644637 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.089156343 seconds)
  done (took 2.335863869 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.097880631 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.194886176 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.099462105 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.0862293 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.098541158 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.094781448 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.066566024 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.096468427 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.073024426 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.065941157 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.093876967 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.072353624 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.085152927 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.073233091 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.091669435 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.075002661 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.066115353 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.094149033 seconds)
  done (took 2.51326642 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.102419037 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.139695075 seconds)
  done (took 1.130223583 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.182629444 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.133852062 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.202634435 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.40503274 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.203756471 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.27679168 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.172007337 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.170181637 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15412847 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.168133504 seconds)
  done (took 2.951791986 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.098910003 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.172778882 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.30415403 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.11824614 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.094230797 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11602138 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.119184636 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.098756599 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.080346434 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.099461912 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.099607891 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.0784149 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.118475718 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.075793739 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.094512331 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.078329937 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.121482348 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.074850698 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.097761461 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.076027713 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.119238199 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.067543341 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.075146638 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094321643 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076530595 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.096245834 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.068005105 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.086495896 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076181925 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095126523 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.079967548 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.113596087 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076846284 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.129142923 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.091536567 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.131817324 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.079008074 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.093077327 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.075950958 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.092847496 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.07892021 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.097387038 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.074172555 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.077058655 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.065550379 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075813309 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.090197504 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.067655407 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.100554164 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.068891882 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.100341019 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.079654104 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.129942858 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.088414294 seconds)
  done (took 6.11916998 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.707523002 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.126459885 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.071724334 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.130293024 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118127363 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.073807735 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.734492304 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.11305562 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.200768995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.092969338 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.10969854 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.071745304 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.102064508 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.085942627 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.132100623 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.103334005 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.115662802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.07292597 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.123563148 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.12182301 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070318328 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.114702541 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.091923743 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.401021977 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.068381438 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.09085046 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.070196793 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071436708 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.155733578 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.080649155 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075782144 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.165331374 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.08692954 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.147777669 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.087483582 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070440485 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.088800591 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.081551204 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.226406491 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.160649234 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.15348412 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069172204 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.069777903 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.090345053 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090999502 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.088572315 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135793832 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.082178491 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.117921088 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094421352 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.072009748 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.088531276 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.070961886 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.102493239 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.079879687 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.102548952 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.252913265 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089694419 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070604905 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.07279108 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.224300784 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.082574077 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.101080908 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094521158 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.179357044 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.070617492 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.743718481 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.08771053 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.089560413 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.072016725 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.069953939 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.090910025 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071645775 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.142199643 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.382018008 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.071690839 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.071897377 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089635963 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.175853059 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10004093 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070177143 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137101056 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068738337 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.089421392 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.071956125 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.090971957 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.141511128 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.08196741 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.091506297 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.06881348 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.070701337 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.089481333 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06869008 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.18486851 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.080858173 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.079277301 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.187862407 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091380846 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.135747658 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.081751982 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.091900137 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.081542026 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.089218826 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.071765972 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.07067439 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.100996866 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.118256775 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.081291067 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091290736 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.0699584 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.121234036 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.08264494 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.089483251 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.080930754 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.42290174 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.102126216 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.068171562 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102844422 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070058637 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.136639953 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091933558 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.204518398 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.090122776 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.080776525 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070046991 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.089368111 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.070730448 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.13561772 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091428768 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070338774 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070744643 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091508331 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.081895212 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.181017274 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072675994 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.20588681 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.13628559 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.090640372 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.14338244 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.070612167 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.141901661 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.091070767 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.070967696 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.071484144 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.73338556 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070476523 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.090376049 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071347654 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.140484412 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.067768776 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.103244955 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079512108 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068297894 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.753155045 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080728725 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.098882014 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.081575098 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.091675713 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.070011725 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.089303364 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.071160964 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.135136883 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.191943973 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072654409 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.069042743 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.100066235 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.136255522 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.06832208 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.099660649 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079279812 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.100725633 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.069689441 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.090889806 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.082984419 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.142658525 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.100972369 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.161507247 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.553665049 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070362704 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.099189559 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.169398794 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089319847 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087461144 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.068750345 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.104777008 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.137570979 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.098654625 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.255580504 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.138431664 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.162337896 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.101248715 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084449279 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068749241 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.089602118 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08223869 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.089818834 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.072549748 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.10072823 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.071486789 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.092048005 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.086442097 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.07018823 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.199993048 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.088911635 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.081509022 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.08838473 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072482818 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.104442445 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.070924213 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091568458 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.08218551 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.071081741 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.100809071 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.812932311 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100651039 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.070512069 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.092112326 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.164982404 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.113419805 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.092005047 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.06993568 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072316608 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.134513555 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.182492493 seconds)
  done (took 30.831664089 seconds)
done (took 48.030441763 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.261496536 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.175301578 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.252414748 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.119988477 seconds)
  done (took 1.796132974 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.146239612 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103256368 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.118998069 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.066036211 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.126508923 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.087729252 seconds)
  done (took 1.566174139 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.413858356 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.266776463 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.231222897 seconds)
  done (took 1.826456272 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.223650983 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.236925248 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.421099594 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.303176111 seconds)
  done (took 2.206962406 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.16957251 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.114121181 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.068804773 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.107210393 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.16147045 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.212257609 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.125521426 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.175229794 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079835706 seconds)
  done (took 2.17710168 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.194705883 seconds)
done (took 10.677887937 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.226868765 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.168423708 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.090721932 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.10533657 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.221081193 seconds)
    (6/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.29577928 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.17790277 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.223476965 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.249332685 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.091492651 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.116915441 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072372627 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.240583258 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.224463041 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.080879963 seconds)
    (16/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.094701171 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.074667518 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.148778659 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.197880833 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.084943428 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.187660367 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.215389163 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.133755118 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073053954 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.179825181 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.161875858 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.0980859 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.159863351 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072397875 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.172497023 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.052287804 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.089048956 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077988265 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.122894875 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.074749587 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.07594497 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.08941449 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.207404874 seconds)
    (39/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.080323846 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.096854665 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.064763673 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.194572194 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.197280708 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.10505743 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.075232235 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.070535626 seconds)
    (47/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.111011132 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.074325307 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.181742209 seconds)
    (50/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.073918798 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.102986981 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.211491578 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.076801038 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.174794874 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.097694557 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.103736481 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.115066582 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.095845431 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.115578275 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.162944297 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.136571255 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066956316 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.14291879 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.07651494 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.117890851 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.074893137 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.171212067 seconds)
    (68/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.165534377 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.052087342 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.07775025 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.094852085 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.139420889 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.162514402 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.073753975 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.122344853 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.17238562 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.102291218 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.071956252 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.075068138 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.052688568 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 0.166178758 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.146829886 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.067089346 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.073635985 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.098005916 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.078480911 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.227768905 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 0.068134326 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.172875642 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.195301855 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.070090071 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.159353276 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.076969831 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.053040506 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.100021057 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.12034246 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.068229945 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.091675607 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.143020354 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.092593368 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.066662695 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.191487807 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.077608752 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053226895 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.197076795 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.173781239 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.053085609 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.053692791 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.135883373 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.063732279 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.076877961 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.123113902 seconds)
    (113/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.0898345 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.11712656 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.0937037 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.127712382 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.169404596 seconds)
    (118/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.151766444 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.089240551 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.098554749 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.107268695 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.078627397 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.077218097 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.07460458 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078078789 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.119462769 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 0.375837334 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.076331221 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.073050122 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.171143073 seconds)
    (131/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.10151261 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.067663722 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.086467949 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.072676171 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.073858606 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.163228668 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.175609459 seconds)
    (138/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.068072298 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.067407709 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.090209905 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.081250087 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.096493947 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.122449131 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.054362292 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.075983075 seconds)
    (146/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.108418731 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.20228226 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.055749325 seconds)
    (149/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.069869862 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.195485579 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073704497 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.089398616 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07471679 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.089375844 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.138625296 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.051821425 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.163997279 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.074326011 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.089627833 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.073462307 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.098250731 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.052669559 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.073594278 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.164896085 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.067055588 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.134170287 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.052125091 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.077063825 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.137386177 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.110603519 seconds)
    (171/309) benchmarking ("sort", Float32, false)...
    done (took 0.1522365 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.052506723 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.089181892 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.099644008 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.06776823 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.113581892 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.161060041 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.052658656 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.068896679 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.062379341 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.098124817 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.081182474 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.095515571 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 0.215287021 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.10122015 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.069680637 seconds)
    (187/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.133869637 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.054269493 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.097872398 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.073770936 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.098937862 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.076887184 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.078202456 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.072567196 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.088624932 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078531044 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.101259912 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.127531094 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.092192422 seconds)
    (200/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072898715 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.053604417 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.088655776 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.067017272 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065807974 seconds)
    (205/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.076498247 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.066521169 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.06632471 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.087526529 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.051726899 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.115064883 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.096037173 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074176637 seconds)
    (213/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.09661985 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06770408 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.151541469 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.069172253 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.052601044 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.091275049 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.09562294 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.07488863 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.097362579 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.052765571 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.052908041 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.076716205 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.06225158 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.082405444 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.096136745 seconds)
    (228/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.069703628 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.051768032 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.121022829 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.052815582 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.11159174 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072382272 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.053055185 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.051309062 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.063606143 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.087227315 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.100901207 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.065634356 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.051944804 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.085723216 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.121429759 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060791156 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.091245556 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.140042362 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.091355574 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073242607 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.089650894 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.091521371 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.075146584 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.196915797 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.052211488 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.092636661 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.052356332 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.074999357 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.07568317 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.052042842 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.052927598 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.06595909 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.084249662 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.171551378 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.090344558 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.074072592 seconds)
    (264/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.089270171 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.148925943 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.121044389 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.075252515 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079347009 seconds)
    (269/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.079888868 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.051006071 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.094714855 seconds)
    (272/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.071701098 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.081002574 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.13829298 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.068646283 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.090913501 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074400696 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.067118812 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.086890186 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.054491414 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.052614893 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.078938872 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.075531284 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.065925893 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.088341549 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.052408566 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.091955038 seconds)
    (288/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.076278734 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.075298519 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.079957176 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.090393874 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.053061891 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.115850803 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072393705 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073241201 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.086383109 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067393851 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.191371723 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.089795637 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.092702323 seconds)
    (301/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.090248223 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.111725504 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.052601724 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.073503165 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.051851921 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 0.151854314 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.066967779 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.075452826 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.05423607 seconds)
  done (took 33.024362615 seconds)
done (took 33.947393399 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.082311965 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115975666 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.07550823 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.093534499 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.105351379 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.077725644 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.096282861 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080223152 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.103791426 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.083979669 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.102422314 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056562181 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.074766293 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.098183852 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.076295897 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.115752509 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.080428332 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.096811194 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.074440738 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066599608 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.098120847 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.06759639 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068135949 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.079534527 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079837397 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.072563335 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.097351655 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.076251924 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.089706571 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.068183116 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070857737 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.098108025 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.067143843 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.078877079 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.096002143 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074468919 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.098780668 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077839054 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.06881813 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.089972337 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.075641997 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.066317726 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.096785715 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.075016256 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.07256925 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.095183253 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.075005774 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.102398903 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.093161497 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092306273 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.076031402 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.077619827 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.101123171 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.074447589 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.093423842 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.074770976 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.07208222 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115650605 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.075320181 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.067450564 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.073135128 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.073245053 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.097740974 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.074601554 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.097639546 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.077124367 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.077255202 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.095661306 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.076734802 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.072020637 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.089679693 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.075543858 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.092453401 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.066529605 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.078008045 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.100708616 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.066352627 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072560723 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.096598536 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.073182106 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065653751 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.067563866 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.06732418 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.071000956 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.09427821 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.056819811 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.070017017 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.096047934 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.067132582 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.098112035 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.073124992 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073849786 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.091360825 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.077449128 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066291304 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.095136261 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.067518277 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066918033 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.091531107 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.071360178 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.06603391 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.091678985 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.076591789 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.068032836 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.096114672 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.082140341 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.089325337 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.074004547 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065631667 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.089368098 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.082299755 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.098765255 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06684853 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.070175374 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.089067301 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.074288084 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.066527183 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.08980893 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06680108 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.066603437 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.095459537 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.067394664 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.068884312 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.096514626 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.080281481 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.089100755 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.070134075 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069979978 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.089848741 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.072135912 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.067372436 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.090363058 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.068923667 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.06369051 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.091993574 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.067749946 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.074534944 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.092427214 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07545704 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.068200389 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.097621806 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.071753747 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.095868363 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072519185 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.066466858 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.082661138 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068648649 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069675749 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.091902226 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066904225 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068352397 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08974741 seconds)
done (took 13.255234522 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.067308172 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.171968002 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.125282995 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09689291 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.111270275 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.068080234 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.077820801 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.128525966 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.092025894 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.104989791 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.111118849 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.08750657 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.138913605 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.066386299 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.090219794 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.071260624 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.068283538 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.113463639 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.127285226 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.08862312 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.136866776 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.066388265 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.120401766 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.091214701 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.113704574 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.117959987 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.067573977 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.071805864 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.093292823 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10312436 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.111040823 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.070680878 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.067494918 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.124767143 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.118125868 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.086826111 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.089823085 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.085775932 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.067249607 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.065725746 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.086227344 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.126675882 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.105331621 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.083588578 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.096775394 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.070342609 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.068942513 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.109925886 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.091897586 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.104432861 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.112132828 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.107519305 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.093559893 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.083107235 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.089277183 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.088770301 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.10502686 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070001131 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067306037 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.092705697 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067465053 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070841524 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.112503503 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.11443033 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071874281 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.10530274 seconds)
  done (took 7.247798546 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.083862444 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091671904 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.107636277 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084860901 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.089878358 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.069025018 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067314905 seconds)
  done (took 1.579122126 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.067865953 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.090299744 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.113058662 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.091442015 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.109390597 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088937534 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.101342775 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.069177358 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.08396897 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.093514776 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.090296627 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.127209771 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.069370847 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.073141105 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.089910796 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.06624521 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.118618038 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.068166788 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.094601936 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.092664093 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.093933006 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.087778533 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.070158178 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.091595277 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.08352279 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.092435727 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.115775328 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.095870857 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069471901 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.071448276 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090157426 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.109298622 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.105909123 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.075762528 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.06734282 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.106731321 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.08319711 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.089804411 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084986618 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.097557659 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.082760263 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.068457025 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.093279385 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.067135398 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072785823 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.102803369 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.069382877 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068422732 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.094793085 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087852066 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.092246414 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081925278 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.068623072 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.095950246 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.070649253 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.096529909 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.079199608 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.07004045 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.112669727 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.070187518 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.108777582 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084693814 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08147841 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.109248481 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.070688923 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.105228179 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.083179805 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.094807851 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07075147 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071864792 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.10792056 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066650517 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069401689 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.102995772 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.071208685 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.090136902 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.08915683 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068019634 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.076436496 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06614656 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.094148607 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.068786957 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.091141604 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.095934435 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069010916 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.096262239 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.071342284 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.065908756 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.0915746 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.071570055 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.066503038 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.093002209 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.071767015 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.069325777 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.094249267 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.085393801 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.093383347 seconds)
  done (took 9.299383916 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.069794732 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069465552 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.093992245 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.06935957 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.0693946 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.09281799 seconds)
  done (took 1.462791756 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.09614549 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.094241516 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.081400389 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.074052129 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.129748114 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.0833671 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.107723958 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105422721 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.085423195 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.080461379 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.107064036 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.08346449 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.112405931 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.074965889 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.10663973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.073831631 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.106779306 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.078189178 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.103848109 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.075168498 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.113828687 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.074526057 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.074747635 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.10699398 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07291387 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.097222122 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.078969182 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.104953653 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.080798868 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.105671597 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.074711147 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.072788318 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095755477 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.081100033 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.107137989 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.072564876 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.097049921 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.072872452 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.101758521 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.071563269 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.083867236 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072954032 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.074358519 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.099469793 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.080946556 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.096432508 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.073577897 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.102314622 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.082943369 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.097729664 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.072472057 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.073656284 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.095853805 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.072877694 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.096594722 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.081406479 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.097036859 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.083434289 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07431608 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.096600787 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.071462109 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.09604972 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.081164545 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.095727792 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.082379492 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.096577878 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.072170683 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.07453144 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.098748888 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.074491285 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.096815254 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.071408093 seconds)
  done (took 7.338080542 seconds)
done (took 27.906302934 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.666734938 seconds)
  done (took 1.662421983 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.736017135 seconds)
  done (took 1.734552805 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 14.695899383 seconds)
  done (took 15.694493179 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.592922598 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.760793331 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.849482234 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.153254465 seconds)
  done (took 3.355232342 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.901469307 seconds)
  done (took 1.919091563 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.238089283 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.226558129 seconds)
  done (took 1.468598989 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.738565934 seconds)
  done (took 1.750037839 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.264907231 seconds)
  done (took 2.268486651 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.295684219 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.179820599 seconds)
  done (took 1.48816724 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.489013908 seconds)
  done (took 1.500875737 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.714313015 seconds)
  done (took 7.731185334 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.205867338 seconds)
  done (took 1.233885641 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.266436097 seconds)
  done (took 1.287703732 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.178942039 seconds)
  done (took 4.193843993 seconds)
done (took 48.296636913 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.078639056 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.082465575 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.105210929 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.079984684 seconds)
  done (took 1.356060969 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078053193 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073977957 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100883819 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.074112937 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.101831461 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.073892708 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.07565304 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.076230278 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071766654 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.100165183 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.07374255 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.073519132 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.10023997 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.07641304 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.096559141 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.077084979 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.101447017 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.073785264 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.07777985 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.098303732 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.072003013 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.076202012 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.100396791 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.073398485 seconds)
  done (took 3.019072073 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.078215239 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074399469 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.099585817 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.072739891 seconds)
  done (took 1.350753799 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.078212892 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094263007 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.114815191 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.078051233 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.117918078 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.11176261 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.070614866 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.070873931 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.09534687 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.078838958 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.068606889 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.122417385 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.113433948 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.078224116 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.080570898 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.090529082 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.070592418 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.112195448 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.078877351 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.078403467 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.07186544 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.077282421 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.094762117 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.090080403 seconds)
  done (took 3.164330019 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.078589229 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.104621516 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.102529452 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.088067276 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.116087726 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.067376866 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.099746047 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.091448001 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.149001058 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.067080241 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.095650771 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.066947632 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.07332943 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.090740365 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.078605197 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.130868316 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.110114789 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.069816796 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.121717652 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.067423342 seconds)
  done (took 2.897999103 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.073545199 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.071123575 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.090973565 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.070035452 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.078788663 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.097689422 seconds)
  done (took 1.512731495 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.068815143 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068783722 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.092598049 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067702791 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.074172041 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.092224524 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.06683043 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068961852 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.092077129 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.068299807 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068763259 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.091299572 seconds)
  done (took 1.945751506 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.397365639 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.095198687 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.069828158 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090032128 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.073339247 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.091843631 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.081202408 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.069698605 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.116689465 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.068271627 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067489213 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.094206691 seconds)
  done (took 2.3415868 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261587848 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078212266 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.296325882 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163711511 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.139987604 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.142478457 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13122155 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.141109015 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.17402152 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.129916339 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.22439909 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197167271 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.134387935 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16646131 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.115695869 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.100634258 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211463083 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.192787123 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102644736 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22334655 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175277021 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.153905204 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175664913 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.12804226 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.133665416 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150852606 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072320207 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105851309 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.229072599 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161182097 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176586508 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139041318 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120902012 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232261887 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228632205 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173431867 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160854387 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.085760565 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.155600224 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.160235666 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.258184235 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115625362 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166100885 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137139096 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106514732 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.169257262 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147745511 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.146319314 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.134306501 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.09150546 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173397146 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238769588 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.166081573 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08867004 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138540045 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142749107 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.143126416 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129716989 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238797746 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190410195 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154649571 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095863326 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100506686 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206660617 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.159139996 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.136417289 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.155251049 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.120292566 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161968578 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.184921923 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146598667 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171182692 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.158458261 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115257238 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145274143 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.168784934 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157975288 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200298513 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.175218284 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.074066107 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153182631 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130687575 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082957326 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.167487669 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.076247318 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.230141762 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.124369778 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.108122911 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.140278485 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136004754 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136267035 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220716988 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17585816 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.130283128 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.06616652 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130046111 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.14787954 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17873959 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113495114 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.135321644 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144993269 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.078846045 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138228193 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.10291444 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150927675 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.076016698 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151591383 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156995449 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.101558203 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.151677974 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128160352 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.102514322 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162356754 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.214181166 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090173905 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.082019858 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.196415986 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174426627 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.106804829 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.197268734 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.186804699 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.126011553 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131329377 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18089146 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.23836748 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09056851 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21944198 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13628884 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.084454847 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.113482666 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152625342 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.140716691 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.150169499 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.083985509 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.14756907 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223555569 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.101384361 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.096845033 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162486592 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105254516 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082988345 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131989644 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129081442 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.121928952 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.102496416 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.133480081 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196918787 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152956231 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107748594 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180541873 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.101125114 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228992528 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115927615 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.102490059 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131389598 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.09624636 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.166002999 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188789735 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.106654287 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195700364 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.152153001 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132656477 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148036495 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110163867 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.169477814 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079848819 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.070695715 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173388095 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13841513 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.137654069 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.179788266 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131887032 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.156537258 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.149158361 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164590987 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161878946 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.157410369 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134489624 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.114018941 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.114108341 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18045504 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074152396 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.118970568 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.082662681 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132556079 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124350533 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.084652876 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198063112 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156345861 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128114729 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.113605933 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.124855408 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.176872558 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.103341203 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158705378 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.147453293 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122101134 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.18196734 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20730197 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.162111782 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101948962 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.202201765 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.072180885 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100885495 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.092302021 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.152137222 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083085604 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.083025665 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148786123 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.175308189 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161171828 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168139362 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14024083 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150368071 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.185133154 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.09655336 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.116068242 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203959045 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149746706 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.127530821 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113600238 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.100960569 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.198411718 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110733501 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.240054125 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.142582942 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152061754 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211357535 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.126861858 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082344875 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.133359489 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166092033 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135101658 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175269692 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127112713 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11592078 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139328156 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.076218301 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.130460852 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157462637 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149846393 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19201076 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.116923728 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.189656648 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.078439704 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147307551 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154532556 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151823212 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.091110779 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148840622 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193538108 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122613874 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.147799183 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212297633 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081319356 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.152831557 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.236878621 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177187574 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111876199 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13867999 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14715241 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157001255 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148937026 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170971352 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139972435 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.136830983 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136848111 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.086368733 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116353249 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.099547153 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.133626316 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.123036277 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.138772771 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.144434058 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.122443324 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162688769 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133651678 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111086696 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146653224 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.096798495 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.089191202 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127034217 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233181441 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149105098 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203670501 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.126664002 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.176776934 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19540452 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.103327575 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081311563 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.105381171 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.169733067 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085592677 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161817635 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.125123672 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133229832 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155478288 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173355618 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.123862277 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.070734718 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.137372569 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165389918 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112498489 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.125987133 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.134890598 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19545157 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.128457381 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.082095923 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141990898 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132980212 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.104885602 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23157622 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.088424977 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.100532293 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102281112 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082985595 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.157145305 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211738097 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.083187076 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.149540802 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.146636266 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140974185 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.158208779 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131851847 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.102202556 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143008359 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.207740004 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159594802 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.092330341 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.140803857 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.186720492 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190101928 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134029629 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.123205031 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203242468 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.209067232 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.194174045 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.117193831 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143804959 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143255139 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136792928 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141708812 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.11174723 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196573577 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109635024 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170065448 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135936683 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13436352 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161403364 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126358557 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.090505284 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.204795906 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147446368 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084128575 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.105076431 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147350439 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150796382 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13627398 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.077079793 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171727609 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.100008272 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164347151 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228426919 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08334736 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.133033397 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097837781 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.080065419 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138643875 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132013248 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.089536541 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.144955323 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231366265 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.091364243 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20884443 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17170942 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.141764435 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.166685337 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101824736 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.666506267 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.105868719 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186740429 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145555309 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202764676 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.127120894 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147424181 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138104235 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153935822 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177159381 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135085808 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.202042026 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.163878239 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.145418023 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.081520766 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.130860402 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131873356 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.117049363 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10762349 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143314744 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145568372 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.122083857 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.145301792 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153621467 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.108680616 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096866067 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213421989 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147492131 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17730005 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.170706157 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.112596037 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146655283 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170854618 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107348293 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.152655422 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185163014 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136800932 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.126489937 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.108393068 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.105086216 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228897499 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.074953687 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221777246 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149036999 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139436105 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140880102 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.144901985 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.161342308 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137639724 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.150292607 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.122050969 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.139986528 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141806607 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.084403047 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.105152474 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132216098 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116692139 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.125671358 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127589302 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.125159165 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.203465359 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.072983583 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125644727 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13236264 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177897766 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235732911 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.089483298 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.111540547 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149142187 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.144677819 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.143431614 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151567462 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.082143035 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082458959 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.081408273 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.129992327 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.110402853 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141230419 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.133872502 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141528462 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224379758 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.084123101 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.250588215 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097668921 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.13320098 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.097135671 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.080113998 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123977274 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127496449 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11102552 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.129368781 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22803194 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.097873063 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.118686849 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.094612691 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.073568146 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111607561 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158227936 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.140530442 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149025098 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.100040072 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.089639453 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13923062 seconds)
  done (took 69.886510972 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.13199607 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.104608446 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.118792487 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.171591864 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.148863652 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.240968811 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.179585551 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.22617117 seconds)
  done (took 2.421207731 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069329828 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.119352882 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.101795433 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.110355964 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.06704723 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.094077642 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.279232711 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.081633448 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.092092881 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.090306692 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.108358195 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.092448926 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.490307482 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.069395504 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.097678604 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.063971908 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.091313232 seconds)
  done (took 3.212708471 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.436011945 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.636077597 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.42048259 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.073949159 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.965401386 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.108715999 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.347942817 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.163078012 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.091432992 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.432853309 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.725752206 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.151081537 seconds)
  done (took 17.65144968 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.075464588 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070306479 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.110836125 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.084147632 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.073937444 seconds)
  done (took 1.520474114 seconds)
done (took 113.297415434 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.080706154 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.358889592 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.054794118 seconds)
  done (took 1.552674222 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.083169998 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.085435803 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.11163305 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.084649943 seconds)
  done (took 1.477068698 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.074826781 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077517443 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.111273023 seconds)
  done (took 1.373614836 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.285856294 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.141355868 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.116047326 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083476521 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079124333 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.104717038 seconds)
  done (took 1.378116528 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07291205 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076587592 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.099399194 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.077660982 seconds)
  done (took 1.433863598 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.076336424 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053801635 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.055420895 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.083259334 seconds)
  done (took 1.382300477 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.086784138 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.080139949 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.10576974 seconds)
  done (took 1.38082849 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.107812871 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.11199198 seconds)
  done (took 1.330430255 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082251363 seconds)
  done (took 1.190159679 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.10102022 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.140909587 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.158698998 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.138150114 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.168681644 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.137866505 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.088080867 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.117087248 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.10486906 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.090366236 seconds)
  done (took 2.359892018 seconds)
done (took 16.592256219 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.078043112 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.394848989 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.361553349 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.092104173 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.696818807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.357988989 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.006764176 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.093569644 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.150283877 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.095167737 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08518221 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.65101532 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.005736502 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.31786743 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.021838628 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.320886209 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.651174981 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067562265 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067048857 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.096730107 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.966543374 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.068396385 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094116171 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069498282 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.677984988 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.371279061 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.06929002 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.35182125 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069268586 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.096750858 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.355571755 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069102047 seconds)
  done (took 15.976151347 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.071030823 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.146142452 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074407617 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.08461109 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.098146147 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.071129807 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.099494941 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.069376301 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.153935805 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.069593589 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112301772 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.068391013 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.072863156 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09717214 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.08855179 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.068701988 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068096885 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067758013 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09719508 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069374766 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.086657915 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094456534 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.069274835 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.096212344 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.068884462 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080485918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09547683 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.068917724 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.069116922 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.097185911 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.071774856 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.095887833 seconds)
  done (took 3.862318922 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.1147667 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.153602326 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.074811807 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.130229965 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.113154589 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.098687247 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.145497945 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.120436614 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.156292192 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.068821655 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.112588264 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.069065935 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.128550195 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.069297026 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.088729399 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.095816102 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.070370533 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.096008008 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.069142377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.069082785 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.087197659 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067229739 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.096393617 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.069600912 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.069671685 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108501712 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.0690839 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.069602645 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.096039413 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.0715791 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099185514 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.069883042 seconds)
  done (took 4.134821767 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.072606265 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.076839707 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110660397 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.084325604 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.070384835 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.099904399 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.073499465 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.096978286 seconds)
  done (took 1.808775639 seconds)
done (took 26.897117376 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.078956214 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.069561207 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.099841422 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.081457981 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.073619804 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.106315934 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.068209298 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.102193099 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.072728846 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.074541903 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.103474084 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.067795484 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.07267796 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.09610647 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.075316853 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.068675294 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.107035606 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.073642524 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.10688578 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.08043809 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.0708787 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.101236362 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.075445679 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078707394 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.077706113 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.107136919 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.078290645 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.074255305 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.096871662 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.071845382 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.077986378 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.111544363 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.070366237 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.107092647 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.069025876 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.069216918 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.099980678 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.069048866 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.107935659 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.077661017 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.070883263 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.10418646 seconds)
  done (took 4.658850312 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.087980388 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092375205 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1137116 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.062923024 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.067975129 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064328955 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.088264469 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.088899165 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.060557657 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.088752842 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.08554683 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.06009995 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.063048888 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.055078198 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.086592178 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.057229757 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.062406747 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.083689322 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.060164153 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.060237 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.058497402 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.081150627 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.061275266 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063771733 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.083881329 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.062624747 seconds)
  done (took 3.026224519 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.076090907 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085243096 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.115735158 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.128084224 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.133127793 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.078248885 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.10746698 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.0884562 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.114694598 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.067653606 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.072284536 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.12204971 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.089674949 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.10268508 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.071750808 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.085613647 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.11014439 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.070264373 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.102186322 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092039239 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.085334055 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.105601785 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.093685327 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.110087507 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.067887809 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.070612377 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.100267754 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.08279428 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.101227813 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.078470141 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.073145118 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.099471858 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.070690182 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.107696004 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.072816954 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.070183364 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.117250685 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.07883495 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.106650186 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.069617052 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.072558756 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.097699918 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.09117878 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.151155852 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.067870736 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075173794 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.103608799 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078293196 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.096401097 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.086780583 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.079650099 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.095111895 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.071006829 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.068271091 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.095433472 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081175067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.097679273 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.07063316 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.077684776 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.0994433 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.080567716 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.073009947 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.110741907 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.068261892 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.103045119 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.067262079 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.070032216 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.094841973 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.093441024 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.097947238 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.110057293 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.07146558 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.096995391 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.077932019 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.103340963 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.073502868 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.068944952 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.111649766 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.079031677 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.100222891 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.076534 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.071884797 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.099174634 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.089276026 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.071567009 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.097476924 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.069437276 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.102901518 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.071389188 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.070107552 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108942517 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.069086729 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.07204148 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.112766033 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.068285474 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.097494992 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.075091926 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.073214198 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.095198179 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.08016115 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.100871915 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.069966944 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.07770153 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.095602875 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.072171697 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.079291327 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.102159532 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.067589692 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.100605671 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.075183044 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.069844582 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.097219845 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.071948648 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.069680916 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.105534986 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076093115 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.100989576 seconds)
  done (took 11.426245845 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.187417937 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.153973823 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.098931693 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.175817534 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.086374387 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.108814799 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.146602239 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.123597555 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069138675 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.097341568 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.069537679 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.115786878 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.106044421 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.15170657 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.079134152 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093392206 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.084391708 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.145713531 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.17829973 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.172241 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.084632215 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07761384 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.098562944 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.070222756 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.074308072 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.081421185 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.127439826 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.077782439 seconds)
  done (took 4.272098392 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081674673 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.129305313 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.074473268 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089956637 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.120561246 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.069344284 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.098571848 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.070554005 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.081506606 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.108915404 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067976375 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.101721111 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.075697701 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.102609899 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.069759193 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.075854192 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.103955742 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.070677241 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.071929058 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.10174518 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.078321945 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.109924156 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.072980674 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06777676 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.102574129 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.068199477 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.092881496 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.087547306 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.096570846 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.090834223 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.06627414 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.103844934 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.083231765 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.097386434 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.068704658 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.068961736 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.096954952 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.068349803 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.070724822 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.095137075 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.067898035 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.059131377 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.096115263 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.081539937 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.102687829 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.057848644 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.074096762 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.102175009 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.074377041 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.066524129 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.099393527 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.071967941 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.07152452 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.103748329 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.073551122 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.101971489 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.069846928 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.067366649 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.07630281 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.067194001 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063885474 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.096772832 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.073553552 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.067384869 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.104315303 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.073330605 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.095175705 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.06778343 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.070284876 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.103030979 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.068467133 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.071440599 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.093864595 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.071063181 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.072916519 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.098394178 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.06982449 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.067470031 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.096085769 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.069051509 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.056556094 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.096573515 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.0549913 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.072486248 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.095096588 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.06759818 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096107918 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.073370394 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.081026785 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.068487253 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.073417824 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.098181099 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.068134372 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.071265062 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.088852824 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.071819898 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.083881559 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.111991338 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.068503242 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.093991732 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.082918605 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.100962242 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.067609312 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.057619763 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.104934104 seconds)
  done (took 9.788367594 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.094919274 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.089031419 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.098181294 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084596608 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.119778951 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.08904541 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.075706515 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.105081946 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.070057756 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.082413174 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.073313654 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075755448 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.098740333 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.077227522 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.095070548 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104500189 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.070658081 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.10570791 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.072164173 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.101416868 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111364925 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.083064761 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.103879475 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.069288488 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.076227666 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.108718591 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.09168506 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.108289804 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.079122374 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.075763744 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109365777 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.091012949 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.102726207 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.07314692 seconds)
  done (took 4.217400204 seconds)
done (took 38.507424483 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.215161801 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.432487691 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.195938952 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.110415 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.21110109 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.209453925 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.22781288 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.196724619 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.539072277 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.198235054 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.438779871 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.805652136 seconds)
done (took 58.931298423 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.198085664 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.345908794 seconds)
    (2/2) benchmarking "String"...
    done (took 1.471681789 seconds)
  done (took 3.960845939 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.554069351 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.076840043 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.456489259 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.197631496 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.210985837 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.503194491 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.853464975 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.059254427 seconds)
  done (took 27.499905118 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.199079286 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.566088455 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.659434743 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.659068452 seconds)
  done (took 18.228461318 seconds)
done (took 59.585285048 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.185073699 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.222475205 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.199344115 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.183879017 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.307100484 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.227368224 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.491531357 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.429317452 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.212185018 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.191166777 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.213772568 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.210502815 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.214657662 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.518805 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.203944552 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.199627294 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.217466171 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.685707752 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.578645309 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.226367614 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.22573911 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.258355552 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.205104466 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.203535197 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.208848478 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.199785259 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.205731135 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.202965243 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.42640254 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.203686747 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.292186616 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.721282757 seconds)
  done (took 191.416569886 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.199903297 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.192636672 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.272964327 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.229325111 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.6846469 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.3985153 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.338815177 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.743088504 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.216894402 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.2256097 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.535562598 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.200876218 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.585257364 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.164950454 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.209386406 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.301559839 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.428150499 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.572074044 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.21549052 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.475287208 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.227505995 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.400194055 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.313841549 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.472481904 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.244193055 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.224400931 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.210489499 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.209737462 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.391193772 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.379920807 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.230084384 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.237917256 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.780092647 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.060460584 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.207520788 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.207894366 seconds)
  done (took 150.134325414 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.718987919 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.201500225 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.200092695 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.201241686 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.230636623 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.201951008 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.73457363 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.739796569 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.702588927 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.270335711 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.26552939 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.443212145 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.202766713 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.294197232 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.215122026 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.204381764 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.203544273 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.217667477 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.227178376 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.202886944 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203109934 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.735729164 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.216834184 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.388498081 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.211201223 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.203058324 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.232806234 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.595981076 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.202647851 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232064226 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.518299926 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.246382182 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.203108709 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.504124487 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.279195777 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.312904285 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.204486275 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.232187374 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.202607879 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.47075695 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.203949414 seconds)
    (41/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.202932065 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.203238889 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.205583044 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.779722664 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.204950499 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.735698869 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.205852301 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.114342316 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.204004721 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.203084007 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.615674203 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.689284417 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.205296238 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.203757793 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.205712975 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.203985628 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.203883897 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.233733238 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.569415022 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.301545019 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.204800244 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.207471822 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233754659 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.20538051 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.366723754 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.206034274 seconds)
    (67/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.204563226 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.258658715 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.312414624 seconds)
    (70/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.849241424 seconds)
    (71/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.742943188 seconds)
    (72/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.207935759 seconds)
    (73/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.297175464 seconds)
    (74/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.322451222 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205015833 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205209625 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.205212226 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.204622449 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310615196 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.205355913 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.600995235 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211441579 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.205684422 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.266144905 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.29770986 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.204421929 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.523672712 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.20834734 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.206202552 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.902428782 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.296791833 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.205593561 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.205513971 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.206509188 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.602841786 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.742875206 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.385890821 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.207972448 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.698482313 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.209329949 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.205913912 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.614546724 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.718339899 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.816478108 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.208672072 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.313286852 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.210592945 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.208009674 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.20685466 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.236512601 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.206697523 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.265528049 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.209533267 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.600771946 seconds)
  done (took 345.569550099 seconds)
done (took 689.984045053 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.925248548 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.917114985 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.022186528 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.912209885 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.897515457 seconds)
  done (took 10.825515462 seconds)
done (took 11.976685354 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.384290174 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.384631325 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.264346796 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.385787788 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.234855621 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.401694986 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.364263641 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.228867337 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.30459806 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.284092228 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.302652361 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.258622669 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.234693569 seconds)
  done (took 18.184916469 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.519723073 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.510187279 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.2734313 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.516969049 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251012861 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.525047559 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.402465877 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.408878914 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.399805719 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.224187147 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.221474893 seconds)
  done (took 16.406745202 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.528300822 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.51770038 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.275558903 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.519877211 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.251708367 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.52403186 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.410285545 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.411189185 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.403526002 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.223427283 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.22130877 seconds)
  done (took 16.440030641 seconds)
done (took 52.183340408 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.21792076 seconds)
  done (took 2.371061591 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.249400263 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.416757141 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.229988393 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.222907977 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.218721809 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.21914777 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.223835838 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.217768759 seconds)
  done (took 11.154091128 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.216674981 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.216828533 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.215208686 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.217069932 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.217350477 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.21431841 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.213915148 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.217597387 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.215259019 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.218010099 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.214243146 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.214565454 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.215329855 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.214424573 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.217431034 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.218064253 seconds)
  done (took 20.610499293 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.21725557 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.215410143 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.216486219 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.215716591 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.215325937 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.215819057 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.216945117 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.215546235 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.215619167 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.215381135 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.216722609 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.215376299 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.216566506 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.216517521 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.216684793 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.21684545 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.215992613 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.216131257 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.220635962 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.21628076 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.217511608 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.215384601 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.217218611 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.216716283 seconds)
  done (took 30.351588679 seconds)
done (took 65.640339015 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.22769662 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.863518323 seconds)
  done (took 9.246418874 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.219182611 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.219141871 seconds)
  done (took 3.595815114 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.219572091 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.219077309 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.219291533 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.219584466 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.220041878 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.219558601 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.219463449 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.219465652 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.219888467 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.219937497 seconds)
  done (took 13.352143198 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.219853479 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.220754101 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.217130017 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.220831499 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.220368614 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.216806052 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.220700196 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.219281885 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.220143967 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.218571744 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.22058918 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.217824581 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.221173708 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.217881517 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.220047084 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.217724844 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.217647395 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.217539206 seconds)
  done (took 23.10230424 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.221027402 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.22060067 seconds)
  done (took 3.599441352 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.218371262 seconds)
    (2/7) benchmarking "second"...
    done (took 1.217786973 seconds)
    (3/7) benchmarking "month"...
    done (took 1.21874206 seconds)
    (4/7) benchmarking "year"...
    done (took 1.218488214 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.218760981 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.218271076 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.218035363 seconds)
  done (took 9.686358093 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.222084343 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.407975206 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.493215186 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.919264212 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.222958886 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.225344077 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.175473675 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.22666923 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.228555792 seconds)
  done (took 14.279820867 seconds)
done (took 78.017633322 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.200619016 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.213857223 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.143233982 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.225575257 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.231969906 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.557977826 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.236632816 seconds)
  (8/8) benchmarking "mandel"...
  done (took 3.467547548 seconds)
done (took 38.436229391 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.223718489 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.970364728 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.975397814 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.226797541 seconds)
  done (took 11.330939594 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.206401891 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.128059933 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.204798905 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.228998424 seconds)
  done (took 17.928426832 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.842855671 seconds)
    (2/2) benchmarking "read"...
    done (took 1.550420018 seconds)
  done (took 4.551766653 seconds)
done (took 41.193885293 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.222679793 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.222944829 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.22326494 seconds)
    (4/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.219976521 seconds)
    (5/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.220028286 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.220061959 seconds)
    (7/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.223169416 seconds)
    (8/24) benchmarking ("zero", "Float64")...
    done (took 1.219215923 seconds)
    (9/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.219901879 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.222964085 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.222542824 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.223376272 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.223021207 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.222518213 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.220128938 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.22092978 seconds)
    (17/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.22295535 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.22351487 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.220900924 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.220767245 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.22098913 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.223672161 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.221504072 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.221031214 seconds)
  done (took 30.481696206 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.223379174 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.222227292 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.223967985 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.223588721 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.221069567 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.22359333 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.223795043 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.220847516 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.224100716 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.223524874 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.221181435 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.221125398 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.224809194 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.222513812 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.223612204 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.221975458 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.224981683 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.224808508 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.224820076 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.221936797 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.224809827 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.222435545 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.22258023 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.224691377 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.222120278 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.223668093 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.224800831 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.222524405 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.225150097 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.222678327 seconds)
  done (took 37.859025053 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.230035808 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.231603012 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.225928232 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.225221955 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.225867137 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.224897341 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.225350357 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.225401046 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.224677173 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.226504535 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.225772081 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.226359923 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.225592268 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.225537864 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.226049051 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.225707584 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.225894724 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.2256048 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.226165898 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.225652371 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.226339539 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.226876674 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.227459794 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.226576223 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.226983602 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.226967666 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.226759789 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.227090488 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.226168634 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.226695716 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.227285272 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.226887043 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.226630756 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.226959597 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.226721916 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.226676863 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.231640355 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.234390656 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.226896472 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.227985121 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.228834139 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.227470795 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.227464103 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.227198751 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.227577804 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.22730795 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.227311955 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.226974666 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.227722834 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.228371435 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.227012296 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.228299518 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.228003567 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.227445491 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.227469655 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.227642653 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.22725479 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.227846715 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.227461057 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.227171465 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.22808084 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.227903379 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.228352587 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.228135533 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.228756648 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.227767053 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.228836812 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.227605473 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.228164574 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.228843425 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.228306958 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.228846982 seconds)
  done (took 89.529690776 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.227927774 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.22669448 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.226174535 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.226553231 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.225337324 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.228419711 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.226952707 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.22857732 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.226695969 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.229328786 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.228197133 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.226925205 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.226570155 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.229244574 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.229112344 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.226925654 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.228800912 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.226327682 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.229753844 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.2301885 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.228991336 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.226941856 seconds)
  done (took 28.17595168 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.228755032 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.229902222 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.227475067 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.230005466 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.227488579 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.229453259 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.230010224 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.229724913 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.229849383 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229103383 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227728735 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230580911 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.228178128 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.227556203 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.228246685 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.228057501 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.230386671 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.228089606 seconds)
  done (took 23.286827137 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.229352932 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.228306535 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.231721057 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.229019198 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.228274604 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.230864472 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.229163675 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.231642734 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.230979848 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.22932199 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.231050242 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.231625053 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.231502918 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.227856583 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.232112661 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.229226501 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.230992715 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228359785 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.232698341 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.229225285 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.228913259 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.232209803 seconds)
  done (took 28.232568738 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.232181553 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.231334642 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.229952043 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.229267738 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.229092776 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.231631735 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.232503416 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.229955348 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.232375879 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.233695685 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.229973502 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.232064321 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.229345835 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.230821613 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.229977389 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.229728658 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.231623146 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.230554089 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.23353298 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.230192742 seconds)
  done (took 25.787733865 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234184301 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234118651 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.234752494 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.234256607 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.234528056 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.236057832 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235374047 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.235042551 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235300733 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.235666074 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.234755175 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.234955862 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235453507 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.235630956 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235932835 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.235864827 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.235255611 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.234892746 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.235451801 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.235333102 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.235869843 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.234790893 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.235739057 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.235941325 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.235938423 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.235390676 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.235434725 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.237957393 seconds)
  done (took 35.760156693 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.235144104 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.234355253 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.231155997 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.232849414 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.232195783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.233068748 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.232756476 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.232509141 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.234438189 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.232263379 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.235094873 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.234210834 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.2349922 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.235204628 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.235715099 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.235058847 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.234626542 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.232004138 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.232546308 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.233072463 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.235923056 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.23563401 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.235739838 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.232741537 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.233981628 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.23633667 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.233117898 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.233248686 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.235453258 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.233281696 seconds)
  done (took 38.190951213 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.254183773 seconds)
    (2/2) benchmarking "in"...
    done (took 1.255067486 seconds)
  done (took 3.680460424 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.23312871 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.235528763 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.2375208 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.234868763 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.234407665 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.236301232 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.236433194 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.233167655 seconds)
  done (took 11.053012229 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.235430253 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.23636491 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.237116193 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.236340369 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.238377737 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.238948945 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.247609488 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.25186614 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.239416453 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.238376799 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.244061968 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.245286371 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.242592225 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.237259757 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.23797635 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.239561633 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.237190483 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.238226335 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.238640209 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.237531558 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.238014926 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.240713108 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.241092693 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.235221783 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.239208657 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.251154529 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.244834279 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.237578338 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.238924143 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.24369248 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.239014988 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.234378858 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.238138226 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.23850269 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.23834032 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.238511645 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.251505353 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.259064428 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.248041743 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.239571623 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.239259345 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.23578961 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.241555063 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.244454498 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.241521257 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.240302977 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.239545427 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.236335834 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.238919714 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.242522606 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.24379939 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.238407917 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.23674415 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246819307 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.241204241 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.248132039 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.256699514 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.243542359 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.248826332 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.253521789 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.255572946 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.247564528 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.242857438 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.240990836 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.251522068 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.263055644 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.249191627 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.2532003 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.237831756 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.240096914 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.250766782 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.255241455 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.250521653 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.241214409 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.241756914 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.241197497 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.241852599 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.241130302 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.250053093 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.260824715 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.241373165 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.242035181 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.251390193 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.262517742 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.240200704 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.24173531 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.242575487 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.242966057 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.243707787 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.254742376 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.258011419 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.242237621 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.242355339 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.241838957 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.244855748 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.242814169 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.242545901 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.244134486 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.239098222 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.241748493 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.242753426 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.246560417 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.250929873 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.242517711 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.242746598 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.252134867 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.242685642 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.242200296 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.253809427 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.243196849 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243312378 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.243076098 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.25074697 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.239244004 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.245000182 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.251798501 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.243720308 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.245220337 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.243588291 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.243810252 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253637254 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.270940372 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.243946695 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.243370078 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.248167453 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.254080911 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.244702041 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.248541935 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.243196034 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.240911896 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.240863339 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.246579447 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.244269678 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.245724874 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.243933892 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.246759132 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.241847392 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.243705467 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.244508809 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.246131608 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.245941423 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.244712719 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.246140484 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.248196937 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.245577702 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.248126796 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.254011168 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.246422242 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.246976038 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.245429801 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.241969369 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.244522226 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.247656333 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.245740915 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.246495887 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.245745338 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.245049808 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.24536238 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.244561231 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.24506691 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.245551569 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.246338358 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.249182464 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.246392411 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.250650963 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.246533315 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.243218471 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.245555027 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.245956188 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.248772114 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.246215004 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.245768066 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.248936295 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.254623642 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.246440663 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.246003943 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.251543163 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.247200996 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.247284132 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247078601 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.249938554 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.255117287 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.246105896 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.25658908 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.247657383 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247555054 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.247186736 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.247630551 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.246781737 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.247963372 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.250365731 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.254182713 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262482341 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.257447994 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.247850528 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.250599085 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.248076599 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.251239386 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.254232384 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.247693508 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.248951471 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.247518202 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.247226386 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.247918416 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.251102538 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.248654744 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.247570921 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.246929711 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.248532503 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.248531738 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249312816 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.249796694 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.251845483 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.245397148 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.248202044 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.248002704 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.248695629 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.245893408 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.248066043 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.248854885 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.248938472 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.249111877 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.258853083 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.245502948 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.251655834 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.249792556 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.249188943 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.248543265 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.248630243 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.251502066 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.250260658 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.257759393 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.266716061 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.250602132 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.258497311 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.265931453 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.249349004 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.25358515 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.24998699 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.247639802 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.252624265 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.257289771 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.249636405 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.249990227 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.249099536 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.249976673 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.249452525 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.258908052 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.248070765 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.249223675 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.250126088 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.253015313 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.247831323 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.251844807 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.252254551 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.251493659 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.25263318 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.250733432 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.249605607 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.2525762 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.250685229 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.251245055 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.251268359 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.253339941 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.258797102 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.257608447 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.252387786 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.254849962 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.251906777 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.254771278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.251975309 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.251388267 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.251784306 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266654235 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.259298349 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.259917692 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.255852258 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.252431531 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.25969043 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.253984971 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.256744253 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.251956152 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.253035277 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.253582924 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.251328938 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.249785625 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.253997891 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.252773398 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.254111768 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.253354248 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.256214732 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.252678839 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.252730497 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.252945856 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.252702855 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.25341085 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.254180502 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.253146699 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.257768783 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.256063616 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.253172913 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.253643439 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.262027103 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.270124846 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.254957862 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.252895134 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.25498399 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.25502161 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.255745275 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.254080442 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.256882922 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.260542172 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.256593041 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.263858864 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.255016095 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.265457813 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.253872471 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.257077886 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.261247476 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.251350494 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.253387294 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.255928703 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.253513455 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.263821046 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.270351957 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.255546377 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.257914546 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.254301694 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.254284026 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.254416848 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.254879544 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.254494218 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.25399928 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.265550307 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.275088201 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.258938124 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.256968782 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.251957649 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.255247126 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.255064095 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.253835008 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.261632192 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.255322725 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.256853198 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.254808841 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.256928906 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.255027757 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.255283927 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.255180204 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.253174092 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.255201669 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.266136064 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.272434056 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.260752578 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.255291628 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.267585191 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.256371334 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.265949146 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.272956405 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.256510525 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.256609676 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.256876351 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.258932838 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.256040802 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.258272329 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.255853504 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.256423061 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.259475625 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.256545397 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.260705268 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.256690656 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.256422965 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.256558374 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.266584949 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.279371872 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.258114513 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.260837062 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.25442827 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.258593264 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.261850845 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.256655218 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.257037029 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.259490908 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.266761907 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.26497964 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.258398504 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.257353238 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.258404863 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.257905494 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.25689149 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.257809742 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.257531038 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.258352958 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.260310511 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.257390767 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.264246105 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.257800779 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.258684213 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.260017203 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.25919871 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.27061334 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.258543825 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.2593088 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.258244273 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.257686491 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.259554509 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.258819348 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.258957588 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.260412503 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.257960263 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.260196662 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.265304042 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.265668671 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.262116775 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.259382898 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.25845108 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.261111943 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.260729278 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.259385517 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.25920085 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.259676347 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.260832206 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.258815066 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.262369433 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.259084896 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.258970725 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.260289569 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.258620843 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.261899357 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.267114298 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.260031862 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.257217037 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.259081352 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.259295124 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.258531555 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.26126259 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.271187605 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262846122 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.269600319 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.26766444 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.263536498 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.261638898 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.262646881 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.269133914 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.260260439 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.262526146 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.2609305 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.264377574 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.261416288 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.264704004 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.261470527 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.27080666 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.262714101 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.262243151 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.272029649 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.28267399 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.261339209 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.262265699 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.266271501 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.261980679 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.258558218 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.262169022 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.261957709 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271000927 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.28139837 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.261679954 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264125698 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.259606556 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.263033592 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.266084935 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.261542477 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.262892356 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.258455181 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.262643815 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.262245947 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.261521913 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.259272868 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.263726554 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.261792247 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.264753658 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.269517079 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.259049936 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.264423027 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.263234032 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.262822195 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.262815195 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.262760674 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.259134898 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.2600556 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.263074157 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.263436141 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.264142549 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.265461641 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.26289876 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.263998022 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.263792738 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.262696363 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.266285697 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.272742885 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.269683911 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.260427356 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.262129271 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.264154874 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.267715572 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.263210011 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.26387889 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.264755594 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.267057485 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.263464697 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.263479664 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.263215852 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.266379285 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.283437531 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.284511273 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.264465889 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.265307283 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.271420398 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.264630284 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.261482753 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.264714841 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.26868683 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.267931503 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.271979715 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.264939953 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.272918464 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.282119196 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.264942609 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.268783918 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.267406113 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.27414072 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.268512521 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.265646206 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.264360978 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.269183104 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.282661972 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.265232743 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275370444 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.297023453 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.282464812 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.266738788 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.266013382 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.265065681 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.265629567 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.268903526 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.265558713 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.264957385 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.265485298 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.265158087 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.266919853 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.273012648 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.268060719 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.265674847 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.265765874 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.26683152 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.26996306 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.263210305 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.266582597 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.265112406 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.26663584 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.265767675 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.265676103 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.266928318 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.281310325 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.278254325 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.265561439 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.266708366 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.263611149 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.271893369 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.269416555 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.275673401 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.274320041 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.26713228 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.266265944 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.269130057 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.267490707 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.264790596 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.268323325 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.266907507 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.266696256 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.264846983 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.28155171 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.275816003 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.274305818 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.268936736 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.267996863 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.267168161 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.270320242 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.267712374 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.267234807 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.270987921 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.268269919 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.27158884 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.267510776 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.268173841 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.27069484 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.275483463 seconds)
  done (took 749.467900872 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.266805437 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.265870973 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.26554281 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.266684264 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.266106828 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266771022 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266224576 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.265889919 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.266710626 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.266597821 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.266274936 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.266556561 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.266392478 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.266701167 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.266524665 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.266154425 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.265861755 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.266021453 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.267541709 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.266250075 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.2670584 seconds)
  done (took 27.797277919 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.269651668 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.267553428 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.266837235 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.269296765 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.267151515 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.269179963 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.266620597 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.269039297 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.26899144 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.267160885 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.2695277 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.269653953 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.266909772 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.266570585 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.266987569 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.269247672 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.269621286 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.266504256 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.268934588 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.268022712 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.269504644 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.267111519 seconds)
  done (took 29.105301076 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.270365803 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.270624711 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.269325318 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.268766085 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.270457204 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.267855681 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.269841667 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.270505452 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.270541162 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.272557199 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.270449795 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.271360923 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.277029075 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.276142775 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.274517544 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.270818016 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.41445556 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.27107621 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.271191904 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.271336461 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.268055669 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.279022904 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.268503332 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.268921175 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.270901915 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.270979009 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.271517763 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.272208558 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.272240602 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.273113957 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.27592404 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.272308369 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.272265517 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.275176423 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.272107188 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.273381054 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.275968174 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.2728274 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.270245664 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.272347036 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.282817924 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.292919939 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.272675582 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.280770116 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.273127572 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.272857336 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.276904129 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.280411445 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.270008275 seconds)
  done (took 63.726143846 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.273437413 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.273264468 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.270817955 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.272321574 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.273425282 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.273632926 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.272709523 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.273448912 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.270701571 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.27043277 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.273612224 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.271017346 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.269904293 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.272568296 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.27266433 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.27047344 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270159877 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270776319 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.271212095 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.270838421 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.270532649 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.273340131 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.273818125 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.271185121 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.273315026 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.270999976 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.271446454 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.273515942 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.271012818 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.271329277 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.273313734 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.274010551 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.273678905 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.2715932 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271130155 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.273773883 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.273846415 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.271558275 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.274505129 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.271017662 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.273763976 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.275165041 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.274345759 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.274974889 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.271705134 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.272186827 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.271816832 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.272087574 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.272443102 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.273911418 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.274482349 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.272360275 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.274771838 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.271981196 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.275388227 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.275073014 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.272074437 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.272315304 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.275086147 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.273386496 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.272552596 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275357335 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.27384843 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.276535485 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.276166149 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.274124629 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.273302256 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.275729428 seconds)
  done (took 87.762937361 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.27695081 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.276373984 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.276763324 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.275894102 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.276942199 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.276406392 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.276567772 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.275981631 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.275805664 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.276419629 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.2765696 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.27676237 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.277778069 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.276259746 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.277786978 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.27737142 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.277543875 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.278065921 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.277358606 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.276885817 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.278491885 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.277364971 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.278352307 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277057565 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.278470731 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.277957748 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.277719174 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.277984595 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.277870518 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.277296441 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.278204702 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.277850372 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.278595526 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.278038646 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.277458712 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.278934647 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.277668437 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278598317 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.278244751 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.278861483 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.277994809 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.279241363 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.278651802 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.279550855 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.278479019 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.279069979 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.278503903 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.278480642 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.278634153 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.279650673 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.279071685 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.279486342 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.279708222 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.279277764 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.279500044 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.278735042 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.278984499 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.278758258 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.279205955 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.279821751 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.279751814 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.278923766 seconds)
  done (took 80.449690464 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.279177726 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.279704318 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.276749412 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.276400357 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.279523697 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.277355668 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.279502964 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.279583483 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.279999383 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.279674803 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.279694075 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.276577993 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.277601594 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.279831047 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.278451146 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.277058011 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.278254188 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.277796812 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.280854172 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.277342948 seconds)
  done (took 26.784957745 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.277275369 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.280343529 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.278670102 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.278230819 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.28083933 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.278315313 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.280814442 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.280818364 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.278363723 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.280360957 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.280990516 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.281887285 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.278053677 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.279022325 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.282581549 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.278935906 seconds)
  done (took 21.690360429 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.277933514 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.281048346 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.281200116 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.281410761 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.278564817 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.277910145 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.281213726 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.278596579 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.278501043 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.282071326 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.281049727 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.281308971 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.281738383 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.282271846 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.279367979 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.281435972 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.278405522 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.278498929 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.281780181 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.282206082 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.279175657 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.280387617 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.282455354 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.281950186 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.280060329 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.280091426 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.280240655 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.279814353 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.280109598 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.28244904 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.280050626 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.280843888 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.280136253 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.280411368 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.2831466 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.2797359 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.283082766 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.282505008 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.282904039 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.282215223 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.283596806 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.280070907 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.282461661 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.282705 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.280847695 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.283068995 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.281070014 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.281051696 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.280833843 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.280523908 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.283640246 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.283999805 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.283733843 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.283757691 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.284008176 seconds)
  done (took 71.681186572 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.284408081 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.284126177 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.281718148 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.284341852 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.28323652 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.282047146 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.284563333 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.281885547 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.282285771 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.284489346 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.282587257 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.284558387 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.281564373 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.283704573 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.281908753 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.284597614 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.282377807 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.281458524 seconds)
  done (took 24.3140474 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.282883554 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.282357126 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.286021045 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.281484531 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.28148232 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.284410985 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.281232106 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.284342818 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.284682458 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.282488149 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.282199268 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.284958549 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.284037895 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.284418407 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.282386681 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.281421973 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.284770492 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.284049724 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.281997319 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.278928405 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.281918901 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.281830386 seconds)
  done (took 29.443918146 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.280353894 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.281531764 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.300187483 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.323838508 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.310077796 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.279912476 seconds)
  done (took 8.991719544 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278287115 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280875406 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.277997389 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.282867327 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280541402 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277251737 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277971736 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.277319525 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280515904 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278897626 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278354766 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280728898 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280102165 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278692502 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281357656 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280423701 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278201039 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278748845 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278545959 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282459389 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.277907908 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279605668 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278249119 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2785439 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.277982287 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27849476 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281319869 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279437408 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.27789034 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.28030497 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280051315 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278149324 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280542218 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279036502 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282722586 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279610249 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27839424 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281286711 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280391009 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.278373168 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.279816843 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280416385 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280889943 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278886768 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280586365 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278736282 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278726766 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.278115719 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279112175 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.280869608 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281340647 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.278184867 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.280980666 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.281267422 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.28144818 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.282013244 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27945126 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.27819922 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281420257 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.279545543 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.27904312 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280487836 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278367717 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279016149 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281053499 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278033173 seconds)
  done (took 85.672377233 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279333729 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.278124147 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.278437883 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280884429 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278964959 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279545408 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279090317 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.278406764 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279768121 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279949325 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283220122 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279262422 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279354725 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279260832 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280379174 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.27907638 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.279483574 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279716834 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279691312 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282574434 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279701818 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.279340233 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279613279 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279900971 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280556223 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282686951 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.279913806 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.279779679 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.27967964 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280103226 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.279950906 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280262123 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.2802572 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.280408175 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.279617639 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280755141 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.279981869 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.280030829 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281536825 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.282800581 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.280945024 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.283396441 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.280752107 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281019248 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.28129505 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281321705 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281929433 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281566263 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.280367979 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281015641 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281831696 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.281925644 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28229209 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.28200821 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.281384402 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.281276164 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.28215526 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.281193465 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.280943531 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283229464 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.281625228 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.282241732 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.283944389 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281281468 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.281620199 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.281274848 seconds)
  done (took 85.743435706 seconds)
done (took 1745.828781437 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.35699116 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.276542995 seconds)
  done (took 13.851515856 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.446891574 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.397937947 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.282546221 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.279317155 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.28267237 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.302598276 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.275734995 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.282876926 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.282903199 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.28347852 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.282506471 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.468386545 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.278232193 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.283877502 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.281703052 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.373869227 seconds)
  done (took 42.306858688 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.285106688 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.286966055 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.319511805 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.287934743 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.287059313 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.323175475 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.353486397 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.286638793 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.452058422 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.33696597 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.673783601 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.289419409 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.286333813 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.559877507 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.322708538 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.323752428 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.555436694 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.673831324 seconds)
  done (took 26.122294928 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.717138446 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.306311902 seconds)
  done (took 9.241286524 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.301834083 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.287707213 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.288556417 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.302684778 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.299774632 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.316847199 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.341043035 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.292101778 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.301690006 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.317576715 seconds)
  done (took 64.268024543 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.302937754 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.28550298 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.286162489 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.283290205 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.275768835 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.276251175 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.28329209 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.278128918 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.71201582 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.407150749 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.307861985 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.293204324 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.285577405 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.286560468 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.282565168 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.318786407 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.41466795 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.282251239 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.281525499 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.290460502 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.284838794 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.386602151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.321313764 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.281376355 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.402729633 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.709801787 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.290806318 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.290881197 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.421217625 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.28079583 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.282235458 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.284598861 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.285952173 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.864052749 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.826971719 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.303785441 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.307776191 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.29369404 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.280448196 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.419639724 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.285307469 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.289639854 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.27537414 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.795637169 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.430692204 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.393477561 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.449878312 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.286380967 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.282750663 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.344539196 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.284683305 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.283589745 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.312903291 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.034155534 seconds)
  done (took 108.221758771 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.312515908 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.764265888 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.443750748 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.290857742 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.781642607 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.719009291 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.274503314 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.535770564 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.298881405 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.73659508 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.552125821 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.616523186 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.274671076 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.277825894 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.276411957 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.274022376 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.528079968 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.566941992 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.273471617 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.279642194 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.325504611 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.767611219 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.502838092 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.448107289 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.312082066 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.707757855 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.500030454 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.62320068 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.278338089 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.273641374 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.565608995 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.284973017 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.276369448 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.2743699 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.544554289 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.614629177 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.580006089 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.27493073 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.286758391 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.274244281 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.291578111 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.703893563 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586165791 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.513528461 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.642766743 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.725145041 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.273816678 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.273063406 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.278893272 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.479101958 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.516681326 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.749991463 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.501272571 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.290485498 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.612265665 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.273704588 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.35707971 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.728973225 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.604354146 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.60318579 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.27877519 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.272126371 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271930024 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.793359895 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.272284117 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.582209939 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.388203539 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.273372235 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.581890292 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.584641234 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.60353942 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.72564076 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.311971531 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.296164613 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.364237021 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.75729905 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.538974418 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.721510435 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.300685836 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.271596352 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.566552331 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.273690339 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.541184283 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.799790372 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.733398559 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.32169147 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.290317991 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.270565692 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.718684366 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.718143077 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.515528677 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.630763877 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.546553278 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.340092301 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.270835297 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.270805489 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.314208827 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.50300809 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.285996394 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.632170804 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.717349149 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.042567926 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.316021381 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.788032184 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.504389756 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.284651886 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.272539128 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.271875581 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.490176264 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.342483051 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.286953133 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.2742407 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.72014727 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.142749593 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.409509549 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 4.970754894 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.538843098 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.271898525 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.738527856 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.278377488 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.720607417 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.276216321 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.784225772 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.808900119 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.329336429 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.493562677 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.632840359 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.287341883 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.738048812 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.783655113 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.493253432 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.733628636 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.007648036 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.275519759 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.768100774 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.298398409 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.293120242 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 1.455073426 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.28965436 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.543089879 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.289250293 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 1.742758998 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.308617456 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.54189742 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.307686134 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.751916992 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.327964271 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.541029243 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.293633405 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.403126361 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.290873487 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.270167578 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.469598003 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.595860718 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.274306559 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.849534204 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.275040954 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.434312935 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 1.788005849 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.3090667 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.546618505 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.272944732 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.275655792 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.569825683 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.312388196 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.027662904 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.276273618 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.543757119 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.244630204 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.720197999 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.274750898 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 1.794077554 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 1.498516527 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.293268036 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.27796099 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.075660678 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.275039752 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.336252655 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.445812693 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.822851379 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.276158113 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.695534998 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.27465084 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.506750215 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.292547144 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.278473625 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.626042675 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.350959663 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.275056658 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.296388305 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.274311994 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.276888336 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.710984837 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.315007478 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.994682177 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.424715275 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.745570684 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 1.587387112 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.746303757 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.335831534 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.292147234 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.787369016 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.345847575 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.548485657 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.278353384 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.313387001 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.725009535 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.278527226 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.709751521 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 1.778565048 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.329238905 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.530022958 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.27789645 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.629417935 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.275894321 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.519163862 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.599193512 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.2803735 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.276917276 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.493726232 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.514765266 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.493229393 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.292901105 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.320113714 seconds)
  done (took 836.55693451 seconds)
done (took 1101.786368539 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.276333769 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.277787745 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.265566671 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.281982138 seconds)
  done (took 26.319921176 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.28835503 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.28405075 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.286937568 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.284653531 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.28640094 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.28565314 seconds)
  done (took 8.935497618 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.350250524 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.279564647 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.282594997 seconds)
  done (took 19.133253011 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.483726772 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.420782363 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.62758675 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.202325283 seconds)
  done (took 9.955015427 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.286631223 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.286907094 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.286482138 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.287709048 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.288553088 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.289993542 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.288551319 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.289823197 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.290682747 seconds)
  done (took 12.814700348 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.753912109 seconds)
done (took 83.13097313 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.478205455 seconds)
    (2/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.357527519 seconds)
    (3/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.343132004 seconds)
    (4/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.467226722 seconds)
    (5/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.292271779 seconds)
    (6/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.241218181 seconds)
    (7/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.280634956 seconds)
    (8/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.677131079 seconds)
    (9/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.753753046 seconds)
    (10/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.305607898 seconds)
    (11/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.29629332 seconds)
    (12/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.506583996 seconds)
    (13/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.278374755 seconds)
    (14/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.497375943 seconds)
    (15/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.323737368 seconds)
    (16/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.299210011 seconds)
    (17/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.306673668 seconds)
    (18/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.954213635 seconds)
    (19/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.771162651 seconds)
    (20/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.046681825 seconds)
    (21/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.02840719 seconds)
    (22/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.273747651 seconds)
    (23/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.461831845 seconds)
    (24/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.676401913 seconds)
    (25/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.305139313 seconds)
    (26/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.660597296 seconds)
    (27/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.120454263 seconds)
    (28/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.390733663 seconds)
    (29/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.404436315 seconds)
    (30/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.765569546 seconds)
    (31/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.413872809 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.67340436 seconds)
    (33/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.393700032 seconds)
    (34/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.311040887 seconds)
    (35/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.287051541 seconds)
    (36/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.282882474 seconds)
    (37/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.486574018 seconds)
    (38/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.076312419 seconds)
    (39/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.392093472 seconds)
    (40/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.382790262 seconds)
    (41/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.844278101 seconds)
    (42/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.408643424 seconds)
    (43/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.736422418 seconds)
    (44/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.102121827 seconds)
    (45/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.777844867 seconds)
    (46/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.358145136 seconds)
    (47/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.559421489 seconds)
    (48/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.517046799 seconds)
    (49/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.267334829 seconds)
    (50/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.465158432 seconds)
    (51/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.28439749 seconds)
    (52/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.484314678 seconds)
    (53/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.28572452 seconds)
    (54/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.307591991 seconds)
    (55/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.394308328 seconds)
    (56/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.613539233 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.542051771 seconds)
    (58/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.09218032 seconds)
    (59/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.298156652 seconds)
    (60/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.862274459 seconds)
    (61/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.251494035 seconds)
    (62/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.357072067 seconds)
    (63/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.42224396 seconds)
    (64/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.417265351 seconds)
    (65/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.955590024 seconds)
    (66/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.31140066 seconds)
    (67/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.571805083 seconds)
    (68/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.60799024 seconds)
    (69/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.567818206 seconds)
    (70/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.357389874 seconds)
    (71/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.357628056 seconds)
    (72/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.441033638 seconds)
    (73/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.284080075 seconds)
    (74/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.418974799 seconds)
    (75/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.707180198 seconds)
    (76/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.283805691 seconds)
    (77/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.835634349 seconds)
    (78/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.952038867 seconds)
    (79/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.794368662 seconds)
    (80/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.496848956 seconds)
    (81/309) benchmarking ("sort", Int8, false)...
    done (took 4.330793804 seconds)
    (82/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.270436193 seconds)
    (83/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.782544167 seconds)
    (84/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.365040747 seconds)
    (85/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.332488254 seconds)
    (86/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.28660322 seconds)
    (87/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.271942237 seconds)
    (88/309) benchmarking ("sort", Int64, false)...
    done (took 5.414683198 seconds)
    (89/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 4.033627582 seconds)
    (90/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.287373763 seconds)
    (91/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.348410878 seconds)
    (92/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.286250603 seconds)
    (93/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.322950442 seconds)
    (94/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.269097414 seconds)
    (95/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.292888843 seconds)
    (96/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.129417953 seconds)
    (97/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.286977174 seconds)
    (98/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.331014246 seconds)
    (99/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.28549819 seconds)
    (100/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.632498643 seconds)
    (101/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.322967684 seconds)
    (102/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.334094765 seconds)
    (103/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.635949532 seconds)
    (104/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.046201091 seconds)
    (105/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.271725387 seconds)
    (106/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.071159588 seconds)
    (107/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.274721061 seconds)
    (108/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.574262273 seconds)
    (109/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.377604648 seconds)
    (110/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.270168167 seconds)
    (111/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.373808888 seconds)
    (112/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.074446558 seconds)
    (113/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.304103364 seconds)
    (114/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.370374173 seconds)
    (115/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.499412254 seconds)
    (116/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.325910588 seconds)
    (117/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.304783889 seconds)
    (118/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.849823097 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.068143136 seconds)
    (120/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.255123723 seconds)
    (121/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.408347741 seconds)
    (122/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.821282991 seconds)
    (123/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.870202966 seconds)
    (124/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.296964627 seconds)
    (125/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.310020596 seconds)
    (126/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.647029116 seconds)
    (127/309) benchmarking ("sort", Bool, false)...
    done (took 1.783929118 seconds)
    (128/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.312471924 seconds)
    (129/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.564892139 seconds)
    (130/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.568298101 seconds)
    (131/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.336177117 seconds)
    (132/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.285644201 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.294644321 seconds)
    (134/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.972725324 seconds)
    (135/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.548015875 seconds)
    (136/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.545370629 seconds)
    (137/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.284443458 seconds)
    (138/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.800913339 seconds)
    (139/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.288886264 seconds)
    (140/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.731269757 seconds)
    (141/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.976048887 seconds)
    (142/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.43404781 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.310924504 seconds)
    (144/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.271978012 seconds)
    (145/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.810353963 seconds)
    (146/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.47668245 seconds)
    (147/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.289099267 seconds)
    (148/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.272674213 seconds)
    (149/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.710460596 seconds)
    (150/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.693866138 seconds)
    (151/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.332216386 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.970344639 seconds)
    (153/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.316986708 seconds)
    (154/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.880979214 seconds)
    (155/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.798442834 seconds)
    (156/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.28560789 seconds)
    (157/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.793715399 seconds)
    (158/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.312582872 seconds)
    (159/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.133138112 seconds)
    (160/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.411177794 seconds)
    (161/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.286534697 seconds)
    (162/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.468219666 seconds)
    (163/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.317027909 seconds)
    (164/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.287800693 seconds)
    (165/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.632198759 seconds)
    (166/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.436207736 seconds)
    (167/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.401963179 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.37624466 seconds)
    (169/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.36090283 seconds)
    (170/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.973601202 seconds)
    (171/309) benchmarking ("sort", Float32, false)...
    done (took 5.244146405 seconds)
    (172/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.632855564 seconds)
    (173/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.023327826 seconds)
    (174/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.838108841 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.307269346 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.550616866 seconds)
    (177/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 4.223761219 seconds)
    (178/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.672736153 seconds)
    (179/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.401388315 seconds)
    (180/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.450779462 seconds)
    (181/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.317132455 seconds)
    (182/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.411869374 seconds)
    (183/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.314936767 seconds)
    (184/309) benchmarking ("sort", BigInt, false)...
    done (took 6.289422846 seconds)
    (185/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.492641006 seconds)
    (186/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.750578057 seconds)
    (187/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.472727093 seconds)
    (188/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.602982559 seconds)
    (189/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.329440013 seconds)
    (190/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.056912743 seconds)
    (191/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.289337926 seconds)
    (192/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.849418424 seconds)
    (193/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.412863281 seconds)
    (194/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.531696542 seconds)
    (195/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.391650088 seconds)
    (196/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.298710835 seconds)
    (197/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.292879273 seconds)
    (198/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.388756717 seconds)
    (199/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.353203948 seconds)
    (200/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.396873827 seconds)
    (201/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.274246683 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.688881138 seconds)
    (203/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.97546156 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.349096819 seconds)
    (205/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.741913631 seconds)
    (206/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.979595975 seconds)
    (207/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.537891003 seconds)
    (208/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.994594437 seconds)
    (209/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.840568472 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.445638173 seconds)
    (211/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.927991339 seconds)
    (212/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.301992934 seconds)
    (213/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.316725069 seconds)
    (214/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.679031621 seconds)
    (215/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.391573565 seconds)
    (216/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.342341875 seconds)
    (217/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.623479478 seconds)
    (218/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.368366382 seconds)
    (219/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.332670472 seconds)
    (220/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.821340865 seconds)
    (221/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.48431154 seconds)
    (222/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.472807054 seconds)
    (223/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.261805242 seconds)
    (224/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.297418572 seconds)
    (225/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.580128895 seconds)
    (226/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.425308001 seconds)
    (227/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.293855803 seconds)
    (228/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.410646963 seconds)
    (229/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.669635762 seconds)
    (230/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.4446648 seconds)
    (231/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.554674628 seconds)
    (232/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.283038964 seconds)
    (233/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.287132512 seconds)
    (234/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.252582456 seconds)
    (235/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.983876535 seconds)
    (236/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.303472372 seconds)
    (237/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.520327544 seconds)
    (238/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.34320843 seconds)
    (239/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.355744087 seconds)
    (240/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.481345671 seconds)
    (241/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.984178564 seconds)
    (242/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.279990212 seconds)
    (243/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.589076406 seconds)
    (244/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.789033676 seconds)
    (245/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.259505494 seconds)
    (246/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.343676679 seconds)
    (247/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.282170206 seconds)
    (248/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.044807201 seconds)
    (249/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.339953272 seconds)
    (250/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.292208254 seconds)
    (251/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.022490761 seconds)
    (252/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.622931609 seconds)
    (253/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.338726208 seconds)
    (254/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.386834987 seconds)
    (255/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.279887418 seconds)
    (256/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.682981882 seconds)
    (257/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.021598155 seconds)
    (258/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.55603729 seconds)
    (259/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.444303147 seconds)
    (260/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.628018807 seconds)
    (261/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.255674988 seconds)
    (262/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.094281384 seconds)
    (263/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.279848984 seconds)
    (264/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.482119509 seconds)
    (265/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.26763963 seconds)
    (266/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.289926285 seconds)
    (267/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.634448914 seconds)
    (268/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.249528418 seconds)
    (269/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.777743953 seconds)
    (270/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.0611125 seconds)
    (271/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.251266318 seconds)
    (272/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.35050164 seconds)
    (273/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.489798493 seconds)
    (274/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.352504285 seconds)
    (275/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.332576482 seconds)
    (276/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.247500252 seconds)
    (277/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.285321361 seconds)
    (278/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.245321308 seconds)
    (279/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.592821067 seconds)
    (280/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.249050047 seconds)
    (281/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.478610696 seconds)
    (282/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.234060227 seconds)
    (283/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.334018458 seconds)
    (284/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.322749823 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.356925035 seconds)
    (286/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.637083849 seconds)
    (287/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.384980132 seconds)
    (288/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.789805215 seconds)
    (289/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 4.385562897 seconds)
    (290/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.92260854 seconds)
    (291/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.280100678 seconds)
    (292/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.53128754 seconds)
    (293/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.20471046 seconds)
    (294/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.298697776 seconds)
    (295/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.26752554 seconds)
    (296/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.387260254 seconds)
    (297/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.242971621 seconds)
    (298/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.259271262 seconds)
    (299/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.305498411 seconds)
    (300/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.243205359 seconds)
    (301/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.270204294 seconds)
    (302/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.568166745 seconds)
    (303/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.716901893 seconds)
    (304/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.267012952 seconds)
    (305/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.512352983 seconds)
    (306/309) benchmarking ("sort", Float64, false)...
    done (took 5.433985024 seconds)
    (307/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.834155535 seconds)
    (308/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.828802775 seconds)
    (309/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.699562317 seconds)
  done (took 896.169304307 seconds)
done (took 897.392051124 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.27465451 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268779096 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.251903183 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.274468637 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.363683596 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.28608298 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.263024699 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.254480725 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.300569481 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.301250135 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.251252935 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.284452131 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.253123081 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.253169531 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.251540333 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.266276347 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.14920313 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.255143027 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.269434045 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.262823017 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.269373937 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.252159442 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.30239372 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.285481424 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.256069904 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.255245355 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.256091346 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.27199841 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.365267492 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.256987723 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.255808985 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.264637447 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.156867323 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.253875476 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.248052502 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.273014252 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.265509298 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.262585027 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.257551509 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.285325643 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.501825206 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.254985871 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.2549051 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.254333861 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.254783675 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.257589611 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.254623211 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.260829815 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.267262834 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.26868058 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.504459291 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.271687623 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.258308986 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.254001321 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.265296151 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.254213103 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.25831753 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270577859 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.274063082 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270090519 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.152415628 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.26171114 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.256427571 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.271247232 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.262127607 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.549670941 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.253204156 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.259008724 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.507078751 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.26250794 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.554590891 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.264981038 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.257808676 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.270260587 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.287871381 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.162477756 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.252687732 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.255309949 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.26304755 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.255132947 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.265367361 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.268258113 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.260960576 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.256611598 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.270408725 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.290204118 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.266294553 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.257566614 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.265377917 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.27576253 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.264132153 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.268512075 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.260108258 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.252104936 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.265856952 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.26014431 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.259418312 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.259917484 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.261513663 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.266546664 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.509544606 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.275104756 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.253844881 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.253585202 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.256237873 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.27083035 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.500126875 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.257652371 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.279369436 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.304420604 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.258237833 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.155943734 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.262826546 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.273429603 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.268047446 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.260082462 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.253441035 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.156730225 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.498616493 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.273018995 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.259898077 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.256478696 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.274692508 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.259942995 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.252755333 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.166034701 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.260135894 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.270321633 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.37793528 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.26818187 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.286671979 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.251147605 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.255933556 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.280523168 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.268772014 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.284187508 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.255816042 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.271190501 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.26484055 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.246046961 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.259772872 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.258917411 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.249590908 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.254068101 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.244037124 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.281629708 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.25805879 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.258667539 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.268067746 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.367841525 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.244581402 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.146419837 seconds)
done (took 210.911271005 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.30476284 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.240677984 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.339015768 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.243113797 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.338803711 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.338090368 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.239665082 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.239886811 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.24022762 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.617525684 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.241260018 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.240528943 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.242777505 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.240765905 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.325521578 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.243644054 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.240570921 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.581174019 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.244302926 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.314509569 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.2444053 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.242247344 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.243545562 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.624007112 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.243232528 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.236668717 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.314771453 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.244153242 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.589241478 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.239627706 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.241842157 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.588505303 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.33370681 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.260993088 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.253543513 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.251359458 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.340820966 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.258427279 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.325254726 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.325895556 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.350789636 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.283609615 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.24390612 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.238220313 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.245451947 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.245738494 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.242265698 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.271427125 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.24171209 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.242522755 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.582983102 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.255018708 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.243443374 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.242797456 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.242564888 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.274554539 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.242984885 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.244773137 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.334939976 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.24606468 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.309412668 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.626453426 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.620223916 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.245838166 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.241564097 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.243340149 seconds)
  done (took 142.444632841 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.31209905 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.319288707 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.351785662 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.247878928 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.29611021 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.355574181 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.247366632 seconds)
  done (took 10.313101625 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.251126165 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.247633308 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.296279023 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.29505594 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.246044449 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.395822325 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.246547586 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.25708779 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.243704211 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.299021329 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.247263897 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.246578779 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.253164584 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.238678565 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.29534236 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.258187032 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.362137595 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.247872219 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.247429679 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.403585314 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.245003033 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.253935966 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.299463645 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.259141689 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.248038836 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.253569135 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.829567024 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.247822693 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.244927468 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.246784588 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.245363271 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.287057513 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.248768362 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.241080782 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.245674664 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.363864106 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.249392834 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.245270495 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.248650887 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.241708736 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.24841834 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.247953357 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.248485835 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.245679966 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.24779015 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.271480835 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.248435915 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.247804763 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.248558268 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.248340303 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.298553497 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.249540392 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.246024204 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.246700946 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.305227819 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.257456347 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.249235503 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.245587935 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.249257265 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246157528 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.404552475 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.296380515 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.249286817 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.296816257 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.249137958 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.249147623 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.249901311 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.248644956 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.30373478 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.249867861 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.297110134 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.247723332 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.405443912 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.273589849 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.250698342 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.2522124 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.252447379 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.250321458 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.247324577 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.255973322 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.247552876 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.250607592 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.256099114 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.247565113 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.246855446 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.356382428 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.358557867 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.248731147 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.263095358 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.257606242 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.247785911 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.303820996 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.251148591 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.248111751 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.302345369 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.365286993 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.304286878 seconds)
  done (took 144.893036272 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.255992545 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.258886162 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.252656243 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.267968228 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.251026191 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.250504351 seconds)
  done (took 8.725358876 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.25289118 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.252096913 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.25091042 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.251228936 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.252391247 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.251483235 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.252145121 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.252428327 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.254178748 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.251016959 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.251841595 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.253280125 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.252241834 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.251981477 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.252371609 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.251981996 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.252361097 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.249631409 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.252472164 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251984068 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.34621851 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.252238484 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.252189579 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.254312911 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.255756978 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.252622576 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.261936166 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.252356185 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.25192701 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.259661267 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.255463876 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.253320524 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.255890615 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.257562618 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.256532106 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.254087539 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255189712 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.254711726 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.65681639 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.253480321 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.254518063 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.252659899 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.253375921 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.253969527 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.25476446 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.258300219 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.257180991 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.261509371 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.254336011 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.255014081 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.254849853 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.253359804 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.254068409 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.255284321 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.25865769 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.257726395 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.258364411 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.254742212 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.254482139 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.256433366 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.255351494 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.255152935 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.256293223 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.258192511 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.261594115 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.255926701 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.256977948 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.258479406 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.255332506 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.254939892 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.256256508 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.253086187 seconds)
  done (took 93.014945305 seconds)
done (took 400.571243539 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.675539911 seconds)
  done (took 7.867961838 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.433980814 seconds)
  done (took 7.628890011 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.899180624 seconds)
  done (took 19.093635333 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.283027265 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.304352794 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.260246962 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.251354102 seconds)
  done (took 26.291976861 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.252839017 seconds)
  done (took 7.44638611 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.24941212 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.249315921 seconds)
  done (took 13.694047315 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.480001696 seconds)
  done (took 7.673707893 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.080476013 seconds)
  done (took 8.275124813 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.261658829 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.268859884 seconds)
  done (took 13.73897226 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.239054662 seconds)
  done (took 7.43682951 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.238397603 seconds)
  done (took 8.435846256 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.252179869 seconds)
  done (took 7.449839882 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.283051213 seconds)
  done (took 7.480146904 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.277870416 seconds)
  done (took 8.474902473 seconds)
done (took 152.18086434 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.254556557 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.255436943 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.255502738 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.255202901 seconds)
  done (took 26.217931198 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.294231062 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.294313381 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.29555322 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.30497932 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.29771316 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.294036125 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.287827417 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.287151953 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.30594642 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.297902459 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.296508107 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.29714469 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.294602308 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.287337639 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.297327032 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.297427418 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.306489139 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.297550753 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.288045562 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.299121668 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.262952873 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.307092438 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.298536209 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.263115023 seconds)
  done (took 32.250618534 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.459962767 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.333778154 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.416273739 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.314664914 seconds)
  done (took 6.723666768 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.313919713 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.315987817 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.327887195 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.367147345 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.392545622 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.324506129 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.289434802 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.283501999 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.270315186 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.315991624 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.391524427 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.332141617 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.399775556 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.262872242 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.454524399 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.263474676 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.263377932 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.31522035 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.366960371 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.380233823 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.264043859 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.315430069 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.318562737 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.332604292 seconds)
  done (took 33.061757746 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.262611823 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.270530184 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.268764449 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.26272123 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.263089053 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.263670447 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.269453181 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.264205794 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.284802733 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.263877121 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.262118311 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.262479077 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.262976318 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.263540244 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.262643557 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.276579178 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.276504241 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.263161062 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.266710108 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.269445562 seconds)
  done (took 26.541259722 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.256685824 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.110520863 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.609851704 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.514660988 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.259644908 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.257629327 seconds)
  done (took 27.209807446 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.326182669 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.438783606 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.265527079 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.579939594 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.657703752 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.268246324 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.26568788 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.470329446 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.735174874 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.744091955 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.315891001 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.312503 seconds)
  done (took 18.581488424 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.258080228 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.260739478 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.263462714 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.276527328 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.312452378 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.268375576 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.271545132 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.258083623 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.315586873 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.317014626 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.269292103 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.314529506 seconds)
  done (took 36.588086544 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347756369 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.305517257 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.098249626 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.015997562 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.638480806 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.471991529 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.004397213 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.694435715 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.266778762 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.534061267 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.931039059 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370723847 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.515965893 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.259977293 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.264231068 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.196094599 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.492325117 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.689424034 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.265108359 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.907922007 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290371935 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260989024 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.99096414 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.290097321 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.472620275 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.389403802 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.52210541 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261955805 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.51468309 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27497715 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.272151158 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261366559 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.535996722 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.901687943 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.356579849 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.271919851 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.980854627 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.977902388 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.258894945 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.910387346 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.660544095 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.266320116 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.273483888 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.262405113 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197531015 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266972663 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.704639754 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.271006385 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.974870159 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.261927917 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.273616831 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357229007 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.266754721 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.077369268 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.305751329 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264017876 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.261064616 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.269007421 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.833453002 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.360851938 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271286661 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.199087095 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.366633541 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.906670031 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.836343385 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.367531914 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.266704854 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.267355118 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197770238 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.992710191 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.283443299 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592309836 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.284795167 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.913574832 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.904685059 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.959301862 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.213747136 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.758193744 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27104707 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.200568678 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.491224365 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264249069 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19905006 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.211056417 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197936951 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.890914169 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275797941 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.572328701 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.274162582 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.69518706 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.278652587 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.284688323 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.288443691 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.488199442 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.151356544 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264128432 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.710515504 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.500261452 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.286288743 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.703122942 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.202482515 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.269068309 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.522473503 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.476492623 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.265207641 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.203469405 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.464484923 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268029549 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.28267503 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.273671414 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.277827939 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.788272902 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280457665 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.371639508 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.285177495 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.266167477 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92831144 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270485651 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.368820851 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.964144101 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.512085418 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 1.967198486 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269752501 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.348838804 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.269176067 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266352553 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.012466659 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.783681487 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.266543149 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.268662467 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266509664 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.279710547 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.266656803 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.215551737 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.264618826 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.982969079 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.271076464 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.491634637 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.271954388 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.54551106 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.201774796 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.596464099 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.35713954 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.490575057 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.396267275 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.270049784 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.528025838 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.280175908 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.269734585 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.281976997 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.28596442 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.365954435 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.290546887 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.270717748 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.526310786 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.271854098 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.272058149 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.021571587 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.272986567 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.275161839 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.274115376 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.121221651 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.79263591 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.248188069 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.276342801 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.157976272 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.282293777 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.333340249 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.274075575 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.279194543 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.89904293 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.098059098 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.275705757 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.266408265 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496288611 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279255596 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.011189291 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.352993798 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.460487426 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79747801 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.28533182 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.202896343 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.981051914 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.962465845 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.268844762 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203654073 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.269329358 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279435183 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280040695 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.493749007 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.802827813 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274725995 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.934954947 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.278863348 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.280775353 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.274595124 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.269794078 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.879933785 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.385750298 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.274657509 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.284165919 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414188057 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.284996768 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.205050438 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.274852626 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.275440235 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.270107898 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.271416476 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.304321233 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.938604966 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.744634973 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.531934444 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.024259727 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.285022296 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.093060571 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.30360016 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.268098344 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.764938417 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292990406 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.291967928 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.281750936 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.282846271 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.98475898 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.933988865 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.839154616 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.945997007 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.753096798 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.16367701 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.275798672 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.273314516 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.710965486 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.210072526 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.828744345 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.442556187 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.711339363 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22002019 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.467011541 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.403293745 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.975328557 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.2836612 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.500510467 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.162120825 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.770147224 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30436051 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.484301193 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.307237097 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274841466 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.203083451 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.559793375 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.512790007 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.735213457 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.356897706 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.707110497 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.772978577 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.295137273 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.272218495 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.528833901 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437030208 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.990295444 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.446359553 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276699736 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.996116373 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.763945545 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.280987351 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.499631129 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.85240357 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.2893471 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.469289935 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212710814 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.284712954 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.28461713 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.274867472 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.394506939 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.274098231 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.528377798 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.284617126 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20823367 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.278266405 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.757024822 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.131834881 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.28064441 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.274502344 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.939341499 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.2794027 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532903508 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.279442877 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.893025516 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279611201 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.208856585 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209761465 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.968146446 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.282341037 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250335201 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.708295744 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.364268721 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.300726714 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.304129353 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.326779264 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.531252143 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.289951355 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.80256564 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.507021002 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.092830156 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301004616 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.376817739 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.803511518 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.281383504 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.276191518 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.51167037 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.134432588 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.500136983 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.131189212 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.188133091 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.274696645 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.490226799 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276559951 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.030382237 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.519706922 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.988288038 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.292140917 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.933120636 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305070403 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.991079613 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212302995 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.37967767 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.28430484 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.357782564 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.286834628 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.287593066 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.287502054 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.437726957 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.030249088 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.297594516 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.291183224 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.370449488 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.411820871 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.902866325 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.282640107 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.809137976 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.951411875 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.814714706 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.293117533 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.276765664 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.287213517 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.212426289 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426498616 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.503130804 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.551721856 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.408683032 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.417463434 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.301432054 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.813343452 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.309450775 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.492298451 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.553934298 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.173525444 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.28477015 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.293240385 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.278788701 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.290021075 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.490188069 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.716032507 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.780236094 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.405206852 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.29055264 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.720021921 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.556947748 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279082275 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.279043937 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.868497021 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.299460947 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.546599999 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.288470046 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.054652935 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.431140807 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.290174881 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.92474476 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.293508681 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.439702427 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.053760844 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.041120666 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.539935874 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.63024841 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.295350353 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.812434229 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.923126138 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546642464 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34901754 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.291493209 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.386501291 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.428416836 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.284887346 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.283974559 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.28170837 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.496788094 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.991330779 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.291338669 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.821762541 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.546969148 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.279129985 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.282201173 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.306650432 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.291507464 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.505449236 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.920624549 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.508356761 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.292012848 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.288675497 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.097689549 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.816511556 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.297774478 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.216254888 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.286716953 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.506802574 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.521498556 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.30185791 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.734830019 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.99321103 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777717381 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.254761769 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.303737994 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.287511549 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.931205793 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.82144334 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.899085383 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.720379141 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.852236966 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.282894119 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.572054638 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.287728819 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.288054131 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.561941401 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.285972799 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.292581168 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.296168449 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.815458973 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 1.991279356 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.293573635 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.982366289 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.223177045 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.625778276 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.933419669 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.22324263 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293027852 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.458125117 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.287404773 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412872373 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.295919618 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.285198484 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.298862475 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.020637313 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561278972 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.289449519 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.277434457 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 5.850597088 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.289448482 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.305820575 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.527046184 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.292205188 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.957318462 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.637776 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.540452553 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.295774311 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.271751564 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.288944987 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.284602591 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.272181239 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.484473706 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.507871483 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.785930129 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.293989144 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.297668393 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.289932542 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.501688214 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.496957395 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.067380799 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.316825545 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.285063565 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.304671519 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.196126036 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.787182842 seconds)
  done (took 1547.076283496 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.310346269 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.310266268 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.293955617 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.360084987 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.295288585 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.384177404 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.318134897 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.361039173 seconds)
  done (took 51.861456847 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.284717445 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.52185841 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.314320264 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.293126758 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.298906139 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.294435283 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.689495309 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.291561267 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.295441979 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.29714736 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.292902876 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.290080111 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.859827324 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.299013577 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.29705246 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.279300626 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.298176294 seconds)
  done (took 64.426447821 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.289559945 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.467544106 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.354700368 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.295607241 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 6.963755398 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.304676532 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.455674819 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.316381226 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.286118978 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.322443128 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.935879467 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.308579526 seconds)
  done (took 82.531718143 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.293717446 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.293042005 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.29378455 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.294415069 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.293711257 seconds)
  done (took 7.696732634 seconds)
done (took 1961.966149503 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.539876237 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.913536742 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.899436408 seconds)
  done (took 5.043237697 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.436163946 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.484056079 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.60335715 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.625256618 seconds)
  done (took 7.378043376 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.571710332 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.673926005 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.500746931 seconds)
  done (took 5.976030016 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.551043831 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.312036261 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.364250876 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.28812193 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.287226221 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.290469352 seconds)
  done (took 20.096658028 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.292075002 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.29447879 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.291950749 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.294969403 seconds)
  done (took 6.402533794 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.272115559 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.000910055 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.272347962 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.291456513 seconds)
  done (took 18.067190154 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.038761274 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.05256692 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.036380981 seconds)
  done (took 7.358086344 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.29077269 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.138285202 seconds)
  done (took 9.659650333 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.601898847 seconds)
  done (took 2.832451908 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.424729541 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.554837664 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.245734932 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.140170999 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.254315707 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.681517763 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.739033857 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.370182508 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.127668494 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.210448902 seconds)
  done (took 25.979804087 seconds)
done (took 121.790789202 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.799458637 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.289133085 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.496046973 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.768341565 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.515863956 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.496903674 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.491405395 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.737483521 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.319675989 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.273944133 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.773693898 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.519790022 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.647703467 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.293743143 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.647558743 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297601358 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.522140213 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.931127004 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.46198203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.690931659 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.493522758 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.412644532 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.601073969 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.483580532 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.519579534 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.44868983 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 4.995630797 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.290520544 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.633884627 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.018494186 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.452164214 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.870584176 seconds)
  done (took 183.427359399 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.290745025 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.29939407 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.289347123 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.294348313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.289827495 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.290730802 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.290102858 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.290148949 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.290003143 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.290635579 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291041873 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.291869311 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.290352107 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.299287146 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.292821479 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.303535078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.290692476 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.290799477 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.306808502 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.291478207 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.292352664 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.296144164 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.290744754 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.290943724 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.290808999 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.290059574 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.308091865 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.291395335 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.29126475 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.297623202 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.294616391 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.319084342 seconds)
  done (took 202.650995575 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.291686844 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.309862422 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.291033234 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.291384889 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.291367377 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.305916946 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.2936159 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.291617786 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.307545069 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.291472315 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.291408995 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.296421778 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.293012875 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.305008756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.293707078 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.297559111 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.291977104 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.292370505 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.298393848 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.292198224 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.308820811 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.292452187 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.291955546 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.303992628 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.292439422 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.305592346 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.305362801 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.292316591 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.293799812 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.29247161 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.305222974 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.303889571 seconds)
  done (took 202.741068068 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.487513863 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.300847274 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.301663248 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.233958156 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.301426328 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.301175983 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.298121119 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.497593953 seconds)
  done (took 13.958872812 seconds)
done (took 604.008936376 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.443259354 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.180825989 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.491957882 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.320474604 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.982646636 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.325155456 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.320461505 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.477359398 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.762265296 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.464537873 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.518811003 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.320757404 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.664532854 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.321362156 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.552490586 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.414157022 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.131527444 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.239459889 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.616265121 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.760191774 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.563354333 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.804752388 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.478330262 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.808288825 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.650264845 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.826948049 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.989312299 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.125983061 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.321254129 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.614012199 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.776359566 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.205841249 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.374087686 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.354866591 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.411385139 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.392498705 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.210673737 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.355895783 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.494807052 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.564125475 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.768152603 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.580164877 seconds)
  done (took 90.217873738 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.291074583 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.291178478 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.289299813 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.290799375 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.291446878 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.290199612 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.289838782 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.289829047 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.29156794 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.290227386 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.290425416 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.291668969 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.290285964 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.291811993 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.289941429 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.290197879 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.291303909 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.292712529 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.290611394 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.290413826 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.291405818 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.2902581 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.29106576 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.29018336 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.290990044 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.291976979 seconds)
  done (took 34.800217611 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.304623346 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.524594589 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.693689342 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.312846095 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.304370623 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.309170069 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.374431333 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.306404714 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.30771182 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.308555138 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.447175707 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.306109426 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.33614748 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.696201678 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.3097021 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.304961239 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.305192743 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.305135297 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.531190928 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.313881872 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.391828061 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.307303683 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.37521068 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.315190371 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.323914153 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.306181231 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.309491651 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.846340362 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.309090586 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.454564346 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 1.99308925 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.374051701 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.796668607 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.703536682 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 1.997007336 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.30861104 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.306738834 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.452683034 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.307978072 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.305771334 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.374914122 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.307696702 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.700899319 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.912107009 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.323828438 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.307048808 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.869992349 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.449600724 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.52041893 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.315734269 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.71776833 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.311447483 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.306884795 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.307048159 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.521219731 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.313963403 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.306002258 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.716335366 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.30988277 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.374176303 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.30673098 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.305626206 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.537102337 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.306027853 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.52868051 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.308011609 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.314018558 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.307003036 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.699866973 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.311062104 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.918494745 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.320384007 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.307009555 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.449152892 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.527770601 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.894013894 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.310334186 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.54405548 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.806621467 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.375089651 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.312224939 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.835591023 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.379960567 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.309876192 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.30880448 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.308573617 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.307403713 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.349871102 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.372994537 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.861186265 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.912363945 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.733849674 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.377266702 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.321289631 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.308367967 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.720183605 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.308241761 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.307780009 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.694852933 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.928414487 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.323716487 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.315439244 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.911511091 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.325658483 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.377516929 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.316242758 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.703858985 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.312435571 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.352066942 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.308622405 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.315485244 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.312416355 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.378106188 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.315054593 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.309160454 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.89892858 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.472284465 seconds)
  done (took 171.183032047 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.313752211 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.30274439 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.315897786 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.301466854 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.306427555 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.307067789 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.301576995 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.301109825 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.307855842 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.30183363 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.302461843 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.305703133 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.304013601 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.312007608 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.313582443 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.309037485 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.915648188 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.307416546 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.301187898 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.303290029 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.078505283 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.306181628 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.302640388 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.302792285 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.306483714 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.304042974 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.334496815 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.306915015 seconds)
  done (took 151.220977382 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.310432167 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.817324831 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.314304845 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.427136743 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.332198857 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.308137514 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.424817371 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.362704872 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.312098157 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.308890348 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.308701262 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.579353869 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.3112285 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.768572852 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.478847185 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.427449375 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.7715707 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.311782279 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.309444241 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.308111853 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.428548932 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.318399558 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.582004296 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.819038343 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.312649955 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.819267772 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.30026945 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.311758595 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.311126703 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.820691504 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.309817874 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.582094277 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.380452641 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.364123832 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.820931344 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.77303622 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.77772014 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.442901827 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.311135988 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.310095088 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.309700737 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.299974082 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.820797741 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.313133967 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.312962701 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.813182552 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.326696277 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.312905642 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.32116172 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.310483423 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.364015332 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.36580812 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.586364751 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.82698414 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.379694465 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.332643914 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.430457671 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.659749691 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.317293175 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.777086189 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.302411928 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.823106913 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.315380418 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.300511908 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.312332069 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.31755968 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.444274708 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.432140213 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.779696162 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.316770919 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.779495437 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.447513423 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.31470615 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.31231223 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.315093842 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.825547502 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.783377016 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.472607541 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.438460634 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.489331535 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.307113671 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.315298803 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.305134007 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.385370879 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.314702692 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.842432811 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.794277612 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.319693153 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.317136929 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.318242726 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.317575123 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.473593708 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.843378322 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.388374425 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.780816183 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.609812133 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.599595864 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.320517085 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.371025753 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.316113017 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.598220155 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.321238209 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.367850652 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.723324894 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.602380265 seconds)
  done (took 155.395300826 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.53683252 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.421201508 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.400788015 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.421914228 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.822537456 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.880639883 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.345539668 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.385572742 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.403795415 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.429772822 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 1.93080318 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.40458959 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.485384361 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.385078673 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 1.980573338 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.379165172 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.404701066 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.423772185 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.418404203 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.342694205 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.889646642 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.589727287 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.45647015 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.158505801 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.370328507 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.028052098 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.047059862 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.818024244 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.472085892 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.393051233 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.804375906 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.4296514 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 1.987930109 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.908134194 seconds)
  done (took 61.808797271 seconds)
done (took 665.862533536 seconds)
SAVING RESULT...
DONE!
