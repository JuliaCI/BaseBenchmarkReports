cset: moving following pidspec: 10464
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.948708797 seconds)
loading group "string"... done (took 0.614872349 seconds)
loading group "linalg"... done (took 10.661142249 seconds)
loading group "parallel"... done (took 0.226125448 seconds)
loading group "find"... done (took 1.638051316 seconds)
loading group "tuple"... done (took 2.470715949 seconds)
loading group "dates"... done (took 1.780745778 seconds)
loading group "micro"... done (took 0.26435562 seconds)
loading group "io"... done (took 0.667283465 seconds)
loading group "scalar"... done (took 56.1772382 seconds)
loading group "sparse"... done (took 16.720918209 seconds)
loading group "broadcast"... done (took 1.484067265 seconds)
loading group "union"... done (took 17.430428326 seconds)
loading group "simd"... done (took 6.83506197 seconds)
loading group "random"... done (took 12.98949318 seconds)
loading group "problem"... done (took 2.385716465 seconds)
loading group "array"... done (took 33.101848001 seconds)
loading group "misc"... done (took 1.305046112 seconds)
loading group "sort"... done (took 4.90393488 seconds)
loading group "collection"... done (took 26.454063702 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.686930582 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.14450437 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.177997916 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.188749324 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.214771592 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.151288577 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.171491491 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.571367525 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.01771396 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.235766469 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154859228 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.565127166 seconds)
done (took 6.089065793 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 0.245389902 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.448923692 seconds)
    (2/2) benchmarking "String"...
    done (took 0.136764099 seconds)
  done (took 1.333895692 seconds)
  (3/4) benchmarking "replace"...
  done (took 0.081581737 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.18436419 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.11641839 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.101580489 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.116785032 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.117237126 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.117053294 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.116455288 seconds)
  done (took 1.622060971 seconds)
done (took 4.039282508 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 0.5019417 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 0.84812034 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.503854514 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 0.142539491 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 0.170796536 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 0.163298571 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 0.332946823 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 0.167639818 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 0.127450889 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 0.123890966 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 0.18087589 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 1.360811627 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 0.507696236 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 1.994250656 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 0.105184719 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 0.136376321 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 0.108485427 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.699821023 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 0.091859689 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 0.138298592 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.544616485 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 0.13911517 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 0.107059302 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 0.146449652 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 0.208749396 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.125791937 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 0.18809363 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 0.120599812 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 0.67462389 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.108927241 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 0.196166768 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 0.110941988 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 0.182798336 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 0.246331619 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.103646442 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.113046768 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668674967 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 0.202162356 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.124104361 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 0.100559294 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.687416627 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.088284662 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 0.201108656 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 0.113929002 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 0.116359502 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 0.200688997 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 0.119377613 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 0.104338336 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.108051204 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 0.096127688 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.171580635 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 1.495513261 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 0.11674493 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 0.156108352 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 0.119292968 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 0.688874032 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 0.103455348 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.162116043 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 0.147071767 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 0.111829895 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 0.086566707 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 0.118820827 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 0.165967577 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 0.121852561 seconds)
  done (took 20.211982419 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.126240297 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.150155596 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.10193047 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.163499388 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.148630233 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.087281335 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.106255739 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.084527926 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.135100499 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.193365883 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.144702686 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.154277481 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.080875252 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.104371237 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.125182436 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.23844184 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.128453668 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.128756589 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.087537392 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.11391924 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.148055387 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101558258 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.117038146 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.118006705 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.176164471 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.208438698 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.11354335 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.129413053 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09888399 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.12237323 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.146476085 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.15332972 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.099055628 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.083550742 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.188925629 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.128996131 seconds)
  done (took 5.508809909 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.203775508 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.124496489 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.200260284 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.186941508 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.153354343 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.192281532 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.124673873 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.263617624 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.232524289 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.193594056 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.13589832 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103123734 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.10253785 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.086434307 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.102080705 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.741382171 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.188064137 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.158990171 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.131420008 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.108383013 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.087135835 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.388786445 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.1055974 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.086643351 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108810892 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.077351661 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.201752344 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.09046518 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.285452884 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.124849972 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.114565648 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.136780553 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.204325691 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.167283392 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.135728196 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.150402515 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.091019669 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.106765881 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.223734784 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.11613718 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.09987384 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.11015857 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.139471675 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.137915846 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.104864623 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.099450265 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.252631238 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.086803843 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.125333406 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 2.11598536 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.206532372 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.100738367 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.101931691 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.366483754 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.123683183 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.11013596 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.086160709 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.307988975 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.139739238 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.104677107 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.08327603 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.108650293 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.09984625 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.409156804 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.095975295 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 1.058867757 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.099360266 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.171899246 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.106463373 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.109891421 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.109046756 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.090736275 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.126004134 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.0845385 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.101859176 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.083999946 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.101422416 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.106240553 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.103987012 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.107537366 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.101784133 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.152693222 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.12353842 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.105576693 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.132629901 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.10843035 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.085166105 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135214953 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.10312576 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087791361 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.152454312 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.1127402 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.087090547 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.106211084 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.123320224 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105551663 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.146478439 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.086277894 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.206177806 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.08718109 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.130247598 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.10438925 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118464845 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.12446074 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.104114163 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.089381717 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.105670524 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.100330534 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.08610587 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.167560532 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.086785361 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.10314873 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.089406886 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.119557048 seconds)
  done (took 24.796733189 seconds)
done (took 51.26457017 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.438562842 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.118751834 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.101322033 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.11934876 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.116631867 seconds)
  done (took 1.730003914 seconds)
done (took 2.540267336 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.374083641 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.194197739 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.12713107 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.196604555 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.110695072 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.202528891 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.183582194 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.124397009 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.23310009 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.089832092 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.210569217 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089145581 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.112094439 seconds)
  done (took 3.08732671 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.099840909 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.12381441 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.085875222 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.117612872 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.079818028 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.116624317 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.09715575 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.142744024 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.115366901 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.090369807 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098961076 seconds)
  done (took 1.975714893 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.096643749 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.120132977 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.086167319 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.114072489 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080162672 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115332043 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.095274861 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.123242587 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.113309955 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.092419326 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.098812099 seconds)
  done (took 1.944565512 seconds)
done (took 7.812029941 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.046883578 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.064260615 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.125720508 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.173361521 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.357077716 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.217729691 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.516640928 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.14044743 seconds)
  done (took 11.650186252 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.115105072 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.104232782 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.121891266 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.085919079 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.106642391 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.086566524 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.101862706 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.088283671 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.104169182 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.086144197 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.103032395 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.089158521 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.105542279 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103963352 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.089263664 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.101844239 seconds)
  done (took 2.462167618 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120239849 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.118801619 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.110020574 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.116320664 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.090593866 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.10940515 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.109576433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.091661217 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.105675567 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.089975643 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.113295514 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.112028987 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.093988006 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.105408319 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108898774 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.097301458 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.105912866 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.109213245 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.092982035 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.109546382 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.112552345 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.090052012 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.112175708 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.111289655 seconds)
  done (took 3.466408756 seconds)
done (took 18.388810487 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.172793233 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.106699155 seconds)
  done (took 1.092591739 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.107632183 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.124711854 seconds)
  done (took 1.051055279 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.111911825 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.101868347 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.138995291 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.118661532 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.086947731 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.102827787 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.134145072 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.086979001 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.102469351 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.08738418 seconds)
  done (took 1.894958469 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.090565743 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.106863838 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.095103897 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.123801671 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.114296641 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.088679044 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.109006307 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.106169192 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.092575797 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.101794817 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.093961567 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.120404515 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.108997687 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.12218329 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.091423383 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.108287826 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.112042768 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.090153501 seconds)
  done (took 2.699832618 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.086100773 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.103428544 seconds)
  done (took 1.014667072 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.089210876 seconds)
    (2/7) benchmarking "second"...
    done (took 0.100362074 seconds)
    (3/7) benchmarking "month"...
    done (took 0.088722439 seconds)
    (4/7) benchmarking "year"...
    done (took 0.103992161 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.084715931 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.10116061 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.10121837 seconds)
  done (took 1.490360984 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.543241119 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.365660086 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.348358281 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.121425225 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.140304583 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.390994354 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.143787324 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.11954024 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.102126216 seconds)
  done (took 3.139804022 seconds)
done (took 13.200964977 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 0.096900551 seconds)
  (2/7) benchmarking "parseint"...
  done (took 0.201368338 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 0.554132628 seconds)
  (4/7) benchmarking "pisum"...
  done (took 0.12352053 seconds)
  (5/7) benchmarking "fib"...
  done (took 0.083855909 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 0.167209677 seconds)
  (7/7) benchmarking "mandel"...
  done (took 0.266753438 seconds)
done (took 2.323698581 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.369336385 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.114550663 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.096059658 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.084668339 seconds)
  done (took 1.488785516 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.085206846 seconds)
    (2/2) benchmarking "read"...
    done (took 0.108759065 seconds)
  done (took 1.025171202 seconds)
done (took 3.346548627 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.084647224 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.132978395 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.081339735 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.10293792 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.083619453 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 0.100552138 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.0819712 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.10257024 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 0.081441386 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.099005415 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.083838139 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.100541121 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.084458761 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.101399355 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084549369 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.098568374 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081325748 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099565454 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.082154416 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.097413608 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081875582 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.100513148 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.081614617 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.097574562 seconds)
  done (took 3.089639144 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.104922085 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.102429207 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.090081163 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.108126436 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.106623328 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.089939252 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.108037895 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.103985092 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090650039 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.103320986 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08751623 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.105422995 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.103582835 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.088743553 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104220928 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.088667809 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.107444497 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.102196241 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086851862 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.105162867 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.090101364 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101049824 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.104284493 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090114802 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.104987658 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088291851 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.103978297 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.101562062 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.090533416 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.10455336 seconds)
  done (took 3.798686982 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.092938342 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.097861358 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.083156067 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.109823695 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.081275763 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.103416142 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.081958375 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.099244322 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.083591609 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.098889335 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084733757 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.098301413 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.082068476 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.100879469 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.083236652 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.105791509 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.10027196 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.101432051 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.082587522 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.101276177 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.087433928 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.100111454 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.085492263 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.100317677 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.082318614 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.100512206 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.08323475 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.099044604 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.082576136 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.099882932 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.087028198 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.106163442 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.081332127 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.112485756 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.105551664 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.083592252 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.107325155 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.082305911 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.099873131 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.081610112 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.099609383 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.082527611 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.098112883 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.093620619 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.101292904 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.082929067 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.099118072 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.083341681 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.099776001 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.085288302 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.098680042 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.08221265 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.101280442 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.083681537 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.104771914 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.081396026 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.100084576 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.08137062 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.100346183 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.082905101 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.099813217 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.082352522 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.105200928 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083855456 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.12289545 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.110412799 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.083089378 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.100929304 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.087444485 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.107404418 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.085337545 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.118587615 seconds)
  done (took 7.607244005 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.08787593 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.110094837 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084663967 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.101764755 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081170181 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.100855732 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.088860137 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101022217 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.085297205 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.119867899 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10017662 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.084549665 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.10136738 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.086844894 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.100409157 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.084887911 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.110182132 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.08036386 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.101159605 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.103242224 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.083664513 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.10674989 seconds)
  done (took 2.949082234 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.223108963 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.110732387 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.1452212 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.117776207 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.118450789 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.099412922 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.107502996 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.090027534 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106764514 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110542338 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092331355 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.108302504 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.119407328 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.109253161 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.093326014 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.111876062 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.090018471 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.111462511 seconds)
  done (took 2.911560183 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.098768976 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.103416846 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.108783495 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.104784548 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.103401026 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.088374337 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.10883705 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.100917515 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.105840684 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.103212442 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.096915401 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.106474908 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.087691275 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.104398704 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104713015 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085868994 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105686918 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.086882522 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.112861239 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.108653244 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.092211298 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113727975 seconds)
  done (took 3.082535068 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.102091872 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.105421638 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.132824348 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090287422 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.099833702 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.083581455 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.109711737 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.08578547 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.111004575 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.104874374 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.086363548 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.101521099 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.09278883 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.104008559 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.092003351 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.10381112 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.104931902 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086033294 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.105283125 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.082463269 seconds)
  done (took 2.833518775 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.128471315 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.11840137 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.118337362 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.111585524 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.118918005 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.118761987 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111988875 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.118440352 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.118888202 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.11484267 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.119859786 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.118755928 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111376355 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.126476089 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11935333 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.111998334 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.129382735 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.128750476 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.118683439 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101953574 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.131917254 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.118527241 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.128464762 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101803881 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.120492561 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10234941 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.118773355 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.125388637 seconds)
  done (took 4.165486228 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.08668636 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.084590176 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.10217415 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.082607846 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.102158807 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.082347956 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.102549855 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.082765617 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.103885073 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.082630199 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.103111469 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.085892581 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.103565367 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085888805 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.103055627 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.085559304 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103257793 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.083012277 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.101601156 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083254687 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.103971884 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085584586 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.103626167 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083468376 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.101664799 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.086144751 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.101936249 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.083401266 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.103122265 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084632687 seconds)
  done (took 3.641027532 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.097197145 seconds)
    (2/2) benchmarking "in"...
    done (took 0.11106731 seconds)
  done (took 1.067070101 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.085129068 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.121378849 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.083745412 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.108166778 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091604774 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.106709295 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.11377964 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.092412686 seconds)
  done (took 1.660317702 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.113395085 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.125305951 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.092313581 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.11800742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.124297152 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.107089922 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.169930812 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.111127006 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.094194068 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.106676628 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.125190993 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.086995705 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.11505098 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.092061161 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.11395058 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.101502569 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.103154086 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.114615286 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.095471412 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.106999076 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.092744761 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.121747243 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.115533879 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.095512125 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.107732534 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.09950368 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.118978466 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.116851866 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.093422835 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.117366031 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.094235845 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.099256766 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.092140447 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.110275996 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.084930366 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.124557211 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.123887738 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.093158256 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.115958984 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.110569664 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.096604147 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.100516868 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.097434794 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.112520586 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.098962932 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.110858915 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.110271703 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.082701529 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.105161322 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.091692501 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.100076009 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.090349371 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.099842924 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.096459741 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.114751203 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.124060713 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.089978968 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.110548422 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.091790684 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.108290141 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.094157295 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.109966804 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.115438149 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.091897286 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.115744239 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.095263376 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.113957327 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.099735906 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.081587859 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.103266825 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097074189 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.129733941 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.115869205 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.092677169 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.111887478 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.085287894 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.110201216 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.093818049 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.112467601 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.115869369 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.09287486 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.112016112 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098699775 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.109572021 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.090166396 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.112940837 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.106956051 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.091703527 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.105281731 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.108240908 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.108169074 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.085149109 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.106642059 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.115727906 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.091259421 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.108996235 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.088275692 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.115242695 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.081182729 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.110125605 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092988098 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.113047801 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.118436992 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.09318574 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.111776444 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.09651071 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.118421696 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.109948486 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.091300704 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.102023265 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.094114048 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.107183876 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.095536357 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.099295982 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093350111 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.109796445 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.092965638 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.117811622 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.107395472 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.092825061 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.117161214 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.099296596 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.108471201 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.08320534 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.11111556 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.109867066 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.096990156 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.117976542 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.089885966 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.101534879 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.082485127 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.114901014 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.109152799 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.094808175 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.110803145 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093183455 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.099943686 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.086242288 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.111076224 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.116830608 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.090920777 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.112826875 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.097282945 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.112319133 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.089935845 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.117112803 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.108676938 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087787901 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.114955133 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.091661609 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.102098517 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.113904177 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.092422353 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.108478129 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.09340711 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.114984748 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.092513475 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.111893495 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.089676205 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.112057647 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.110316179 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.088885552 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.118804977 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.091167873 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.118190172 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.091961485 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.101571326 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.085083959 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.120831959 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.087874036 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.110399946 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.105880733 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.09266567 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.111707022 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.085634551 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.108536414 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.091680611 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.121707809 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.117674964 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.093971711 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.113364927 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.100046782 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.109951891 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.094528748 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.111901428 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.111423761 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.093982631 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.11546585 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.0956672 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111435216 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.091456698 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.103375822 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.093874085 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.117256637 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.10717773 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.086618291 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.105732334 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.093749656 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.117985644 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.092181549 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.11214849 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089628507 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.112931359 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.115326702 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.092089393 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.110479063 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.087695282 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.111282481 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.09748172 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.112597007 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.09412052 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.118851017 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.112311139 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.084202109 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115897522 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.089966209 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.114896662 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083369867 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.109146238 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.08888877 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.114332867 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.108924328 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.092060156 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.100626215 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.098152975 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.1176444 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.093614884 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.106707907 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.092618409 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.12245107 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.109295799 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.096597948 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.111886078 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.095481886 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.125914536 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.107091571 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.092983054 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.120073381 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.091996955 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.102170292 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.114262223 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.091787269 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.106264207 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.091308461 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.109202599 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.09419181 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.114394304 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.09434402 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.101338465 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.091690879 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.110467605 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.088767711 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.103937353 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.116574762 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.093489234 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.111218421 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.101859392 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.113641357 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.111957343 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.094800868 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.111281714 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.093831937 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.113342284 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.096020656 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.114379286 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.091566867 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.108879028 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.11193996 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.088096307 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.104965871 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.092241006 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.112269089 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.093569733 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.113514886 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.09139499 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.11853557 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.112230474 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.094506202 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.131094761 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.108244419 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.089465418 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.114005887 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.09462769 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.111870886 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.091840394 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.104568843 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.11810535 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.09343028 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.1177434 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.093160183 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.105671792 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.092727225 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.111710812 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.093061431 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.115633667 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.113431157 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.09190259 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.11129039 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.093049273 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.122010464 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.088997471 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.119948781 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.11493171 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.09582575 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.113065142 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.093619329 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.111253145 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.088385106 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.112800523 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.114007592 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.094233784 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.111690259 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.095357239 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.11380331 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.09253585 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.112792824 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.113313148 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.095101753 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.114767102 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.083062205 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.108709036 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.090405034 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.112778331 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.096333657 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.114298043 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.091560922 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.112135763 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.114281032 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.091780407 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.104799622 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.098636587 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.115986633 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.095331738 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.123956681 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.088880828 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.114567606 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.12306951 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.083190086 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.110736831 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.088136599 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.11025063 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.099145947 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.114980446 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.118957225 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.09534628 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.109899481 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.087573451 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.113906668 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.091444409 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.102810037 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.087482952 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.117958706 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.090967366 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.112310136 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.093738182 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.11825723 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.114405307 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097499637 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.111821998 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.093328497 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.11459729 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.085784764 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.110882565 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.089302852 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.114576089 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.114216129 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.090952895 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.105742282 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.093319845 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.113335066 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.093794018 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.112842 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.092235664 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.120158338 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092818453 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.114872505 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.117437686 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.083491857 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.114606655 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.092582719 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.114122035 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.089418845 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.115649951 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.095309051 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.116440521 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.119613361 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.093261449 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.116377631 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.093864493 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.108446251 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.09279481 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.113781448 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.094705543 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.111029859 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.114865063 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.101200591 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.107008791 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.093632431 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114357012 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.090457362 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.115967211 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.114163653 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.09467837 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.117646266 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.094907856 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.114168498 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.097360614 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.114193509 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114129354 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096945262 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.112839612 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.098713351 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.110496452 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.101229237 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.116303547 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.114996919 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.094133715 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.110958502 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.094191368 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.11341715 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.092890254 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.120166926 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.094703406 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.11111235 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.088860369 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.109047178 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.113509972 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.098705996 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.120783357 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.094129968 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115999566 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.084761912 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.107623393 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.114963231 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.090640346 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.113302028 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.09639501 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.11859655 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.094401869 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.111809792 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.092417195 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.12043483 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.119055654 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.0967231 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.112526729 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.097031131 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.115856604 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.114168333 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.092771518 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.113634547 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096073775 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.116941467 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.093516453 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.111750218 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.123874575 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.099592515 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.116723765 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.093525218 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.117895245 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.093998435 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.107652403 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.095747031 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.115120631 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117856242 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.095412629 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.114779063 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.104448937 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.110672639 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.113745879 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.100908076 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113291026 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.100584891 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.106476763 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.095231928 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116545431 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.115486295 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.086008057 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.110177513 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.091261723 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.114950019 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.090879643 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.106646984 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.105096787 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.120663112 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.115465449 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.093866179 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.113027393 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.085660936 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.105754962 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.091389286 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.116242362 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.093752825 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.123918854 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.0896934 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.1108495 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.105442533 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.094885682 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.1157272 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.096699015 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.108568005 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.085962802 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.112134714 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.095860122 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.124026792 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.1122369 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.095931976 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116653408 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.095614854 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.109248673 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.099658627 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.107945349 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.095298414 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.12748854 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.116348099 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.097040705 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.118247633 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.100091804 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.117435918 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.105731364 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.096134475 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.115571871 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.095693322 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.116644988 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.096694536 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.131391534 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.116369462 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.090113969 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.114245484 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.094729441 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.112448139 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.121848841 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.09647335 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.115482087 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.096997419 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.114276974 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.096811183 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.123908636 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.116569703 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.095390893 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.115966961 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.092645461 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.114719928 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.091831843 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.114535924 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.09607869 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.117630123 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.114368065 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.097825147 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.111271149 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.105616284 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.123769305 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.117234027 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.087764403 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.110728354 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.092464086 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.106314747 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.097368716 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.109884915 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.092876334 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.113146046 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.09397149 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.118151077 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.097338832 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.115979568 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.095835876 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.115972225 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.104769699 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.099075682 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.116176268 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.097831414 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.11107864 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.095233676 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.116878682 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.099295921 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.120227131 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.113011656 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.095782573 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.114904426 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.097291701 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.107613343 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.097978771 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.114486327 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.093096214 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.112497084 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.115035042 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.097288454 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.117064012 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.096475521 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.118862624 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.095076484 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.121147909 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.118195956 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.089203281 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.107697723 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.098170045 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.108572484 seconds)
  done (took 63.294392256 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.15728392 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093790355 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107318058 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.086088734 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.13290801 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.10746904 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.086040609 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.108550809 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.087578823 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.121383275 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.08541309 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108203158 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.129055052 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.135719965 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.131574725 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.100821453 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.108255012 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.087539049 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.107720361 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.107442082 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.10845345 seconds)
  done (took 3.219886522 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.11144874 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.12613713 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.124671905 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.128819905 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.097836582 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.125443165 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.124331018 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.123456505 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.107491336 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.119225993 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.127862106 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.123820638 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.098354274 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.119495305 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11932336 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.101082636 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.1291789 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.118266469 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.125663082 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.103375373 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.12346444 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.123120996 seconds)
  done (took 3.527945865 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.099866974 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.114185706 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.099824951 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 0.108271077 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.094321995 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 0.109201184 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 0.09919563 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 0.112027392 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 0.097558398 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 0.11669219 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 0.091013771 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 0.116992877 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.120945622 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 0.08839673 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 0.112935672 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 0.090897832 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 0.11891747 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 0.093937722 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.116158031 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 0.088006715 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.135020624 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 0.109096089 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 0.088713992 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 0.112596028 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.102597689 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.11731245 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 0.094267817 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.115613324 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 0.091598828 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.115799605 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 0.090364807 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.117282516 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.117657111 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 0.092639518 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 0.112555136 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 0.094584184 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.114877432 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 0.088529247 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 0.111871496 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.097461013 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 0.110909086 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.094178483 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.122737756 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 0.111124802 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 0.092063333 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.116519151 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 0.094262662 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 0.109679228 seconds)
  done (took 5.987281473 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.127523578 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.166669106 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.096827051 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.154726256 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.131782818 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.130856786 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.098163367 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.129771715 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.117032337 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.116292464 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.110978936 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.138755324 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.124069425 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.121671615 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.103824228 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116856328 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.096351545 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.11619767 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.125434868 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.095018677 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.121586654 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.119468594 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.110232832 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.128248909 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.12812805 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.100968696 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.11632358 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.126120386 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.126832584 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.102662913 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.122230248 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.126508017 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.109573116 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.119585038 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.114826657 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.097417537 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.131364195 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.124397528 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.105078432 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.113661401 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.121534225 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.100816542 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.120091336 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.132759152 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.100122109 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.119043804 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.116361464 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.091555478 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.128204498 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.11820097 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.111518163 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.138132842 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.120914443 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.100437146 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.121528447 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.131227542 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.09844644 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.118897518 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.11927044 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.106158747 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.115335129 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.120302661 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.107257973 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.126116772 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.131648 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.129760997 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.101397305 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.121512204 seconds)
  done (took 9.132320183 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.102608346 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.139958161 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.132418113 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.131584058 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.100311161 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.121499777 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100165381 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.122837473 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.121254836 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.12667332 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101063637 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.16999149 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.115427409 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.10519039 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.12315975 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.12205508 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.099697221 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.122397985 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.121313029 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100780539 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.122067458 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.131618559 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09999434 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.131517429 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.133907368 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.115063042 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.099923782 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.122166621 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.13265512 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.120863816 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.112513951 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.123309846 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.121068475 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.132684273 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.114055935 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.122058246 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.111603122 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.100040155 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.121900743 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.12087008 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.094966271 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.131924571 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.122094428 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.093751866 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.121392379 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.101034976 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.133371741 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.134360548 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.127566084 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.127758673 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.100220854 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.132635664 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.122055065 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.099662538 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.134012741 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.141055818 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.132629035 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.132381744 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121308954 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112024688 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.133776195 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.140147197 seconds)
  done (took 8.39928883 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.09253256 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.090988132 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.111551056 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.088518429 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.114693359 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.088652327 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.113661703 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.090849951 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.114944649 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.090862649 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.115366295 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.088914269 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111878041 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.091638788 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.1118749 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088990926 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.111658756 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.089042701 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115316896 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.089351275 seconds)
  done (took 2.954254347 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.101312807 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.133683951 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.092719983 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.122858191 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.117455341 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.099670408 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.117035756 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.094676134 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.115787855 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.116713306 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.104786234 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.127254697 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.114675359 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.10003008 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.126486667 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.121176366 seconds)
  done (took 2.755002908 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.112908499 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.127524027 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.141071693 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.097132659 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.113805866 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.122557475 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.092991189 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.110289745 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.088381999 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.122094459 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.098394447 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.12628385 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.092370911 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.113207093 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.092747533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.121174707 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.110108248 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.096970145 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.113986822 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.118610389 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.120367049 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.116801435 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.094475834 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.117508155 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.095145857 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.123935801 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.121317669 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.09010048 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.113389297 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.093371548 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.117254245 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.123268557 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.089215922 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.118643364 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.090962281 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.112477668 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.092403968 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.116406671 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.097264505 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.11535168 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.112940654 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.096076369 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.114445089 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.094300569 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.111276004 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.092670817 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.110809045 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.098755599 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.116685689 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.117101523 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.092594756 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.122915553 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.09885496 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.126837635 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.124358178 seconds)
  done (took 6.950360389 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.107880919 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.119716439 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.096818362 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.112785397 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.095899233 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.123156358 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.118018724 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.095214474 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.116834164 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.090005868 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.116997741 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.096188118 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.117381932 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.119095518 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.095065776 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.118142246 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.08814061 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.116788502 seconds)
  done (took 2.895665605 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.098425216 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.114346103 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.100387619 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.11558604 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.092566718 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.11795356 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.088260447 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.113206591 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.091367883 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.115608984 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.092672593 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.117573902 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.090477438 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.118028935 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.113961799 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.093164606 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.11651467 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.091196875 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.114869319 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089054616 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.117794521 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.092166157 seconds)
  done (took 3.249068893 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 0.114799153 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 0.152618828 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 0.132983041 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 0.140667654 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 0.12228686 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 0.120501452 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 0.109544885 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 0.121809816 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 0.13930682 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 0.097852666 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 0.119192555 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 0.098439808 seconds)
  done (took 2.429149497 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.11755128 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.153361268 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.113412379 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09568399 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128694486 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097642805 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120849557 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120806509 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132005219 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.112266645 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120234239 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131497986 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131220938 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108311746 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128304507 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.127667983 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.097736369 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120555323 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115551756 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.142135661 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.098202934 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.131596363 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119912555 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098578395 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.120196798 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.130347532 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.131672225 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111354275 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.12102317 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132845722 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12785626 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097966644 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132687036 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.133667227 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09507681 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.133006667 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120502458 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.143173236 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128305621 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109472592 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.118877929 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.12812151 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109677603 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.12880424 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.132270782 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.119998023 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.105799138 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121253647 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120240571 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.149206683 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.106216656 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.132388805 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128097896 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131998507 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132084244 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.14834125 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110741214 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.130228733 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.128012098 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.133292144 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131434067 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105836675 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131533832 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.133666635 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128311715 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.131712438 seconds)
  done (took 9.074414812 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.131575035 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.114737451 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120916323 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.133903592 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108610705 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.120833916 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12105455 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.09887886 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121019797 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094831495 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.167607499 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121091147 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.132487269 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131625809 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098217799 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121953884 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120639092 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10820834 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.117856834 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.148194826 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120478018 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.131613446 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110753331 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.132766929 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.13364458 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.128230768 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098371375 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122116639 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121376613 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.098492935 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128388226 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.12199975 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.131853065 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.092940249 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.132052948 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.120670119 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.099108175 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.128538327 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.121107117 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.106624821 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.13207538 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.14282407 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.121842138 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098824543 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.133122951 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.121341888 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121025917 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.09578392 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122316484 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095015653 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.134007684 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.134505308 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.134768212 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.131752401 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098121012 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.121514262 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.121681775 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.098552459 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122357351 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.128667867 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109622219 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.12273065 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.147883091 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.122205774 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098924072 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.132677011 seconds)
  done (took 8.926318437 seconds)
done (took 170.4309188 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.112530432 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.155065339 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.107795363 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.180311532 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.115599887 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.128660648 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.149990299 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.109787275 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.117204718 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.093402774 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.116529715 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.09656302 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.182544382 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.092824272 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.11730062 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.118994915 seconds)
  done (took 2.969217065 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.193809122 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.307055184 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.135813687 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.100383648 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.124778519 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.097316989 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.123778291 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.100095621 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.118735584 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.129007981 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.097154106 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.120007348 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106499274 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.12105995 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.116982587 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.097919947 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.130560728 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.096993744 seconds)
  done (took 3.286770739 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.127524742 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.165345829 seconds)
  done (took 1.271948672 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.131161765 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.439038233 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.329274847 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.174471818 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.147038936 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.11689835 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.17299727 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.137097377 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.208027226 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.14299732 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.142825815 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.123462625 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.124752473 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.129433611 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.127184033 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.101463593 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.15007218 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.124959548 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.102313202 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.125595276 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.14697766 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.103316528 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.129681322 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.102922101 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.2219442 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.118897742 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.127858732 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.12546266 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.102506575 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.125146568 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.128683599 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.11604508 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.141591558 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.211532611 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10627369 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.206620941 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.109690393 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.123123725 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.124235112 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.099687532 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.127865877 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.127159386 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.117329037 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.124436647 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.124610355 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.111829409 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.125707971 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.102174238 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.130689201 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.134460871 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.13066166 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.106663168 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.206850848 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.111411103 seconds)
  done (took 8.677735348 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.86402972 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.140956378 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.124139406 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.962819538 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.152483863 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.112541526 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.859756195 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.123141545 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.284583354 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.853822116 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117313154 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.137133815 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.2572271 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.274613558 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.174396305 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.364213283 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.740212687 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111194016 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.154574317 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.16747852 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.130037648 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.151720792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.141536129 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.447130345 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.101419532 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.123177392 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.105061965 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.135764155 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.183389912 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.124708391 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.126437131 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.204683825 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.287673256 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.225554602 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.125270418 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.09809509 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.122755101 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.191263493 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.29522455 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.244422491 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.189972281 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.095322304 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.122793753 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.134512803 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120655287 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.119257862 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.185471895 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.219350786 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.197170312 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.125948358 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.110769292 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.132625807 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.135128698 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.183963346 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.120082023 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.36224102 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.367371994 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.099374223 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131800815 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.139816834 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.270438102 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12336632 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.252394272 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.149684106 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.216596877 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.122325584 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.840660497 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.190101838 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.12217025 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.109865447 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.130297526 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.128642782 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.11116077 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.18505083 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.421134214 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.137369275 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.126719838 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098488932 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.251864163 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.099053281 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.123257995 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.187642064 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.127043643 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132041915 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.115373448 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.13664788 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.19387063 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.299034157 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.113559636 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.131123788 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.128557159 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.134637947 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.102897563 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.233430805 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.245470375 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.205070868 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.238984673 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.136225722 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.187714937 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.188669523 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.133624473 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.217459418 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.107308289 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.14132682 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135955707 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.242641209 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.159082311 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.099784299 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.128478747 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.105545896 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.165444553 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126146293 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.130296057 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.195089674 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.498318506 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.18939067 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.095780113 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.126620296 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131149908 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.186273794 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.130078808 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.266641561 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.132376469 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.189759821 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.130626354 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.118608295 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.109031255 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.210203379 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.113456062 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131661077 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.136113123 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.108040063 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.298735824 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.248095252 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.114056678 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.258812019 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.193123758 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.133782494 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.196128216 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.131893074 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.192433882 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.13340173 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.134215612 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.103489392 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.834473499 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.136030265 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.106416476 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.128498022 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.210688547 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.122109762 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.101408988 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.122598657 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.096531492 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.83088166 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101867753 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.1212272 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.100576245 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.133166174 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.131738689 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.104303019 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.130138072 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184324151 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.260677054 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.137836208 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.13054104 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.099280872 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.208799064 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.103150402 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.123691708 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.099514442 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.124330005 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.108989631 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.129585312 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.124507861 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.198479648 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.18171785 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.246822636 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.562813295 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.099022293 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123765026 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.256040385 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.098514314 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.333758946 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.131620482 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.253314225 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.192021347 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.120507603 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.361938573 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.195203925 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.208855952 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.126990234 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.195933823 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.096075232 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.130465952 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.184172614 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.123696077 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.131918272 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.183323575 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.140646364 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.113749895 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 1.18467443 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.122947896 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.251054779 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.121339482 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.193667212 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.126260201 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113445274 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.33541548 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.12364713 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.144199951 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.187059108 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.127091127 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.101076906 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.8484426 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.100997852 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.134730047 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.132091401 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.250331771 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.190316333 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.129936489 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.107611442 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.137082133 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.18584254 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.258848163 seconds)
  done (took 48.454487724 seconds)
done (took 65.633764843 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.311697746 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.277660418 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.324829126 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.233478851 seconds)
  done (took 2.236219818 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.192423496 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.165962308 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.159546274 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.09624508 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.167770113 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.11999856 seconds)
  done (took 1.913452893 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.500808621 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.417499527 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.359063088 seconds)
  done (took 2.291700854 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.27317562 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.294223563 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.376094865 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.462012595 seconds)
  done (took 2.526759029 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.215825461 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.138376545 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.109677638 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.154041727 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.185725107 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.210821294 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.131524166 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.16428123 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.143101189 seconds)
  done (took 2.515910092 seconds)
done (took 12.499825415 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.335576254 seconds)
    (2/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.246503568 seconds)
    (3/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.298553786 seconds)
    (4/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.254717877 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.217808801 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.264208741 seconds)
    (7/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.171501136 seconds)
    (8/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.260488933 seconds)
    (9/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.142735117 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.104180211 seconds)
    (11/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.132182576 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.113394605 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.130544083 seconds)
    (14/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.233110602 seconds)
    (15/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.133317471 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.149870988 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.178318139 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.132053506 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.168104713 seconds)
    (20/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.241356395 seconds)
    (21/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.219817107 seconds)
    (22/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.247605174 seconds)
    (23/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.201537658 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 0.236062223 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.180943112 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.135749697 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.257096171 seconds)
    (28/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.208835158 seconds)
    (29/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.127815201 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.135341037 seconds)
    (31/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.130885232 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.105965489 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.208080893 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.246043965 seconds)
    (35/286) benchmarking ("sort", Int8, true)...
    done (took 0.233740985 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.130364827 seconds)
    (37/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.214808287 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.110836354 seconds)
    (39/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.123377006 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.139050094 seconds)
    (41/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.11928612 seconds)
    (42/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.132055613 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.110569448 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.231755665 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.149845153 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.130419464 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.128529676 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.124614311 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.21243186 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.100657811 seconds)
    (51/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.157155993 seconds)
    (52/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.139765806 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.219986544 seconds)
    (54/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.125232876 seconds)
    (55/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.234677044 seconds)
    (56/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.202487038 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.122641798 seconds)
    (58/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.253015479 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.137721889 seconds)
    (60/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.111789063 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.12893923 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.158524942 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.109275494 seconds)
    (64/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.135141274 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.157471983 seconds)
    (66/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.09834919 seconds)
    (67/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.164787423 seconds)
    (68/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.087493585 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.140202955 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.137674959 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.121388882 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.139711138 seconds)
    (73/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.137891909 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.10430242 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 0.121819066 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.12563208 seconds)
    (77/286) benchmarking ("sort", Float32, true)...
    done (took 0.268563306 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.214815966 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.092228947 seconds)
    (80/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.127593025 seconds)
    (81/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.08553964 seconds)
    (82/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.150229777 seconds)
    (83/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.103067151 seconds)
    (84/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.204708063 seconds)
    (85/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.202362354 seconds)
    (86/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.175906132 seconds)
    (87/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.169683771 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.212765672 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.104974196 seconds)
    (90/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.122597616 seconds)
    (91/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.116026987 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.20825376 seconds)
    (93/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.204099492 seconds)
    (94/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.127484414 seconds)
    (95/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.200504839 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.131608634 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.133743958 seconds)
    (98/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.220301332 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.136834446 seconds)
    (100/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.105346965 seconds)
    (101/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.128389974 seconds)
    (102/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.092746257 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.129934443 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.146725159 seconds)
    (105/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.155638455 seconds)
    (106/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.206330728 seconds)
    (107/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.130644368 seconds)
    (108/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.14915549 seconds)
    (109/286) benchmarking ("sort", BigInt, false)...
    done (took 0.244497309 seconds)
    (110/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.092941621 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.179258702 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.144153211 seconds)
    (113/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.138443989 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.112485583 seconds)
    (115/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.131593612 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.113478169 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 0.2019283 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.136341233 seconds)
    (119/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.134304457 seconds)
    (120/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.137355926 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.137569445 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.136026372 seconds)
    (123/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.102254076 seconds)
    (124/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.166783272 seconds)
    (125/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.140977237 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.085493071 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.128811518 seconds)
    (128/286) benchmarking ("sort", Int8, false)...
    done (took 0.20996045 seconds)
    (129/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.101157712 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.154668574 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.111071535 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.104590466 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.15001569 seconds)
    (134/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.085513905 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.136363313 seconds)
    (136/286) benchmarking ("sort", Float64, true)...
    done (took 0.246545055 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.134744956 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.154372972 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.106694089 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.111329237 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.103587215 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.132225449 seconds)
    (143/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.095014628 seconds)
    (144/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.133702985 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.137569547 seconds)
    (146/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.141334236 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.132165538 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.085365601 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.112216954 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.097901412 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.110492804 seconds)
    (152/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.104020353 seconds)
    (153/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.128751412 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.209145992 seconds)
    (155/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.099639573 seconds)
    (156/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.130664527 seconds)
    (157/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.086020037 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.136948146 seconds)
    (159/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.210534105 seconds)
    (160/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.092569214 seconds)
    (161/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.148827151 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.126649713 seconds)
    (163/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.093378582 seconds)
    (164/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.085353652 seconds)
    (165/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.138923277 seconds)
    (166/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.153268216 seconds)
    (167/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.162784717 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.10589565 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.110883195 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.086123016 seconds)
    (171/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.110058433 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.115411221 seconds)
    (173/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.130451744 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.145247308 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.143865675 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.130320446 seconds)
    (177/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.100342138 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.131199241 seconds)
    (179/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.176333119 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.104491961 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.138405464 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.085228869 seconds)
    (183/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.119208765 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.098424419 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.158698038 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.111569776 seconds)
    (187/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.109522179 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 0.236931214 seconds)
    (189/286) benchmarking ("sort", BigInt, true)...
    done (took 0.264077744 seconds)
    (190/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.113463916 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.128822496 seconds)
    (192/286) benchmarking ("sort", Float32, false)...
    done (took 0.163379346 seconds)
    (193/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.142437958 seconds)
    (194/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.165438418 seconds)
    (195/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.086294899 seconds)
    (196/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.112148196 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.141906843 seconds)
    (198/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.261049652 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.124336627 seconds)
    (200/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.130887606 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.1317581 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.139353658 seconds)
    (203/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.214771123 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.130672469 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.086702049 seconds)
    (206/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.2022557 seconds)
    (207/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.15068182 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.105555164 seconds)
    (209/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.165968824 seconds)
    (210/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.110750067 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.105543864 seconds)
    (212/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.110927671 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.086791296 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.126017702 seconds)
    (215/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.086604531 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.143514115 seconds)
    (217/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.102335207 seconds)
    (218/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.171404606 seconds)
    (219/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.171834825 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.101988311 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.131792959 seconds)
    (222/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.085276439 seconds)
    (223/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.112889836 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.130006231 seconds)
    (225/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.086474258 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142847823 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.105845842 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.111219682 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.099300315 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.11220304 seconds)
    (231/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.087092257 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.134378137 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.112953224 seconds)
    (234/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.111951346 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.100796765 seconds)
    (236/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.113001718 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.100007413 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.129684311 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.103090742 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.113015533 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.105736446 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.160822671 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.216300446 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.126240542 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.113352235 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.11241799 seconds)
    (247/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.105110932 seconds)
    (248/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.111636227 seconds)
    (249/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.103171047 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.1253564 seconds)
    (251/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.085636272 seconds)
    (252/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.119394883 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.086307966 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.112262262 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.10206571 seconds)
    (256/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.132935746 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.105736946 seconds)
    (258/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.112798307 seconds)
    (259/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.112013662 seconds)
    (260/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.111758882 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.134412022 seconds)
    (262/286) benchmarking ("sort", Float64, false)...
    done (took 0.162385034 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.12691511 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.086249995 seconds)
    (265/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.119249615 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.100840077 seconds)
    (267/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.131272756 seconds)
    (268/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.1531242 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.086662368 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.140967366 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.105876896 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.133150732 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.085635438 seconds)
    (274/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.112905348 seconds)
    (275/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.126426127 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.10299135 seconds)
    (277/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.136789063 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.106129607 seconds)
    (279/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.119224547 seconds)
    (280/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.086125016 seconds)
    (281/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.128877636 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.101109094 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.131262094 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.087746592 seconds)
    (285/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.119544976 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.106138276 seconds)
  done (took 41.691495773 seconds)
done (took 42.717389806 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.112405955 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.168873657 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.136214762 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.130003127 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.139431966 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.141751323 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.10906254 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.137195863 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.11090231 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.139123487 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.139410115 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.09405112 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.136579396 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.109249294 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.137554396 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.157655427 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.113707825 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.1326429 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.101342814 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.129477778 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.128481037 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.10317056 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.130606511 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.093411252 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.137009859 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.108236647 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.132926966 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.136571758 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.103383674 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.127022885 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.10119933 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.134254075 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.099713549 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.138251367 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.130690409 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.102912591 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.137083334 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.109651078 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.131874603 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.102891579 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.13466657 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.129306621 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.106932263 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.133343798 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.103972725 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.129094871 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.101489913 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.138833223 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.159402698 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.104655852 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.135024292 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.109580803 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.156220158 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.13266827 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.102456924 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.129380743 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.104312577 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.159880758 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.12828059 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105586184 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.151315982 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.107493996 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.130944046 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102898015 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.128969344 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.109419816 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.13765436 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.127790773 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.109822994 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.131551868 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.097938796 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.129115674 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.101225232 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.127867387 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.109255716 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.137732164 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.097539127 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.130724981 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.133286411 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.106335245 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.129561204 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099954893 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.132976058 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.103801659 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.127977397 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.094278675 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.12839508 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.131249859 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.103102192 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.128491256 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.105817889 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.133007468 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.104472377 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.136206052 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.129110852 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.10407915 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.130390504 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.104221224 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.132522862 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.12712917 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.099649623 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.126021474 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.109289061 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.127284643 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.104429321 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.139402152 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.101022246 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.132675342 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.102537793 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.130919682 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.142312893 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.111007738 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.130790733 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.105018891 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.127069495 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.10742537 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.128624334 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.127062653 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.101329907 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.131454948 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.104015131 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.130709702 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100705704 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.134254555 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.138528355 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.099238453 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.128155129 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.100711723 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.131103805 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.10570406 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.131241578 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.100357216 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.130526969 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.125190803 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.102271932 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.127026353 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.10711898 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.127821317 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.103796097 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.130837158 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.103124619 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.131645308 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.104437043 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.133044054 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.126686608 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.096091978 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.131883851 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.100754548 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.132538791 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.103307484 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.130540576 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.098623644 seconds)
done (took 19.489303775 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.111363426 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.199369355 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.16320863 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.165796044 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.164308221 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.146992557 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.11272632 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.16053394 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.138718248 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.158439539 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.158718426 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.126183352 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.166701541 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.137961204 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.146313075 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.110692673 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.135315936 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.144480237 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.14485326 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.159255537 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.160802864 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.138261615 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129327715 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.158668536 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.135195722 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.156640147 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112531312 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.136113128 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.138674382 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.128046368 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.154433397 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.139654541 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.111639578 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.148365097 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.14304743 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.107873153 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.147763421 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.13236548 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.109991782 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.13790601 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.147600546 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.120799835 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.133890204 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.144252626 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.11044916 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.141301239 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.134967237 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.108576943 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.137064882 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.103845078 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.143143721 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156015079 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.135505831 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.112686932 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.139338058 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.136947555 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.111956371 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.140638766 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.138727296 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.113860428 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.138299426 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.13939423 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.115184192 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.152405121 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.137132192 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.111932498 seconds)
  done (took 10.164803065 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.126335203 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.16651849 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.145711883 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.117765172 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.14130079 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.126195708 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.098777965 seconds)
  done (took 2.020428648 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.101290537 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.158481994 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.134308884 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.163180724 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.150909878 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.166321973 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.117594858 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.128401391 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.151894995 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.110615404 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.15797568 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.18412678 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.101009598 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.141016419 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.164949877 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.100062485 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.165324366 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.127719318 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.108250669 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.162904575 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13295399 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.123476618 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.143332787 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.128404049 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.124124717 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.130304432 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.197572369 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.112693354 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.12915833 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.106780883 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.134077552 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.201272423 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.152397096 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.111288073 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.127811924 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.158883792 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.122960655 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.134006776 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.15613381 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.10604506 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.151205562 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.134073036 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.109272243 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.135023844 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.108977783 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.144345356 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.139975765 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.110187429 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.134958039 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.157377008 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.113504078 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.151289827 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.103044299 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.131806838 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.138810462 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.108069794 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.143029905 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.106756535 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.157279554 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.135862617 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.129409059 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.158914944 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.151396387 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.156956157 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.119063433 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.15225833 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.150568653 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.107831395 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.137345747 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.109250762 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.157791075 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.132329854 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.112427826 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.144940964 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.137052564 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.131204117 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.157584134 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.106274237 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.142373261 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.13335723 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.104662752 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.129380139 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.118873506 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.13340956 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.103831601 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.148107304 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.141685397 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.10691865 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.13360376 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.152732324 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.106225465 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.142522666 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.140148175 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.105971453 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.145668218 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.158964478 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.11311815 seconds)
  done (took 14.162191421 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.104038993 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.129681789 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.108973924 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.130656217 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.104113042 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.13069332 seconds)
  done (took 1.823988389 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.133508707 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.134047449 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.144332242 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.10994366 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.173337628 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.15418421 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.12729888 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.140132029 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.150334451 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.117875308 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.154798849 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.156886351 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.132660046 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.137188254 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.154294975 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.110602179 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.155955946 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.105936047 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.145012786 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.133505398 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.120127111 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.137891312 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.105801985 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.154802459 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.138058054 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.111067378 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.136682965 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.14490461 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.117985555 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.140144464 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.137095576 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.111216963 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.138770019 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.11203442 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.156131575 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.138508553 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.105377614 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.139235973 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.110077279 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.138119652 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.159087949 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.107058172 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.144318595 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.138412309 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.113458647 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.138852514 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.111529983 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.138010457 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.154499834 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.112258569 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.140178024 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.109595999 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.138102939 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.139669816 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.110753291 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.140251743 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.138550488 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.129141032 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.137949543 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.109537097 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.134923022 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.137808032 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.112809858 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.138884741 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.108698802 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.141236861 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.138473828 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.106775806 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.135168859 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.109697425 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.139008328 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.133518628 seconds)
  done (took 10.626931456 seconds)
done (took 39.889485698 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.714372368 seconds)
  done (took 1.821236683 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.909336684 seconds)
  done (took 2.020370867 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 18.753947271 seconds)
  done (took 19.895814586 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.569510493 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.666002059 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.028569021 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.185640144 seconds)
  done (took 3.55993551 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 1.009120667 seconds)
  done (took 2.144280998 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.334829194 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.287464847 seconds)
  done (took 1.741336587 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.899657028 seconds)
  done (took 2.024960454 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.578181726 seconds)
  done (took 2.697942566 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.371708455 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.216562492 seconds)
  done (took 1.723018089 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.602210781 seconds)
  done (took 1.72716854 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 15.196200116 seconds)
  done (took 16.328760637 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.259964951 seconds)
  done (took 1.402166359 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.322640894 seconds)
  done (took 1.452524772 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.857919169 seconds)
  done (took 4.9905052 seconds)
done (took 64.644925403 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.114607072 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.145070344 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.118277711 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.143128325 seconds)
  done (took 1.645452439 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.120956689 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.14040715 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.115662827 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.139128154 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.148328577 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.111718849 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.138503228 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.118621468 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.141301961 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.140834935 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.111647372 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.140269984 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.140881916 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.110448466 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.136882037 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.115258457 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.143903428 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.139202072 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.112882034 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.140756023 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.110242641 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.141813263 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.143686735 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.112202271 seconds)
  done (took 4.251550636 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.114605681 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.135767045 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.11154932 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.134576855 seconds)
  done (took 1.638899795 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.120138718 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.157323773 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.155177499 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.119550739 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.157384661 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.155340783 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.107964867 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.134611203 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.109245624 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.147742089 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.108317137 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.160401255 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.15695322 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.103171587 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.149632818 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.126804798 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.106848394 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.157100964 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.118914497 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.149894848 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.13359829 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.118320067 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.143787985 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.122658853 seconds)
  done (took 4.35996654 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.22302937 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.118820825 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.159618811 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.141796767 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159524503 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.162592945 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.134324968 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.161038592 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.106186746 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.155597289 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.109488761 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.188916849 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.148663103 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.138682875 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.108144886 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.143385851 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.145934235 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.119815959 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.137614608 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.118398529 seconds)
  done (took 4.027237888 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.114769381 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.135746827 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.103065601 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.134505872 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.113719295 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.138852522 seconds)
  done (took 1.888533973 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.103912873 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.101598717 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.130828243 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.100246112 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.136423762 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.101120734 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.13044341 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.101446103 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.130470632 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.100959683 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.12988896 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.099227055 seconds)
  done (took 2.512686224 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.596771037 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.106084089 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.140365646 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.135783449 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.111131064 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.134991371 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.14970396 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.10617532 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.195312146 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.137115613 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.120754922 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.221579052 seconds)
  done (took 3.30634857 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230665551 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11142851 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.295562914 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.448714444 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181125401 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185793416 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.373897262 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.184871094 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.20490786 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.156659225 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224865265 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.177753184 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175646035 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.20150054 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158702618 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.207036332 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.198253517 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223103106 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16805747 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.237095806 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213074868 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.186230182 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.209961513 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.170785615 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.12730528 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188322149 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.137010478 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150413358 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.192789745 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190697834 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193510563 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168371645 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158607631 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220595949 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.270250677 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.198868131 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.413137358 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.139361399 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.23959698 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.218136729 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.305393726 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131972472 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24640468 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176082018 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.122445354 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202592616 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174992536 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.230406533 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.121392601 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160621116 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203028022 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225726352 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.202035555 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.172115859 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.367024143 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170823095 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.164407629 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.203900949 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208289131 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.250337572 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189217237 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.11221279 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.268875752 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212566767 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200866154 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.164297396 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.188658812 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143565799 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197299918 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.227260836 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.235467238 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188068118 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.223424657 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154704424 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185526715 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.198685861 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173430423 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19896802 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181292705 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.139119762 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17074913 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131036816 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.147137177 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.206501389 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111432673 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.264690787 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.12512972 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.337927383 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235184656 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.17924702 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.180774534 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185940643 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.187522612 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.168295882 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.136613209 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13560518 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.190787401 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180222264 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151505932 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.177617877 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164583372 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.144285706 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143258071 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.142888608 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179977904 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.151903007 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188483915 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184770934 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.124123218 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.185522148 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.168826989 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.18011862 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190132572 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216072162 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153043735 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156885652 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225484987 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179452187 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.155982411 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.205757528 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.218768801 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.192851856 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162154449 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193248466 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.213996051 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.161682572 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.219074377 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176182339 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.158375199 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.170958973 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.179320239 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.175596103 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.173263065 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118925692 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.172361192 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221101994 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.151520739 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157698327 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195749975 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115218231 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14716716 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163593787 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158918437 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.133444077 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.169778276 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.158108351 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176612808 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181011381 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173892048 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.177706078 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162548842 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221311241 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150948687 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.180036937 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13864898 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.137210249 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.199573785 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.215098329 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.153861258 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.2057161 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.187012693 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.286726253 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184442189 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149581513 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.201241349 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149774254 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.108928782 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18970886 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.181234983 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.182387787 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.214316085 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.284024757 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.186006555 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.172414813 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.170701477 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18790463 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.205465938 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.176416585 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.165193673 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.184940785 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191749313 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.141575361 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.111285386 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.146328768 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1594373 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153146906 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121934312 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200059953 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.212616837 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.242935543 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.182011883 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158978959 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.214179007 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.145029907 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.186831121 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.193786714 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158281252 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.215512402 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.21266889 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1879644 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.161848486 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190008424 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.138360228 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.113316788 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.15378761 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.18667677 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151206643 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.128092479 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.168666455 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.213293037 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.225746577 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.140844169 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.290329972 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18412306 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.255903167 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.110759171 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.186120832 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200299662 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178826834 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.210343969 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153770791 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150009169 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.240074916 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146595957 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243447629 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.183971715 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.189676784 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.222704944 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.17789282 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.153668188 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.169856005 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189017602 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164931237 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190773887 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.164212447 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126810917 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17348295 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.156525673 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143980844 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200843163 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164097411 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.20101782 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.186746344 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193630138 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.147312267 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169026346 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181814777 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135485671 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.138723852 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.190471348 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247371189 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.134082572 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177979363 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.234416716 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.124454818 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.405098704 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219447942 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207013727 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.172887158 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1681016 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.1827829 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.189773349 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18446646 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.204608149 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.168844236 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200055867 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179823853 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.161842265 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.126726406 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167255208 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.171614851 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.171991998 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.151489045 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.174118083 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.133801796 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233252178 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133882129 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179571014 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.191377725 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.168234191 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.175617017 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160150242 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233439832 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180483794 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.198428259 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.177946199 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.196323793 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208788461 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144182643 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116687779 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.147310154 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.204155148 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15130815 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.178999908 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.253159963 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.293023869 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180649337 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189275776 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.160315581 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.111628184 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182128878 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170723765 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.288518079 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164876478 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.124885808 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.252405634 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.171812968 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.125136526 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.185823342 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.373256981 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166141573 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206913403 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.109943177 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.368632277 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.11590327 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155808727 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.191230931 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.190391848 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.151607296 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.179122328 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213425148 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134565945 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.190581543 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163260844 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.28060298 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236863483 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194681929 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194135013 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.164194233 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.178890244 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183338863 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.204822879 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16351777 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.170751637 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185109504 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214422077 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.215942212 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.154948772 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185800163 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.185269038 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.181141426 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.193970287 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153588896 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207251085 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151313674 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186411429 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164906945 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.112160128 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179923285 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.271643683 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151744193 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205257502 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179640774 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120313643 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146412613 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.181080249 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180612136 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17666023 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.1232186 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198853877 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.148151877 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.185538095 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201780044 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149847157 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.145943976 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.165824213 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149736366 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16706688 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.133308649 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157279683 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.195277598 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.213265622 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.151656209 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207627061 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193155602 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.184861661 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.180924901 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165667097 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.681910502 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.115609735 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244006249 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138358223 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.239778484 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.13778457 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188545696 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.182154944 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171250398 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193498828 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169882762 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.245302627 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.186268665 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.179097242 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.154888972 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.13261706 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167548184 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.151536977 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.173024144 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.18586609 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.130733287 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.157675178 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178657004 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.165911274 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.165851781 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128325463 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24783944 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139054839 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.235654306 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.2063974 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.173639195 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.188515087 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196544854 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149829967 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.180818692 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19149852 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.131015443 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18020853 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.151053732 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.154980455 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.19986098 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.112916394 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.183537662 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183469117 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.184449939 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184678328 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.155445157 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180972942 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.166730237 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151043727 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146435391 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.174603781 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179838564 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.149739293 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.115493097 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178353384 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178158113 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.181652439 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14598774 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165476439 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.2117606 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.146095996 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158748701 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.344526577 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.179558039 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214526001 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.172691503 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.156790214 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164879188 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180292662 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.173311791 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150934025 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.147886023 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.151364853 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.119050933 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.207488993 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.183940824 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181695081 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.209804359 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182282734 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209293773 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.156318344 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.290841541 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160531095 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.176447922 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.12487214 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.149411795 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160907507 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128722507 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179904583 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.277847121 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.201320927 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.173974759 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.132916353 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.148451785 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.147984218 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120888096 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.19200982 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176623114 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.182206263 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172027346 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.137743325 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.138339827 seconds)
  done (took 89.320719364 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.166060482 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.160852379 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.16856569 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.215933669 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.187023807 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.262875719 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.226557893 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.246789244 seconds)
  done (took 2.890129839 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 0.118219211 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 0.154803949 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 0.16003003 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 0.146760655 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 0.135051383 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 0.378044654 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 0.155235316 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 0.113349677 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 0.173499556 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 0.154961344 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 0.134717203 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 0.67977915 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 0.109550379 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 0.1447436 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 0.137224364 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 0.134287444 seconds)
  done (took 4.272238691 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.576084422 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.588309877 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 5.383679854 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.279292898 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.256847587 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.201892049 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.819523938 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.188125275 seconds)
  done (took 13.546820647 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.141107804 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.161477474 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.157479489 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.18855256 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.174013326 seconds)
  done (took 2.084636888 seconds)
done (took 136.875307544 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.111669315 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.145486506 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.112021749 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.147654954 seconds)
  done (took 1.761170358 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.125430068 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.127646832 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099520154 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.126633015 seconds)
  done (took 1.732919302 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.477643946 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.129311753 seconds)
  done (took 1.89139231 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.148028559 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.158607919 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.164395051 seconds)
  done (took 1.735803945 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.121214946 seconds)
  done (took 1.377207476 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.119326638 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.148135638 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.137079379 seconds)
  done (took 1.666799373 seconds)
done (took 11.423736288 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.12629934 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.557134521 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.432418616 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126413925 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.743715038 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.394779649 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.098785089 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.183069578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.187789875 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.137066002 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.128140408 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.71836209 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.014452974 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.480713749 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 1.0281972 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.35504693 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.719612687 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.109034685 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146235347 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.107698266 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.071967736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.106443169 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.13904697 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.139513594 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.686894053 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.442813056 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.106114489 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.403024347 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.136064367 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.112161392 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.426830036 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.106505088 seconds)
  done (took 17.922643552 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.110332813 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.205167177 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.145210853 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.108800313 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.142957412 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.107858604 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.150131041 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.152574755 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.200797389 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107027973 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.159277753 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.106797159 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.144239026 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.107115594 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.162879549 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.106490763 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.141475518 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.139314213 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116578377 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.139373119 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.127555095 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.137965889 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.108467334 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140189014 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.10648176 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.150791468 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.138522302 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.121286234 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.138749924 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.111001024 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.143616384 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107824359 seconds)
  done (took 5.555579194 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.155477256 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.214797709 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.147675967 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.142816364 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.194451818 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.141085411 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.229031152 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.183257883 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.204289744 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.107266461 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.160073252 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.13879453 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.147597048 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.139165974 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.160932291 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.107633565 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.140846468 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.108935341 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.146771781 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.108683967 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.159672262 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.105935544 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.139675764 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.140065997 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.107679012 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.152746891 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.107225615 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.15407587 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.137393967 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.113006288 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.144064169 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.107838051 seconds)
  done (took 5.922909953 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.115797347 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.148362252 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.125332801 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.158346273 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.109206413 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.147780837 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.147557652 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.11009795 seconds)
  done (took 2.338663333 seconds)
done (took 33.00645147 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.127378411 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.144139582 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.122112435 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.15302601 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.118158588 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.165266433 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.105220829 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.153192997 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.121218228 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.148159354 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.123812626 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.139150866 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.107837448 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.138925105 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.119789387 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.144845299 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.155572699 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.117779711 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.163157567 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.124094013 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.13985691 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.119137568 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.149551466 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.161366653 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.129960701 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.162913667 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.154911615 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.11260497 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.139380676 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.107801928 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.158181138 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.135587131 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.14412359 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.159293073 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.112582292 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.143814417 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.108376198 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.14308022 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.12433721 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.152157249 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.112311183 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.151654959 seconds)
  done (took 6.978403661 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 0.137284573 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 0.187982265 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 0.104817579 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 0.138223862 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 0.10510101 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 0.181304399 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 0.177567467 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 0.137688584 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 0.105339136 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 0.168464853 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 0.134971188 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 0.137741577 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 0.105312112 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 0.138590449 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 0.105113978 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 0.138092513 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 0.164278075 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 0.133255649 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 0.17278719 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 0.173470499 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 0.156097267 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 0.174071692 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 0.179415277 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 0.164837946 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 0.152994547 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 0.178779302 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 0.162980621 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 0.147147371 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 0.170251162 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 0.137657905 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 0.140521514 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 0.1751782 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 0.136866237 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 0.105609453 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 0.185452092 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 0.179628413 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 0.137254845 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 0.182734893 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 0.17493658 seconds)
  done (took 7.170159652 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.117736825 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.156563386 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.132360075 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.210948279 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.182882006 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.120565405 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.151984836 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.15909595 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.125405027 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.139962767 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.1178439 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.172514501 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.125331599 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.14919927 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.146214579 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.12457109 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.163043205 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.109597979 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.147151392 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.128346772 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.159989115 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.1559419 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.121970075 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.153325266 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.10791619 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.151098123 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.112059468 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.156112605 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.147413896 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.11827728 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.144881428 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.112484793 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.148582023 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.120302605 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.145329199 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.147948004 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.131222501 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.151391141 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.118348326 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.176959924 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.15417843 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.112262829 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.16813569 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.184165676 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.109414051 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.148971499 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.115495572 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.150611887 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.106971995 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.161326523 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.12000987 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.142741336 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.158522508 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.107916943 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.140122818 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.124591977 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.142681885 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.111413379 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.150833819 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.114946835 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.162321092 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.146770174 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.124512972 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.143327307 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.115414411 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.141790723 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.10737837 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.147265151 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.165875917 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.112778825 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.187623129 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.108277104 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.149105576 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.15092599 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.116139421 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.149683106 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.107859113 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.156676909 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.118876521 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.146509482 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.118433377 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.14528878 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.111911188 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.161280113 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.157476911 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.116674847 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.147270442 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.147784104 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.112663164 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.142300199 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.125048389 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.144735137 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.112815413 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.160171876 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.109202 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.145845991 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.115816571 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.148165182 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.140241032 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.126262026 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.146735817 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.108313907 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.152860877 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.10910173 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.146035781 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.118738198 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.146884606 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.108592608 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.146750618 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.147840889 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.108751164 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.144964245 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.11236678 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.143221839 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.122368789 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.149206483 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.112518732 seconds)
  done (took 17.354358276 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.263814984 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.241713662 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.254960083 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.305488314 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.166919722 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.175159982 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.239373894 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.197012144 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.10917113 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.187493687 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.203312658 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.214976593 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.204236889 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.214730141 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.241474417 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.10958792 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.165278688 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.201258296 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.243235722 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.333067671 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.130274557 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.16076505 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.19077192 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.187717304 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.165404132 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.128039601 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.169786972 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.167438356 seconds)
  done (took 6.878734604 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.126472269 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.184098483 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.150021198 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.140871964 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.168830899 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.145038435 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.114055845 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.144246277 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.122731975 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.157463392 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.143331876 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.117486479 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.148706197 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.119183831 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.142139739 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.118308861 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.151780211 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.152521958 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.112299037 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.146553925 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.128410752 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.159317607 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.148546583 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.118193387 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.159814855 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.150164566 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.110770095 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.164236378 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.154075169 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.171622699 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.107265981 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.150272647 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.125112231 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.142611685 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.117335433 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.146179325 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.110965655 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.144477712 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.113576404 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.139812307 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.108563035 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.132973458 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.115607623 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.156548072 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.149548332 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.112303917 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.148043516 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.113571039 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.143586006 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.105519925 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.144678464 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.111326241 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.146627143 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.160038056 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.113064012 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.143256678 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.113333901 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.143155113 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.119081799 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.146059421 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.106368819 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.148009646 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.116658347 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.148067385 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.150950438 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.117543227 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.148229475 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.111014449 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.147301118 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.115977667 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.145830743 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.122604124 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.141316485 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.113010427 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.15285443 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.157064576 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.113998536 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.149050025 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.117149596 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.142758613 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.099271368 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.141551989 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.09597884 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.147056085 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.108019601 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.148563628 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.112419369 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.147717456 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.159623896 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.119677595 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.149838153 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.14218037 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.116843108 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.14737281 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.107644543 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.146795703 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.127584033 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.163607448 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.142236675 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.10630601 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.165969223 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.110114905 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.140875583 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.097989982 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.154536582 seconds)
  done (took 15.468201809 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.144078915 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.18596568 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.143565348 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.131390336 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.181764957 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.176000895 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.215984611 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.152658696 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.110294994 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.16389627 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.117661216 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.152634339 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.117152483 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.162260079 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.177138118 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.12092229 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.144295568 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.126619017 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.14913021 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.189364762 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.131025615 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.17531496 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.181735346 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.210374043 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.149485424 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.172689864 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.146108209 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.159143152 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.124167333 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.182406875 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.160321376 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.178538423 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.149728624 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.150112937 seconds)
  done (took 6.651744124 seconds)
done (took 61.780221964 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 2.425425192 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.644998197 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 2.379315618 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 2.387959215 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 2.437344369 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 2.423045761 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.391134992 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 2.582592689 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 3.188198763 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 2.366367766 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.380622833 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 2.388013601 seconds)
done (took 30.305285638 seconds)
(2/20) benchmarking "string"...
  (1/4) benchmarking "join"...
  done (took 2.379486376 seconds)
  (2/4) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.989663117 seconds)
    (2/2) benchmarking "String"...
    done (took 1.697424348 seconds)
  done (took 4.992193828 seconds)
  (3/4) benchmarking "replace"...
  done (took 2.379061306 seconds)
  (4/4) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 2.377795122 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.624089777 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 2.379448037 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 2.399752461 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.399330719 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.377994036 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.383719809 seconds)
  done (took 17.24653413 seconds)
done (took 28.304183066 seconds)
(3/20) benchmarking "linalg"...
  (1/3) benchmarking "factorization"...
    (1/64) benchmarking ("eig", "LowerTriangular", 1024)...
    done (took 2.460562908 seconds)
    (2/64) benchmarking ("svdfact", "UpperTriangular", 1024)...
    done (took 2.589801497 seconds)
    (3/64) benchmarking ("schur", "Matrix", 1024)...
    done (took 2.639607064 seconds)
    (4/64) benchmarking ("eigfact", "UpperTriangular", 256)...
    done (took 2.397945399 seconds)
    (5/64) benchmarking ("qr", "Matrix", 256)...
    done (took 2.399973706 seconds)
    (6/64) benchmarking ("lu", "Matrix", 256)...
    done (took 2.401760988 seconds)
    (7/64) benchmarking ("eig", "SymTridiagonal", 256)...
    done (took 2.380276729 seconds)
    (8/64) benchmarking ("qrfact", "Matrix", 1024)...
    done (took 2.418956316 seconds)
    (9/64) benchmarking ("eigfact", "Diagonal", 256)...
    done (took 2.379864521 seconds)
    (10/64) benchmarking ("eig", "LowerTriangular", 256)...
    done (took 2.381556474 seconds)
    (11/64) benchmarking ("lufact", "Tridiagonal", 1024)...
    done (took 2.379578266 seconds)
    (12/64) benchmarking ("schurfact", "Matrix", 1024)...
    done (took 2.667083857 seconds)
    (13/64) benchmarking ("eig", "Bidiagonal", 1024)...
    done (took 2.406315736 seconds)
    (14/64) benchmarking ("eigfact", "Matrix", 1024)...
    done (took 2.758697605 seconds)
    (15/64) benchmarking ("eig", "UpperTriangular", 256)...
    done (took 2.380642177 seconds)
    (16/64) benchmarking ("svdfact", "Matrix", 256)...
    done (took 2.38667164 seconds)
    (17/64) benchmarking ("lufact", "Matrix", 256)...
    done (took 2.39983866 seconds)
    (18/64) benchmarking ("svd", "Matrix", 1024)...
    done (took 2.642575742 seconds)
    (19/64) benchmarking ("qrfact", "Matrix", 256)...
    done (took 2.382635456 seconds)
    (20/64) benchmarking ("eigfact", "Matrix", 256)...
    done (took 2.428858694 seconds)
    (21/64) benchmarking ("svd", "Diagonal", 256)...
    done (took 2.367288884 seconds)
    (22/64) benchmarking ("svdfact", "Diagonal", 256)...
    done (took 2.389509186 seconds)
    (23/64) benchmarking ("lufact", "Matrix", 1024)...
    done (took 2.398674803 seconds)
    (24/64) benchmarking ("schur", "Matrix", 256)...
    done (took 2.397784923 seconds)
    (25/64) benchmarking ("eigfact", "SymTridiagonal", 1024)...
    done (took 2.394822144 seconds)
    (26/64) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 2.385143317 seconds)
    (27/64) benchmarking ("eig", "UpperTriangular", 1024)...
    done (took 2.448912013 seconds)
    (28/64) benchmarking ("eig", "Bidiagonal", 256)...
    done (took 2.384467738 seconds)
    (29/64) benchmarking ("svdfact", "LowerTriangular", 1024)...
    done (took 2.61541969 seconds)
    (30/64) benchmarking ("lu", "Matrix", 1024)...
    done (took 2.396319451 seconds)
    (31/64) benchmarking ("eig", "Matrix", 256)...
    done (took 2.430100225 seconds)
    (32/64) benchmarking ("eigfact", "SymTridiagonal", 256)...
    done (took 2.385397293 seconds)
    (33/64) benchmarking ("eigfact", "UpperTriangular", 1024)...
    done (took 2.454428047 seconds)
    (34/64) benchmarking ("svdfact", "Bidiagonal", 256)...
    done (took 2.386940037 seconds)
    (35/64) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.50254875 seconds)
    (36/64) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 2.417886664 seconds)
    (37/64) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 2.587030501 seconds)
    (38/64) benchmarking ("eig", "SymTridiagonal", 1024)...
    done (took 2.402297308 seconds)
    (39/64) benchmarking ("svd", "Diagonal", 1024)...
    done (took 2.370683426 seconds)
    (40/64) benchmarking ("eigfact", "Diagonal", 1024)...
    done (took 2.382108311 seconds)
    (41/64) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 2.580936154 seconds)
    (42/64) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.818639353 seconds)
    (43/64) benchmarking ("cholfact", "Matrix", 256)...
    done (took 2.381092134 seconds)
    (44/64) benchmarking ("eig", "Diagonal", 1024)...
    done (took 2.393506524 seconds)
    (45/64) benchmarking ("eigfact", "LowerTriangular", 256)...
    done (took 2.384666114 seconds)
    (46/64) benchmarking ("eigfact", "LowerTriangular", 1024)...
    done (took 2.46193452 seconds)
    (47/64) benchmarking ("svdfact", "Diagonal", 1024)...
    done (took 2.377549675 seconds)
    (48/64) benchmarking ("lufact", "Tridiagonal", 256)...
    done (took 2.148217669 seconds)
    (49/64) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 2.395593888 seconds)
    (50/64) benchmarking ("eig", "Diagonal", 256)...
    done (took 2.38133602 seconds)
    (51/64) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 2.407577077 seconds)
    (52/64) benchmarking ("eig", "Matrix", 1024)...
    done (took 2.799744252 seconds)
    (53/64) benchmarking ("svdfact", "UpperTriangular", 256)...
    done (took 2.388401768 seconds)
    (54/64) benchmarking ("chol", "Matrix", 1024)...
    done (took 2.403050296 seconds)
    (55/64) benchmarking ("svdfact", "LowerTriangular", 256)...
    done (took 2.398924465 seconds)
    (56/64) benchmarking ("svdfact", "Matrix", 1024)...
    done (took 2.638670259 seconds)
    (57/64) benchmarking ("svd", "Matrix", 256)...
    done (took 2.385206751 seconds)
    (58/64) benchmarking ("qr", "Matrix", 1024)...
    done (took 2.434014777 seconds)
    (59/64) benchmarking ("schurfact", "Matrix", 256)...
    done (took 2.405184755 seconds)
    (60/64) benchmarking ("cholfact", "Matrix", 1024)...
    done (took 2.408338619 seconds)
    (61/64) benchmarking ("chol", "Matrix", 256)...
    done (took 2.383291167 seconds)
    (62/64) benchmarking ("eigfact", "Bidiagonal", 256)...
    done (took 2.396315416 seconds)
    (63/64) benchmarking ("svdfact", "Bidiagonal", 1024)...
    done (took 2.40559368 seconds)
    (64/64) benchmarking ("eigfact", "Bidiagonal", 1024)...
    done (took 2.404874572 seconds)
  done (took 155.670625174 seconds)
  (2/3) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 2.382903211 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 2.383891031 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 2.384157398 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 2.409009186 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 2.383668404 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.382046669 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.384000472 seconds)
    (8/36) benchmarking "gemv"...
    done (took 2.383513262 seconds)
    (9/36) benchmarking "syr!"...
    done (took 2.383993101 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 2.405660579 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.384118356 seconds)
    (12/36) benchmarking "her!"...
    done (took 2.384424783 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.387840106 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.382368053 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.386096578 seconds)
    (16/36) benchmarking "herk!"...
    done (took 2.397906855 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.391593326 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.384361203 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.386518099 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.383713333 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 2.403739916 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 2.384103553 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 2.404466338 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.38377509 seconds)
    (25/36) benchmarking "symm"...
    done (took 2.40002356 seconds)
    (26/36) benchmarking "herk"...
    done (took 2.465815845 seconds)
    (27/36) benchmarking "syrk"...
    done (took 2.416252115 seconds)
    (28/36) benchmarking "trsm"...
    done (took 2.402624659 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.386862962 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.383357861 seconds)
    (31/36) benchmarking "gemm"...
    done (took 2.39752845 seconds)
    (32/36) benchmarking "symm!"...
    done (took 2.38860447 seconds)
    (33/36) benchmarking "scal"...
    done (took 2.073343147 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.243172667 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 2.402946951 seconds)
    (36/36) benchmarking "trmm"...
    done (took 2.429821428 seconds)
  done (took 87.026229381 seconds)
  (3/3) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.384250129 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.384240799 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.386025996 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.421207837 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.385457073 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 2.006826221 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.028869234 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.130352308 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.556980663 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.98287712 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.704126631 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.385020564 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.481709389 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.398776965 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.388749617 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.400467997 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.411507744 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.386555044 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.384644918 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.025973536 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.399518046 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.3827611 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.571564824 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.403470083 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.422065649 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.787203546 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.386910718 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.421978831 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.731034705 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.440984828 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.385694483 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.844985445 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.429518302 seconds)
    (34/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.387415286 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.502963162 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.387738577 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.422596201 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.386889934 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.676338089 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.386268687 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.387081837 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.389320523 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.156664076 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.389844938 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 2.011220512 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.388424544 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.440033278 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.390794663 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.388829042 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.785636502 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.259972708 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.409086179 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.387741189 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.389841963 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.387082563 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.387481122 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.423181036 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.862717528 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.506958855 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.388729263 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.391615155 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.425122385 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.388773034 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.624477213 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.388999823 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.044928 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.458693465 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.494171938 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 2.029435951 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.3903051 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.490727665 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.51298053 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.387982992 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.389057191 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.388970072 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.388350503 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.503318412 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.38804181 seconds)
    (79/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.835825973 seconds)
    (80/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.57593481 seconds)
    (81/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.408666052 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.984849264 seconds)
    (83/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.494331414 seconds)
    (84/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.389018774 seconds)
    (85/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.86076689 seconds)
    (86/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.393221789 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.389053345 seconds)
    (88/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.200369631 seconds)
    (89/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.49068921 seconds)
    (90/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.388330046 seconds)
    (91/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.389436116 seconds)
    (92/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.390093936 seconds)
    (93/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.390314267 seconds)
    (94/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.388820624 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.837762312 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 2.035939288 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.710024472 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.392661446 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.961494223 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.393604588 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.850201335 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 2.008049381 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.146951663 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.39402767 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.509031171 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.578447199 seconds)
    (107/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.408779332 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.391247451 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.390542088 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.981596892 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.393841884 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.447033208 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.393835521 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.793124613 seconds)
  done (took 390.912226334 seconds)
done (took 634.915403607 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.088099795 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.037856025 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.172495664 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.068072236 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.027352214 seconds)
  done (took 11.709338653 seconds)
done (took 13.02365208 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.598783526 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.597743818 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.458114746 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.598345996 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.425534477 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.617770581 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.57824778 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.410988963 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.503519898 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.483003829 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.502343122 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.451041713 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.428299175 seconds)
  done (took 20.968981134 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.667012772 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.393289381 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.477450111 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.648395527 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.433219302 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.656258595 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.701971022 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.393584957 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.531923339 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.407438261 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.409379743 seconds)
  done (took 20.03796499 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.667104638 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.394108294 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.46110834 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.657159238 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.43534453 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.668515736 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.703306354 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 2.395384754 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.546962261 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.40766042 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.407087319 seconds)
  done (took 20.061256894 seconds)
done (took 62.383419891 seconds)
(6/20) benchmarking "tuple"...
  (1/3) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.433732989 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.564661732 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.419514872 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.404528389 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.404677691 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.402966895 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.404872427 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.401410066 seconds)
  done (took 12.761909315 seconds)
  (2/3) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.399487628 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.400675335 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.403787663 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.401590343 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.403973245 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.401379949 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.401520067 seconds)
    (8/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.40329548 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.403332583 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.400140501 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.401889751 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.404084988 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.403982203 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.403671222 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.403885948 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.400010589 seconds)
  done (took 23.756125068 seconds)
  (3/3) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.402856859 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.401462651 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.401561953 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.401208496 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.402097652 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.403294788 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.402919195 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.402035135 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.402418043 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.402488176 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.403295605 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.402790367 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.40148293 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.401984607 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.402665131 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.402822706 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.402430974 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.401961983 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.408246502 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.402513403 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.403429044 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.403093156 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.402496506 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.403804049 seconds)
  done (took 34.99733588 seconds)
done (took 72.833572338 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 2.396254362 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 2.417691716 seconds)
  done (took 6.134666235 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.463146925 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.465934315 seconds)
  done (took 4.250473085 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.406113119 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.405094828 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.406474397 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.40627952 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.405860343 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.407129255 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.405913863 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.406331238 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.406236475 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.405951939 seconds)
  done (took 15.381730091 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.407807844 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.407165094 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.904950281 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.406003204 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.406979177 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.403018626 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.406561511 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.406130967 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.405770886 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.40309852 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.406897221 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.402919613 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.406250962 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.403667564 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.405694025 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.405111573 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.404715853 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.404039416 seconds)
  done (took 27.118411908 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.419375973 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.427279162 seconds)
  done (took 4.167324152 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.533940307 seconds)
    (2/7) benchmarking "second"...
    done (took 1.445441226 seconds)
    (3/7) benchmarking "month"...
    done (took 1.515083746 seconds)
    (4/7) benchmarking "year"...
    done (took 1.50219399 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.447210311 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.426151132 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.446484609 seconds)
  done (took 11.63798787 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.409162691 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.611472025 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.724559957 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.979990125 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.409904344 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.410977857 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.271420666 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.412035104 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.414479087 seconds)
  done (took 15.967043712 seconds)
done (took 85.977729354 seconds)
(8/20) benchmarking "micro"...
  (1/7) benchmarking "quicksort"...
  done (took 2.400984564 seconds)
  (2/7) benchmarking "parseint"...
  done (took 2.419412195 seconds)
  (3/7) benchmarking "randmatstat"...
  done (took 2.416465731 seconds)
  (4/7) benchmarking "pisum"...
  done (took 2.412372274 seconds)
  (5/7) benchmarking "fib"...
  done (took 1.69952647 seconds)
  (6/7) benchmarking "randmatmul"...
  done (took 2.445546444 seconds)
  (7/7) benchmarking "mandel"...
  done (took 2.398876578 seconds)
done (took 17.516122097 seconds)
(9/20) benchmarking "io"...
  (1/2) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 2.392651736 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.390704466 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 2.401588316 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.406187891 seconds)
  done (took 10.913473493 seconds)
  (2/2) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.402457591 seconds)
    (2/2) benchmarking "read"...
    done (took 1.753565053 seconds)
  done (took 5.479078167 seconds)
done (took 17.716626018 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.409468126 seconds)
    (2/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.409050421 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.407295413 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.408960253 seconds)
    (5/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.408856488 seconds)
    (6/24) benchmarking ("one", "Float64")...
    done (took 1.406551995 seconds)
    (7/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.406232766 seconds)
    (8/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.409672696 seconds)
    (9/24) benchmarking ("zero", "Float64")...
    done (took 1.406281823 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.407750602 seconds)
    (11/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.410078731 seconds)
    (12/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.409554605 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.409807208 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.411840062 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.410299598 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.405975864 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.40796879 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.411300677 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.408612396 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.408097279 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.40911351 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.410831858 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.408176541 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.408815282 seconds)
  done (took 35.135435782 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.410846696 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.407774135 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.41108235 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.411311857 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.40890648 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.412113425 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.410804396 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.41050073 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.411944859 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.410160334 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.408623203 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.408263186 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.412311488 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.408868201 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.412541507 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.40984204 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.412123621 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.408365892 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.410753149 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.40988931 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.41263997 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.409855322 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.409775191 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.413678022 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.41073136 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.411460001 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.413561921 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.410128439 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.41372686 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.410171673 seconds)
  done (took 43.648119422 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.416977414 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.421268729 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.414348075 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.413569342 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.414592132 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.413263707 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.413363715 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.414612365 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.413775175 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.414659409 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.414004215 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.412716059 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.414326822 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.413317315 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.414788215 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.41415277 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.413566128 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.412812234 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.414486187 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.41260019 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.413628924 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.413404113 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.413739809 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.414526117 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.413700293 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.414397741 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.413456255 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.413035665 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.413128094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.413785398 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.414556246 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.414865243 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.41578629 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.41390917 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.413928786 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.415384122 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.420259973 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.421138669 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.414157432 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.414405579 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.414528012 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.414694794 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.414353821 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.415959984 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.415003915 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.414442821 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.414516733 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.413426896 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.414104106 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.415218594 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.414903085 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.415650577 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.414775722 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.4145141 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.41607205 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.414004558 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.415771534 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.416040413 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.415739111 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.414432001 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.415502679 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.416102111 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.416043089 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.416384114 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.41618427 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.41635253 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.416286827 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.415481922 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.415145174 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.416795743 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.416278579 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.415623748 seconds)
  done (took 103.200756355 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.415741634 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.413042222 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.413344342 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.413860073 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.414680397 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.416585972 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.414473947 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.416134446 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.413491071 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.416408557 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.41667804 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.414211811 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.414822332 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.417717995 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.415949652 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.414377356 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.418973975 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.41354744 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.418640999 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.419433418 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.418398415 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.415064895 seconds)
  done (took 32.476642432 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.417285554 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.418528778 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.414510132 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.419538297 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.416705439 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.419742467 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.41722593 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.419692003 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.417122731 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.415410496 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.415456264 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.41814669 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.416975183 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.415713875 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.414243547 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.417970267 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.419007324 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.418155303 seconds)
  done (took 26.842909358 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.417030274 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.415870476 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.417702423 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.417359867 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.415423464 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.418575292 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.416525874 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.419969377 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.417972092 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.417641945 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.420379623 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.419647383 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.419546317 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.416952131 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.419604325 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.416673508 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.419736648 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.418331679 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.418910071 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.417447598 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.417891508 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.419382139 seconds)
  done (took 32.530882622 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.420854788 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.420583561 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.417893818 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.417310886 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.417616441 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.419472357 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.421509333 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.418591623 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.420573831 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.421071881 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.417888211 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.422029049 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.41942267 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.416305603 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.418202231 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.417670011 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.420811075 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.418363172 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.421098469 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.419384267 seconds)
  done (took 29.721278817 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.418535731 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.417214557 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.417697045 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.41986578 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418711972 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.418359958 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.419278026 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.418344098 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.419525392 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.419399785 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.41912601 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.419159838 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.418451904 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.418456121 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.418888528 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.418646323 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.419788878 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.419089188 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.418889378 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.417776253 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.41869874 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.419758516 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.418727514 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.419154607 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.420017772 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.419082214 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.418481374 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.41947878 seconds)
  done (took 41.064094644 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.422787913 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.422099884 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.420964233 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.420777836 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.419998842 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.419878326 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.419085691 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.421283294 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.424283097 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.420943659 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.422832625 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.422294735 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.422037604 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.422236523 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.422570044 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.423475621 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.423444019 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.42188763 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.421722658 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.422308891 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.425324785 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.423592606 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.42337976 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.420989577 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.421835621 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.425177519 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.420602263 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.420948714 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.425176197 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.422506845 seconds)
  done (took 44.003004306 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.470055806 seconds)
    (2/2) benchmarking "in"...
    done (took 1.468699054 seconds)
  done (took 4.276132573 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.421306558 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.42501908 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.424737157 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.421310183 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.423241055 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.425951436 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.424895193 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.422892448 seconds)
  done (took 12.728655674 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.422650919 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.425213439 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.425930113 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.426091044 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.425911273 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.422888132 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.430783233 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.447985451 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.423837084 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.427026777 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.43161336 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.4310224 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.427377194 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.424486772 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.424325828 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.426772724 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.425684733 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.42602865 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.426249622 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.428261269 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.42553802 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.427026497 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.427502444 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.423896515 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.426628281 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.435764751 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.428756433 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.427777168 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.426378569 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.429080246 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.423972012 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.424281357 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.427055052 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.427320926 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.426861528 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.427021811 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.434478503 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.450300023 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.432680044 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.429136036 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.42702534 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.42507034 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.427944404 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.428228927 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.429555655 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.426558604 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.428218384 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.425187415 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.426055532 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.431757973 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.432548153 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.426571527 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.425715346 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.429867725 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.429348435 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.434792344 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.45132433 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.432198876 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.436931818 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.436768178 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.441698483 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.453531665 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.430137641 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.429913322 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.439364004 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.452256159 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.434323981 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.448383119 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.426077092 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.428138977 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.433985217 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.440144104 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.455535594 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.42867956 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.43057513 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.429194998 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.429080275 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.431195927 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.436117628 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.453743925 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.430303226 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.43011198 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.43908978 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.451602157 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.429524709 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.429912175 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.430895458 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.432077609 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.430587414 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.440183016 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.453419294 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.430678308 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.428639043 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.429252859 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.430247111 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.430684203 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.42763781 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.430473328 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.429650947 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.431863244 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.430524487 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.433410348 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.439427732 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.431020902 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.43164782 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.43725144 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.431614102 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.429718808 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.435619921 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.431528847 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.431307207 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.431842684 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.436491765 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.429418891 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.43550003 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.437923326 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.431161854 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.431960508 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.431591023 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.432966636 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.442055817 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.458752912 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.431887014 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.433250256 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.43726124 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.443956825 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.432002529 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.434089338 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.433139284 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.428980465 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.430803028 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.432840354 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.433686021 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.432950604 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.433628407 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.433177927 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.431117009 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.433337512 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.432887938 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.432604333 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.43402679 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.432474982 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.434039172 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.434392996 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.434456734 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.43344994 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.438534611 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.432530575 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.433522966 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.432336207 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.431319905 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.434238688 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.433459987 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.435592075 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.431637711 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.433903763 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.434888842 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.435217481 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.434937871 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.435151424 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.435303921 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.435596548 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.43770931 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.434836348 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.43736744 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.4331039 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.432576116 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.435040653 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.435683004 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.433234419 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.437464192 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.432703489 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.437936733 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.443860363 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.435796546 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.436199489 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.436328782 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.435188628 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.43601851 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.435568713 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.439364408 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.445104098 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.437218655 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.441151323 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.436245771 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.435998016 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.436995437 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.435583865 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.434194081 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.437178047 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.43898017 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.445266242 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.448961217 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.463085814 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.438321386 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.441162845 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.438158153 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.440477309 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.439779751 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.436889331 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.436736041 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.437379492 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.4348317 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.437803304 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.437509412 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.438123272 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.435316998 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.438640415 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.43860664 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.438844286 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.438200188 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.436681793 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.436647624 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.43572788 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.437438364 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.437716717 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.435748862 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.435560767 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.436205667 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.436156585 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.438371324 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.438039695 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.44323202 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.435478517 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.436611487 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.438713953 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.435759204 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.436484107 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.438982124 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.43847353 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.436112006 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.444426828 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.459987345 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.438101718 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.444789845 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.458620053 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.435788183 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.439644103 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.43981472 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.436784273 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.441294417 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.447720602 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.439941234 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.441067001 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.439685787 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.437944476 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.439874944 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.444384321 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.437604605 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.43806575 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.441452337 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.440012501 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.438050277 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.440111195 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.438469536 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.439371667 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.440748226 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.441171184 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.44204642 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.438678274 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.441535178 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.441136847 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.44105067 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.443187824 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.447888274 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.445301219 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.439005027 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.442415933 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.441901969 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.44614516 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.439598227 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.442172884 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.441295321 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.452453714 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.47016768 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.446738296 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.463345092 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.442664554 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.445403686 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.462813313 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.444054819 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.440219046 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.441975866 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.440293858 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.440176815 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.440238319 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.441190499 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.441963663 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.443330365 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.443737039 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.446976067 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.44225738 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.441205713 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.442288313 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.44252864 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.443051959 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.44190454 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.443128215 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.443775332 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.443794106 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.441645086 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.441405375 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.449488338 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.464928797 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.442454007 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.442750169 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.442467083 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.441856851 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.442440078 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.444292241 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.445854759 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.450599681 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.445793894 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.451592493 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.444584003 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.452152601 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.443379957 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.447295501 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.45309833 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.44079209 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.442414325 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.442785862 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.443163888 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.450200987 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.467150859 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.44556249 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.449415879 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.44575417 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.445609806 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.443241811 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.445733056 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.446446515 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.445108692 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.452537904 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.470627784 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.447604528 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.446375157 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.443045217 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.446371242 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.445665482 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.445030182 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.447005121 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.445150782 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.44686771 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.44433296 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.444822078 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.446064505 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.447210302 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.446720661 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.444171188 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.445835276 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.451346282 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.46878009 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.450563024 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.446463845 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.452767125 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.446720475 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.452508883 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.467941839 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.445243642 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.447074457 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.446386003 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.447342775 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.443909153 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.446702968 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.446814181 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.446680818 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.450982002 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.44766998 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.4478713 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.445656206 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.447356203 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.446835358 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.456464135 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.470591624 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.44722034 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.452409934 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.44363259 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.448141901 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.451504693 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.447491919 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.445745564 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.44971318 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.457995121 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.455382213 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.446720825 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.448270936 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.44711758 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.44905824 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.44890426 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.448734869 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.448649693 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.447953865 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.447682669 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.449291963 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.449421071 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.448427423 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.447419732 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.448938819 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.450161179 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.457598086 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.448096161 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.448885533 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.449329412 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.450601517 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.446641244 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.44812758 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.449490842 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.449795569 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.449268724 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.450757842 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.455998762 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.456157872 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.451800066 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.448150747 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.450148372 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.448748845 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.449763065 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.449093848 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.450049084 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.449870993 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.450034773 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.450709428 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.449473807 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.4474302 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.448911563 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.448806566 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.450779966 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.45278713 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.45762727 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.449134746 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.448177807 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.450688057 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.450318537 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.447453846 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.44895678 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.457719982 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.453326497 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.460505539 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.458297606 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.455420541 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.451429738 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.454137812 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.457754557 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.447912804 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.452180308 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.45125118 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.450982007 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.452492286 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.455423687 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.451154662 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.457174272 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.450730134 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.450990807 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.459277425 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.476646679 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.452054386 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.454146835 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.45674467 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.44982276 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.450317082 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.452797769 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.45017157 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.457013777 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.474284278 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.453175783 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.452463946 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.452704732 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.454718382 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.458204239 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.453344377 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.452665762 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.450644441 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.451558682 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.453448359 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.45328436 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.450473133 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.451634798 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.451683638 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.455787708 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.459315879 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.45064094 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.454862523 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.451996341 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.452386421 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.455239628 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.453529579 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.450765481 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.451888845 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.452389363 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.454014114 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.452909534 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.45462636 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.451684353 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.452978998 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.455868281 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.455617166 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.456635712 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.46474742 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.4617863 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.452260146 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.452679554 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.453258667 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.456218123 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.455458164 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.454749136 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.454993808 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.454432541 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.455389602 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.455761352 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.456508977 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.458228645 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.469239134 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.479182162 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.454195607 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.454423383 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.456052781 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.455841984 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.452759772 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.456928358 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.456206167 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.458510638 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.463012727 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.456901236 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.461115198 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.47653984 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.456338205 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.460108551 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.458666655 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.46359757 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.457839604 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.456712948 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.457492992 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.461933285 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.473252338 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.45714254 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.466867856 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.485514941 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.478068372 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.457369955 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.457379491 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.455433913 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.457468172 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.457609236 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.458657117 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.458513426 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.45803156 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.458367542 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.457345706 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.462554373 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.459399194 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.459746923 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.45839661 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.456964154 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.458631914 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.455867607 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.45732791 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.458525204 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.458293727 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.458483047 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.45943351 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.457868621 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.469326953 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.485627535 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.459033181 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.457791253 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.455752759 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.45967998 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.461635058 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.468949141 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.466452302 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.459878671 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.459825533 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.45975724 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.459969364 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.459429844 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.459425081 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.456786163 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.459278347 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.455945169 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.471422543 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.486678208 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.462790022 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.45785335 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.460668041 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.460116985 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.4599263 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.460980647 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.46074922 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.46002838 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.462643565 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.46417387 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.460563983 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.462907533 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.463784651 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.469194041 seconds)
  done (took 862.60736734 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.459168951 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.458184703 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.459375844 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.458298887 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.457875989 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.45755848 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.458235769 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.458802609 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.458562869 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.459107721 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.458930705 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.460125543 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.458478347 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.458121597 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.458670654 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.459859131 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.458015641 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.458609925 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.458880556 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.460115819 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.459708678 seconds)
  done (took 32.005333311 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.460894137 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.458516169 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.459494691 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.462246425 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.458417454 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.461769758 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.459239803 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.462928009 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.461831481 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.458404962 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.461673282 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.46206034 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.460807679 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.46060503 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.459419602 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.461703905 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.462398829 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.459866844 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.462010238 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.461407574 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.461901334 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.460780506 seconds)
  done (took 33.512436354 seconds)
  (15/25) benchmarking "fastmath"...
    (1/48) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.462656194 seconds)
    (2/48) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.463083832 seconds)
    (3/48) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.461082561 seconds)
    (4/48) benchmarking ("div", "Float64")...
    done (took 1.460653814 seconds)
    (5/48) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.463674462 seconds)
    (6/48) benchmarking ("mul", "Float64")...
    done (took 1.460324727 seconds)
    (7/48) benchmarking ("div", "Complex{Int64}")...
    done (took 1.462832213 seconds)
    (8/48) benchmarking ("mul", "Float32")...
    done (took 1.461832234 seconds)
    (9/48) benchmarking ("div", "Complex{Float32}")...
    done (took 1.464772845 seconds)
    (10/48) benchmarking ("div", "BigFloat")...
    done (took 1.462726063 seconds)
    (11/48) benchmarking ("add", "BigFloat")...
    done (took 1.461079795 seconds)
    (12/48) benchmarking ("add", "BigInt")...
    done (took 1.464093019 seconds)
    (13/48) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.469571422 seconds)
    (14/48) benchmarking ("sub", "Float64")...
    done (took 1.467077036 seconds)
    (15/48) benchmarking ("div", "BigInt")...
    done (took 1.463631078 seconds)
    (16/48) benchmarking ("add", "Float32")...
    done (took 1.463817588 seconds)
    (17/48) benchmarking ("div", "Complex{Float64}")...
    done (took 1.462055998 seconds)
    (18/48) benchmarking ("add", "Complex{Int64}")...
    done (took 1.463497886 seconds)
    (19/48) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.464942459 seconds)
    (20/48) benchmarking ("sub", "Int64")...
    done (took 1.460463643 seconds)
    (21/48) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.467325396 seconds)
    (22/48) benchmarking ("mul", "Int64")...
    done (took 1.482222495 seconds)
    (23/48) benchmarking ("div", "Int64")...
    done (took 1.461650723 seconds)
    (24/48) benchmarking ("sub", "BigFloat")...
    done (took 1.461655875 seconds)
    (25/48) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.464197894 seconds)
    (26/48) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.465931668 seconds)
    (27/48) benchmarking ("add", "UInt64")...
    done (took 1.464541397 seconds)
    (28/48) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.464546031 seconds)
    (29/48) benchmarking ("mul", "BigInt")...
    done (took 1.464764209 seconds)
    (30/48) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.467664279 seconds)
    (31/48) benchmarking ("sub", "Float32")...
    done (took 1.464531709 seconds)
    (32/48) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.463483993 seconds)
    (33/48) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.464989767 seconds)
    (34/48) benchmarking ("mul", "BigFloat")...
    done (took 1.462693419 seconds)
    (35/48) benchmarking ("sub", "BigInt")...
    done (took 1.465738642 seconds)
    (36/48) benchmarking ("add", "Complex{Float32}")...
    done (took 1.467100148 seconds)
    (37/48) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.464515883 seconds)
    (38/48) benchmarking ("add", "Int64")...
    done (took 1.462608635 seconds)
    (39/48) benchmarking ("sub", "UInt64")...
    done (took 1.465765404 seconds)
    (40/48) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.474807488 seconds)
    (41/48) benchmarking ("div", "UInt64")...
    done (took 1.486234315 seconds)
    (42/48) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.466982897 seconds)
    (43/48) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.469039168 seconds)
    (44/48) benchmarking ("mul", "UInt64")...
    done (took 1.488230713 seconds)
    (45/48) benchmarking ("div", "Float32")...
    done (took 1.465360267 seconds)
    (46/48) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.469851744 seconds)
    (47/48) benchmarking ("add", "Complex{Float64}")...
    done (took 1.47251116 seconds)
    (48/48) benchmarking ("add", "Float64")...
    done (took 1.464345168 seconds)
  done (took 71.742372034 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 2.069295716 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 2.087461899 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 2.089161768 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.085011423 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 2.088552621 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 2.088192861 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 2.088686892 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.094312807 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 2.088467356 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 2.084069061 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 2.100912818 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 2.086963761 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.088394299 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 2.090346663 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 2.088854888 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.0858704 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.08408222 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.085925867 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 2.094789336 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 2.088568311 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 2.086440742 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 2.101802356 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 2.090210994 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 2.084549122 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.088508709 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 2.087994061 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 2.086781086 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 2.090004354 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 2.092865248 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 2.101470475 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 2.092894535 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 2.090824219 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 2.102396224 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 2.089587378 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.090775923 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 2.092502471 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 2.091835415 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 2.088479979 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 2.088729788 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 2.094858594 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 2.099873815 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 2.093073739 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 2.09169355 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 2.102988938 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 2.092139038 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 2.090401209 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 2.089667392 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 2.091428787 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 2.089927087 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 2.09050517 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 2.09544524 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 2.101797857 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.09749041 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 2.092220809 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 2.105104802 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 2.097949425 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 2.090855091 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 2.095928546 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 2.094058934 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 2.094417264 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 2.09660802 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.098107271 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 2.101779437 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 2.097474128 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 2.092684013 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 2.10480234 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 2.094327651 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 2.09316546 seconds)
  done (took 143.646483476 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.469589035 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.469546132 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.470040323 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.468709271 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.469037375 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.470095903 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.469690049 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.470849612 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.471414364 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.470522229 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.470654125 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.471655433 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.470601194 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.469894116 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.471315315 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.470875229 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.471914015 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.470429861 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.471179923 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.470139411 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.47155764 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.470533551 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.471106181 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.471452402 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.471973136 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.471060813 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.470315897 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.47140586 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.472722646 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.470487614 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.472646323 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.471734944 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.470705442 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.473428396 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.472354813 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.472242462 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.471016411 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.472313507 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.472034489 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.472605223 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.472405535 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.472256378 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.4718898 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.471425083 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.47302357 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.473556775 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.473066897 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.473286951 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.473693561 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.473158882 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.474247142 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.473891157 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.474223825 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.473268925 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.473720789 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.473273626 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.473126711 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.473489924 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.472781125 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.47340575 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.473634627 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.474079667 seconds)
  done (took 92.634939916 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.474364489 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.473864053 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.472244624 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.47083347 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.478017731 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.471120036 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.474778537 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.475145236 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.474632311 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.47415526 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.476182117 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.472644491 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.474241717 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.476089358 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.472221674 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.47524132 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.475507248 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.472262252 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.475153444 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.472936205 seconds)
  done (took 30.866432231 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.472961325 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.474799067 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.473480067 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.473049386 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.476915819 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.474069375 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.47648332 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.476125053 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.472882979 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.475988017 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.476272483 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.475176173 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.473970202 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.474187867 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.475801396 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.473544533 seconds)
  done (took 24.980744906 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.473996512 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.475523429 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.477780541 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.476475298 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.474027434 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.473759229 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.475957449 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.473581789 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.473982712 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.477242431 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.477127646 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.476893599 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.474619076 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.477101258 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.47319016 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.476442653 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.473088051 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.473838356 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.475081415 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.477340158 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.473552021 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.473852035 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.477134258 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.476569823 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.474053061 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.475564264 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.475273535 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.472907382 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.474248097 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.477581012 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.476002783 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.474275725 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.474590612 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.475010609 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.478378356 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.474474952 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.478511782 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.476417914 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.479123485 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.477970333 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.477237947 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.475530991 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.478200479 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.478104502 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.475558612 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.477685586 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.47536489 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.476226018 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.475745471 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.476249554 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.478149006 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.478557206 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.479339873 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.478674246 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.479031129 seconds)
  done (took 82.571402755 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.479510556 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.478327732 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.476545637 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.479905688 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.479506777 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.476698728 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.478769729 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.47715389 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.476566854 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.479060326 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.477265735 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.480131765 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.478348495 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.480130902 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.477732597 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.480000492 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.476726591 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.477953158 seconds)
  done (took 27.999668755 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.476101057 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.477873443 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.480236573 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.476498225 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.477246722 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.479216527 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.472844636 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.477227718 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.477141334 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.475040636 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.475105869 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.478657131 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.476180449 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.477506387 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.475953467 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.474460643 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.478223535 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.47703121 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.478289783 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.474995892 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.47817383 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.478737316 seconds)
  done (took 33.882699054 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/12) benchmarking ("nextpow2", "Int64", "+")...
    done (took 1.475960837 seconds)
    (2/12) benchmarking ("prevpow2", "UInt64", "-")...
    done (took 1.477049244 seconds)
    (3/12) benchmarking ("prevpow2", "Int64", "+")...
    done (took 1.476184503 seconds)
    (4/12) benchmarking ("nextpow2", "BigInt", "-")...
    done (took 1.493029593 seconds)
    (5/12) benchmarking ("prevpow2", "UInt64", "+")...
    done (took 1.496891555 seconds)
    (6/12) benchmarking ("prevpow2", "Int64", "-")...
    done (took 1.475587956 seconds)
    (7/12) benchmarking ("nextpow2", "UInt64", "-")...
    done (took 1.476049145 seconds)
    (8/12) benchmarking ("nextpow2", "UInt64", "+")...
    done (took 1.476681202 seconds)
    (9/12) benchmarking ("prevpow2", "BigInt", "+")...
    done (took 1.500812085 seconds)
    (10/12) benchmarking ("prevpow2", "BigInt", "-")...
    done (took 1.535237266 seconds)
    (11/12) benchmarking ("nextpow2", "BigInt", "+")...
    done (took 1.528117249 seconds)
    (12/12) benchmarking ("nextpow2", "Int64", "-")...
    done (took 1.49913512 seconds)
  done (took 19.298598563 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.476689689 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478783719 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.476065635 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.479866757 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478993317 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.476513263 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.475171511 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.475853782 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478068753 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477922619 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476751971 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.479454611 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.479867551 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.475244266 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.479855153 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.480692478 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.478308674 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477761454 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.476776732 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.479420702 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.476594437 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.480231222 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476379841 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477980789 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.47775846 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476093847 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.479487569 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.476551515 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.476330067 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478914 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.480065498 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.476483213 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.479540092 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.476310057 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.479774083 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478357835 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.476962269 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478603875 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.47949575 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476006362 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.478100052 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.476807111 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.47790351 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477962763 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.477916832 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.474470901 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.476472258 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.474955483 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.475611291 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.477632682 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478994008 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.474277797 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478832005 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.478379277 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.477974147 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478046395 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476245511 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.475954979 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478297261 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.475767604 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.47604261 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.477427523 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.475054692 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.475464317 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.477790239 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.475504248 seconds)
  done (took 98.90444978 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.475990635 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.476976718 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.476193682 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.475093707 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.475667318 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.476987664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.47643694 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.477378092 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.476888606 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.476533621 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.479671979 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.47794585 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.477319428 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.477506227 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476776291 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476223612 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.477788454 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477605225 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.476693831 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.480521204 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.476280682 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.477380941 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.476878564 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.476203117 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.478192916 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.480468206 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.477710816 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.476875549 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478197263 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.478750947 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478606529 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.477170029 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.478652397 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.478817674 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.478905418 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.477497224 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.476548165 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.478849694 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478272832 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.481687145 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.478426864 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.480167329 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.478775673 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.479013062 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.477994521 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.478188884 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.478590788 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.479560722 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.478658936 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478230443 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.480180849 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.479120593 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.479924366 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.478932196 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.479750491 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.478864398 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.48024376 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.48083015 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.478604484 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.482351303 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.479329396 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.479084064 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.483879448 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.479347596 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.479640163 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.479731567 seconds)
  done (took 98.961977593 seconds)
done (took 2060.566748463 seconds)
(11/20) benchmarking "sparse"...
  (1/5) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.644883916 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.598766574 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.480231284 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 2.489756321 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.480444348 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 2.471626746 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 2.493322711 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.479993056 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.480314132 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.479443292 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.479697001 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.672387954 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 2.472881801 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.481286894 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.480035044 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.575600047 seconds)
  done (took 29.662784542 seconds)
  (2/5) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.513767909 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.490685273 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.619487768 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.508917098 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.512212968 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.699418066 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.547763471 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.489090334 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.687451112 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.534644071 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.492889456 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.515019502 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.48496258 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.491532952 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.509510273 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.701184039 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.776637256 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.496114434 seconds)
  done (took 32.465952229 seconds)
  (3/5) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 2.017634952 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 2.524822186 seconds)
  done (took 5.935920465 seconds)
  (4/5) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.508340673 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.487018599 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.48640622 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.484901375 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 2.477061657 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 2.496956023 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.485519126 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 2.484149496 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.48495439 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.633941943 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.48810361 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.49560818 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.508651398 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.485594946 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.484242791 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.526551196 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.665127002 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.485424397 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.483611366 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.491335642 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.485374565 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.60495864 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.532288211 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.488056914 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.630933785 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.485789832 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.493719829 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.493225149 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.611689873 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.484234849 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.486339251 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.486509634 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.487114249 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.457764995 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.982140635 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 2.492194239 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.51424637 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.494331194 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.483910313 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.656544646 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.486971889 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.49182499 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 2.477583441 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.943685355 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.631938346 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.620718822 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 2.496376758 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.488697898 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.488773258 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.55499405 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.486454176 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.488555257 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.533062158 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.323981858 seconds)
  done (took 93.907991957 seconds)
  (5/5) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 2.538873586 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.476968671 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.662028045 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.502776554 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.477611353 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.481340892 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.477856442 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.816244071 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 2.493258362 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.47765585 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.791444043 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.086262145 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.500531001 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 2.529776583 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.3318038 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.544042166 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.479371999 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.495291367 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.482743876 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 2.484122747 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.064286628 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.4809766 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.501163989 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 2.640910714 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.521978599 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.052411292 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.481783007 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.499908811 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.49979256 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 2.479544925 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.04531895 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 2.508928458 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 2.557324522 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.480587159 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.778710211 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.908044269 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.863036018 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 2.484361317 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.523972127 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.481986955 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.490091077 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.018863704 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.880231786 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.480484314 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.480049133 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.02788036 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.479428955 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 2.489653368 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.480128018 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.738566279 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.478775509 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.482324921 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.506052343 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.484379018 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 2.479822289 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 2.55230372 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.555271077 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.039951312 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.481674725 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 2.484015355 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.524155461 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.480458988 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.485275936 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.482017658 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 2.483805398 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.884006825 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.682781642 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.48445592 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.884175734 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 2.028971918 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.499540709 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105037566 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.501251758 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 2.506396265 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 2.532063593 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.481004139 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 2.48156517 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.052251164 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.506823631 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 2.482054708 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.865892308 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.484658998 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.802988079 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.508724229 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.483889399 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 2.0722196 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.487103782 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 2.48929337 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.481049537 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.484138582 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.483023332 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.48244195 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.784030065 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 2.509904703 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.480681907 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 2.482783719 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 2.51349601 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.482597202 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 2.481912878 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.485823813 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.101524157 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 2.502609551 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.483486664 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.4856612 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.483115507 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 2.486857714 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.483518481 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 2.485279399 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.756420406 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.497598668 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 2.490289714 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.484945131 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.485180166 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.49399397 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.629782431 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 2.49119 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.835237156 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.486540896 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.482841346 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.512738714 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.48485092 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 2.529920304 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.485235445 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.486037399 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.410510793 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.793015733 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.507101998 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 2.505576018 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.483731884 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.483393681 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.485384561 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.503187971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 2.522415208 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 2.484180936 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.285577133 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.504320192 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 2.49197419 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.48380108 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 2.496234517 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.484346859 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.514170937 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.488023627 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.790485986 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.788126191 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.671744946 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.489355556 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 2.48486288 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.28505105 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 2.536764666 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.670362307 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.509084131 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.487210592 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.738411877 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.701582725 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 2.486070973 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 2.485867453 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 2.487660542 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.757515153 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.489360388 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.802250483 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 2.060759265 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.507690696 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.489384317 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.28791905 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.196441852 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.487949365 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 2.489581605 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.800312355 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 2.507429982 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 2.486977892 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 2.485350686 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.487344267 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.486192465 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 2.491783499 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 2.493680597 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.486232265 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 2.487162817 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.511339219 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.682966988 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 2.507228419 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 2.494194732 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.040517774 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.497794174 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.488465297 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 2.496199497 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 2.488655774 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.486818173 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 2.549923918 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 2.489228676 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 2.53221474 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 2.4857202 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 2.489760898 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.093467886 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 2.488207648 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 2.4930579 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.685021951 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.215933716 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.506008661 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.490102588 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 2.505712398 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 3.392650762 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.066787898 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 2.516841078 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.842974943 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 2.501281366 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.531731861 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.489174926 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 2.496609082 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.086734356 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.492258943 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.510482618 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.194097808 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 2.51109468 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 4.121628647 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 2.489231365 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.489387881 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.137507483 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 2.508962297 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 2.491897118 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.488950044 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.507792444 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.791033803 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 2.490812259 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 2.522737281 seconds)
  done (took 534.269126924 seconds)
done (took 697.633816074 seconds)
(12/20) benchmarking "broadcast"...
  (1/5) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.489818543 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.489312405 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 2.479600425 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.490620325 seconds)
  done (took 11.356163203 seconds)
  (2/5) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.497431421 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.49522522 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.494625346 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.495175309 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.496409351 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.496318929 seconds)
  done (took 10.380393331 seconds)
  (3/5) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 2.488872901 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 2.494922663 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 2.495469205 seconds)
  done (took 8.888268139 seconds)
  (4/5) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.729552399 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.529524401 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.86549655 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.517530971 seconds)
  done (took 10.053803172 seconds)
  (5/5) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.497483636 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.497067673 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.49660441 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.498665709 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.501729828 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.5028618 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.49951636 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.499168793 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.502426112 seconds)
  done (took 14.90214029 seconds)
done (took 56.987735948 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.147843339 seconds)
    (2/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.182372442 seconds)
    (3/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 2.485018043 seconds)
    (4/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.258725522 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 1.625201766 seconds)
    (6/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 2.478804941 seconds)
    (7/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.510320877 seconds)
    (8/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.558530827 seconds)
    (9/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.509538827 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.528314145 seconds)
    (11/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.501453245 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.501365978 seconds)
    (13/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.500906672 seconds)
    (14/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 1.6865784 seconds)
    (15/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.521212918 seconds)
    (16/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.50713809 seconds)
    (17/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.49940556 seconds)
    (18/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.502443769 seconds)
    (19/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.538672226 seconds)
    (20/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.572636269 seconds)
    (21/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 1.665459502 seconds)
    (22/286) benchmarking ("map", identity, Float64, true)...
    done (took 1.636105555 seconds)
    (23/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 1.580856046 seconds)
    (24/286) benchmarking ("sort", Int64, true)...
    done (took 1.949891236 seconds)
    (25/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 1.704305597 seconds)
    (26/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 1.697951786 seconds)
    (27/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 1.662270073 seconds)
    (28/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.357179896 seconds)
    (29/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 1.608527996 seconds)
    (30/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.512040797 seconds)
    (31/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.508559476 seconds)
    (32/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.5836381 seconds)
    (33/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.627308412 seconds)
    (34/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.404729955 seconds)
    (35/286) benchmarking ("sort", Int8, true)...
    done (took 1.881766915 seconds)
    (36/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.549380719 seconds)
    (37/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.220220124 seconds)
    (38/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.584094348 seconds)
    (39/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.38687977 seconds)
    (40/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 2.574898922 seconds)
    (41/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.535561653 seconds)
    (42/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.502923162 seconds)
    (43/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.5791 seconds)
    (44/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 1.650890181 seconds)
    (45/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 1.720206808 seconds)
    (46/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.513338007 seconds)
    (47/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.526879559 seconds)
    (48/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.170949645 seconds)
    (49/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.216194168 seconds)
    (50/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.506741851 seconds)
    (51/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.577301136 seconds)
    (52/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.514190136 seconds)
    (53/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.401720751 seconds)
    (54/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 1.60241578 seconds)
    (55/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 1.633739388 seconds)
    (56/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.631024686 seconds)
    (57/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.571780256 seconds)
    (58/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.555887806 seconds)
    (59/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.513000131 seconds)
    (60/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 2.494881853 seconds)
    (61/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.531880007 seconds)
    (62/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.511738475 seconds)
    (63/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 2.547560462 seconds)
    (64/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.514768251 seconds)
    (65/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 1.678283396 seconds)
    (66/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.510713777 seconds)
    (67/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.559883231 seconds)
    (68/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.339940018 seconds)
    (69/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 1.697693418 seconds)
    (70/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.516408644 seconds)
    (71/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 1.831442803 seconds)
    (72/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.509795164 seconds)
    (73/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.507392718 seconds)
    (74/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 1.608083175 seconds)
    (75/286) benchmarking ("sort", Int64, false)...
    done (took 1.687238332 seconds)
    (76/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 1.725335555 seconds)
    (77/286) benchmarking ("sort", Float32, true)...
    done (took 2.057501879 seconds)
    (78/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 2.482963748 seconds)
    (79/286) benchmarking ("map", identity, Float32, true)...
    done (took 1.612161591 seconds)
    (80/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 2.557738443 seconds)
    (81/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.565968635 seconds)
    (82/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.532498303 seconds)
    (83/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.513383988 seconds)
    (84/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 1.653775788 seconds)
    (85/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 2.487128676 seconds)
    (86/286) benchmarking ("sort", BigFloat, false)...
    done (took 2.501945117 seconds)
    (87/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 2.515395111 seconds)
    (88/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.182984959 seconds)
    (89/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 1.657508844 seconds)
    (90/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 1.652418624 seconds)
    (91/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 2.505708515 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 2.486154332 seconds)
    (93/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.289045652 seconds)
    (94/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.529961475 seconds)
    (95/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.617679292 seconds)
    (96/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.57329694 seconds)
    (97/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.514736379 seconds)
    (98/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.508779788 seconds)
    (99/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.523785432 seconds)
    (100/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.591668449 seconds)
    (101/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 2.504712804 seconds)
    (102/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 1.780152596 seconds)
    (103/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.514106994 seconds)
    (104/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 1.720021692 seconds)
    (105/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 1.625618167 seconds)
    (106/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 2.486604895 seconds)
    (107/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.510568329 seconds)
    (108/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.515068941 seconds)
    (109/286) benchmarking ("sort", BigInt, false)...
    done (took 2.498269963 seconds)
    (110/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 1.702185957 seconds)
    (111/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 2.535930678 seconds)
    (112/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.586521262 seconds)
    (113/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 2.509034349 seconds)
    (114/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.520899522 seconds)
    (115/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.507894703 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.547150768 seconds)
    (117/286) benchmarking ("sort", Bool, false)...
    done (took 1.52935583 seconds)
    (118/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.50828173 seconds)
    (119/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.516080049 seconds)
    (120/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 2.498434339 seconds)
    (121/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.532631369 seconds)
    (122/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 2.497020202 seconds)
    (123/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.601672088 seconds)
    (124/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.511046855 seconds)
    (125/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.50791667 seconds)
    (126/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.587571383 seconds)
    (127/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.591505542 seconds)
    (128/286) benchmarking ("sort", Int8, false)...
    done (took 1.633313351 seconds)
    (129/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.517697895 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.527728787 seconds)
    (131/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 1.650415186 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 1.624991129 seconds)
    (133/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.515667652 seconds)
    (134/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 2.492749874 seconds)
    (135/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.512385696 seconds)
    (136/286) benchmarking ("sort", Float64, true)...
    done (took 2.128980101 seconds)
    (137/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 2.517624731 seconds)
    (138/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 2.504536512 seconds)
    (139/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.576050427 seconds)
    (140/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 1.742177881 seconds)
    (141/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.512300728 seconds)
    (142/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.594900596 seconds)
    (143/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 2.487577337 seconds)
    (144/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 2.567288593 seconds)
    (145/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.560972399 seconds)
    (146/286) benchmarking ("map", identity, BigInt, false)...
    done (took 1.590002796 seconds)
    (147/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.528966332 seconds)
    (148/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 2.506748382 seconds)
    (149/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.175659389 seconds)
    (150/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.594740837 seconds)
    (151/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.270496083 seconds)
    (152/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.535937919 seconds)
    (153/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.523832518 seconds)
    (154/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.562181183 seconds)
    (155/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 1.671947789 seconds)
    (156/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.533353848 seconds)
    (157/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.558787205 seconds)
    (158/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.513657395 seconds)
    (159/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.634210481 seconds)
    (160/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.556356061 seconds)
    (161/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.520563919 seconds)
    (162/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 2.606934164 seconds)
    (163/286) benchmarking ("map", abs, Float64, true)...
    done (took 1.653951709 seconds)
    (164/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 2.490765859 seconds)
    (165/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.514682904 seconds)
    (166/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 1.636300107 seconds)
    (167/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.538655805 seconds)
    (168/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.520904978 seconds)
    (169/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.622394568 seconds)
    (170/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.416752333 seconds)
    (171/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 2.509676014 seconds)
    (172/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 1.592245164 seconds)
    (173/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.512283249 seconds)
    (174/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.521712233 seconds)
    (175/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.511597925 seconds)
    (176/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.572464129 seconds)
    (177/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 2.510387246 seconds)
    (178/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.512925924 seconds)
    (179/286) benchmarking ("map", abs, BigInt, true)...
    done (took 2.493140995 seconds)
    (180/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.555890313 seconds)
    (181/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.514145521 seconds)
    (182/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.639211228 seconds)
    (183/286) benchmarking ("map", identity, BigInt, true)...
    done (took 1.693118497 seconds)
    (184/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.541068206 seconds)
    (185/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 1.615187829 seconds)
    (186/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 1.620111474 seconds)
    (187/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.520766375 seconds)
    (188/286) benchmarking ("sort", Bool, true)...
    done (took 1.713567347 seconds)
    (189/286) benchmarking ("sort", BigInt, true)...
    done (took 2.504273142 seconds)
    (190/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.615546304 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.515278005 seconds)
    (192/286) benchmarking ("sort", Float32, false)...
    done (took 1.664162409 seconds)
    (193/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 1.752093282 seconds)
    (194/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.553769908 seconds)
    (195/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 2.490226404 seconds)
    (196/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 2.491329758 seconds)
    (197/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 2.572117251 seconds)
    (198/286) benchmarking ("sort", BigFloat, true)...
    done (took 2.507418872 seconds)
    (199/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.613026876 seconds)
    (200/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.51438754 seconds)
    (201/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.599214326 seconds)
    (202/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.52830297 seconds)
    (203/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.60735048 seconds)
    (204/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.576813092 seconds)
    (205/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 2.500016713 seconds)
    (206/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.588505341 seconds)
    (207/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.522262736 seconds)
    (208/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.579236516 seconds)
    (209/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.57232714 seconds)
    (210/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 2.492560784 seconds)
    (211/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 1.692053256 seconds)
    (212/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 2.491847331 seconds)
    (213/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 2.50200321 seconds)
    (214/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.513927881 seconds)
    (215/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 1.678294021 seconds)
    (216/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 2.525686961 seconds)
    (217/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 2.583352698 seconds)
    (218/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.545129911 seconds)
    (219/286) benchmarking ("map", identity, Int64, true)...
    done (took 1.652703895 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.535654435 seconds)
    (221/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.558842196 seconds)
    (222/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.28516752 seconds)
    (223/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.248479448 seconds)
    (224/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 1.619385496 seconds)
    (225/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.516621185 seconds)
    (226/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 1.851964285 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 1.613626321 seconds)
    (228/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.562186917 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.602592682 seconds)
    (230/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.531594966 seconds)
    (231/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 1.594813386 seconds)
    (232/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 1.65386554 seconds)
    (233/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 2.529504173 seconds)
    (234/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.250051921 seconds)
    (235/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 2.580129375 seconds)
    (236/286) benchmarking ("map", abs, BigInt, false)...
    done (took 2.497368038 seconds)
    (237/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.60463202 seconds)
    (238/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 2.506543996 seconds)
    (239/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 2.511463872 seconds)
    (240/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.65224503 seconds)
    (241/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.515277254 seconds)
    (242/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 2.567883813 seconds)
    (243/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.286008208 seconds)
    (244/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 1.840838122 seconds)
    (245/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.567751382 seconds)
    (246/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.17030445 seconds)
    (247/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.51837211 seconds)
    (248/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.171498447 seconds)
    (249/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.51985882 seconds)
    (250/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.591901242 seconds)
    (251/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.572333245 seconds)
    (252/286) benchmarking ("map", abs, Float32, true)...
    done (took 1.602551023 seconds)
    (253/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 1.714931061 seconds)
    (254/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.276262265 seconds)
    (255/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.536844275 seconds)
    (256/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.515455974 seconds)
    (257/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 2.521905043 seconds)
    (258/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.538055964 seconds)
    (259/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.526063424 seconds)
    (260/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.298445992 seconds)
    (261/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.543243904 seconds)
    (262/286) benchmarking ("sort", Float64, false)...
    done (took 1.745012136 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.522829328 seconds)
    (264/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.663196615 seconds)
    (265/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.56490625 seconds)
    (266/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.531941405 seconds)
    (267/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.526576723 seconds)
    (268/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.529094754 seconds)
    (269/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.662670194 seconds)
    (270/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 1.708411336 seconds)
    (271/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 2.512076347 seconds)
    (272/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 1.688645838 seconds)
    (273/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.307422981 seconds)
    (274/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 1.700131868 seconds)
    (275/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.546171669 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.524143946 seconds)
    (277/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 1.730492154 seconds)
    (278/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 2.508760564 seconds)
    (279/286) benchmarking ("map", abs, Int64, true)...
    done (took 1.662266152 seconds)
    (280/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.17482373 seconds)
    (281/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.532004961 seconds)
    (282/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.516200155 seconds)
    (283/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.520096858 seconds)
    (284/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 1.817014195 seconds)
    (285/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.546051962 seconds)
    (286/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.526767312 seconds)
  done (took 520.156878853 seconds)
done (took 521.565576368 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.559695174 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.562829613 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.519418156 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.553485936 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.63625844 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.695585557 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.535038632 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.558395638 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.567015624 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.568671572 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.524366109 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.695042284 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.51953605 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.528689804 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.519321033 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.56079267 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.519681552 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.520911767 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.541632576 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.558094853 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.535157346 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.524825748 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.569367321 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.6956238 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.522503095 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.528022686 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.522018919 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.541547909 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.634782882 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.521219959 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.522560542 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.535564114 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.511898698 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.523106306 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.513371295 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.543770437 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.532299784 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.528979516 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.554357484 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.634221393 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.519548574 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.525836165 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.521959658 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.51994767 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.520356381 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.559975224 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.521301622 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.57743128 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.562743524 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.562939092 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.50711825 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.537264878 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.528647096 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.520986428 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.531867283 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.519963512 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.577197691 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.56461259 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.539361158 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.565737067 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.508814619 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.544139652 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.560274429 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.537635505 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.531965719 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.510255282 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.518206617 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.560473952 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.520249508 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.526865134 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.507858977 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.533006645 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.522605598 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.535767929 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.557216332 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.510561748 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.522112343 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.52062713 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.534516532 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.521628856 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.568831019 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.563245939 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.57100794 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.521891911 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.563411477 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.699082539 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.532215545 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.522624099 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.559536382 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.542165622 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.533983094 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.533535971 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.556289543 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.523235014 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.570529805 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.581041023 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.53346686 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.532136315 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.573160866 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.534307319 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.521239473 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.568696043 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.51917872 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.520720244 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.522234508 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.644276835 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.52240341 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.524486737 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.558104819 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.570911012 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.583080888 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.510799657 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.533824953 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.570189995 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.533613996 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.584020127 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.526156141 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.51064413 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.529799671 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.645622867 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.525264019 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.531552854 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.568312508 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.584747295 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.525542824 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.52179316 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.524989954 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.566618383 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.646338872 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.535120524 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.63847968 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.523793484 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.527106584 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.559674276 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.570305531 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.558997536 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.585247528 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.570843826 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.542112173 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.525336251 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.535387622 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.538678398 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.528128998 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.582350456 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.523695687 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.561674833 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.568437557 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.568618804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.561034485 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.647806835 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.531659968 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.516177513 seconds)
done (took 252.949912345 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.587622766 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 2.520764983 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.625687945 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.525008821 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.62906394 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.62809532 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.52253113 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.522756025 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.521808811 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.963898198 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.522248801 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.523368756 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 2.523271494 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.522631479 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.60725512 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.527667254 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.523356827 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.881401611 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.526575434 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.595654792 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 2.52466967 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.525075004 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.524239899 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.926631462 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 2.522575506 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 2.517597995 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.605357229 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.526201637 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.926105646 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 2.51824532 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 2.520098108 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.889574929 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.61840889 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.542148053 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.534794044 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.533603837 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.630532227 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.548145178 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.605232012 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.605027638 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.627265407 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.56301036 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 2.519266222 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 2.525347946 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.527499688 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.527647002 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.522021799 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.552124707 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 2.522122427 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.52396528 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.921189359 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.537758627 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.532655936 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.524756544 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.525042188 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.545973653 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.52467963 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.527802122 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.615593594 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.526873078 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.591713599 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.968271488 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.923012176 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.529511949 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 2.521387101 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.524545113 seconds)
  done (took 117.627431393 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.592707624 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.601468455 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.646918099 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.528401117 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.578775347 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.650768052 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.526936152 seconds)
  done (took 12.557348086 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.533276617 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.527767735 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.586245485 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.581623954 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.527622522 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.743733387 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.52907476 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.537762147 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.526666373 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.604457755 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.526037437 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.529134245 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.534945669 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 2.523680545 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.582363605 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.540727894 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.642987217 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.529127847 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.530223061 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.679417533 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.527273573 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.535867298 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.602040034 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.540088989 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.527991266 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.535370161 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.476481468 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.529377485 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.526401896 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.529417573 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.527156007 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.637511693 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.530824649 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 2.525036624 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.527371458 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.689297751 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.529568254 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.527761251 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.531928371 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 2.528919475 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.530388578 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.53197497 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.531092792 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.527938802 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.532621152 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.554450436 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.531000667 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.53039309 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.531709678 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.532378123 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.606313527 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.531788562 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.530030253 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.527549005 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.619037634 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.538169088 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.532068526 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.530022038 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.531580649 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.529403845 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.682863319 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.585047884 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.532166827 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.585777525 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.533007614 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.535992577 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.532745735 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.532226434 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.62439749 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.531800765 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.585494225 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.529899038 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.774828396 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.555838166 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.53478058 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.534580175 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.535243707 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.531768067 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 2.526428233 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.538740746 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.529394934 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.532961049 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.537994734 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.530289692 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.529563508 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.716107036 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.688256763 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.53115067 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.545162956 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.539790922 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.530033681 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.619788454 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.53306194 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.530725362 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.596206791 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.646819187 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.609183276 seconds)
  done (took 157.517027479 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.53777372 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.541233716 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.535574581 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.55459492 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.532571319 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.533129903 seconds)
  done (took 10.672788233 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.535694773 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.53458088 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.53333461 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.535050935 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.535239929 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.531550904 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.531925626 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.534707567 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.539776831 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.535173864 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.532727948 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.535725297 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.53406732 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.53579086 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.533136066 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.535798438 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.533696349 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.532769742 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.536065299 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.535252108 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.53305307 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.535671448 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.535682607 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.538166161 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.538420282 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.537007342 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.543437998 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.536895162 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.537153508 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.544258891 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.558608751 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.535451608 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.537865514 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.541878729 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.539376104 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.537216789 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.539575504 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.537260793 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.534428626 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.535205453 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.535317921 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.53837776 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.536105077 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.536985189 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.538916708 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.54023998 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.540563828 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.544324875 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.534671227 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.536728962 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.537918053 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.538904827 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.53537652 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.537408329 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.540184967 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.560025564 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.540751552 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.53624055 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.537971401 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.539858734 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.539299518 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.535354479 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.540030779 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.539431101 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.53592741 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.538499406 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.539890542 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.542670269 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.539950793 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.540083993 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.539591594 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.537317364 seconds)
  done (took 113.165111672 seconds)
done (took 412.968925018 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 3.026641502 seconds)
  done (took 4.470008614 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 2.646376008 seconds)
  done (took 4.091326524 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.923389938 seconds)
  done (took 25.373147522 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 2.645209668 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 2.560990646 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 2.537843002 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 2.538459 seconds)
  done (took 11.725878826 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 2.899660628 seconds)
  done (took 4.342953638 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 2.532446815 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 2.53740622 seconds)
  done (took 6.514906812 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 2.951057621 seconds)
  done (took 4.394337745 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 2.921520172 seconds)
  done (took 4.372906323 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 2.555053119 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 2.548260912 seconds)
  done (took 6.555883891 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 2.520321552 seconds)
  done (took 3.963944242 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 16.344401872 seconds)
  done (took 17.790337736 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 2.535655959 seconds)
  done (took 3.982273517 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 2.553017732 seconds)
  done (took 3.996940428 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 5.55650027 seconds)
  done (took 6.999985853 seconds)
done (took 110.017903521 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 2.530869446 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 2.538202999 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 2.535935032 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 2.536297 seconds)
  done (took 11.586487091 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.576607134 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.574582916 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.576067138 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.583769953 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.578400688 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.575174957 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.568009702 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.566948568 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.584776146 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.577827716 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.576323039 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.576837709 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.575659112 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.567247803 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.577448092 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.57601109 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.586472442 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.575232618 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.566793541 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.578438208 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.542217591 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.585461177 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.578696976 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.542188941 seconds)
  done (took 39.212908654 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.058907992 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.612990286 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.695063043 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.593729323 seconds)
  done (took 8.404653904 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.611358647 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.611202762 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.62317873 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.661921815 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.68869391 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.619895047 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.56862816 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.563697391 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.549795369 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.612009665 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.670957817 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.606533118 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.690936341 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.543473473 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.73516018 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.543741719 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.543606017 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.620630478 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.659993876 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.676281724 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.544949905 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.619179755 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.627528627 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.607528353 seconds)
  done (took 40.247100288 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.543420996 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.560312928 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.54318009 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.541508943 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.551558344 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.541046343 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.54435446 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.543405674 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.54383316 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 2.092143231 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.564425697 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.554722799 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 2.091205351 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.565150838 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.54910014 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.543666532 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 2.097848695 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 2.122025314 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.564063348 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.549852687 seconds)
  done (took 34.654862678 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 2.534503481 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 2.535205208 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.888856908 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.803046534 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 2.535059439 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 2.536068174 seconds)
  done (took 15.280260231 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.625458726 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.794280275 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.54464244 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.949369783 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.027905095 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.544198653 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.544848612 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.822217091 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.188575206 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.178967877 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.615658987 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.621662245 seconds)
  done (took 22.905848987 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 2.544040852 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 2.539151525 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 2.544093994 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.557181809 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.608483273 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.549380325 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.551818602 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 2.535718575 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.611306694 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.613595286 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.549798871 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.609479218 seconds)
  done (took 24.264892494 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.635515851 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.540336307 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.54679511 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.60919225 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.540051761 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.386701534 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.625429335 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.294464616 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.566969547 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.81492189 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55309712 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.641962297 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.797538619 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.552289395 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.545859853 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.536234896 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.771117028 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095106321 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542122315 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550124218 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.579784719 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.548820986 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.544875041 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.806315956 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.543455731 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541259491 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.801780723 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.540319142 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.869456909 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.55964821 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553102544 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.541218345 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.816944038 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248973973 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.668978534 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.786377006 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556443015 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.542908075 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 2.549766005 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 2.571939291 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.548126591 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.547622775 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.553646868 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.542136038 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.541432901 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.549212925 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.308366343 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.570022692 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 2.54053238 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.542861087 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.843556402 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.644832643 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.546483576 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.542523373 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.671926747 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543543325 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 1.547527702 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.540316384 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.146761364 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560461516 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.553063 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 2.547518736 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.584798763 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.545166601 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.23099761 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.549413919 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.547043961 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.5482232 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543834306 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.543212788 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.559533088 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.543831843 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.568928974 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.54279018 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.309597019 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.562887268 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.549575057 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.159028398 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560344657 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 2.547774011 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.776913549 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544017913 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.542877561 seconds)
    (84/481) benchmarking "5d"...
    done (took 2.543143665 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.546205968 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.346670144 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.554597758 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 2.530897786 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.542185658 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.328828487 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.81346 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.566317353 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.577793563 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.770490443 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 2.530239505 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.544702599 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 2.562103587 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.550542488 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.5685399 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.302826591 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.566574124 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.550441105 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.805387435 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.759934132 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56066687 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.535498375 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.071713116 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56687021 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.572696762 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.547986781 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.795931866 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.200763803 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.563292221 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.546789962 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.588466994 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.547097828 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.388684987 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548665098 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.655391739 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.564752424 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.84663859 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.431062588 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548485002 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.617306176 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.550425576 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.547075681 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.54797204 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548815195 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.547273904 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.784125444 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.584605077 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.563027503 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 2.546044417 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548725811 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 2.559301924 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.5476971 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 2.553067043 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.774235474 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548574617 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.830961255 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.548009958 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.549229803 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.548470409 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.77522528 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.546784748 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 1.889424422 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.813606852 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.560355891 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.563883445 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.566042033 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.569013119 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65599192 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.571658062 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 2.549651554 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.812014237 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.554283753 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.553280265 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.547778977 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551136753 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554472294 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.557018783 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571432035 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.226053566 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.529578387 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.55764196 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.441670789 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.564711569 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.619451707 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.555217775 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.797089902 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.561784215 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55680873 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.557317334 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 2.55755949 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.778060287 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562312082 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 2.555682893 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.629594223 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.075481398 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.22524803 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.565730494 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 2.550683763 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 2.548055334 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 2.546596365 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.550207444 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.551654343 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.551619444 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.799147399 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.570279185 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.556101653 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.209790234 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.554265137 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.563276915 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.561675046 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.564790537 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.558691389 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.55039707 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.551318245 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.556731545 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.576453371 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.569395207 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.698136659 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.567715262 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.552648423 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 2.070529945 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.558183287 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.552690794 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.553085545 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.587610868 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.551479485 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.412297827 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.817824058 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.559840126 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.85724588 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.566582078 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.573154271 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.550248437 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.552446468 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.557697196 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 2.581640905 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58699296 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.564391646 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.568739212 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.559210946 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.12916434 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.354509887 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.160388849 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.567299657 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 2.555593371 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.576685744 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.325977918 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.576093732 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.553518149 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.817290047 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.318110034 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575925884 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.081949343 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.588316939 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.415315591 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.862297997 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.79324804 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.563444612 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 2.555663756 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.865645424 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.771306197 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.590727997 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.553689808 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.579305705 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 2.540395123 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.157303878 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.582054021 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.640392753 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.321970711 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.575831335 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.561947282 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 2.639569662 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.565213733 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.018840713 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.577019873 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.556038119 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.556501709 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.560278585 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.414877629 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.564681318 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.557293188 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.248554668 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.568305864 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.086555217 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577557233 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.805226402 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.570432487 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.56116756 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.553197197 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.557951516 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.818911508 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.863667236 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56088093 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.569060187 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.16841271 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.430756188 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.563854431 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.558730169 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.408314263 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567838883 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.893404227 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 2.570962858 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.559482195 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.57790341 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.558089721 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.555664948 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 2.554272568 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.562748733 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.536250008 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.117996191 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.587761127 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.595053379 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.590573296 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.561161686 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.816712778 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.573755862 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.215517213 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.792179796 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.577263415 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583497997 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.563655935 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562091099 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 2.550316664 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.559113861 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.558260194 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.688500431 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.785821575 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.577326398 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 2.545781035 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.661901318 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.773745684 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.558873344 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.560010057 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.837802727 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 2.558643773 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 2.574206386 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.36207195 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.592998842 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.561229808 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.564226398 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.568567623 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.558493129 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.656647961 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.809909305 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.574532642 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.571995928 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.023762796 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583991463 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.564408569 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.57686457 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.65708154 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562217187 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.574879319 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.338652763 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.224909667 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.365781768 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.22761206 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.866751094 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.561690017 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.563019888 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.56026522 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.725131646 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.561884099 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.836683367 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.562182834 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.581267027 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.585752781 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.567400837 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.577256836 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.780736534 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.83836266 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.561808735 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.575853437 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.56683348 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 2.562026968 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.575863331 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.775197168 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.127223893 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.185331322 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.564172774 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.571694224 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.335731412 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.859719019 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.560586787 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56232122 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.562781573 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 2.5678074 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.575431568 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.57231021 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569306983 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.713060187 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.865584342 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.286193627 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.597308932 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 2.591935514 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.339057213 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569392943 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.823121647 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56438096 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.814779459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.229575384 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.352418171 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.833083346 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63560715 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.813649672 seconds)
    (390/481) benchmarking "6d"...
    done (took 2.563651549 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.730988497 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.562648056 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.569154304 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.56621634 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.5652009 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 2.562885622 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.577613016 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.231829258 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.835767217 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 1.568178068 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.561420129 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.600457941 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.576835106 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.790378721 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.384411077 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.79210496 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577416927 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.570422026 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.565368933 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.231181094 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.872495533 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569191624 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.569865963 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.83951298 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.567076777 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.592379591 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.020023609 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 2.56365342 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191998447 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.540214937 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.58780858 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.579299043 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.361626299 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.232396985 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.582598023 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.133883936 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.567776297 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.580486933 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.845461397 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.572257154 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.582675108 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.848155495 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.572250162 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.568597131 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.821889002 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.227664066 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.449236547 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 2.586335106 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.592566509 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 2.574382866 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567339268 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.680973317 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569352809 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.575444269 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.049147555 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.590492562 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.567418971 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.581179113 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.569635087 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.583737479 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 2.570008538 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.569047525 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.575157312 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 2.584031618 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 2.560829193 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.583557755 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.570898984 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.201912774 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.597091154 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.237807678 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.8946616 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.826495757 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.568777644 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 2.558163377 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.573410575 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569467917 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.569575684 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.570484854 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.59505819 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.194722696 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 2.569746232 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.585607792 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.573993853 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.786821216 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781846162 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.571114303 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.826477549 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.571053678 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.588813632 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 2.556745473 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.570343657 seconds)
  done (took 1072.965082165 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.60578388 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 2.594509658 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 2.603527323 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 2.642335055 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.619348048 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.669088609 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 2.597892232 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 2.641813578 seconds)
  done (took 22.45310979 seconds)
  (11/13) benchmarking "cat"...
    (1/16) benchmarking ("hvcat", 500)...
    done (took 2.580997227 seconds)
    (2/16) benchmarking ("hcat_setind", 5)...
    done (took 1.580633386 seconds)
    (3/16) benchmarking ("hvcat_setind", 500)...
    done (took 2.575047477 seconds)
    (4/16) benchmarking ("hvcat", 5)...
    done (took 1.581297704 seconds)
    (5/16) benchmarking ("hcat", 500)...
    done (took 2.575974799 seconds)
    (6/16) benchmarking ("catnd_setind", 5)...
    done (took 2.105539725 seconds)
    (7/16) benchmarking ("vcat_setind", 500)...
    done (took 2.592727163 seconds)
    (8/16) benchmarking ("hvcat_setind", 5)...
    done (took 1.581396779 seconds)
    (9/16) benchmarking ("vcat", 5)...
    done (took 1.580358963 seconds)
    (10/16) benchmarking ("catnd_setind", 500)...
    done (took 2.585306109 seconds)
    (11/16) benchmarking ("vcat", 500)...
    done (took 2.576686497 seconds)
    (12/16) benchmarking ("catnd", 5)...
    done (took 2.556666593 seconds)
    (13/16) benchmarking ("vcat_setind", 5)...
    done (took 1.581093861 seconds)
    (14/16) benchmarking ("hcat_setind", 500)...
    done (took 2.570040731 seconds)
    (15/16) benchmarking ("catnd", 500)...
    done (took 2.572476813 seconds)
    (16/16) benchmarking ("hcat", 5)...
    done (took 1.583471364 seconds)
  done (took 36.264825551 seconds)
  (12/13) benchmarking "subarray"...
    (1/8) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.918774761 seconds)
    (2/8) benchmarking ("lucompletepivSub!", 500)...
    done (took 2.842238334 seconds)
    (3/8) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.114207685 seconds)
    (4/8) benchmarking ("lucompletepivCopy!", 250)...
    done (took 2.660622652 seconds)
    (5/8) benchmarking ("lucompletepivSub!", 250)...
    done (took 2.573327847 seconds)
    (6/8) benchmarking ("lucompletepivCopy!", 100)...
    done (took 2.570625039 seconds)
    (7/8) benchmarking ("lucompletepivCopy!", 500)...
    done (took 2.984527307 seconds)
    (8/8) benchmarking ("lucompletepivSub!", 100)...
    done (took 2.594994585 seconds)
  done (took 29.739141738 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.581108474 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.583237929 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.583666198 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.584397777 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.583532982 seconds)
  done (took 9.397149241 seconds)
done (took 1368.82225357 seconds)
(18/20) benchmarking "misc"...
  (1/6) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.577029532 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.579386216 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.578348943 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.580007492 seconds)
  done (took 7.796051971 seconds)
  (2/6) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 2.558730266 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.558518981 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 2.558836849 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.575650661 seconds)
  done (took 10.732652415 seconds)
  (3/6) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.413395615 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.314456549 seconds)
  done (took 6.209453519 seconds)
  (4/6) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.095076607 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.091220614 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.089806123 seconds)
  done (took 7.757928415 seconds)
  (5/6) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.903626475 seconds)
  done (took 3.386032658 seconds)
  (6/6) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.511410665 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.486797847 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.290125196 seconds)
  done (took 8.772425618 seconds)
done (took 46.135463212 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.570998405 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.933377354 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.72869459 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.573216573 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.735321807 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.729168513 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 3.380551187 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.585577935 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.578156023 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.576601343 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.576545169 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.735683756 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 3.298882547 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.915128256 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 3.297073166 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.820449038 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.735872197 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.578624084 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.572687731 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.577952859 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 3.382066405 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.572018549 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.604025865 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.572830336 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.736230468 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.719021122 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.587091405 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.820522762 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.573484851 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.572660423 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.739891789 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.581501425 seconds)
  done (took 89.444573141 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.573352976 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.577239636 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.574826009 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.606389242 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.580503693 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.574412313 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.592861319 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.582939887 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.577801565 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.575015503 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.583511137 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.575816799 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.57402118 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.575377315 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.595724638 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.574754896 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.594758322 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.576643451 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.574122348 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.598768393 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.57568624 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.575474307 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.594616845 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.575015326 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.591656207 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.576008897 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.594358912 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.594976513 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.598371964 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.573355347 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.597368828 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.595382805 seconds)
  done (took 84.164102157 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 2.575645211 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 2.574608187 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 2.589843464 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 2.585913878 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 2.576403868 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 2.588876654 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 2.574003546 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 2.584206125 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.584763303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.584576376 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 2.587518391 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 2.57617282 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 2.575110462 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 2.575759106 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 2.577098098 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 2.578070298 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 2.61187188 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 2.576518568 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 2.576180264 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 2.596226379 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 2.57680977 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.576523288 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 2.577267278 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.577522659 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 2.588288717 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 2.596819594 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 2.577225756 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 2.57790992 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 2.577085426 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 2.57986695 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 2.597041584 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 2.587699475 seconds)
  done (took 84.124991195 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.860819654 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.585746489 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.585936927 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.570637715 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.586321144 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.586051367 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.579719822 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.860918716 seconds)
  done (took 16.703481314 seconds)
done (took 275.919477311 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 2.588784748 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 2.59403555 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.805241328 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.61256336 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 2.577900745 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.606503551 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.607486573 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.823300291 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.599487275 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.8279732 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.598988252 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.605230379 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.579605457 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.60497859 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.879903602 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.740793252 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.536399758 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.580982307 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.954661863 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.605147399 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.868254933 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.581278682 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.877416269 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.581293326 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.579666339 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.580680955 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 2.593760684 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.517871649 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.625541138 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.960063128 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 2.608378902 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 2.567160737 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.678230874 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.699395413 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.813375345 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.755978072 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 2.594507177 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.677485767 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.822714899 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.581480251 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.590469136 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.397492257 seconds)
  done (took 92.37081296 seconds)
  (2/6) benchmarking "iteration"...
    (1/39) benchmarking ("Set", "String", "next")...
    done (took 1.587908555 seconds)
    (2/39) benchmarking ("Set", "Any", "start")...
    done (took 1.708004437 seconds)
    (3/39) benchmarking ("IdDict", "Any", "done")...
    done (took 1.588537395 seconds)
    (4/39) benchmarking ("Set", "Int", "done")...
    done (took 1.589900026 seconds)
    (5/39) benchmarking ("Dict", "Int", "done")...
    done (took 1.589758787 seconds)
    (6/39) benchmarking ("Dict", "String", "start")...
    done (took 1.713821894 seconds)
    (7/39) benchmarking ("IdDict", "Any", "start")...
    done (took 1.684530333 seconds)
    (8/39) benchmarking ("IdDict", "String", "done")...
    done (took 1.589311306 seconds)
    (9/39) benchmarking ("BitSet", "Int", "done")...
    done (took 1.591462675 seconds)
    (10/39) benchmarking ("IdDict", "String", "next")...
    done (took 1.588184629 seconds)
    (11/39) benchmarking ("Dict", "String", "next")...
    done (took 1.588608095 seconds)
    (12/39) benchmarking ("Vector", "Int", "done")...
    done (took 1.589884619 seconds)
    (13/39) benchmarking ("Vector", "String", "done")...
    done (took 1.5902168 seconds)
    (14/39) benchmarking ("Vector", "Any", "done")...
    done (took 1.591153523 seconds)
    (15/39) benchmarking ("Dict", "String", "done")...
    done (took 1.589072119 seconds)
    (16/39) benchmarking ("IdDict", "Int", "done")...
    done (took 1.590496762 seconds)
    (17/39) benchmarking ("IdDict", "Any", "next")...
    done (took 1.58863131 seconds)
    (18/39) benchmarking ("Vector", "Int", "next")...
    done (took 1.589212621 seconds)
    (19/39) benchmarking ("Set", "Int", "next")...
    done (took 1.589344086 seconds)
    (20/39) benchmarking ("Vector", "Int", "start")...
    done (took 1.636548892 seconds)
    (21/39) benchmarking ("Dict", "Int", "start")...
    done (took 1.713770283 seconds)
    (22/39) benchmarking ("IdDict", "Int", "next")...
    done (took 1.613528506 seconds)
    (23/39) benchmarking ("Vector", "Any", "next")...
    done (took 1.583779877 seconds)
    (24/39) benchmarking ("Dict", "Any", "next")...
    done (took 1.588517563 seconds)
    (25/39) benchmarking ("IdDict", "Int", "start")...
    done (took 1.693953296 seconds)
    (26/39) benchmarking ("Set", "String", "start")...
    done (took 1.73287326 seconds)
    (27/39) benchmarking ("Vector", "String", "next")...
    done (took 1.588918033 seconds)
    (28/39) benchmarking ("Set", "Any", "next")...
    done (took 1.585035909 seconds)
    (29/39) benchmarking ("Vector", "String", "start")...
    done (took 1.634480432 seconds)
    (30/39) benchmarking ("Dict", "Any", "done")...
    done (took 1.591604754 seconds)
    (31/39) benchmarking ("Dict", "Int", "next")...
    done (took 1.590487516 seconds)
    (32/39) benchmarking ("Vector", "Any", "start")...
    done (took 1.637411531 seconds)
    (33/39) benchmarking ("Set", "String", "done")...
    done (took 1.590408289 seconds)
    (34/39) benchmarking ("Set", "Any", "done")...
    done (took 1.59284807 seconds)
    (35/39) benchmarking ("Set", "Int", "start")...
    done (took 1.710278721 seconds)
    (36/39) benchmarking ("IdDict", "String", "start")...
    done (took 1.689685945 seconds)
    (37/39) benchmarking ("BitSet", "Int", "next")...
    done (took 1.589675573 seconds)
    (38/39) benchmarking ("BitSet", "Int", "start")...
    done (took 1.588608731 seconds)
    (39/39) benchmarking ("Dict", "Any", "start")...
    done (took 1.708160816 seconds)
  done (took 64.689569403 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.592566178 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.861791164 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.069067617 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.602422069 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.592895708 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.596439163 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.682267636 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.595997572 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.595314476 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.595743106 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.755015541 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.597592015 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.629537795 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.09549329 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.599490751 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.595363907 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.59471722 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.593034125 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.870601126 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.602482566 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.706333022 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.594686687 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.683018499 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.603873641 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.61859757 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.594785204 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.598218702 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.169686085 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.596607609 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.756760715 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.545616684 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.682675813 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.118980126 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.081009226 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.543450925 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.598575181 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.594994524 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.761448275 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.596098545 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.594810478 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.682401199 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.596440402 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.076858218 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.283884201 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.621882667 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.595709051 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.195271912 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.761799987 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.876055308 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.603358222 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.111339556 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.60194172 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.596208652 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.596229921 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.877589046 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.603501317 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.595749619 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.193291112 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.619601488 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.687227072 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.600580864 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.595678523 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.88436743 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.601198126 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.870683976 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.600913235 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.602223492 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.619906902 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.07475059 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.599062595 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.298018082 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.617247683 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.596686738 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.755786171 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.87227542 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.235908874 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.599928546 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.890976147 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.133342466 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.686251206 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.6042072 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.164523959 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.69444635 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.604694935 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.599785855 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.599836935 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.597572559 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.649102606 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.684495114 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.235455061 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.298176379 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.240100474 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.710033245 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.616376703 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.600119714 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.202343031 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.620690265 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.598084017 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.070288396 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.299848771 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.619484905 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.606188888 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.305762601 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.622199925 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.689613259 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.607769732 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.085077143 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.600872902 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.647940961 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.601402124 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.604989959 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.624639322 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.68981624 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.607095843 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.59881042 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.27273742 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.789524395 seconds)
  done (took 209.030579556 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 2.592870455 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 2.591285857 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 2.590901905 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 2.610969574 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 2.591326489 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.601714586 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 2.591530066 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 2.59216946 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.598815341 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 2.591083308 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 2.591308242 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 2.594981122 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 2.591664112 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 2.596254728 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.625944171 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.600161659 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.592878777 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 2.593552571 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 2.59274207 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 2.594147727 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 2.592048074 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 2.615339458 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 2.595147809 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 2.592852651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 2.59343061 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 2.592082164 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 2.59514153 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 2.616754056 seconds)
  done (took 70.218505343 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.602338508 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.244837723 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.603341621 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.751925308 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.627271719 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.599297195 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.750168508 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.668075471 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.602880386 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.599591299 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.600841711 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.945627314 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.604309064 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.192029282 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.823426875 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.752916588 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.187142512 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.62513147 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.600316727 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.602127858 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.753928402 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.617480812 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.946489039 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.246372125 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.604665163 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.245758437 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.59403506 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.602927063 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.601952653 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.246742091 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.601688903 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.950166207 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.691066307 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.669830414 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.248416354 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.190330238 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.21169407 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.774080373 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.603822696 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.60208094 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.60095274 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.594630624 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.283179892 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.608341773 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.60211207 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.280762356 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.628951379 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.604482373 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.609339316 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.600690398 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.671112824 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.671715814 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.970630347 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.600652043 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.695407769 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.61963794 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.752388023 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.969710458 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.607704057 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.192067392 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.592628049 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.288220026 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.630351646 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.593612819 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.603931227 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.609420468 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.775926301 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.757349308 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.194362259 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.625430064 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.192832032 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.799294493 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.603089783 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.604094245 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.604325392 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.2886295 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.198469464 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.795987042 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.758036022 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.829122364 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.595814512 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.602989684 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.594332627 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.692117873 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.605532271 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.29060819 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.219627211 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.628603428 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.606841342 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.607927045 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.607846153 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.80932122 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.309804165 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.697463883 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.191823733 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.993681573 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.978707983 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.6134851 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.675212466 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.625177742 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.59763079 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.612866844 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.673024013 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.031801781 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.977158848 seconds)
  done (took 191.840482909 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.876579595 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.625758704 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.706797826 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.769300132 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.276366891 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.238564904 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.627930632 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.737870084 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.726128332 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.89010878 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.620634531 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.70147117 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.841955571 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.690438324 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.358617022 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.684619564 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.708183364 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.770858943 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.762738789 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.617224007 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.319169957 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.924502064 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.809798864 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 2.651410836 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.719058672 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.440981064 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.229315044 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.157240647 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.80774202 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.609935492 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.172195277 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.604148497 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.61184249 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.36842915 seconds)
  done (took 73.167025145 seconds)
done (took 702.804677808 seconds)
SAVING RESULT...
DONE!
