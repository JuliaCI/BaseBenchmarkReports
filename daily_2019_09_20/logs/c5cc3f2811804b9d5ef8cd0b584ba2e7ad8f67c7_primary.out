cset: moving following pidspec: 4497
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.364132388 seconds)
loading group "string"... done (took 0.556735355 seconds)
loading group "linalg"... done (took 7.075448393 seconds)
loading group "parallel"... done (took 0.158937258 seconds)
loading group "find"... done (took 1.129603416 seconds)
loading group "tuple"... done (took 1.781297959 seconds)
loading group "dates"... done (took 1.268492521 seconds)
loading group "micro"... done (took 0.22614788 seconds)
loading group "io"... done (took 0.915442273 seconds)
loading group "scalar"... done (took 37.126446701 seconds)
loading group "sparse"... done (took 11.649215628 seconds)
loading group "broadcast"... done (took 0.945854988 seconds)
loading group "union"... done (took 12.391986038 seconds)
loading group "simd"... done (took 4.489350843 seconds)
loading group "random"... done (took 9.506473284 seconds)
loading group "problem"... done (took 1.929627881 seconds)
loading group "array"... done (took 21.026082743 seconds)
loading group "misc"... done (took 1.727804357 seconds)
loading group "sort"... done (took 3.281432394 seconds)
loading group "collection"... done (took 17.434443493 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.487822456 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.12253448 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.113491067 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.117926762 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.143877821 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.11431494 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.122027703 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.083361725 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.838516644 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.143832971 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.118450597 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.410621809 seconds)
done (took 5.169738102 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.177457225 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.08530596 seconds)
    (2/2) benchmarking "String"...
    done (took 0.083265674 seconds)
  done (took 1.338852931 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.066507655 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.12293891 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.065727744 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.066209543 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.066184958 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.065928758 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.065736288 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.065344992 seconds)
  done (took 1.689908588 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.075331975 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.069726452 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.068737626 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.067989764 seconds)
  done (took 1.45513128 seconds)
done (took 5.911677598 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.760308104 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.200417376 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.182598234 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.401299586 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.128251941 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.153019458 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.641184124 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.303882878 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.182347688 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.080460892 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.103738332 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.316609532 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.10647816 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.636964359 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.07320413 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.089192362 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.135901646 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.438345815 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.067202588 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.081767289 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.088518395 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.127590412 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.087522383 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.07373836 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.144086219 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.067537516 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.12919065 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.07962187 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.065790282 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.206030174 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.171601695 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.664513813 seconds)
  done (took 10.200345176 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.098249049 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.098013193 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.067871687 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.135937934 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.095481291 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.069379284 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.070461729 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.066717257 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.086182694 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.126768693 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.087927956 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.100732657 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.065703701 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.068193215 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.08364263 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.203847224 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.081178483 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.08060494 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.069716648 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.075179426 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.116427105 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.077753953 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.077111465 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.078325573 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.129706683 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.179027967 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.099034524 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.096903549 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.066211516 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.079925396 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.11551398 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.128620869 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.06500517 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.065747119 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.122921705 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.093839456 seconds)
  done (took 4.635481958 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.280691002 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.144010739 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.092534585 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.134996285 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.066407281 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.109068194 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.06698217 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.08147296 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.20236591 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.370938727 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.575097838 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.110012421 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.102806686 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067013901 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.067809867 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.06629742 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.335021773 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.106438698 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.102315297 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.080312868 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.069201424 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.067769397 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.696961771 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.066752954 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.062796372 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067327437 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.057433077 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.122461637 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067438445 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 0.918077899 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.123042905 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.065593503 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099159036 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.168810903 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.085651047 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.273130902 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.067959937 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.063099458 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.147421481 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.070487735 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.065737605 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.083187831 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.105183399 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.111269978 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.06533727 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.066494342 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.161166299 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.064307779 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.079060079 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.987444019 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.152409196 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.093970178 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.065375726 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.246902998 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.085669951 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.068641118 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.090038325 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.06417994 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.183269079 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.136769611 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.068863698 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.068106001 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.068663466 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.070640287 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.352215151 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.065518938 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.787809616 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.069312403 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.076210591 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.06864756 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069081997 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.072251516 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071961859 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.085004688 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.065227343 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.07393302 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.064889681 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.065094402 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.065746409 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.063300071 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.08388466 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.35776024 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.065943101 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.067320266 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.063904213 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.085217006 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096355776 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.065268849 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.06429995 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099620785 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.066934634 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.065137342 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.211694972 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.066498132 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.083224821 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.067910435 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.112441876 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.065452599 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.069485048 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066376699 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.064689741 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.063042037 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.095777541 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.069135288 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.098098649 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.079986513 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.067704971 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.395998704 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.064661625 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.064498668 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.067563158 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.0647317 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.066904697 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.065484538 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.078378281 seconds)
  done (took 21.298724729 seconds)
done (took 38.586628411 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.270245851 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.078186203 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.078464013 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.076665772 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.074425581 seconds)
  done (took 1.839652828 seconds)
done (took 3.087174184 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.119128478 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.09770341 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.063677949 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.094216834 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063519598 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.098597979 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.097746079 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.080049593 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.097846341 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.06357337 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.095602919 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.063663201 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.063457853 seconds)
  done (took 2.361637281 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.083023436 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.082568981 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.069211542 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.08105341 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.062874397 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.081640799 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.079574628 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.086993573 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.079683254 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.07140424 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062991028 seconds)
  done (took 2.079657977 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.081161617 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.083188346 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.068444848 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.080838603 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.063062431 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.080257494 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.08190539 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.08678617 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.081429781 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.072512468 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.062719661 seconds)
  done (took 2.078836207 seconds)
done (took 7.754024194 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.077798324 seconds)
  done (took 1.304525855 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.585945866 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 6.078440674 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08044567 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.11054939 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.182314412 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.118089257 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.276460565 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.085813262 seconds)
  done (took 8.9245811 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088767339 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.082114803 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.069854945 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.069015738 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.071140973 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.068319479 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.07100376 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.070714414 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.070804083 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.070048208 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.068205449 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.067677355 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.067777902 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.067889666 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.070143334 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.067211727 seconds)
  done (took 2.439533009 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.090967356 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.089967966 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.072230337 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.073786351 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.071057966 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.071493344 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.07421313 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.072752217 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.070092519 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.071390363 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.073830384 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.07271441 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.070901303 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.064651824 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.073002986 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.074568383 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.06995754 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.073018025 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.074040893 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.074245825 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.073575822 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.063694731 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.070666536 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.072990176 seconds)
  done (took 3.093057169 seconds)
done (took 16.997958246 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.11187378 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.071150212 seconds)
  done (took 1.413147887 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.081454766 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.082247976 seconds)
  done (took 1.402134269 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.082325365 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.06486537 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.088385154 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.07665951 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.065436181 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.064927258 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.086078699 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.065437156 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.064822199 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.06541532 seconds)
  done (took 1.963561575 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.068349569 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.076964968 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.069662858 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.080066027 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.072587178 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.063565975 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.071713324 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.066795651 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.07660161 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.062029568 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.069797656 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.081103067 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.070248907 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.082960582 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.071654592 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.067603085 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.069581739 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.065926293 seconds)
  done (took 2.529403511 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.066138994 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.066106846 seconds)
  done (took 1.383939437 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068100654 seconds)
    (2/7) benchmarking "second"...
    done (took 0.064161416 seconds)
    (3/7) benchmarking "month"...
    done (took 0.066031357 seconds)
    (4/7) benchmarking "year"...
    done (took 0.065751128 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.062452851 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.061952931 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.062717809 seconds)
  done (took 1.696259898 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.381492156 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.109367468 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.297277933 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.072001532 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.081541095 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.249296397 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.064957064 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.069693964 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.069965718 seconds)
  done (took 2.685637686 seconds)
done (took 14.323565983 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.078459096 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.084221043 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.093559713 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.363238112 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.091038796 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.065111777 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.113382606 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.18638748 seconds)
done (took 2.334919381 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.217895497 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.609676322 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.384752175 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.203084029 seconds)
  done (took 2.446758112 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.324222474 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.085567771 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.059089173 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.065980424 seconds)
  done (took 1.79642595 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.066735957 seconds)
    (2/2) benchmarking "read"...
    done (took 0.067711693 seconds)
  done (took 1.390332923 seconds)
done (took 7.109252769 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.082480329 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065312961 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.065034777 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.063125997 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.063668062 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.065275161 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.063092355 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.063026347 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.065490839 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.065345669 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.068233406 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 0.065387877 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 0.065578934 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065287297 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.063787852 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062932956 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065511342 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.062984341 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065893028 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.065052402 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062971383 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065085773 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.063375486 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.063019579 seconds)
  done (took 2.855528618 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.084232171 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.06601721 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.070776497 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.071113797 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.069347301 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.070452143 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.070662267 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.065791679 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.071173974 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.067429044 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069348787 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.069199053 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.067314266 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.069636738 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067558205 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.06967863 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.070532355 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065977004 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.067440199 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.069362346 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.070334534 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066088491 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.069415593 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.070206048 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.069009693 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069236427 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.067573885 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.065638162 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.070536392 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.068944304 seconds)
  done (took 3.344579288 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.070336589 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.06350697 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.064001339 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.070761397 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.063602207 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.064806033 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.062943531 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.063707119 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.063748042 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.062723232 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.064565241 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.06282958 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.063046776 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.063794036 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.063881201 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.066789574 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.078268938 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.063372518 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.064384498 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.063934432 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.066152811 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.063697989 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.062926066 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.063479138 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.063197198 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.063059605 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.063904967 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.062963118 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.063737208 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.174288853 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.066583519 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.066439454 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.062494405 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.069488423 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.066325832 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.063126921 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.066984943 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.062756711 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.063727441 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.062372117 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.06266099 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.062610842 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.06295805 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.069229034 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.062997232 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.064189769 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.06274431 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.064068479 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.063702648 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.065834491 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.062287965 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.062944997 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.064887688 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.064348551 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.066978865 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.062124325 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.063664574 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.062569438 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.063858048 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.062696939 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.062490822 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.062407352 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.065330624 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.063554759 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.077613292 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.069012711 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.06265637 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.063946102 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.063661302 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.065283696 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.064401029 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.075371123 seconds)
  done (took 6.042297508 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.089263965 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.086530435 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.065146263 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.065252664 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.061596431 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.063575895 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.066995901 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.063786043 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065012679 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.069152707 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.063228622 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.065058155 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064897614 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076292931 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.0639569 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.065289557 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.069011567 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.061350169 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.063383501 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.066618907 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.06385304 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.066686281 seconds)
  done (took 2.760780495 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.152665546 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.069994493 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.104888321 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.072255772 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.06687299 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.072290816 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.069098128 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069284527 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069586035 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067888613 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067543471 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.069247 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.066805272 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067067889 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067267776 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.06757305 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.068966477 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.068128902 seconds)
  done (took 2.62750281 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.076419426 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.065646456 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.085561951 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.0655088 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.065132565 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.067710419 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.069688165 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.073356664 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.067991014 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.065101789 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.073789773 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.067349929 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.068171673 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.065103747 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068376465 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.065524555 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.067411525 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.064960958 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.073411524 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.069912851 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.069656648 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.073048523 seconds)
  done (took 2.797197049 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.078880623 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.067150268 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.082191722 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.068208289 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.061772378 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.063831269 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.069131881 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.0654035 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.069501932 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.066937662 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.065829038 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.063481141 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.068439652 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.065221364 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.068552619 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.065535015 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.067474114 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.065040632 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.066472224 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.061103717 seconds)
  done (took 2.621552151 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.085889577 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.066399677 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.067621191 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.074614073 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.066558171 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.066971128 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.074609031 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.066591645 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.066549247 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.085920199 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066373005 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066365166 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.074139997 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.071545212 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.066152852 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07418845 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.073957091 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.074194607 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.066783359 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066669793 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.086204444 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.066097678 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.073792144 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066426966 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.066227591 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.066453098 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.066733988 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071365029 seconds)
  done (took 3.257443519 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.065759309 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.065677914 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.0637626 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.063022581 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.062662758 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.062835621 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.063057843 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.062997451 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067948074 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.062652986 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.065192393 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06562705 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065122855 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.064879073 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.064947162 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.065146133 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065139585 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.062799221 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.062448743 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.062588175 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.065081168 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065031416 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.064992855 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.062875083 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06285611 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.064900308 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.062448039 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.062812817 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.065341051 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.062563783 seconds)
  done (took 3.199399932 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.074038433 seconds)
    (2/2) benchmarking "in"...
    done (took 0.072009763 seconds)
  done (took 1.422494446 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.062887326 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.078625532 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.062723551 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.068709928 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.068234566 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.065619603 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.072469829 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.068592588 seconds)
  done (took 1.819851615 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.080650046 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.076484684 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.06674758 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.079912214 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.075803197 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.082823398 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.131144065 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.06632888 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.071630856 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.063601574 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.078638945 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.064443729 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.071565357 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.06600542 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.070747414 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071599603 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.06326028 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.071047851 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.06753416 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.063670745 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.066459877 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073509172 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.067874477 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.061072545 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.0662095 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.086825773 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.076053418 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.065371638 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.068044073 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.072410211 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.071234326 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.059958582 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.065405835 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.065640417 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.063502483 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.074765121 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.079573208 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.067847919 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.073436446 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.066292701 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.07582491 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.060589249 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.069815414 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.072046029 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.075046618 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.065663948 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.06580314 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.06077459 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.063263897 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.067731998 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.060667943 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065327053 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.060080617 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.074367111 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.068928297 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.075260221 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.063896666 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.067128188 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.068179575 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.068549531 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.071578034 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.06695463 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.067593902 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.065021885 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071591143 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.069549593 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.073923423 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.060433992 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.059376249 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.063346891 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.074577838 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.087896496 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.071194427 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.066058068 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.066020599 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.063336006 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068506473 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066194688 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.070648154 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.072233507 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.065198739 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.070505058 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.072524792 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.065356659 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.067493921 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.073334669 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.063892298 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.06837339 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.06334483 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.081656752 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.064306207 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.0632456 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.063157658 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.075410955 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.068744218 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.065087356 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.063118859 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.072381884 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.05957086 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.065994043 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066119261 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.066118852 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.075825848 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.070306764 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070293615 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.073739332 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.073530832 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.066040984 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.068326247 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.061785309 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.065457984 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.064167658 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.071622513 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.05860755 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.066863813 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.065050043 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.064636409 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.199155023 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.064608775 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.066470335 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.072992655 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.070902388 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.064926006 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.062771208 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.068781177 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.066086027 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.069084561 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.073534727 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.064618584 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.061007275 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.061140221 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.068756959 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.065921124 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.069218704 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.070346274 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.068495518 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.061105704 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.065930816 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.070974494 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.074313449 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.066091756 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.066476677 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.071766234 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.066960319 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.065646202 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.072539854 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.067941911 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.065210865 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.071143621 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.066356478 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.061176868 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.068971989 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.068128503 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.064009368 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.069087025 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.068133504 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.067747058 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.066901498 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063975691 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.072843859 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.066314457 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.065229255 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.065525587 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.064473291 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.075511226 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.067022102 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.060114892 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.062340934 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.074209544 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.063895849 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.065453077 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.064648656 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.067231209 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.066815711 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.063354691 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.0650324 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.067734739 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.075768314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.069900447 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.066327818 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.071443666 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.076016628 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.065171436 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.068141179 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.064877096 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067156157 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.066796343 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.074027759 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.070752914 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.070417696 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.068023774 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.062250394 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.070648813 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.072728625 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.06525019 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.063444347 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.065062693 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.070016839 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.071420969 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.069510545 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.066100359 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063500483 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.065784337 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.06823668 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.068350576 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.064835797 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.064584006 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.072055502 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.06391128 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.072626719 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.066461135 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.075083192 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.068801342 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.061168397 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.06866019 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.063512826 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.071808674 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.061048553 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.06325139 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.064767484 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.066583144 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.064353965 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.067771737 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.059895997 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.071909303 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.072853128 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.065509105 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.064790118 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.06506687 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.072082948 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.066739056 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.068954801 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.068839242 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.070789899 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07499401 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.063765122 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.067865926 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.074361081 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.064593977 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.189279428 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.072076887 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.06528164 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.064844799 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.064665142 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.063886351 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068600476 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.07504272 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.072512634 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.060219279 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.068670168 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.064494344 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.065351618 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06210967 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.070668885 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.068733746 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.067457983 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.073253591 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.066369142 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.066189737 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.069469173 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.065456637 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.066495701 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.067081312 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069100662 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.066680051 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.068053358 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.065066157 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.068659769 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.065163237 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.06436613 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.067741057 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.06539417 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.0666047 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.071007413 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.065709204 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.065387583 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.068771942 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.066401153 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.066729991 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.066629718 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.065269964 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.068759433 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.066254074 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.06589071 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.067911762 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.061218783 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.072590884 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.065345019 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.0725397 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.06578238 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.06300066 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.07349633 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.068089141 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.072078377 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.066521582 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.06688891 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.066921037 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.065587912 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.068291608 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.073049847 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.063645208 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.076279523 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073230718 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066648844 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.068440042 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.066216912 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.067233212 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.064985671 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.066153316 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.06664728 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.066082929 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.06583083 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.069885638 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.068222085 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.065807389 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.067367582 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.066206009 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.065772874 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.066523016 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06006726 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.064688729 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.065064952 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.065392157 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074626808 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.065834041 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.065152363 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.064356808 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.06624411 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.064575295 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.062615935 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.073695722 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.074289778 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.066048525 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.072578998 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.065156596 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.067264182 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.075819308 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.060147442 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.063595741 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.06408335 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.064338144 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.072735017 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.066143743 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.075109871 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.066200352 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.065889199 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.064614729 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.068049419 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.066554219 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.062293613 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.065727473 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071512457 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.066419646 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.066207904 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.066554065 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.068180168 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.06635073 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074282783 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.06450341 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.065625165 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.064659676 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.061776734 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.064114822 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.064019556 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.20184703 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.067619459 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.065294832 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.064000908 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.066316284 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.067226903 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.067187952 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.065709983 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.067126182 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.075043309 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065573599 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.069542316 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.06887363 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.061512678 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.069065986 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.066728422 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.067021997 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.065679409 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.069749201 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.069437807 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.067461297 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.074999994 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.065264826 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.066800415 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.065836809 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.063829848 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.066040344 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.065563826 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.066561389 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.065731228 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.066888545 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074746216 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.065052114 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.068580958 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066212356 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.067130858 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.071981355 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.066814801 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.068866461 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.072447796 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.066257788 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.067786906 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.074153176 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.069789597 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.069022204 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.067352221 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.067707628 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.071902037 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.065925709 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.072393749 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.066218688 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.067184299 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.067559937 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.063634407 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.065616266 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.066111303 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.065718169 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.071519917 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.066648628 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.065544293 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.065355226 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.064567094 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.067153469 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.068803654 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073183568 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.068412601 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.068590341 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.061468016 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.063106505 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066988037 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.064175814 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.067044294 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.068358887 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.071040167 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.06827231 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.065851968 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.065308355 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.076546482 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.072687722 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.068875834 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.063377977 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.06882144 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.066130987 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.06733469 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.066295881 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.065623838 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066809677 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.06957 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.067055993 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.064914525 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.07217939 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.068648483 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.066029549 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.066924699 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.06635148 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.06600057 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.060855185 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.06633877 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.067668075 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.070731303 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.068205113 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.06601938 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.076173976 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.063966652 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.066397944 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.069073218 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.065127349 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.070390934 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.061582254 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.067446202 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.066494819 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.066517234 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.061041899 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.06550099 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.063760026 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.067973651 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.064887554 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.061138886 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.074987289 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.073935942 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.067735156 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.063667029 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.063713101 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.060299841 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.060200674 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.198290904 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.067121469 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.067981102 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.07637246 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.065571315 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.065240523 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.06211027 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.066461872 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.070189931 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.069646674 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.063200122 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.062652939 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.066944745 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.071298901 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.073335197 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.06625575 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.067933793 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.070605892 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.068755958 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.064147423 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.069219275 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.062550258 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.069334333 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.078545172 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.067030196 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.067178322 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.072185415 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.0732317 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.067024438 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.0616953 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.067216472 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.068616074 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.066559456 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.067625502 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.067050442 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08072965 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.069006339 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.065129152 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.06547035 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.068743598 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.065204573 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.073594034 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.067212381 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.06729352 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.070434533 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.06835543 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.076156047 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068558133 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073973025 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.06916536 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.068370997 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.065551827 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.066540905 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.063644989 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.064770033 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.066571242 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.066853533 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.070899984 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.074332077 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.066227222 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.076427904 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.074970617 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.067770032 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.062951506 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.065723711 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.065916531 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.061071339 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.06688327 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.063905609 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.064849831 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.065623591 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.066199545 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.068718436 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.073218191 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.06857323 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.068294945 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.067301785 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.061331777 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.069405601 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.069861716 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.068320483 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.064030578 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.06726852 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.067849886 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.071263761 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.070516376 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.064985881 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.0690822 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.06868728 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.068295756 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.062663155 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.073753385 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.066426271 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.069220131 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.066574475 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.067327325 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.068220912 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.069689789 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.070181531 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.066638639 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.067819359 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.06965624 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.068069919 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.063184351 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.06344583 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.071955015 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.063913501 seconds)
  done (took 42.238389493 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.101515931 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.063041285 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.061444144 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.060907095 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.073925669 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064274678 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.063289019 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.064127804 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.064863256 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.066756244 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.063284063 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063229063 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.072052965 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.079224192 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.075291281 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.068215369 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.063273276 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.064456157 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.063074694 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.064268373 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.071789687 seconds)
  done (took 2.800658473 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.07602352 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.070558318 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.071918823 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.075455901 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.067373729 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.072028661 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.073741515 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071967597 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.076942947 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068054184 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.07690215 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.070017931 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.066083458 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.066290986 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.065961727 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.069605375 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.0748321 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.066343752 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.069796108 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079763525 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.069806052 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.071380574 seconds)
  done (took 2.916757252 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.067823613 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.065406681 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.066230158 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.060964626 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.064736481 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.060464966 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.069273476 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.064589005 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.070535831 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.065023182 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.064263399 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.064034311 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.066968011 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.060737977 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.065134728 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.063021074 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.107228832 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.068018093 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.065124559 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.066140833 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.061499716 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.068877972 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.061092634 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.062517444 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.066387233 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.070271555 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.067942376 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.06491606 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.066786633 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.066394946 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.066614471 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.064614388 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.068582464 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.068097886 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.066736008 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.066381285 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.066547696 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.066935286 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.062286379 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.064985398 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.067368176 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.0628314 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.067431044 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.06838302 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.065361911 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.064812127 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.068123643 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.066486861 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.061906402 seconds)
  done (took 4.60375176 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.081683867 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.107297851 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.067003302 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088557582 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.081170295 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.075900642 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.070752818 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.088190871 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.063242749 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.06433975 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.080546863 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.078729139 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066845243 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.071437815 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.073753067 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.066838398 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0682759 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065728863 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.070516264 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.066216927 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.070826614 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.073111129 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.080884246 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.079576369 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.070354012 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.065692967 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.066286038 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.071645558 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.079364305 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.071630168 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.071243771 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.071952713 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.081593606 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.072042803 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.066088099 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.06862167 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.082571138 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.06686435 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.06902397 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.06453217 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.068761506 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.070954817 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.072807789 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.0824904 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.06697284 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.07155899 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.06618587 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.063629627 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.07874822 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.068735237 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.074036337 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.080516235 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070407357 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.066699631 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.070978502 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.081162556 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.066435079 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.064692778 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.069195655 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.07853422 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.06408496 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.070311571 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.07988897 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.068418596 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.073403513 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.080484481 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.071488461 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.069822079 seconds)
  done (took 6.436927657 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.075912856 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.070851723 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080149448 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.078491346 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.071349482 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.071778177 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071024481 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.071399487 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.0713721 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.076219641 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.0718202 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.091544044 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.066696183 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.073543067 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.071302917 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.071264977 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.071415819 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.070998076 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.0712442 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.071115133 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.071132129 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.079012278 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.071351603 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.079085753 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.097486709 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.066899928 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.070909176 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.071645945 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.078958657 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.071566121 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.078161811 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.071617891 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.071542432 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.07909738 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.078064564 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.070778691 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.064584557 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.071238039 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.071264722 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.071282001 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.066567794 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.078851202 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.071067697 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.066821892 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.07083369 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.070627756 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.078246595 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.078953677 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.075692248 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.077610057 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.071862806 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.079030922 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.072292236 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.073069984 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.080662954 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.105688832 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080768491 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.081033983 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.073001526 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.08088034 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.080514933 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.086446823 seconds)
  done (took 6.02590848 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.085235295 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.076450451 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.077747396 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.062577414 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.065236674 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.071400417 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.065328129 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.065578286 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.075562958 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.075772561 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.078229625 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07090578 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.074216897 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.078199917 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.071099861 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.073808663 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071034236 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.071286933 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.075847814 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.070736193 seconds)
  done (took 2.826389198 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.075763826 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.083769011 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.067620349 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.07338307 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.06965332 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.072716573 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.069333191 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070157806 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.067600815 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.068419292 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.074743707 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07509012 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.06596817 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.070722545 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.07467634 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07050766 seconds)
  done (took 2.511123483 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.076446395 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.073555027 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.080710881 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.067354017 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.065430878 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.06362064 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.066868143 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.062322793 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.063568344 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.07911804 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.067288014 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.069571296 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.067019671 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.065849543 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.063589302 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.069755071 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.063520152 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.064393027 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.066722526 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.079237819 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.077529516 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.065220768 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.06812862 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.066478454 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.067077422 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.071934749 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.06624655 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.064439473 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.064463109 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.067126841 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.067607415 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.070197315 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.064099106 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.06447206 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.065458366 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.064122657 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.066375934 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.06665878 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.06912832 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.066981873 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.064773684 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.066819497 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.066378397 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.067599406 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.063016779 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.067200798 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.063136667 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.068655997 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.064501438 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.067030766 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.066491392 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.069320759 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.067178063 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.073190368 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.07206247 seconds)
  done (took 5.086135841 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.080635144 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07052632 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063283016 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.064854505 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.069690671 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.068944141 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.070480041 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.068461577 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.069091135 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.065245365 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.068590327 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.06939348 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.068847417 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.07046627 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.069184762 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.070440139 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.062874141 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.068826519 seconds)
  done (took 2.610630371 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.07253924 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.067367867 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.073889257 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.067501741 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.066704204 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.068925841 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.063029867 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.06547221 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.065579761 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.067820093 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066850001 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.068742261 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.065454687 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.069192545 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.066738183 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.066584772 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.069336967 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.065901196 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.067029312 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.063138387 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.069478854 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.065515534 seconds)
  done (took 2.846695552 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.073517639 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.093498227 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.139487042 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.084669339 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.082873368 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.080099058 seconds)
  done (took 1.918188687 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091735683 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.080045498 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.066967656 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.088150747 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074202044 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068197405 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068590478 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.069128763 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077313474 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.077020342 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068317338 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077704805 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076749368 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07669413 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074238616 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07384397 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070906723 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068218017 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06723351 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.084833698 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068245119 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076693412 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068114495 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068016941 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.06847698 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.075960582 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076908475 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.077255929 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068422727 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076531715 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074034445 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068363283 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076810083 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077009336 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.06970868 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077250982 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068941098 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.08485471 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074280861 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076252308 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.06999661 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074345004 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077180751 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.0733756 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077222472 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068833679 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073407439 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06893574 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06895395 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.086910119 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074310097 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076346718 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07453674 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076877418 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076837326 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.087089142 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077331855 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076633806 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.074806804 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079775613 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076436783 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.0741989 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076161992 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.076882862 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.074310023 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076330953 seconds)
  done (took 6.307796907 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.083359468 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.087181429 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.069573504 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.078095312 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076692994 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068882204 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.06883191 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068917084 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068690037 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068284221 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108627235 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068966288 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.076954643 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077118045 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06875334 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.06877589 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068631376 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076404997 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068199749 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.087170687 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068735919 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.076092468 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.076768281 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076417107 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077383261 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.074270406 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068772111 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068518649 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068537108 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068649333 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073639135 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068663266 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.076553417 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068256926 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.07628303 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068705754 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068939535 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.073457162 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068631615 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073890461 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.076943615 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.085094919 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.068650823 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068489666 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.077115042 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.068625966 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068628862 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.068367002 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.068638522 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068143454 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.077089697 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.077310782 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07747719 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.076366535 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068826156 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.068568839 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.068467364 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.06864252 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068601258 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.074553549 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07627655 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.068141099 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.08650923 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068522794 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.068297222 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07638325 seconds)
  done (took 6.2174886 seconds)
done (took 129.347995269 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.187932537 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.169517899 seconds)
  done (took 1.709002923 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.070305561 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.09878146 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.07830053 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.129677958 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.06600044 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.09972867 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.098904393 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.077144761 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.066009938 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.065976666 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.065772007 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.068332865 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.130392878 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.065753886 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.065544915 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.068099366 seconds)
  done (took 2.680248234 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.099431778 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.159079672 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.098184327 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.064771572 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.0959011 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.071976964 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.063986918 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.07409232 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.070155151 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.064739987 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.072360396 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.069644387 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.064423658 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.069731267 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.069934243 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.072098244 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.064146277 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.071772749 seconds)
  done (took 2.786947769 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.103483793 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.092990327 seconds)
  done (took 1.572575535 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.15727606 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.104587312 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.14903553 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.342200383 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.164819931 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.228044724 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.12830972 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.126656485 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.12155765 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.122489336 seconds)
  done (took 3.012933686 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.099968756 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.150872479 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.253280986 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.113584804 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.07151807 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.094003008 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.115619172 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.076698354 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.08000411 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.079882396 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.079373204 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.075409229 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.097542108 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.072708805 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.072428544 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.075195619 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.100970403 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.071436511 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.073727335 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.07559792 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.09840477 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.064910151 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.072871377 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.071400175 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.076687224 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.076631987 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.064712246 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.065358809 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.076479114 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.074184446 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.076031325 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.092905876 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.076628279 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.105479464 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.069720236 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.106499256 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.075622439 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.072909261 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.072980879 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.072764214 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.077420703 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.07770046 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.071598068 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.075019701 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.064818843 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.075637839 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.065475435 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.064803254 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.077249124 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.066075458 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.077417696 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.076267394 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.105574092 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.065807372 seconds)
  done (took 5.93330963 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.104238094 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.103727733 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.070642379 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.10740595 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.096473327 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.070270513 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.100415495 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.090339055 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.101588016 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.091725714 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.087852367 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069919383 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.081392555 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.082141706 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.108883896 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.100914509 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.094130864 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.070156096 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.100874495 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.101304263 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.067789255 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.093674783 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.089863859 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.101330026 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.066689127 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.069520191 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.067567819 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.070236675 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.076747611 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.077478149 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.069134905 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.100751685 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.083100368 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.077174654 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.066672326 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.06756081 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067430983 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.078497874 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.096871117 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078251214 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.076719943 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.066928463 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.0671854 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.068814749 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.090125137 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.066897197 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.077919122 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.079292626 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.078057914 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068420666 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069442281 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.068537362 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.06855449 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079236628 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.076435037 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.079564273 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.079262748 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.067939598 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067596056 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.071325484 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.080190368 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.078185961 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077935327 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.091670474 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.078004399 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.067520176 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.07927326 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.083469126 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.06753461 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.069203069 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068203181 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.069085105 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.068966821 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.077125536 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.077429807 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06902797 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.068688481 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.067574309 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.078876847 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.077568313 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.067508361 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.076083202 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.066609918 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.068623449 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.069317663 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069466347 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.076932162 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.079208924 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.069303517 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.067460171 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.068576636 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.067996058 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.06621624 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.076070175 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.079267423 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.077719954 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.077940216 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.068516539 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.077284315 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.076627309 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.068290126 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.076945101 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.198581679 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069969041 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069236268 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.077760835 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.077275257 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.078294692 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.068900867 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.068451789 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.078446421 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.080617811 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.068330464 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.078034309 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.081437155 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.079356745 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.06726676 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.080177608 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067712431 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.079298133 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069758337 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.08005016 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.069321716 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.07815611 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.068775745 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.067760739 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.068034813 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.078613424 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.070069247 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.06873432 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.069496246 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069050818 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.078243514 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.082250031 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070757182 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.080643128 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.078815167 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.069595348 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.079201662 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.068580088 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.078785267 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.069342238 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.069243367 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.067175857 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.081433917 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.067808339 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.068434879 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069353232 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.080006081 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.068019316 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.078840805 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.077716612 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.066934204 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080705731 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.080021523 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.076629139 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.079749989 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.069498519 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.068295193 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.068311633 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.068919229 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.078676762 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.081376786 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072470809 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.070179147 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.081046454 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.082422828 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.068812432 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.080052934 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.079961668 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.080026174 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.07034241 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.071304477 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.081877102 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.083019637 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.079699763 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.080325803 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080687816 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.07003286 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.078942101 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.079912613 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.069732551 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.087698413 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.070100351 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.084693694 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.082025018 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.078796256 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.080879356 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.082396077 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.08303536 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.082347991 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.084927274 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.069064961 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.06977334 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.08143389 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.070210305 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.070967935 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.080034101 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.072265772 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.071871959 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.085748699 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068361919 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.079019177 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.066760569 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.076193767 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.065624679 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.068252334 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.214761091 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.068669033 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.070127253 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.079772455 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.069020884 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.077784956 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.080317129 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.078501246 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.068690794 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.070284099 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.082042595 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.079048118 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.069532083 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.070822561 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.072525717 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.080899495 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.079545639 seconds)
  done (took 18.774887188 seconds)
done (took 37.853474333 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.212647422 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.154968503 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.178035937 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.117148561 seconds)
  done (took 2.136592449 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.124651723 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.103378426 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.097266858 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.0666338 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.103963055 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.066538228 seconds)
  done (took 1.974103308 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.317101106 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.212979981 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.180558906 seconds)
  done (took 2.114945029 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.202250434 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.190137152 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.395988494 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.250830709 seconds)
  done (took 2.562656653 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.146277615 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.091262122 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.0686898 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.084895622 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.13798981 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.165367375 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.103492352 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.127636091 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.079804941 seconds)
  done (took 2.472437917 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.148517281 seconds)
done (took 12.818814575 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.166292674 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.219283097 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.197305211 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.116877539 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.103670262 seconds)
    (6/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.114098851 seconds)
    (7/309) benchmarking ("sort", BigInt, false)...
    done (took 0.194367186 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.084250388 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.199024561 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.098154914 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.119189795 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.110460863 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.072082568 seconds)
    (14/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.182097802 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.199289529 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.130831102 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.202654996 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.054020259 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.100178542 seconds)
    (20/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.15446314 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.079346854 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.066701503 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.201847777 seconds)
    (24/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.073662849 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.07501675 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.109695098 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.077381368 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.169193535 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.072305533 seconds)
    (30/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.172479142 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.077747992 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.099349432 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.091811724 seconds)
    (34/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.089428903 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.07157125 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.114161651 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.13892681 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.079754606 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.188903763 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.20540788 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.097843998 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.177031166 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.11632684 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.077746718 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.194892518 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 0.141954169 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.185452062 seconds)
    (48/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.073083441 seconds)
    (49/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.105857745 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.135019596 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.074995304 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.067881966 seconds)
    (53/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.072066606 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.072598907 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.1477426 seconds)
    (56/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.072672188 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.222233399 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.076196511 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.074758866 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.0528647 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.196279892 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.155373222 seconds)
    (63/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.120240828 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.1886158 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.062909058 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.068498029 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.073495392 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.070743972 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.091991797 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.073675117 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.092140174 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.070459239 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.085319532 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.062764989 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.070576669 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.052696515 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.191184752 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.050663358 seconds)
    (79/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.066050757 seconds)
    (80/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.095390969 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.286367651 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.068509603 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.151164597 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.050670099 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.051323766 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.089458659 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.065678105 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.110273374 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.18404894 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.066587735 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.061932941 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.184779464 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.091111854 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.078617605 seconds)
    (95/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.051384066 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.149282976 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.076843745 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.351093974 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.064932005 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.060473529 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.182715239 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 0.068473933 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.18379761 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.115170302 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.156542355 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.067832721 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.076879069 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.111870541 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.06733369 seconds)
    (110/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.053718278 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.100611222 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.067131755 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.080707647 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.142233211 seconds)
    (115/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.055022219 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.074240586 seconds)
    (117/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.119705282 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.142061738 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.150420942 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.068775917 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.153046009 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.053808384 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.061771939 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.066427492 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.072316121 seconds)
    (126/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.08238923 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.065861556 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.053378406 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.12361819 seconds)
    (130/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.067986794 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.129903372 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.092862787 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.150991966 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.064504752 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.078049744 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.098481805 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.071980336 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.136633507 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.070619436 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.08696615 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.110274471 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.161403114 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.122014679 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.053736459 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.083137915 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 0.135910491 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.075326395 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.06668317 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.073249465 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.072875301 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.088033386 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.071980027 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.072799726 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.052624519 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.082787321 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.069394545 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.078860045 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.151940524 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.079555505 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.073055026 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.144038618 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.066692816 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.073951716 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.076185576 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.065419815 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.077783825 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.129982636 seconds)
    (168/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.100655743 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.075402071 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.074333532 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.075163276 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.067379199 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.080109528 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.056615007 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.067597866 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.089733289 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.054169767 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.089669456 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.052690671 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.089898607 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.052454473 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.070217051 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.147360526 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.051077405 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.092696228 seconds)
    (186/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.088143098 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.171260478 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.068955919 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.072463436 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.229095878 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.074851425 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.088146123 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.071806816 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.061076389 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.186592243 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.053322351 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.075768951 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.067190225 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.067066848 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.174819131 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.123983643 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.053309649 seconds)
    (203/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.053380982 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.068028509 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.065604991 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.074054011 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.153624396 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.075176947 seconds)
    (209/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.053362066 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.077151287 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.054132589 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.073014252 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.073803578 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.068340666 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.067195352 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.071194183 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.073786401 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.075792067 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.073124342 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.05426135 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.087487749 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.077783613 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.068607921 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.074453029 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.067469186 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.052866908 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.072433036 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.137997367 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.072116664 seconds)
    (230/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.14990823 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.054286788 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.087863908 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.064886718 seconds)
    (234/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.054782248 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.066723362 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.097650764 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.067313579 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.138043408 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.176446575 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.155228989 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.084226392 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.05448394 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.053067047 seconds)
    (244/309) benchmarking ("sort", Float32, false)...
    done (took 0.128750173 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.09130323 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.092711958 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.055407194 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.067720076 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.106432162 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.051167996 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.066820541 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.05195517 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.064185907 seconds)
    (254/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.10832662 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.070721026 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.050730798 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.071751452 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.1675683 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.053432071 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.110696986 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.065493731 seconds)
    (262/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.052540622 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.065341479 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.073960039 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.087648607 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.067388051 seconds)
    (267/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.064954916 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.052920269 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.093484393 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.053083361 seconds)
    (271/309) benchmarking ("sort", Float64, false)...
    done (took 0.12680456 seconds)
    (272/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.053135689 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.052716315 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.067263194 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.065939235 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.074120673 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.065733755 seconds)
    (278/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.061399075 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.071530325 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.063131894 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.065701842 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.063335744 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.071725801 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.071690954 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.064607105 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.050761202 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.051243011 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.050895186 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.06521554 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.072068121 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.070618664 seconds)
    (292/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.054184477 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.052812128 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.066365364 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.053353705 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.090585013 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.088975152 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.068388679 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.090050999 seconds)
    (300/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.053234565 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.072065029 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.052978738 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.053988502 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.072621781 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.089414453 seconds)
    (306/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.063438835 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.05286352 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.053382206 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.089096556 seconds)
  done (took 30.89603347 seconds)
done (took 32.318811422 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.085784426 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.095924452 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.076721312 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.094867332 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.082405776 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.079299359 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.073929345 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.080050994 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.081437372 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.082999232 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.081252013 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.056746478 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.075142639 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.075820622 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.075581217 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.093130129 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.0791516 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.073720392 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.073799397 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.066345396 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.073714234 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.066829004 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.068190471 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.056119013 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.079193081 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.073081718 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.073972892 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.075342972 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.067630489 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.06700358 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.070567702 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.074397423 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.06697551 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.079750149 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.073180373 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.074082261 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.075849083 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.077322919 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.068413992 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.064795917 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.073190962 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.065016817 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.071326285 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.072078063 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.070492175 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.070038239 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.07192237 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.076649898 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.089761979 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06715917 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.073428645 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.074665956 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.07558672 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.071055775 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.068741033 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.071787892 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.069747505 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090006437 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.072306458 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.066747356 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.072900814 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.072562926 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.069849635 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.071522258 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.071722579 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.073796698 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.073838949 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.069873984 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.073782406 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.071729693 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.066583205 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.074333603 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.070155962 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.067090535 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.077177452 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.077726139 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.065777926 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.072193782 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.073019804 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.072993057 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.065830367 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.069262573 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.067975228 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.072665556 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069276233 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.055853527 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.069968149 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.07239076 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.065686872 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.073946823 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.072949939 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.073087958 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.06813762 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.076252681 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.066089525 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.071671252 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.066761776 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.066602911 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.068198529 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.070428245 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.066228361 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.067649574 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.074026081 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.067604398 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.072596847 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.080496417 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.066059419 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.072705154 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.065605369 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.065591027 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.080480876 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.075295232 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.06635677 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.068233218 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.063443492 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.071493867 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.063681816 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.065491583 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.06503821 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.06547113 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.072265152 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.066611604 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.06724557 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.071130998 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.076114052 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.063536704 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.067288229 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.065768681 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.063572659 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.068316747 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.064838238 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.064424256 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.20168421 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.061769635 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.06653735 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.065044765 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.071906224 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.067251076 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.07172285 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.065840304 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.073116003 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.070646605 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.072375581 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.072292643 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.065554032 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.060176824 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.069882856 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.069357776 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.066595153 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.066301137 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.068247035 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.065014665 seconds)
done (took 12.519797996 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.068167098 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.14481525 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.098363101 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.09591379 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.085469617 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.065695792 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.075108276 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.100111005 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.066379526 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.100988804 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.086229672 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.083419814 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.110749979 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.06406734 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.06492787 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.068582435 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.066124079 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.080092157 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.099635772 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.084967438 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.114474721 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.064426193 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.092718607 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.088842396 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.085677078 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.090721757 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.066054702 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.068582388 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.070531763 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.099948395 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.085253179 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.068478749 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.065455047 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.099040474 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.090691215 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.082394806 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.065315762 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.081102325 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.065315027 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.0647277 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.066451547 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.096492333 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.078235443 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.078656382 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.068649521 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.068207679 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.065831449 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.082423666 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.087428156 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.077687039 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.085001528 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.100801865 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.06797337 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.064555647 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.063797607 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.0842738 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.065227351 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.070235538 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.067548144 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.069197487 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.067305783 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.070123232 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.082977713 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.083227963 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.071350394 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.079279408 seconds)
  done (took 6.752147579 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.085270128 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.091925359 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.085127158 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.084643582 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.066764391 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.067635967 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.067747453 seconds)
  done (took 2.057146373 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.068581713 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.089970429 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.091019368 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.090700669 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.086399299 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.088997441 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07728968 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.067966877 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.082264871 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.069130266 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.088800417 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.104148886 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.068653453 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.074771509 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.092612954 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.067442738 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.089579524 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.066857999 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.070649425 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.091521804 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.069106558 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.082039771 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.068752524 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.065826259 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.079780641 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.065610519 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113067822 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07064564 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067005337 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.070061133 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065787198 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.108327571 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.081799088 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.077393774 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.067917084 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.08262199 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.082633321 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.066019759 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.084184493 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.073113394 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.081325047 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.06793786 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.068758594 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.065609997 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.072119292 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.078255098 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.0687 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.068118658 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.070207427 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.087154094 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.06857611 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.081234051 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.071029874 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.07028704 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.069320244 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.071739521 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.077279828 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.068324796 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.087740083 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.06896136 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.08466345 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.084040637 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.08126769 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.084292 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.0704985 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.081526101 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.081412198 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.070221014 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.069923174 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.071491022 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.084805528 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.066353918 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.069684189 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.078758336 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.069541294 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.091318395 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.091075017 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068756876 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.077299878 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.06626731 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.065625319 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.065815731 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.087806628 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.067816519 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.065249349 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.06943869 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.068347856 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.064251575 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.06488418 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.069945777 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.063875286 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.066868031 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.0680919 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.068589392 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.068075993 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.081729925 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.067837532 seconds)
  done (took 8.845339144 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071209856 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.069440498 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.071111037 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.069437013 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.069052895 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.069311201 seconds)
  done (took 1.949576582 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.096402775 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.070960968 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.079759075 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.071183354 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.10278782 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.085366424 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.085935169 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.077930998 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.08265806 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.077841963 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.085269964 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.087229348 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.091607599 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.071637532 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.085201574 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.071003092 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.085849453 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.074796719 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.077475869 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.072071609 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.085380935 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.071890538 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.072267699 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.082438295 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.07525361 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.071097877 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.066750759 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.07769248 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.077316881 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.077405364 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.071865594 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074516383 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.069455279 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.077193179 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.085401893 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.069496372 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.07113634 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.076223525 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.071698257 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.074597727 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.086807456 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.071962466 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.073732776 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.076459559 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.077398472 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.069379425 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.076056793 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.075122362 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.085115018 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076175168 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.075919842 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.070745074 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.074354543 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.076300633 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.069131777 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.076949482 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.075968664 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.085130579 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.07139726 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.069202892 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.068118359 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.074082867 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.076791011 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.074541895 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.077552772 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.075719707 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.069326542 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.071509874 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.071696481 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.071288926 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.075808744 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.067884874 seconds)
  done (took 7.026453337 seconds)
done (took 28.126593758 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.547293259 seconds)
  done (took 2.041946618 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.60127743 seconds)
  done (took 2.123811696 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 6.637924654 seconds)
  done (took 8.156632512 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.405953684 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.478089179 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.68656344 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.130177674 seconds)
  done (took 3.26421365 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.673806076 seconds)
  done (took 2.204266397 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.213906334 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.196207845 seconds)
  done (took 1.948847299 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.381102701 seconds)
  done (took 1.897648349 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.109757192 seconds)
  done (took 2.626746264 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.265443902 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.164468428 seconds)
  done (took 1.952653925 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.473493528 seconds)
  done (took 1.993394651 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 4.861788145 seconds)
  done (took 6.384408194 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.217327505 seconds)
  done (took 1.784061623 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.244254924 seconds)
  done (took 1.76454952 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 1.716473629 seconds)
  done (took 3.240256137 seconds)
done (took 42.911332816 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.082088999 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.08355261 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.080435953 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.076568812 seconds)
  done (took 1.829182173 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.078373325 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.073909763 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.076739895 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07103584 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.076080184 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.071492007 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.073266719 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.075824808 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.071165443 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.071728104 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.071619282 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.071538097 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.073533229 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.073180372 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.069967299 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.073657642 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.074849583 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.071262941 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.074579468 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.071464844 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.069507748 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.073452857 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.073775229 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.07113682 seconds)
  done (took 3.278427847 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.079730131 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.074068221 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.075746617 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.070277282 seconds)
  done (took 1.830196032 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.079409143 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.094186458 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.088735121 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.076594186 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.091083519 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.085282752 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.0682285 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.068405173 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.071735312 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.07591136 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.066541743 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.094593545 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.086520294 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.075630956 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.077888189 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.064834507 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.067365386 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.085604121 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.075938866 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.076194502 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.068637887 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.07600555 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.067125563 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.086779538 seconds)
  done (took 3.394053108 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.079430093 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.103762179 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.076059107 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.086280538 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.08896783 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.064354497 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.073197366 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.087769435 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.121177363 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.064218691 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.069629332 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.064347555 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.071379461 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.064372028 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.074926305 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.102691454 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.106605129 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.06750167 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.094611638 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.064606221 seconds)
  done (took 3.163027994 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.074883988 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.070884143 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.067175982 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.06959934 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.077821492 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.071740203 seconds)
  done (took 1.969238022 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.069785999 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.068134515 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.068769212 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.067941512 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.07369797 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.068346784 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.067525781 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.068744226 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.068585427 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.06856096 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.068007329 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.067198775 seconds)
  done (took 2.359821592 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.422759078 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.067712855 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.068353173 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.065212097 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.069665681 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.065575929 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.079329753 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.067392525 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.091226598 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.06698595 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.067574191 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.069766731 seconds)
  done (took 2.737304213 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208347656 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.07776695 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239718651 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13904684 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.11320666 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113913703 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.102576063 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.111055423 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.140857991 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.100350675 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165260628 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165039262 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.105287405 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13549758 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.08793477 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.098896411 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156156504 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162413458 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10544532 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.168030312 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146339137 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126435374 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.14935579 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.103477006 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107861409 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.123854266 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.072660076 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.081843533 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17189534 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132618171 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.147970029 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.112115413 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095432052 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.175685583 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169716538 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144067611 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134331946 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083080719 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.100757377 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.132121336 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.19553248 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.087169993 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.159458924 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.244963363 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.080105562 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131566983 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119224929 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.118725379 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.107952421 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.091340491 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.148659722 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.184756316 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.140901687 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.088909288 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114347116 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117784345 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.117620645 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.105676232 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183415903 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163250092 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12923218 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.07333452 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.100642083 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156634614 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.133295127 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.110411019 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.129008325 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.095474116 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135377922 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156434594 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.118178997 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143098201 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.130689744 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.090199723 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119481274 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.138679717 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126389293 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167741011 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122546965 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.071454255 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122698094 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10186 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079885503 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.140901551 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.074305965 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173138607 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.09719987 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.105179327 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.110871921 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107335261 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.107048806 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.157945425 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142282922 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.246355457 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.065228323 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102167628 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.118733474 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145664369 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086859202 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107049044 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11475125 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.076205863 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13827233 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.073305514 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.122119525 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.074678702 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.124160732 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.129983074 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.074612225 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.119473569 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098827399 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.098842899 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1308344 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156835639 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087766387 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081428943 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165106894 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120543045 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.103239396 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.141541964 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.153873818 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.09742139 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.100576581 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147856677 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178811526 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.091731467 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165334525 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109791121 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.086089241 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.088116278 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.121880685 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111384887 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.120873201 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081327995 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.117186482 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.165776629 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.074128424 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.094736741 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131942801 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.077818576 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.079818751 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102262026 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09922439 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.093868217 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.098878689 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.102640509 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135458134 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120619206 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.102726142 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.268612846 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.097995 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168319916 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.087790401 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.099560041 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10301049 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.069389676 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.13642432 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.154212999 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.078424524 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.162020173 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.121843802 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103720723 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118244411 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082144838 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13952774 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.080516967 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.071903531 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143889032 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110207865 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111990178 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.152815463 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106170121 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.127744269 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.121798824 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136996852 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134288047 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.130508148 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107233361 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.089511421 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113680773 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.128825419 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.074413583 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.093437538 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.081824821 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10553604 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094646743 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.081915655 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.140637516 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.122705968 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.098658413 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.109965786 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095190807 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.144739238 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.0756799 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127498544 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.117743246 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.092674805 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.150298114 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149383314 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.129116169 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.097671914 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.142048405 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0691775 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.072561238 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.087726844 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.119312645 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.080417823 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.08118798 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.112275673 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141034953 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.123991289 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131153312 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107666299 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116563648 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150013616 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.067345751 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.112111372 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140429331 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115136499 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.101121379 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086487347 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.095583437 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136705976 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103420575 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.171598565 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106789285 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118334255 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.143092837 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.095508886 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.079455204 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097823334 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.12607987 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.097100759 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.133245373 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.094278768 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082324476 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10283386 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.071195319 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092319877 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118126853 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111163541 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.125640377 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.107595777 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122629868 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.073101714 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.108182669 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.112784928 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.112425882 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.061480869 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111580713 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147757077 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.088007279 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.110889096 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141346118 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.075429566 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.117933798 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.421832368 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.146655775 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.084919389 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109895641 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.118550494 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127565949 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.120360219 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139044036 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.107285245 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.134290644 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.108955538 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.084565178 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087264825 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.097183205 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.104048792 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.093835859 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.106723433 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.113004466 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.093853673 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131758426 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.103432423 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.108476332 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11764109 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.095149395 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.088859607 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.09705165 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.174720902 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117684158 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168154629 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.097357511 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.143392066 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161131135 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.073579489 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.078150635 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.077297593 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.138197022 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.082293922 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129207235 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.096478548 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.103680886 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.122813194 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139720937 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.093421969 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.067247689 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106885331 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132397863 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.109880115 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.096493291 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.103115461 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161251039 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.099043813 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.077898884 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111822631 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.102528669 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.100061292 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.169494973 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.205575789 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.097318068 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.075551779 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.079190484 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.125863795 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.15163885 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.079430951 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.102810162 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118568256 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.109145768 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.125634336 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099902764 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.098106329 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.113294139 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.147643165 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.127145434 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.088754847 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1106862 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.127596456 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154470577 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.10394533 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.094773483 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.170188404 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154334076 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.162795661 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.090762465 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.116180644 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131133364 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.106632242 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137551925 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.082338794 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161312824 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081419845 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137530906 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.103586604 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.088635848 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128482407 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.097249044 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.086849243 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145481351 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.115616119 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081159166 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.076945518 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.116569228 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.119062778 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105237162 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.074754319 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139596836 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.073429718 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129220627 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165522182 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080008306 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.105290723 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.095428007 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.079394229 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105799874 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.099588803 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.086793403 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.097153049 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.1693686 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.085876368 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.145321628 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.135697176 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108391432 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.13057972 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.096368028 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.631916915 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.074736303 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146176944 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.111485377 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.164442326 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.093377795 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11271482 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104858331 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1176339 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.137894611 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099958682 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.173087499 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.12527125 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.110992627 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.077198138 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.098096233 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.098061779 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.084850115 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.100993236 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.10918905 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.111146758 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.089380375 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.110574652 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.117482034 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.079044036 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.094102342 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.148784517 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.111711123 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136855138 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133824489 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.08151629 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.11258296 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.131937606 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.07700404 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.116322263 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.145124192 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.101685479 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.094362591 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.077351474 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.356987282 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.168314077 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.073680884 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.163268478 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.119969245 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110061325 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112763779 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.114199327 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.131586746 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.108465276 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.120799134 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.093065437 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.109776681 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111182817 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.081170414 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.076398678 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103759571 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.110638788 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.096486717 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.097311073 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.096472194 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.149639444 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.070876824 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094369732 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.101788803 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143079477 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171890237 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.087530781 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.081881361 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117160085 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.111489966 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.111670826 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118872641 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.078310499 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.080652053 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.080574085 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.076346175 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.107124494 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.110431647 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.102380583 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109339608 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16101959 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.081353139 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.222561148 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.093572102 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.10285096 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.068342816 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.077080016 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.094579612 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.095960545 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.106448777 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.098901449 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.167826336 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.093386303 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.088808735 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.092693835 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.072257314 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.081964982 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.271787117 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.108848182 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117091239 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.095545083 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.061823426 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.10684836 seconds)
  done (took 57.982490927 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.110155813 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.081990431 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.095003533 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.148565211 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.120221952 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.210436413 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.155896764 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.197754547 seconds)
  done (took 2.799672159 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.069595342 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.094351375 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.098608847 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.081700936 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.065833556 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.068076112 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.222633289 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.079928288 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.065673869 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.087181193 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.078488486 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.06846251 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.418281255 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.065959743 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.067414699 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.062209521 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.067789955 seconds)
  done (took 3.432446388 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.362787115 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.363144218 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.368099979 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.072151844 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 2.811819521 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.087295447 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 2.08141626 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.095081866 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.069944224 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.266006149 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.702615182 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.091159021 seconds)
  done (took 14.052451981 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.077503134 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.070806194 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.086166821 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.085462475 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.074002106 seconds)
  done (took 2.068204359 seconds)
done (took 102.460136179 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.081371089 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.391034705 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.052699369 seconds)
  done (took 2.149333734 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.084381286 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.086438944 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.086470403 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08541341 seconds)
  done (took 2.028538964 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.07572363 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.077118589 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.084627408 seconds)
  done (took 1.915602021 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.220252924 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.140520683 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.088530049 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.083480713 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.07770815 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.077241468 seconds)
  done (took 1.924505724 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.073654112 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.076005291 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.07046706 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.074751565 seconds)
  done (took 1.974423445 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.077708458 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.053691626 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.056329476 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.056731964 seconds)
  done (took 1.92272611 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.087074048 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.079261687 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.077372206 seconds)
  done (took 1.924926108 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.109806666 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.084611279 seconds)
  done (took 1.874615496 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.082562078 seconds)
  done (took 1.763982782 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.098864842 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.111245235 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.126460808 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.10745319 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.135120818 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.10728227 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.084565122 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.085668502 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.076124439 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.086242245 seconds)
  done (took 2.697312127 seconds)
done (took 22.383307073 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.079997314 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.365048116 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.359146852 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.089247369 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.667401361 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.355122519 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.976170201 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.09031269 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.111533427 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067031455 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.08257897 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.64827542 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.964121877 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.319220142 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.952681674 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.322189369 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.709263867 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067021187 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.066660784 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.066960737 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.960015258 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.066894711 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.066789503 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067141492 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.65300839 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.369234804 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067267375 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.32138007 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067043743 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068596664 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.353837373 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067312093 seconds)
  done (took 16.151201531 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.072877982 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.116896534 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072324592 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.082301832 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.069630902 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.068275567 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.070438148 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.067723349 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.117902608 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.067156379 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083564905 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.066947718 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.070893568 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.067725457 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086311861 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.066872824 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.067799396 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.06768217 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067116178 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.067577584 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085236564 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067062795 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067110781 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067286853 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.066730101 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.078584314 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067000251 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.066962243 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067162092 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.068954718 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.0704564 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.06801341 seconds)
  done (took 4.05853399 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.115881483 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.124538462 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.072752524 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.102220149 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.110916649 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.069077686 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.141482721 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.091649124 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.126314484 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.06734988 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.083525836 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.067483746 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.099642731 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.06793759 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.086636204 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.067453249 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.068036538 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.067902304 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.067984229 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.068160783 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.085747892 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.067312899 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.067607088 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.067638697 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.067710532 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.080564045 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.067661134 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.067675068 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.067387293 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.069599136 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.070315796 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.067922787 seconds)
  done (took 4.312941415 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.073615611 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.074535191 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.081229007 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.081698291 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.068160096 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.070969138 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.071930062 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.068816141 seconds)
  done (took 2.290366251 seconds)
done (took 28.499641775 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.079693881 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.068707178 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.071625743 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.080196343 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.072566755 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.077725821 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.066139288 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.073529038 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.071667667 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.071822203 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.074073632 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.066528033 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.070366979 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.066726262 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.072478154 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.06671517 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.078486376 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.071012517 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.078295102 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.07867031 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.068833812 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.071967306 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.073093937 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.078046762 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.078459577 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.077936026 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.076226973 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.072313635 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.068224775 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.069581511 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.07586962 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.082661163 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.067659579 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.077849002 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.066937399 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.066592349 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.070465139 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.066559406 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.078057574 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.075445833 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.068515758 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.074865615 seconds)
  done (took 4.737444428 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.090043693 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.092744538 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.084594614 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.063069051 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.069168291 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.064256426 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.087286008 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.058912696 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.058968233 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.086520131 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.055177345 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.058547222 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.06161542 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.0536066 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.058381885 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.055974761 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.061093524 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.055190409 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.058245576 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.05874858 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.057372129 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.054092724 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.059307792 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.06412412 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.055674144 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.061252884 seconds)
  done (took 3.389847094 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.07539932 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.08309194 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.08746773 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.126344741 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.102785022 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.076291435 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.077508974 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090909049 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.084955013 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.066287828 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.070218147 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.092989805 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.087104641 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.073241987 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.066985339 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.083460713 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.091819337 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.068646823 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.072702997 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.089681675 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.083529077 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.083083156 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.091751546 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.080318715 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.066449234 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.068839725 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.070598365 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.079956757 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.071541365 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.075436101 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.070564475 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.069889183 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.069024422 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.077494307 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.070185105 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.068021527 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.089222474 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.075943358 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.076545027 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.066850838 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.069834263 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.067502635 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.08797688 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.120925949 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.068652483 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.075968762 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.077475971 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.078374999 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.068735926 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.085803378 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.077757433 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.065933372 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.069634381 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.065793622 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.066426764 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.079376067 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.068381288 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.068714771 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.075388629 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.069458219 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.084548579 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.07062717 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.081245743 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.065987231 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.074096433 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.065698419 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.067068755 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.065579137 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.090719012 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.068188567 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.106130431 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.0673358 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.067303868 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.075065978 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.074024293 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.072665173 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.066576316 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.081190625 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.07650976 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.070043291 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.074830687 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.069952927 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.069183307 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.086857754 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.069593494 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.068121795 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.067446455 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.07276983 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.069269897 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.06801611 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.079104721 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.066892454 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.069243076 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.082601456 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.066423128 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.068059963 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.073037626 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.071894723 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.06636135 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.07750389 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.071440357 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.067429846 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.076029159 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.066778374 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.069458001 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.076759751 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.072591959 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.06578502 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.071186903 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.072675226 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.067529768 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.068184983 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.069908235 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.068365604 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.076053337 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.072900872 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.071078728 seconds)
  done (took 10.522198407 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.161807646 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.154895186 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.071270996 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.143730308 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.077734959 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.080773533 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.150214388 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.09693368 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.069299847 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.069936035 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.070006961 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.109571043 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.108288408 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.122718269 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.080502984 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.069616242 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.085258993 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.116123466 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.147019788 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.140663833 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.082477905 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.07541901 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.068761865 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.068187128 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.069567304 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.076997127 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.084014002 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.075821084 seconds)
  done (took 4.464665225 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.081811473 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.096789757 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.072845067 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.088144318 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.089127765 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.066941621 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.068754396 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.068413768 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.079089635 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.077638745 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.067053542 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.07257215 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.074053445 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.070330622 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.067624021 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.074096762 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.073845736 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.068471331 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.070271049 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.071583882 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.076681034 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.079390744 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.070250289 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.06619085 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.072730214 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.065960595 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.063534049 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.083365139 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.067136872 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.088889412 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.064748472 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.074012727 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.080337581 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.067407107 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.066332598 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.066740679 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.06678312 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.066378531 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.068589868 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.065293193 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.065285525 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.056991767 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.065807691 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.078136446 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.072586429 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.056193857 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.071651639 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.073501453 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.071852333 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.064634035 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.070149714 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.069376597 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.06999456 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.07351098 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.071866668 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.071603074 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.067710475 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.065145583 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.074602921 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.066602095 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.063887959 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.065449784 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.070886562 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.064890943 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.074143425 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.071000216 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.065304287 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.066199882 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.069928877 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.073326656 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.066189532 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.069481555 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.064332069 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.068292264 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.07077106 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.068185331 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.067381781 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.064897439 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.066255451 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.066872987 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.054606449 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.06624416 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.053018222 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.069646791 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.064831791 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.065359115 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.066053337 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.071097262 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.078536842 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.067787652 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.072454845 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.067720782 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.065606084 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.06955271 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.059388285 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.068995466 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.081450078 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.081500243 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.066329322 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.064953804 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.080958476 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.070969021 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.065718066 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.05522298 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.073938541 seconds)
  done (took 9.092752776 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.09572358 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.08707979 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.068736848 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.082457935 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.089197019 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.084516631 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.07378076 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.075927265 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.068485065 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.081752627 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.072843332 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.075675355 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.067771294 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.076150819 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.091536894 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.075707101 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.06896822 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.075658237 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.070867568 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.099139639 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.081571904 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.080877989 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.073569023 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.0673505 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07469694 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.078723924 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.088232678 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.078774206 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.077370908 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.074499825 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.078923796 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.087712642 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.072805582 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.071750112 seconds)
  done (took 4.416392671 seconds)
done (took 38.316058043 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.778562163 seconds)
  (2/12) benchmarking "fasta"...
  done (took 2.038928577 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.77614987 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.196439768 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.854859855 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.955053702 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.835261397 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.768876219 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.894928653 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.808507013 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 3.017799298 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.835027798 seconds)
done (took 65.479818243 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.856387929 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.913608814 seconds)
    (2/2) benchmarking "String"...
    done (took 2.041800187 seconds)
  done (took 5.661668003 seconds)
  (3/5) benchmarking "replace"...
  done (took 3.099565142 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.384293495 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 2.008776968 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.764534797 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.768212391 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 3.068798498 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.575662416 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.296080665 seconds)
  done (took 30.571320957 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 5.05423427 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.974737398 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 3.471641379 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 3.511412401 seconds)
  done (took 15.775084734 seconds)
done (took 63.754317511 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.793927687 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.810703117 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.790347697 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.747150758 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.82301577 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.771338697 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.835497249 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 7.994693264 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.761726319 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.751770318 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.762897135 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 5.183743401 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.773154004 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.964357766 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.759555523 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.766256072 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.792408734 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 7.209627468 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.919642487 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.770343511 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.783238709 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.799741455 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.764948738 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.765760214 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.771499536 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.761817176 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.193280534 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.769976219 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 2.581236832 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.763841534 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.803974031 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 7.138769901 seconds)
  done (took 204.582461271 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.763222767 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.707045878 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.798297511 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.776826434 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 4.148172824 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.956477259 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.896750519 seconds)
    (8/36) benchmarking "gemv"...
    done (took 4.212334198 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.762260797 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.76542814 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.925881584 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.764299443 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.943697099 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.714989084 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.771088606 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.768810164 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.943283563 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.961136623 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.763732439 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 3.032468289 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.786090471 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.813697178 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.751749694 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.911606833 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.784319572 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.786293723 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.780862257 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.776372449 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.950896977 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.920609719 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.766897299 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.784893872 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.964893246 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.636508104 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.776664949 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.761609001 seconds)
  done (took 169.032544891 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.900300244 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.76230911 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.762503066 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.763148211 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.769151222 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.762272595 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.886512085 seconds)
    (7/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.890332776 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 2.219710457 seconds)
    (9/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.814483434 seconds)
    (10/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.810166387 seconds)
    (11/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.589745859 seconds)
    (12/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.759699 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.831865526 seconds)
    (14/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.774141616 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.760770693 seconds)
    (16/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.78023807 seconds)
    (17/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.791745743 seconds)
    (18/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.762514568 seconds)
    (19/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.761277116 seconds)
    (20/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.886998657 seconds)
    (21/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.773755917 seconds)
    (22/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.75735251 seconds)
    (23/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.768154937 seconds)
    (24/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.762863637 seconds)
    (25/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.768522989 seconds)
    (26/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 2.13317259 seconds)
    (27/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.762581845 seconds)
    (28/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.771446913 seconds)
    (29/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 2.008816126 seconds)
    (30/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.762330849 seconds)
    (31/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.762923254 seconds)
    (32/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.666306587 seconds)
    (33/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.150248314 seconds)
    (34/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.851401716 seconds)
    (35/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.762619183 seconds)
    (36/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.769009942 seconds)
    (37/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.766472582 seconds)
    (38/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.983035817 seconds)
    (39/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.762267084 seconds)
    (40/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.763987584 seconds)
    (41/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.764224538 seconds)
    (42/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.945250164 seconds)
    (43/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.760520063 seconds)
    (44/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.888867648 seconds)
    (45/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.761164899 seconds)
    (46/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.262612005 seconds)
    (47/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.761268989 seconds)
    (48/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.764013855 seconds)
    (49/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.85920766 seconds)
    (50/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.427766756 seconds)
    (51/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.763521858 seconds)
    (52/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.763068023 seconds)
    (53/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.767553268 seconds)
    (54/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.764283172 seconds)
    (55/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764163119 seconds)
    (56/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.764321284 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.769230837 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.690298048 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.83480514 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.763119315 seconds)
    (61/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.766619133 seconds)
    (62/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.76945297 seconds)
    (63/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.765535737 seconds)
    (64/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.910809102 seconds)
    (65/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.761625936 seconds)
    (66/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.580210878 seconds)
    (67/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.82384459 seconds)
    (68/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.980994139 seconds)
    (69/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.887893676 seconds)
    (70/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.764061509 seconds)
    (71/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.834167616 seconds)
    (72/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.856558284 seconds)
    (73/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.765020578 seconds)
    (74/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.76390444 seconds)
    (75/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.765503276 seconds)
    (76/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.76550156 seconds)
    (77/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.846767501 seconds)
    (78/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.765246424 seconds)
    (79/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.766261768 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.885728706 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.771199595 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.768175199 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.815275122 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.836365065 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.763854763 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.662259281 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.76682068 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.766616197 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.076048971 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.831635887 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.762737601 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.764292656 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.765301468 seconds)
    (94/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.889187464 seconds)
    (95/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.88568799 seconds)
    (96/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.556452751 seconds)
    (97/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.765877592 seconds)
    (98/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.966664491 seconds)
    (99/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.777127173 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.766107136 seconds)
    (101/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.765522076 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.901952782 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.764599141 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.95901123 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.767116402 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.848244632 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.769230339 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.769101244 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.767388346 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.798510447 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.768251313 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.829550793 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.765739781 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 2.138401783 seconds)
  done (took 400.793560277 seconds)
done (took 778.0775164 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 2.462270617 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 2.418779979 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.523581748 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 2.436444352 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 2.418831479 seconds)
  done (took 13.965221064 seconds)
done (took 15.673045824 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.852574695 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.856110511 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.791115132 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.855764611 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.785590614 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.855665751 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.836370675 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.79231323 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.82245996 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.79331627 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.825624577 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.792501514 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.778697556 seconds)
  done (took 25.344358722 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.994397296 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 2.001344808 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.837071889 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.001303837 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.810929554 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.994926385 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.925480925 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.916443321 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.917791849 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.783229752 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.781406481 seconds)
  done (took 22.670729531 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 2.001256973 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.999936269 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.838589377 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 2.00318625 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.814356252 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 2.004732491 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.926381072 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.919174136 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.916314889 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.782605762 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.782666189 seconds)
  done (took 22.697222838 seconds)
done (took 72.418767176 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.778284029 seconds)
  done (took 3.485918295 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.799560716 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.939214242 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.783493412 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.780620371 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.778593356 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.779390782 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.78106531 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.778814716 seconds)
  done (took 16.13106594 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.773367473 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.780102222 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.778980052 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.776533932 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.77904621 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.77630493 seconds)
    (7/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.779089911 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.779372952 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.780567324 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.77955528 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.776087359 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.773363941 seconds)
    (13/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.774827844 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.777207728 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.77734154 seconds)
    (16/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.776164496 seconds)
  done (took 30.148450183 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.77811532 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.775497619 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.77562202 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.776681627 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.774262505 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.77617512 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.776026667 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.775935839 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.774992209 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.776017968 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.775763756 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.77554212 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.776567059 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.776634493 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.777187596 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.777093365 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.777730705 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.776562467 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.780769446 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.775408684 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.778251899 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.776968801 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.778781857 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.778119662 seconds)
  done (took 44.351533212 seconds)
done (took 95.826084022 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.484309153 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.205790089 seconds)
  done (took 8.400561801 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.781963893 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.78028856 seconds)
  done (took 5.304721244 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.780283866 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.78101314 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.781402179 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.782100595 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.782033542 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.780636614 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.780869094 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.780799617 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.782294358 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.780695438 seconds)
  done (took 19.525450299 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.780437107 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.781665553 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.778705309 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.78182407 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.781536975 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.779255836 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.78184541 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.781825005 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.781733762 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.778782967 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.782826578 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.779641388 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.780892874 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.778813634 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.781346398 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.778507593 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.779880667 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.7808668 seconds)
  done (took 33.763513648 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.782302492 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.782249159 seconds)
  done (took 5.277210886 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.778856425 seconds)
    (2/7) benchmarking "second"...
    done (took 1.778885029 seconds)
    (3/7) benchmarking "month"...
    done (took 1.778822488 seconds)
    (4/7) benchmarking "year"...
    done (took 1.779658708 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.780579612 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.781228182 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.780748851 seconds)
  done (took 14.171641952 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.783923943 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.942554222 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 2.013211319 seconds)
    (4/9) benchmarking "Date"...
    done (took 2.469297012 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.78289695 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.786034479 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.702714695 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.785985736 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.787756098 seconds)
  done (took 19.768225486 seconds)
done (took 107.923773432 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.583872988 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.779430712 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.159952459 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.817766695 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.795709442 seconds)
  (6/8) benchmarking "fib"...
  done (took 2.077996825 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.782801741 seconds)
  (8/8) benchmarking "mandel"...
  done (took 4.003133791 seconds)
done (took 42.715683596 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.77815069 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 2.344549088 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 2.631711383 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.275029641 seconds)
  done (took 12.966734358 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.76758171 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.310402083 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.823857472 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.44942188 seconds)
  done (took 20.098551666 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.152592048 seconds)
    (2/2) benchmarking "read"...
    done (took 2.145123377 seconds)
  done (took 6.022696535 seconds)
done (took 47.58301976 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.785885444 seconds)
    (2/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.787474977 seconds)
    (3/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.787700237 seconds)
    (4/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.784620213 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.786763827 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.787609699 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.785612944 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.785522392 seconds)
    (9/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.787995046 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.789084889 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.787994177 seconds)
    (12/24) benchmarking ("zero", "Float32")...
    done (took 1.789232162 seconds)
    (13/24) benchmarking ("one", "Float32")...
    done (took 1.788843973 seconds)
    (14/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789523796 seconds)
    (15/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.785819648 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787531437 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.789751662 seconds)
    (18/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.786246647 seconds)
    (19/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786180857 seconds)
    (20/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.788217538 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.786990579 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.788311448 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.786184671 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.78666291 seconds)
  done (took 44.614043528 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.789476309 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.787334988 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.790132423 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.788577881 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.787498372 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.790427535 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.789124317 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.788121918 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.788359271 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.78939182 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.786380447 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.785708439 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.790632833 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.786759449 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.789424748 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.787430938 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.789924778 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.787610829 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.792150697 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.787726283 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.790229698 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.786541308 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.78787135 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.792016491 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.787297487 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.787598454 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.790180551 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.787491688 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.790873534 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.789587801 seconds)
  done (took 55.382694608 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.79476656 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.797900235 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.789730139 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.79042096 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.792458374 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.790495728 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.791108804 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.792561579 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.790091483 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.792583092 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.790854668 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.793237172 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.792466784 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.791500437 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.789072843 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.793460452 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.792411381 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.791039507 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.793557598 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.791506788 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.794273603 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.790615229 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.792645206 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.790933054 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.791079084 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.790786583 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.791512431 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.792359957 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.791077212 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.792012389 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.791216074 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.795248035 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.791481132 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.791564153 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.792539233 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.792086537 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.796382134 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.801743583 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.792888747 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.792233869 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.793599279 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.792850166 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.792357718 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.792987022 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.792133614 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.793164702 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.794127463 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.793341127 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.796062869 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.792648728 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.794217956 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.79387767 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.792780034 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.793334385 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.79599944 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.793183597 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.79464727 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.794069668 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.793596038 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.796863546 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.794514411 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.793357232 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.794153253 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.795507037 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.794563051 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.795459767 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.793364936 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.794330684 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.794220153 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.794971356 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.794084605 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.795025603 seconds)
  done (took 130.829406863 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.795161983 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.791583431 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.791159278 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.793823345 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.790886275 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.794249629 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.792257328 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.794605357 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.791713412 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.796022188 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.793829076 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.791786248 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79336241 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.795668689 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.795867959 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.792448372 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.795673046 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.791989106 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.795398425 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.796715182 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.795223322 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.793895671 seconds)
  done (took 41.188228812 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.795975546 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.795659048 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.793454329 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.796429011 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.794132818 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.795073496 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.796913008 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.795297078 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.796681254 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.793479189 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.793266456 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.796729009 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.793961747 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79293198 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.795427768 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.794918286 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.797035327 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.795354321 seconds)
  done (took 34.039439443 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.794116571 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.795099865 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.797138133 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.794630057 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.795266541 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.798686819 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.796539263 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.79714488 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.798238122 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.794817488 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.79599865 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.799518726 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.798005182 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.794579029 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.799146886 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.795559112 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.79817866 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.79583726 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.796602818 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.794573705 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.795373162 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.79777196 seconds)
  done (took 41.250360379 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.797781069 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.798449481 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.795352534 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.795312224 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.79458716 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.799169865 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.798336678 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.795677449 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.799474065 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.798454363 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.795001358 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.800155729 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.796908657 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.798168311 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.795677482 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.796759439 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.800689363 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.796561314 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.798763418 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.795348729 seconds)
  done (took 37.678044507 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.798832848 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.802893061 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.800518147 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.800503349 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.801700674 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.802004531 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802500481 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.799549529 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.802002911 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.801930678 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.799957047 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.80144623 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802964084 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.801360897 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800946096 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.800699633 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.800899006 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.803216973 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.801887442 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.802653086 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.802160696 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.80172107 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.801606146 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.804821663 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.801684014 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.802194268 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.802707812 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.801688102 seconds)
  done (took 52.177832641 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.802083325 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.800872741 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.797761284 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.79887393 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.79784783 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.798674041 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.798494882 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.798610226 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.801881478 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.797916919 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.801081397 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.801238627 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.801121447 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.800501748 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.801765375 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.80124475 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.802160087 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.799376411 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.798663097 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.80001224 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.801776291 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.801711018 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.80320958 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.799272165 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.800484249 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.803178113 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.800144665 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.801058358 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.80301019 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.798708572 seconds)
  done (took 55.744946404 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.821173134 seconds)
    (2/2) benchmarking "in"...
    done (took 1.821120966 seconds)
  done (took 5.374579914 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.798719189 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.803338788 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.802063472 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.799929075 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.800162816 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.802141301 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.802640004 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.801052519 seconds)
  done (took 16.143187162 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.803215467 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.803544318 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.80484078 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.803232359 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.804313571 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.804416285 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.810350355 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.803118772 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.806026531 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.805263917 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.808881914 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.813163669 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.807472736 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.803681938 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.804035119 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.805411087 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.802715976 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.805475094 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.804558342 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.804083766 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.805772237 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.805875278 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.804794966 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.803587381 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.805097193 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.815637349 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.809704033 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.80349131 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.804141883 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.813290689 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.803182643 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.802132965 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.804974037 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.804438903 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.804306658 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.805703738 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.81504385 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.80520399 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.812463593 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.804581335 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.804755385 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.80171411 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.805888501 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.807410378 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.806099255 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.806207481 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.80513746 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.802207706 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.806305387 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.809734784 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.810568863 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.805344295 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.803414907 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.813586056 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.807039939 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.814172579 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.809027854 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.808740799 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.814917372 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.818001931 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.820452438 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.815294122 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.809500549 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.807676471 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.817311776 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.831082887 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.814739576 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.806378012 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.803785821 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.806710705 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.81634539 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821199279 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.815969068 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.809479117 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807177104 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.808614747 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.809718865 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.807894943 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.818222555 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.809922278 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.808695844 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.807650837 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.817930147 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.830059421 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.809050293 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.807998019 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.806943483 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.809354091 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.808246247 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.817943917 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.808682691 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.809618729 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.808020443 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.808502923 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.811402886 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.809067786 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.807178976 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.810742122 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.805378087 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.806924352 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.808942542 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.811972131 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.817089422 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.809460782 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.809354571 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.817185984 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.810015145 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.808843865 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.819883895 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.809655896 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.810193911 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.810155298 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.817282737 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.804427372 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.812967324 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.818208793 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.809329974 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.811825287 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.809352855 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.808612852 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.821777194 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.837068592 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.810109391 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.809562954 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.814756602 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.822840657 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.811027421 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.813549989 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.813584894 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.809036856 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.808345053 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.812560374 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.810488185 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.811577012 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.811715698 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.814318149 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.807822875 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.812482118 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.811422202 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.813522638 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.813694608 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.812062268 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.812512565 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.814093523 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.811751304 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.814194465 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.819342229 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.810731123 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.813749827 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.813341139 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.811217071 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.811167445 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.815249099 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.813292325 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.813105119 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.813971969 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.815308676 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.813462983 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.811731692 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.811156866 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.812474841 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.813664605 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.817756688 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.814670443 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.817749372 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.812412023 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.809736236 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.816791774 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.816308851 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.81662941 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.813420372 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.811098071 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.817392381 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.821770079 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.812419321 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.814874686 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.818160128 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.815465513 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.81420972 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814260211 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.816757805 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.821841061 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.814558939 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.822611577 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.814768706 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.813314346 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.813268889 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.814604163 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.813891172 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.814040027 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.816516387 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.821680089 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.829275746 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.824411844 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.815207948 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.818036639 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.816128426 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.819476703 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.820859139 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.815428948 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.814474615 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.815387377 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.813433704 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.814050512 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.817851213 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.816184502 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.814802708 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.814473281 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.815530737 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.814608929 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.813621389 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.816465178 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.816568735 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.811867071 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.815897967 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.816300977 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.815978949 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.81305915 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.814359867 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.815281895 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.815008897 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.817606956 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.826840701 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.812627154 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.818286744 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.817226013 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.816843487 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.815771727 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.816183792 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.819098687 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.81836547 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.823944089 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.818039892 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.818561873 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.822879519 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.816377503 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.81625642 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.820356571 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.817067171 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.812891659 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.819068016 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.824920623 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.817237359 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.817960869 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.818986234 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.81762204 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.817323503 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.826868568 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.81427432 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.817443942 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.817700302 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.82058439 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.815675064 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.817674842 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.819468891 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.81944923 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.820151055 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.81851123 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.817742929 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.821087542 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.818336577 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.818984719 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.818380134 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.820713029 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.828017655 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.82596479 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.820029009 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.822374341 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.818508724 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.821987953 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.819878668 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.821397122 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.819604804 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.83431976 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.828785237 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.82569622 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.82202733 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.820883585 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.827819962 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.820411819 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.825069705 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.821651776 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.821773091 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.820343494 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.819579152 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.817207896 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.821580843 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.81999517 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.824918536 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.82122272 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.824381634 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.820214948 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.819250474 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.82260051 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.820463278 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.821126337 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.823657122 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.820982708 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.825312876 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.824802157 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.820261204 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.820147095 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828363541 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.821536566 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.82331632 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.819296838 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.820171628 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.820357732 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.82085372 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.82137318 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.826510534 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.828940741 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.82453896 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.832246774 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.82320339 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.834501647 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.82287771 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.824192911 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.830149118 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.816927278 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.820905846 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.823381948 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.82181096 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.829544513 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.82194545 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.822151217 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.828754593 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.82233305 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.82252634 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.82241125 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.822753244 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.822707375 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.823627248 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.831536628 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.823679179 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.826545293 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.824405127 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.820062184 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.82397833 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.822350828 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.821710362 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828807306 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.824158082 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.824499305 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.822279598 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.823628322 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.82308019 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.82481161 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.824443081 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.820578007 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.822182875 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.831859876 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.822603031 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827927077 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.822993334 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.835049757 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.824615492 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.831939845 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.824369481 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.825604294 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.824344119 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.821917916 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.828200142 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.824461782 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.825141776 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.825153037 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.82427537 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.826775913 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.824719428 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.827809763 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.827586612 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.825414686 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.824142186 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.833753699 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.848396045 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.828450335 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.827764245 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.821053141 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.826229039 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.830667232 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.825521571 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.824907846 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.828015849 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.835226647 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.832128736 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.826946769 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.827856505 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.826213711 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.826455089 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.825872875 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.825150823 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.825524635 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.825779952 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.828390966 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.826446472 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.832420932 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.825310846 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.827282669 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.826850958 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.826413043 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.838648563 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.827500281 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.826230162 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.827072705 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.824450211 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.827269265 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.826461117 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.827947314 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.828067433 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.825343054 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.826784379 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.833008216 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.833672798 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.82972504 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.826897598 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.826369362 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.827162037 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.829506192 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.828299598 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.827669356 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.827508054 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.827499805 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.828094702 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.829409747 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.826595521 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.827238246 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.828394048 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.827534597 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.82984716 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.835072263 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.828422815 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.82666421 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.827277893 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.827071912 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.826876053 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.826759307 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.840115696 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831029836 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.840282111 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.837672452 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.832000849 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.830243094 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.831897877 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.838352672 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.826936776 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.830405579 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.829295068 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.830646057 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.829906155 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.832506172 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.829836067 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.83885358 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.830785699 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.829681147 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.839193633 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.829954111 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.82989969 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.830239968 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.832462146 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.829533449 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.825321999 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.827944889 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.828076919 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837085653 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.834533297 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.829456931 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.830107469 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.82640677 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.830028713 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.834502193 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.8294186 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.831256262 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.826177081 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.831122888 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.830289592 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.829558189 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.827448615 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.83044251 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.829844403 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.833491683 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.838126916 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.82806814 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.832736697 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.831703023 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.831455206 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.829921526 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.829596063 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.828602849 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.828348178 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.831789538 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.831995773 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.832908048 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.833117622 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.831412104 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.831752846 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.832347121 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.832918829 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.835231224 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.842010418 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.838726531 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.829115821 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.830929711 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.831541882 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.834017946 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.833261684 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.831379813 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.831594826 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.83455783 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.831651132 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.833249089 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.830947637 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.83521841 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.848738359 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.830990796 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.83174026 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.831875028 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837337234 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.830698646 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.829382662 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.832184812 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.83622155 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.835170699 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.83970284 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.832260123 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.839240262 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.832307895 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.833557335 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.835805759 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.834054117 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.841822435 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.835302248 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.833861063 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.832346525 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.836454002 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.850974128 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.832549471 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.842377908 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.864242077 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.834349873 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.834957528 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.833998876 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.832707758 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.834671198 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.836866687 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.834943055 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.832723344 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.832315996 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.835340224 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.834559625 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.840180915 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.836429472 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.833519457 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.833606994 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.834445584 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.836447713 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.832024002 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.835815706 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.833288635 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.83488524 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.835194066 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.835321576 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.835540123 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.849887829 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.84673906 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.834800113 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.834370495 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.831356076 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.838499364 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.838045783 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.846374454 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.841999962 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.836415488 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.834777441 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.835644629 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.835356345 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.832516439 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.836033718 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.835708296 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.834115099 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.831635931 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.850504549 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.846539325 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.840374758 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.836813543 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.836889541 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.834063464 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.837303963 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.836679167 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.837140081 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.839181467 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.836280157 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.840666617 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.83568522 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.836099929 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.8389004 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.843474913 seconds)
  done (took 1087.889845863 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.832330473 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.832076372 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.833378119 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.832817057 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.834144341 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83358727 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.834421547 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.833290733 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.835759765 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.836226519 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.834309057 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.83440445 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.834236975 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.833594386 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.832650836 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.834390428 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.834406763 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.834231063 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.833633698 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.83373162 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.833636268 seconds)
  done (took 40.277021368 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.836436449 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.832328787 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.834004072 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.836987238 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.833364377 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.835270884 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.833679445 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.836562324 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.836055648 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.834723172 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.837290413 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.837475729 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.834114502 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.834799461 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.834293681 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.836258688 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.836156576 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.833609731 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.836074837 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.83376336 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.836065446 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.833692619 seconds)
  done (took 42.139029064 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.838834998 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.838022086 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.837232846 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.83567878 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.838143965 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.834702929 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.83934187 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.837179651 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.837871986 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.839502624 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.837232155 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.838604697 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.846098597 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.843247377 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.84191634 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.838999342 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.982386811 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.839546524 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.839909898 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.83977539 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.836822183 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.845465311 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.838176624 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.836779328 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.837581444 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.840995103 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.839278871 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.838769153 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.841205369 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.84097934 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.843916496 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.837791504 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.841038436 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.842636073 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.840472267 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.840777569 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.843886642 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.841370786 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.837781292 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.839341502 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.852116491 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.861031546 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.840623731 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.848070951 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.839708928 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.840425325 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.843672166 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.848863402 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.837928317 seconds)
  done (took 92.108824603 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.839232758 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.840129728 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.838553939 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.839801743 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.841797697 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.840279042 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.840055781 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.840856642 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.837809106 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.83831957 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.842333379 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.836222539 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.835854394 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.839655058 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.840116502 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.83610469 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.83610061 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.83678791 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.83546126 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.835823053 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.835651949 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.839679557 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.839024569 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.836787732 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.839490805 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.835383124 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.836818812 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.8393946 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.836878408 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.836862903 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.840157494 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.840101351 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.840462925 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.836858012 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.83685748 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.839666974 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.84078196 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.838896207 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.840999748 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.837820259 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.839857872 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.841293599 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.839691783 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.841335897 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.837346174 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.837322584 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.838364284 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.838260317 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.838604848 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.840027416 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.840229455 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.839368214 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.84074767 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.838635432 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.841490943 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.840997121 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.839638128 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.837755574 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.840542379 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.839276425 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.838033696 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.840729563 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.839184036 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.840488424 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.840986138 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.839667018 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.840737517 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.841963089 seconds)
  done (took 126.82541479 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.843515122 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.843650709 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.842567035 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843094908 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.84367947 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.841946613 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.844061944 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.843866985 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.843566841 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.843941052 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.843590305 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.842931409 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.844404693 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.84318248 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.843819926 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.845399904 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.843922255 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844678611 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.844471295 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.843615059 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.845398402 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845013988 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.844725983 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.843073292 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.843939261 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.845451733 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.843860584 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.845047262 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.844619496 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.844346717 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.846379548 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.844522189 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845011467 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.844263185 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.845932721 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.844846115 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.84564388 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.845342553 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.844739405 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.846137563 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.845348801 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.844828956 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.844792391 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.845524013 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845710859 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.845859436 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.844596198 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.846345052 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.844222781 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.845748536 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.846397227 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.845448149 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.846868749 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.846777738 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.845311492 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.845103608 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.846157025 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.845557159 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.846742092 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.848241939 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.847165884 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.846573325 seconds)
  done (took 116.1542809 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.845260652 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.84548613 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.843411629 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.842371019 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.845991642 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.841575491 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.845185577 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.846164229 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.845541081 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.846896058 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.845705068 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.844005544 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843422141 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.844431765 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.842787942 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.843868726 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.843603382 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.844191047 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.845214313 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.844058988 seconds)
  done (took 38.664528714 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.843555804 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.847994271 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.843789413 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.844338768 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.847536657 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.8436669 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.847386229 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.847106878 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.843823903 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.847358274 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.847565827 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.846311173 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.844555446 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.845017948 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.847656635 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.84465469 seconds)
  done (took 31.308402123 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.844807878 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.847685299 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.848903277 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.849415951 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.845332569 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.84538524 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.846933762 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.845539573 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.845702435 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.848696942 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.847572829 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.848078041 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.84781368 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.849423143 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.844972442 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.849103321 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.845630834 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.8460925 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.849039602 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.850600068 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.847174314 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.846377943 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.84834606 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.848973311 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.846359537 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.846767414 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.845821472 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.847016601 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.845393422 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.84811535 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.845435737 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.847172423 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.845550268 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.847499455 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.849963686 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.846315736 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.849629445 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.848606556 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.849852917 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.849176395 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.849790127 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.846643645 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.849646052 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.848699583 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.846727256 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.849526537 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.846903409 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.847859892 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.846903246 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.847854131 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.850446276 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.851082638 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.849805481 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.850010915 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.850104341 seconds)
  done (took 103.405257373 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.84910198 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.851568641 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.847550777 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.849966545 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.849856725 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.847292491 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.849609207 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.846852059 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.847780624 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.850783969 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.849749305 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.850635366 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.848709896 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.852529089 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.84958874 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.852612205 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.84881443 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.849085324 seconds)
  done (took 35.071491387 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.848624202 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.849364656 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.852651235 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.847884809 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.849285605 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.850580353 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.849887396 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.851001971 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.851015363 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.849535877 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.849671482 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.851655581 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.851323963 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.851931046 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.849446984 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.850053484 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.851383521 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.852577998 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.848633002 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.849684164 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.852253313 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.851451827 seconds)
  done (took 42.490886761 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.852622405 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.85180581 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.870353946 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.898668643 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.888808786 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.852423154 seconds)
  done (took 12.995741863 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851366451 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.852500637 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.849984635 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853959114 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.852523659 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850262671 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850300093 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850756876 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852765451 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851162192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851842243 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853076146 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853588325 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851457401 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.852947234 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.851943114 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.850823427 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850605632 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85160095 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855129416 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.851775227 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853788363 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851183493 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.850707734 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.851834115 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851282354 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.853417156 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.851843581 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852363983 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854497632 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853731837 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853275078 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855356863 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852790991 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856078895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854153923 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852132442 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.85476752 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.853611029 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.851504524 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.854404628 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854754659 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855050418 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.851956134 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854340777 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853008183 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.852464445 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853982399 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.852752288 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856011665 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856010739 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852690726 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856747002 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855522164 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855010257 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.854576136 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.853223962 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.853193039 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856425562 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853114119 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.852736804 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855799516 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.85211842 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853554803 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.857034934 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853289208 seconds)
  done (took 124.091762377 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.853900521 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.85413772 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.853504503 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855824205 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.853677579 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.852670213 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854762497 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854360712 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854459135 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855251236 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.858236111 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855731097 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.854332225 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.854252088 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854912618 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.854648138 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855823773 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.854862857 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855064578 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858223155 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854774711 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.854520624 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.855108711 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855168999 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855390454 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857861811 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.855627969 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854314358 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.854430192 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855028681 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856265003 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.857203485 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856103696 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.855585163 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.85551439 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.85605599 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.85607619 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.855379397 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856365001 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858778157 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856168749 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.858136053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.856480143 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856215982 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.856143215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.855963806 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.854745767 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.855789125 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.855932455 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.85682826 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856894131 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.856792608 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857590113 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.856942336 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856729112 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.857488534 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.857005721 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.858083786 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.857630944 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.861187492 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.857239792 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.856586061 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.860755896 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856602896 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.856902966 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.856950905 seconds)
  done (took 124.285171788 seconds)
done (took 2533.851432878 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.861802773 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.913569398 seconds)
  done (took 15.563243696 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 2.020862735 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.974465971 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.858172732 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.870096661 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.855944964 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.882632375 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.86207346 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.856055013 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.858695572 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.859127779 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.859054128 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 2.046912593 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.875282766 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.854869705 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.862668714 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.952546753 seconds)
  done (took 52.143609887 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.862800567 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.863972224 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.875979375 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.862221237 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.862703331 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.874262015 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.895016203 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.863524652 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.895981842 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.872143685 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 1.934206717 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.868430075 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.861517752 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 1.911373733 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.873362765 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.880191187 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.950802967 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 1.935537407 seconds)
  done (took 35.732986594 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.939446308 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.858383717 seconds)
  done (took 10.595796037 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.869163779 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.855852956 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.864857121 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.861192349 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.885699024 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.91263079 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.893979701 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.857359496 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.870654035 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.874802591 seconds)
  done (took 70.542216979 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.868815245 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.864807661 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.864361604 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.864070373 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.855845658 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.85785666 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.862484075 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.85528404 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 2.550233059 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.894633428 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.868634574 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.870511271 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.864165238 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.8668062 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.863965373 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.888800748 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 2.002970233 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.862054592 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.863753667 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.87051001 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.865222875 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.915733791 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.878160683 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.865807031 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.893602596 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 2.55055954 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.869568217 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.871502819 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.984098444 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.862592989 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.865889913 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.866983954 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.868286407 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.252953858 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 2.139821104 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.861073577 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.870925754 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.874664624 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.863885996 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.996176212 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.866955003 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.873706279 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.860384864 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 2.119011256 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.94181616 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.908148726 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.233110298 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.866731657 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.868188834 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.896839837 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.869201326 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.868871528 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.880098796 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.378852021 seconds)
  done (took 132.405454681 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.861105055 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 3.445727613 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.026240423 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.863680573 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.140529976 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.103010071 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.859975277 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.91099426 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.860352233 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.110021641 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.039020674 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.980293865 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.861307114 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.862382349 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.860566346 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.856797346 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.016570711 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.929151163 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.862211779 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.860051675 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.898976303 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.1275901 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 1.987466186 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.862925438 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.883724074 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.092349772 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 1.985446651 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.976981812 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 4.332255812 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.86169728 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.930405284 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.861760304 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.86424365 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.858317134 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.028671652 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.968591395 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.959153109 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.860415589 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864046628 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.861567783 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 2.524466414 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.085894277 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.972177155 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 1.999262001 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.108055836 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.088885762 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.509229781 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.862806738 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 2.503949032 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.059974186 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.072093264 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 2.117571368 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 1.989115025 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.862263424 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 6.113598812 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.864374803 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.864485693 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 2.122838861 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.089025967 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 1.974618927 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.861777994 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.865359554 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.861733344 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.178913071 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.863345731 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.97200434 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.864465728 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.860289899 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.977205417 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.978234123 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.091423576 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.105293567 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.892241042 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 3.770412205 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 4.374915571 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.150297099 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 1.933863852 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.124837864 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.862900811 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.861345945 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.960745949 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.612791196 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.039076398 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 2.180820056 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 2.127498085 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.903690084 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 2.497036049 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.865263154 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 2.111535638 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 2.112329111 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.090525555 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.108504967 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 2.02901158 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 5.179023163 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.864665819 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.865825729 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 4.061175751 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.995171955 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.867880928 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.226480623 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.112737674 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 3.595719228 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.895464173 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.170242326 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.002351787 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.866927672 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 2.492191283 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.864840188 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.066266529 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.90679216 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.865836986 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867801285 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 2.110034133 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 2.735064788 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.866584189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 5.645206263 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.93213696 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.865458105 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.130352038 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.864780374 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.105763197 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.864428568 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.177425309 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.348346024 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.91058223 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 2.057590997 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.109775784 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.6604405 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.135166721 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.178275462 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 1.989117821 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.125273534 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.691460038 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.867057924 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.15040676 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.865842544 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.865981591 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 2.036395384 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.865716104 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 2.023654212 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.866701228 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 2.126777122 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.890662012 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.038375724 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.86814532 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.140550371 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 1.911523182 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.917477359 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.869964129 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.985546656 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.867784202 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.904641126 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 2.052347727 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.869143831 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.866839327 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 5.447066405 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.86703096 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.014549893 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 2.164012725 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.892151773 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.939901627 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 2.394159744 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.868062152 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.963462872 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895277786 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.473540495 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.870411796 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 2.040276165 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.867215235 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.847032301 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.868110564 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 2.178927895 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 2.090291585 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.866624748 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.866754786 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 2.664498247 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.572338214 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.868581181 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.045732283 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.279118286 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.520497661 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.089509337 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.870640689 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 2.000033843 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.87025321 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 3.944597148 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 3.219061815 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.866832776 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.868558724 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.869828146 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.87269045 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.870030109 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.097814108 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 1.897027853 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 3.566437482 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 2.008330361 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.113486751 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 2.179979475 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 2.134915891 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 1.916205427 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.873399342 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.134236663 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.873202881 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.935271592 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.872220099 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.895049083 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.119158608 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.873463959 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 2.100232773 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 2.158712945 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.913528325 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.921497246 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.873963609 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.871875691 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.869676907 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 2.016709565 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.969200936 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.87247501 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.872413657 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.988947688 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 1.996497474 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 2.060284467 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.461767702 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 4.046316252 seconds)
  done (took 903.373905718 seconds)
done (took 1222.145297603 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.871552533 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.869538583 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.858547367 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.869495829 seconds)
  done (took 29.273624631 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.878042419 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.874881837 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.878996592 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.875448855 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.877468758 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.875199981 seconds)
  done (took 13.063607312 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.914934154 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.86924157 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.869919579 seconds)
  done (took 21.457126548 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.944582493 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.278453943 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.977757731 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 2.320412565 seconds)
  done (took 10.325651912 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.877365332 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.877994577 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.877498098 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.878980161 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.879246065 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.878424952 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.878297749 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.879480069 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.879109903 seconds)
  done (took 18.711452488 seconds)
  (6/6) benchmarking "26942"...
  done (took 3.970365367 seconds)
done (took 98.608176494 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 2.176088609 seconds)
    (2/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 2.160925619 seconds)
    (3/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 2.108927801 seconds)
    (4/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.869514034 seconds)
    (5/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.09575403 seconds)
    (6/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 2.765927868 seconds)
    (7/309) benchmarking ("sort", BigInt, false)...
    done (took 6.871554961 seconds)
    (8/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 2.012372124 seconds)
    (9/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.875658577 seconds)
    (10/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.191495502 seconds)
    (11/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.999764818 seconds)
    (12/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 2.758119784 seconds)
    (13/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 2.007067709 seconds)
    (14/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.123798455 seconds)
    (15/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.256065004 seconds)
    (16/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.857651025 seconds)
    (17/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 2.23009581 seconds)
    (18/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.238260282 seconds)
    (19/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.923247207 seconds)
    (20/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.857507037 seconds)
    (21/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 3.718837044 seconds)
    (22/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.97129638 seconds)
    (23/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 2.763998243 seconds)
    (24/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.895925328 seconds)
    (25/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.89759047 seconds)
    (26/309) benchmarking ("map", abs, Int8, true)...
    done (took 2.061929875 seconds)
    (27/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.959060755 seconds)
    (28/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.168487075 seconds)
    (29/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.953664257 seconds)
    (30/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 7.893994508 seconds)
    (31/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.937469889 seconds)
    (32/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.569367412 seconds)
    (33/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.886852211 seconds)
    (34/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.882918092 seconds)
    (35/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.8901923 seconds)
    (36/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.860779982 seconds)
    (37/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.895729585 seconds)
    (38/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.385507465 seconds)
    (39/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.394025294 seconds)
    (40/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.039886182 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.251805284 seconds)
    (42/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.242458525 seconds)
    (43/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 2.399988681 seconds)
    (44/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.871054299 seconds)
    (45/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.100057497 seconds)
    (46/309) benchmarking ("sort", Int8, false)...
    done (took 4.837358325 seconds)
    (47/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.158297966 seconds)
    (48/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.921758518 seconds)
    (49/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.37615637 seconds)
    (50/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.870859972 seconds)
    (51/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.88510248 seconds)
    (52/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.938627943 seconds)
    (53/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.882792967 seconds)
    (54/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.900337575 seconds)
    (55/309) benchmarking ("map", abs, Int64, false)...
    done (took 2.039768837 seconds)
    (56/309) benchmarking ("perf_sum", Bool, true)...
    done (took 2.006085875 seconds)
    (57/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.860707334 seconds)
    (58/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.879151246 seconds)
    (59/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.975965579 seconds)
    (60/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.310098427 seconds)
    (61/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 7.335878128 seconds)
    (62/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 7.030201768 seconds)
    (63/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.876074884 seconds)
    (64/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.247575615 seconds)
    (65/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 2.170539506 seconds)
    (66/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.93926431 seconds)
    (67/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.900051068 seconds)
    (68/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 2.744391747 seconds)
    (69/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 3.250435067 seconds)
    (70/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.983862594 seconds)
    (71/309) benchmarking ("perf_countequals", "Int8")...
    done (took 2.126030237 seconds)
    (72/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.977092748 seconds)
    (73/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 2.744766453 seconds)
    (74/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.963035502 seconds)
    (75/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.901728329 seconds)
    (76/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.861533764 seconds)
    (77/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 9.549546141 seconds)
    (78/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 2.137443192 seconds)
    (79/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.935712399 seconds)
    (80/309) benchmarking ("map", identity, Int8, false)...
    done (took 2.000963929 seconds)
    (81/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.872927322 seconds)
    (82/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.941680199 seconds)
    (83/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.897553925 seconds)
    (84/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.057921245 seconds)
    (85/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.041089945 seconds)
    (86/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.015252358 seconds)
    (87/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 2.122125346 seconds)
    (88/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.954580592 seconds)
    (89/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.221632913 seconds)
    (90/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.977078716 seconds)
    (91/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.05399872 seconds)
    (92/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.862324045 seconds)
    (93/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 2.731139754 seconds)
    (94/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.968483113 seconds)
    (95/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.968346874 seconds)
    (96/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.937640051 seconds)
    (97/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.875306661 seconds)
    (98/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.933706914 seconds)
    (99/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.111802943 seconds)
    (100/309) benchmarking ("map", identity, Int8, true)...
    done (took 2.044174995 seconds)
    (101/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.87907515 seconds)
    (102/309) benchmarking ("sort", Int64, false)...
    done (took 5.580026137 seconds)
    (103/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.876724375 seconds)
    (104/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.949447089 seconds)
    (105/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.47783807 seconds)
    (106/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.876245875 seconds)
    (107/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.944077637 seconds)
    (108/309) benchmarking ("map", identity, Float32, true)...
    done (took 2.102482079 seconds)
    (109/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.880157429 seconds)
    (110/309) benchmarking ("map", identity, BigInt, false)...
    done (took 2.229531037 seconds)
    (111/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.219721974 seconds)
    (112/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.878540696 seconds)
    (113/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 2.574604465 seconds)
    (114/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.81874228 seconds)
    (115/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 7.987208687 seconds)
    (116/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.976674739 seconds)
    (117/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.162812084 seconds)
    (118/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.253959055 seconds)
    (119/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 3.95122586 seconds)
    (120/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.988089389 seconds)
    (121/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.971358365 seconds)
    (122/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 7.934794305 seconds)
    (123/309) benchmarking ("map", abs, Bool, true)...
    done (took 2.125849019 seconds)
    (124/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.548893501 seconds)
    (125/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.146728465 seconds)
    (126/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 2.694933455 seconds)
    (127/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.235196165 seconds)
    (128/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 3.824308764 seconds)
    (129/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.906212189 seconds)
    (130/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.251542088 seconds)
    (131/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 2.003775659 seconds)
    (132/309) benchmarking ("perf_countequals", "Float32")...
    done (took 2.092793141 seconds)
    (133/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.865589754 seconds)
    (134/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.880829676 seconds)
    (135/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 8.787347772 seconds)
    (136/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.993575763 seconds)
    (137/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 9.665942887 seconds)
    (138/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.967513153 seconds)
    (139/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.218519361 seconds)
    (140/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 2.764224309 seconds)
    (141/309) benchmarking ("map", abs, Float32, true)...
    done (took 2.114711603 seconds)
    (142/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.083918766 seconds)
    (143/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 8.144679556 seconds)
    (144/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 2.871446984 seconds)
    (145/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.384130795 seconds)
    (146/309) benchmarking ("sort", Bool, false)...
    done (took 2.332573936 seconds)
    (147/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.905188948 seconds)
    (148/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.268751641 seconds)
    (149/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.906500553 seconds)
    (150/309) benchmarking ("perf_countequals", "Int64")...
    done (took 2.15091252 seconds)
    (151/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 8.168595928 seconds)
    (152/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.181961364 seconds)
    (153/309) benchmarking ("perf_countequals", "Bool")...
    done (took 2.144437979 seconds)
    (154/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.987832221 seconds)
    (155/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.446947702 seconds)
    (156/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 8.775655449 seconds)
    (157/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 2.021840023 seconds)
    (158/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.951591765 seconds)
    (159/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 2.562232342 seconds)
    (160/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 2.000326603 seconds)
    (161/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.880826353 seconds)
    (162/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.104773193 seconds)
    (163/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.906916231 seconds)
    (164/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.986519792 seconds)
    (165/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.963917291 seconds)
    (166/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.155311844 seconds)
    (167/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.989846155 seconds)
    (168/309) benchmarking ("map", identity, Int64, false)...
    done (took 2.026064854 seconds)
    (169/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 8.097049366 seconds)
    (170/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.985975635 seconds)
    (171/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.904230029 seconds)
    (172/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.477988276 seconds)
    (173/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 2.056058385 seconds)
    (174/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.869136639 seconds)
    (175/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.899764256 seconds)
    (176/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 4.717271249 seconds)
    (177/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.306373218 seconds)
    (178/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.970591891 seconds)
    (179/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 2.187390865 seconds)
    (180/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.150210605 seconds)
    (181/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 2.764706026 seconds)
    (182/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.391795323 seconds)
    (183/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 2.077590767 seconds)
    (184/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.19242597 seconds)
    (185/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.930686116 seconds)
    (186/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.909990559 seconds)
    (187/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.848138755 seconds)
    (188/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.947596674 seconds)
    (189/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.286567205 seconds)
    (190/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 7.961883466 seconds)
    (191/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 2.082828129 seconds)
    (192/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 2.79833246 seconds)
    (193/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.915058201 seconds)
    (194/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.386884929 seconds)
    (195/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.485289983 seconds)
    (196/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.263576526 seconds)
    (197/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.923717054 seconds)
    (198/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 2.182224962 seconds)
    (199/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.285711575 seconds)
    (200/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.882404455 seconds)
    (201/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.962042539 seconds)
    (202/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 2.177220543 seconds)
    (203/309) benchmarking ("map", identity, Float64, false)...
    done (took 2.030228021 seconds)
    (204/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.883969331 seconds)
    (205/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 3.526730952 seconds)
    (206/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.906098752 seconds)
    (207/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.081162392 seconds)
    (208/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.906853351 seconds)
    (209/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.480865758 seconds)
    (210/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 2.01635384 seconds)
    (211/309) benchmarking ("map", abs, Float32, false)...
    done (took 2.019148525 seconds)
    (212/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.974477223 seconds)
    (213/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.910159239 seconds)
    (214/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.884375768 seconds)
    (215/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.216147108 seconds)
    (216/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.474399523 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 2.084577613 seconds)
    (218/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 3.417957819 seconds)
    (219/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 2.027221325 seconds)
    (220/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.869989583 seconds)
    (221/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 3.631327805 seconds)
    (222/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 2.190140006 seconds)
    (223/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.970016732 seconds)
    (224/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.910284751 seconds)
    (225/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.208167712 seconds)
    (226/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 2.51388303 seconds)
    (227/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.904449346 seconds)
    (228/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.984766819 seconds)
    (229/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.910486477 seconds)
    (230/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 2.043096983 seconds)
    (231/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.870658538 seconds)
    (232/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.894645676 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.934696458 seconds)
    (234/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.471202219 seconds)
    (235/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.13686078 seconds)
    (236/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 8.115635293 seconds)
    (237/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.970269174 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 4.912534459 seconds)
    (239/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.888313825 seconds)
    (240/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.984781679 seconds)
    (241/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 2.702741078 seconds)
    (242/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 2.127275861 seconds)
    (243/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 2.11401315 seconds)
    (244/309) benchmarking ("sort", Float32, false)...
    done (took 5.64826637 seconds)
    (245/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.576125651 seconds)
    (246/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.537667773 seconds)
    (247/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.874306548 seconds)
    (248/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 8.036181879 seconds)
    (249/309) benchmarking ("map", identity, Bool, true)...
    done (took 2.138228429 seconds)
    (250/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.107975966 seconds)
    (251/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 2.008543844 seconds)
    (252/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.40548401 seconds)
    (253/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.988394844 seconds)
    (254/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.184011654 seconds)
    (255/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.913253942 seconds)
    (256/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.264392398 seconds)
    (257/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 2.266396931 seconds)
    (258/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.8855814 seconds)
    (259/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.872213212 seconds)
    (260/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 3.494157601 seconds)
    (261/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 2.122290991 seconds)
    (262/309) benchmarking ("map", identity, Bool, false)...
    done (took 2.017222254 seconds)
    (263/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 2.055458293 seconds)
    (264/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 8.01641386 seconds)
    (265/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.987371224 seconds)
    (266/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.273195477 seconds)
    (267/309) benchmarking ("map", abs, BigInt, true)...
    done (took 7.402584182 seconds)
    (268/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 2.281253527 seconds)
    (269/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 2.922033975 seconds)
    (270/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.993762559 seconds)
    (271/309) benchmarking ("sort", Float64, false)...
    done (took 5.709469783 seconds)
    (272/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.176314314 seconds)
    (273/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 2.10873181 seconds)
    (274/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 8.181485513 seconds)
    (275/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 2.097798663 seconds)
    (276/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.975887162 seconds)
    (277/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.88864374 seconds)
    (278/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.177834747 seconds)
    (279/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.969326235 seconds)
    (280/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.97035104 seconds)
    (281/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.946988136 seconds)
    (282/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 2.004772735 seconds)
    (283/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 5.038313994 seconds)
    (284/309) benchmarking ("perf_sum", Float32, true)...
    done (took 2.011885285 seconds)
    (285/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.224847828 seconds)
    (286/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.253891604 seconds)
    (287/309) benchmarking ("map", abs, Int8, false)...
    done (took 2.044436279 seconds)
    (288/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.191000429 seconds)
    (289/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 2.193598501 seconds)
    (290/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.933462688 seconds)
    (291/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.972975563 seconds)
    (292/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.481152682 seconds)
    (293/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.966209075 seconds)
    (294/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.26934592 seconds)
    (295/309) benchmarking ("map", identity, Float32, false)...
    done (took 2.023660367 seconds)
    (296/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 2.697459724 seconds)
    (297/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.904218877 seconds)
    (298/309) benchmarking ("perf_sum", Float64, true)...
    done (took 2.022280333 seconds)
    (299/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.935376982 seconds)
    (300/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.874908171 seconds)
    (301/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.962059909 seconds)
    (302/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.892447894 seconds)
    (303/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.289455907 seconds)
    (304/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.999008499 seconds)
    (305/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.891631523 seconds)
    (306/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.207778396 seconds)
    (307/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 2.070355813 seconds)
    (308/309) benchmarking ("map", abs, Float64, false)...
    done (took 2.039415772 seconds)
    (309/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.532922696 seconds)
  done (took 1025.904806811 seconds)
done (took 1027.723109804 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.927433636 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.917382096 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.90193299 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.924307678 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 2.014006556 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.93129655 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.912146169 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.903248059 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.951232248 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.951886512 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.902823097 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.929508657 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.903154389 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.902202645 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.902070587 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.916655079 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.208386287 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.924612556 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.919694342 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.912523144 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.919502295 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.902131753 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.951281452 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.930661886 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.906165237 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.906446508 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.907519948 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.922521983 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 2.014928816 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.906684365 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.906461543 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.915999344 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.208790154 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.923452367 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.898487432 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.922874969 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.915103684 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.913181488 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.907503649 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.934972723 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.346729259 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.905792831 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.90535416 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.905067315 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.904926817 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.909373548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.906419141 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.910623607 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.91739632 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.917329805 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.345345639 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.922139453 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.907040519 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.905012297 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.916128483 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.904299389 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.908707387 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.920066641 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.924551125 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.920643585 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.199390032 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.932242615 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.907870761 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.921300909 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.91220057 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.381451547 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.902630081 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.910262833 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.348566844 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.913192098 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.383112736 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.915727613 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.907510798 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.919691679 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.937090789 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.210680533 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.922513663 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.905505424 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.914694701 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.904542759 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.915944967 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.919129148 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.911482563 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.907062358 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.919880753 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.935086939 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.916646335 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.907412108 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.915787148 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.925609463 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.913662021 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.917404779 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.910297952 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.902842296 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.915952084 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.910591567 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.910693106 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.911398095 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.912680702 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.917722959 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.345721834 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.92562721 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.903959638 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.904338211 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.906569741 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.921656638 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.346403906 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.910394254 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.930545687 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.955612191 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.91097969 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.20113417 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.933482432 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.924371952 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.917389877 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.911373868 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.903425999 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.203243641 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.371619396 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.924872864 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.909403294 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.905675517 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.923226343 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.908994042 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.90356321 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.213255699 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.932269378 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.922118917 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 2.029507519 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.919546208 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.940477751 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.908027825 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.912823808 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.939254911 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.926479067 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.940457378 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.913324617 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.928179109 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.928161696 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.906127539 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.922248819 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.920128284 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.911536155 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.915817857 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.90552669 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.93898341 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.92304649 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.922631408 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.931023178 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 2.031739063 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.908684309 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.203592987 seconds)
done (took 299.45663252 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.976519605 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.906377683 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 2.005307785 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.905231331 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.989539878 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.991833832 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.902274396 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.903546599 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.90436648 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 2.282771477 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.904120066 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.904234449 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.900608518 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.904054546 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.98882261 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.906322185 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.902677699 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 2.244676914 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.909140104 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.97813323 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.90044759 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.903716444 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.907279906 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 2.28543051 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.899009765 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.905396065 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.975874787 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.90690926 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 2.252158137 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.907855245 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.899574352 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 2.25071162 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.996760614 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.923850379 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.917477402 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.91457294 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.993520382 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.911662389 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.988445369 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.988881592 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 2.004540305 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.946993376 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.900868593 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.901464748 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.910491915 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.910344312 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.904511146 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.936297179 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.908371538 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.905303445 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 2.247216972 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.918273087 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.905990939 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.905392218 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.905149694 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.9400506 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.905120928 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.910510437 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.998167319 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.910182694 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.970768201 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 2.287610339 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 2.284833397 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.90983388 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.90302329 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.907051182 seconds)
  done (took 186.810338834 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.975594798 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.983572169 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.975259029 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.911575973 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.957933789 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.98001958 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.913216828 seconds)
  done (took 15.530783426 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.916098143 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.91043129 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.959167367 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.959166344 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.91093086 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 2.060122081 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.91041156 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.921374398 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.907028975 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.961276242 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.911067412 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.910897288 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.916944333 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.911085858 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.958416465 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.922412575 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 2.024892953 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.911734726 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.912312184 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 2.065014365 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.907724944 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.915690422 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.965383438 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.922402215 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.913871894 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.916222583 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.505301592 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.913147216 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908849879 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.91253305 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.908485097 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.95528567 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.912655296 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.912118097 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.910322823 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 2.02752777 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.91198271 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.908514628 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.911541614 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.912287768 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.911095746 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.911911258 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.912687942 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.909401738 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.91155247 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.934785157 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.910987206 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.910991855 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.912513486 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.91152057 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.962131552 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.912334575 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.910186883 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 2.342951588 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.967836332 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.917467443 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.913795196 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.908793878 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.91265986 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.909958979 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 2.070342433 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.959960266 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.913397711 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.961329684 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.912926637 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.913869292 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.911421301 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.911360852 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.968523544 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.913672419 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.962966833 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.910475815 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 2.071721237 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.938163056 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.914703208 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.916690174 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.917129103 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.914748457 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.908028613 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.919280843 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.911207016 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.9156248 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.921089594 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.911969346 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.910293069 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.027840195 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 2.023444961 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.911350305 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.927519549 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.922070806 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.910144135 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.967454653 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.913831923 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.911703256 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.966028919 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 2.028916618 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.971636731 seconds)
  done (took 210.409314616 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.919758188 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.921854204 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.914922723 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.930794935 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.914729868 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.914421645 seconds)
  done (took 13.3549666 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.917887424 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.916313096 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.914945948 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.914651544 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.915867944 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.916769725 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.917675786 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.917038322 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.921377691 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.915971987 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.917137354 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.916068907 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.918569336 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.917254268 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.917795973 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.916228725 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.918173771 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.914933773 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.916860302 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.917369737 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 3.06987604 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.91764873 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.918910525 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.918775795 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.922603008 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.916637012 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.925691575 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.917191752 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.916247509 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.926299228 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.921546506 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.919270216 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.918195016 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.923055449 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.922772167 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.9198323 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.921286815 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.917943163 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.914837864 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.919239516 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.918198921 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.918613334 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.917226856 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.919487272 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.920295849 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.92301135 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.921933732 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.926945887 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.919740394 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.919298353 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.919305921 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.918751423 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.918750535 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.919096885 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.922981039 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.922894111 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.922890657 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.921087663 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.920767203 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.920129948 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.919828588 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.920151942 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.92192395 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.924176489 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.916011422 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.919326649 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.920703348 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.924265761 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.920833197 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.920023028 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.921132677 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.917231711 seconds)
  done (took 141.186299646 seconds)
done (took 569.137198487 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 7.15883465 seconds)
  done (took 9.000926057 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 7.06398715 seconds)
  done (took 8.996102362 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 8.506913094 seconds)
  done (took 10.350750467 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.929556324 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.950022217 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.922603955 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.918697122 seconds)
  done (took 29.574574486 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 7.242427992 seconds)
  done (took 9.086335524 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.927062709 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.91012735 seconds)
  done (took 15.747624329 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 7.119188395 seconds)
  done (took 8.964051112 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.102382752 seconds)
  done (took 8.954508509 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.931441388 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.927293604 seconds)
  done (took 15.715019959 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.899333528 seconds)
  done (took 8.744951077 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 9.596831232 seconds)
  done (took 11.453237928 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.923963157 seconds)
  done (took 8.77946761 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.996054155 seconds)
  done (took 8.841004981 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.123946523 seconds)
  done (took 9.968723436 seconds)
done (took 166.020743088 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.91698268 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.91101083 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.910340914 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.909327499 seconds)
  done (took 29.490734964 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.954546719 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.954151938 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.955659841 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.964845679 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.957142683 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.95329082 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.945886462 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.947178082 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.965798566 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.957697308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.957111401 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.956813108 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.953586422 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.945849697 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.956934611 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.956342835 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.964560163 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.956648476 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.946702604 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.958170649 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.921875525 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.964572597 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.957701975 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.922627904 seconds)
  done (took 48.72218965 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 2.120011858 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.992431679 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 2.075081331 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.973938643 seconds)
  done (took 10.006255174 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.972439443 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.973772245 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.987389641 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 2.025783488 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 2.050221911 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.984199995 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.948600844 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.943427152 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.929910348 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.974391038 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 2.050567305 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.991904179 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 2.05825036 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.921486152 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 2.106359236 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.922316158 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.921812169 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.974643888 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 2.026830548 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 2.051580853 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.922537581 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.974021092 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.97692554 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.990723796 seconds)
  done (took 49.526050145 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.921803515 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.930182727 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.927970392 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.921463649 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.922150995 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.92205375 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.928428853 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.922732893 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.942516555 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.922843367 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.92127465 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.92193506 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.918970769 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.922197609 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.922251618 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.934934556 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.936803177 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.922715051 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.925856566 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.928883899 seconds)
  done (took 40.363302903 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.916379963 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.775800695 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 2.269511499 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 2.17284087 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.917454056 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.916454401 seconds)
  done (took 31.816053313 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.935563326 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.985865146 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.925806389 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.978719437 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 2.059951637 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.929491925 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.924405744 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.990874191 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.0279152 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.989421452 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.943173814 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.950273457 seconds)
  done (took 25.490138071 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.919194431 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.918026965 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.916647995 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.933115531 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.935826285 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.930944706 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.932234787 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.919641903 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.936198198 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.940625279 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.932320677 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.93605809 seconds)
  done (took 45.002528142 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007338122 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.965231505 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.933120477 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595625525 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.298813968 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.127313474 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.525374659 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.260066441 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.922662562 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.193945779 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.962673437 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.018888018 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.176575581 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.386999369 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.950081911 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.377982827 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.214293629 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122289558 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944501777 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.595642451 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.981783304 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.077373637 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.663384326 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.97777214 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.131339328 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.053221864 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 2.181885141 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.920060997 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.056923308 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.956984806 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931160929 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.92135539 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 2.19476069 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.299428807 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.020522078 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931540136 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.539754023 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.639193735 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.912533727 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 3.701559732 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.62956295 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 7.04007963 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.931388445 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.921340453 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.854867527 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.039136756 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.301951761 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.928393762 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.631917872 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.923243338 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.932837467 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.015949899 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.926759569 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.740186305 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.835344758 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.920842014 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.920898149 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.928823611 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.491815572 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.042804378 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.077716937 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.891109052 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 3.016960762 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.601666156 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317302434 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 2.06693538 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.926416906 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.927411055 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.857194345 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.67660068 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.975324929 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.254226617 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.94073141 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.574177579 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.251660558 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.987058622 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862060607 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.183282625 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.421722012 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.893519965 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.151541315 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.922511119 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.859919467 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.866500059 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.857474107 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.186854818 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.955678952 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.713019793 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.956744774 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.261013809 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.934681254 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.942120901 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.947001801 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.147145801 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.808252217 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.924504085 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 4.703099346 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.073446431 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.941890865 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.261270504 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.860309989 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.923474304 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.181600402 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 2.136254668 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.968089736 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.41436081 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.083197689 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.452854113 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.974012608 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.041592553 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.969134986 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.195403407 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.980080081 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.036010779 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.976169272 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.92689524 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.215405008 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.494619148 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 2.059026478 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.956560719 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 2.049544479 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.239757712 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.94743185 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.007143281 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.927953568 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.926974751 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.705501267 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.475323712 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.92633776 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.928568238 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967388513 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.972948203 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.927765257 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.875676237 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 4.553674727 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.959076168 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 6.933834993 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.148331756 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.464058366 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 2.234594867 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.862598063 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257981884 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.018076804 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 2.144984291 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.56840328 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.995495216 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.186791929 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.968630884 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.998828008 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.9709906 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.945026126 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.02491707 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.94952096 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 5.047429783 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.216576502 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.929695001 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.929212988 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.720240891 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.95787353 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934561643 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.930618895 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.674935132 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.196124648 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.944076346 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.932353339 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.816013017 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.938542458 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.991624668 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.930868613 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.934804507 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.46630537 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.654102899 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.93144246 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 4.518509041 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148882306 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.937226948 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 3.600905375 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.043591614 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 2.015795481 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.199743102 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.982817844 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.860046545 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.636169976 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.620074623 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.927943814 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.862687432 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.928917368 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.937675382 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.937988135 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.126682849 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.201240243 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.967335509 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.603333316 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.967798191 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.939263549 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.932941767 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.931051813 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.440376225 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.051580628 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.082902047 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.970574765 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.07186458 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.9415021 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864783583 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.933218753 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.934152124 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.927879285 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.928339237 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961342898 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.604363937 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.310980388 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.187439104 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.541505508 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.942344303 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 3.638176279 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.985147426 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.931523333 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.589079073 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.203966142 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.965251455 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.948222534 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.942056008 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 3.611157341 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.620561812 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.492494949 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.240917548 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.230749053 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.356520158 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 5.11457298 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.953461672 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.27347385 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.863274963 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.487774645 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.987383991 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.269406371 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.874923595 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.014212054 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.572733524 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.266619221 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.939803067 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.158489942 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.314036356 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 4.657519129 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.064786322 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.140386644 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.968960192 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.053235932 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.887150395 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 5.210688189 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.072693617 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.610137178 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.128525484 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.266570643 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.590500695 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 7.045862502 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.929666442 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.599638656 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.010620325 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.639416672 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.102391127 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.087599146 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.846642639 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.413867159 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.936862092 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.155946777 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.269231162 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.057398332 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 2.054857327 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.866867433 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.940470916 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.945757989 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.934054918 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 2.933921606 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 2.801206721 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 2.185128736 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.941549192 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.865584856 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.013675236 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.211485396 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.826989854 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.936200643 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.93141517 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.228242922 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.438079117 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.094695492 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 4.99275096 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.447085099 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.935389147 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.864141603 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.86666356 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.623606152 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.937816605 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.909377806 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135007752 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 3.028454292 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.84290853 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.967267876 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.029291212 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.190346689 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.946582759 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.203664328 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.202713069 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.629708291 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.958724971 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 2.032609383 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.581651304 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 7.034556257 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.932718608 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.167167192 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.684518796 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.154849778 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.950697185 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.877687743 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.932549555 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.145432258 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.934864888 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.808931647 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.154720233 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.65170021 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.938476418 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.250165859 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.007158186 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.811466596 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.972407913 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 3.02372697 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.943399235 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.013862484 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946013651 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.945380736 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.945000805 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.983038185 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.810316374 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 7.050337612 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.948079426 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.027329004 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.050810403 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.455987515 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 1.934491402 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.206771906 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.302068148 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.256213293 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.990285208 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.932976583 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.934024684 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.869016567 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.079566641 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.160950867 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209441572 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.063501545 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 3.044853594 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.957755611 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.592719044 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.10672469 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.172111183 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 2.210075817 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.829939686 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.418089742 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.969039173 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 6.937083914 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.946825015 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 2.147204349 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.149672445 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.242704319 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.069712361 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.994769654 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.297623194 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 2.209337084 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.936278456 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.936378836 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.527583148 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.94746451 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.613027919 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.971969861 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.826105281 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.202810053 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946469761 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.317522104 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.95602907 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 7.096357668 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.708006951 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.631505874 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.22409176 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.920917444 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.991507459 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.210815699 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.315109301 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.244937399 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.002100471 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.946990437 seconds)
    (390/481) benchmarking "6d"...
    done (took 4.042400441 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.08392528 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 2.80724284 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.938188956 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.93713091 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.154782472 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.646145187 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.948013666 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.210048024 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.246982903 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.931088811 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 2.810234413 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.961317902 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.947121339 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160661967 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.193613265 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.185307422 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.945220434 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.945281267 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.754278905 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.211652729 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.994447246 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.873230273 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.937464314 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.037188987 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.185686653 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.961972181 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 2.391158721 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.650188357 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.20299566 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.934619139 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.959236217 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.064977907 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.293055452 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.255762836 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.470289959 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.135647679 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.520781347 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.48950922 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 2.23476251 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.944407709 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.069311093 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 2.239413634 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.94313772 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.986764577 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.970828879 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.208836767 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.246427244 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.952673727 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.652400817 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.905700192 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.279320098 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.498069242 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.877737654 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.945589669 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 2.00021654 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.940515391 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.073320938 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.947402528 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 2.81879391 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.080774244 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.693890415 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.220897878 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.94219807 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.926897497 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 4.646131893 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.189420573 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.96939106 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.08211133 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.944865289 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.616127901 seconds)
    (461/481) benchmarking "7d"...
    done (took 2.293077046 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.197080186 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.998243139 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.944658497 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.943790727 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.942267602 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.929152411 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.137377429 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 3.135189601 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.217897469 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 5.02916577 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.972174611 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.944575082 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 2.157496868 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.152311975 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.818072939 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.072957372 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.992036127 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.977341271 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.847707833 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.449563579 seconds)
  done (took 1701.082170889 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.944371642 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 7.010963361 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.980721115 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.989661148 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.983413042 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.026613116 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 7.01833563 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 7.094174919 seconds)
  done (took 57.920874227 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.942019984 seconds)
    (2/17) benchmarking "4467"...
    done (took 2.162065166 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.950898819 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.949755652 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.948011621 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.943108372 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.106799006 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.948341457 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.950759387 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.952041945 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.945177201 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.939658454 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.252297025 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.959821737 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.9447332 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.928818938 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.950674337 seconds)
  done (took 75.678205028 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.944961272 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.979902345 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.961804629 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.959173502 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.989947965 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.94609197 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.785665797 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.958231841 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.943777994 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 7.083927877 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.573555621 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.952843681 seconds)
  done (took 87.954895506 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.953200199 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.952134077 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.953043754 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.95172495 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.952170556 seconds)
  done (took 11.638346165 seconds)
done (took 2216.561788936 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 2.199363968 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.161161576 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.168715866 seconds)
  done (took 6.204721288 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 2.097790923 seconds)
    (2/4) benchmarking "Float32"...
    done (took 2.144696412 seconds)
    (3/4) benchmarking "Float64"...
    done (took 2.265126613 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 2.246485766 seconds)
  done (took 10.636102016 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 2.235455572 seconds)
    (2/3) benchmarking "Float64"...
    done (took 2.32320256 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 2.150989065 seconds)
  done (took 8.586632625 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.352475823 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.960525826 seconds)
  (7/14) benchmarking "20517"...
  done (took 2.052853866 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.949487725 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.950111948 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.949485251 seconds)
  done (took 22.729227471 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.953224242 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.95491631 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.95133682 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.956425928 seconds)
  done (took 9.694022253 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.934036582 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.673653812 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.935736167 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.947756837 seconds)
  done (took 21.368815326 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.702673137 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.711513038 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.697072769 seconds)
  done (took 9.989803647 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 4.518998971 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.862204774 seconds)
  done (took 9.260570158 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 2.21077128 seconds)
  done (took 4.089944626 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 2.083991385 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 2.217458989 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.411756823 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.441601639 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.490495648 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 2.80997051 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.256838124 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.196130669 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.336025171 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 2.386520394 seconds)
  done (took 25.511769011 seconds)
done (took 143.512510366 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 3.336601218 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 8.186582278 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 7.14870666 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 3.294513482 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 7.180882994 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 7.150362205 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 7.229223813 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 3.278913876 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 2.803547848 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 2.798826293 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 3.294566936 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 7.183322278 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 7.171235948 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 8.191836782 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 7.172613107 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 8.18692895 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 7.229474229 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 3.362997347 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 3.98826121 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 4.189319148 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 7.229279257 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 2.934193136 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 3.131314207 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 2.946286289 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 7.205154665 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 7.096720965 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 3.511754001 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 8.186177557 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 4.143452108 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 3.520879701 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 7.094631425 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 4.341582082 seconds)
  done (took 175.600486893 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.879806728 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.949425112 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.948514932 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.949675955 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 5.315769015 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.951060379 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.951265848 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.948175487 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.204188304 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.184717167 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.948728372 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 5.300941382 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.947912574 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.949738446 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.950267339 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.950545442 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 5.309950856 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.942345239 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.958556228 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961024516 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.964328784 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.261756592 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.966116715 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.325234627 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 5.346682408 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.968184868 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.94941555 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.972922386 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.956361142 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.959892786 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.961009815 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.950556055 seconds)
  done (took 210.969249508 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.954553239 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.951652167 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.950447201 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.950985954 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.951009622 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.951495694 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.955054868 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.950600313 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.519977185 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.531369692 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.978574559 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.958373938 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.952116296 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.951858093 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.957400636 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.952142133 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.976527148 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.961695956 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.957149758 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.961099568 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.964776006 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.650778541 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.952974211 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.647104089 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.954475955 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.955872379 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.952184956 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.961523073 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.965699445 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.966580739 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.967835276 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.953424925 seconds)
  done (took 223.064831615 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 2.157344122 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.960786213 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.963428344 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.916535558 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.96406754 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.961506287 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.952911149 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 2.159054037 seconds)
  done (took 19.946454035 seconds)
done (took 631.474527793 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.402260859 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.245200998 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 2.140184981 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.982065426 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.219336332 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 2.016996966 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.980836794 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 2.043256558 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.705105264 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 2.046271058 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.672349667 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.99621637 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.767837939 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 2.001971955 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 2.109229027 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 2.034018024 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.544796321 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.632766447 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 2.156714219 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.058314428 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 2.153533734 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.9137379 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 2.051512045 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.741172577 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.776610748 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.952218861 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.147958492 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.549193321 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.989165647 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 2.143317306 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.694993395 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.358521128 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.987910461 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.976340639 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 2.029846502 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 2.013472159 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.300307466 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.986751361 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 2.105247751 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.712130305 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.031006635 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.604931861 seconds)
  done (took 106.861299397 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.954998937 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.9519809 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.951570705 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.953311589 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.954269944 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.95441001 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.95237045 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.95219577 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.954250833 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.951553781 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.952916147 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.953503518 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.953293384 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.953404588 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.9530328 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.952200871 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.954181881 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.956156546 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.953703898 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.953256593 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.954865959 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.953951871 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.955141049 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.953226167 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.954823113 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.954683152 seconds)
  done (took 52.693253275 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.966794217 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 2.107455634 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 2.182546418 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.97929626 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.965907229 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.968961507 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.983753587 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.967424978 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.968876885 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.969619526 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 2.060483347 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.969429554 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.984133433 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 2.186510181 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.975782998 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.967009064 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.977145395 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.96541589 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 2.114996679 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.978488746 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.985148915 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.969680136 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.985743947 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.977795542 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.969469871 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.967337431 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.971901543 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.40561976 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.971036793 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 2.06276953 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.007871101 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.986556251 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 2.364951096 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 2.192639536 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.015998054 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.975672466 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.968883045 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 2.067571453 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.972487735 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.969557722 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.985162668 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.971780597 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 2.188014349 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.45819447 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.975737412 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.968259629 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.416200361 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 2.07267239 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 2.006376284 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.979294859 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 2.192685346 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.978161084 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.970835826 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.969775942 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 2.003533686 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.977669875 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.968592025 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.274539244 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.975105388 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.985398021 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.97335217 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.970237591 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.12257534 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.97537893 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 2.110654079 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.974458314 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.977072508 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.970434084 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 2.192847915 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.980556652 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.463993182 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.977481535 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.970351205 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 2.066611922 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 2.113163657 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.439516295 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.98040291 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.127658262 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.379906747 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.989504876 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.976344482 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.398544341 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.99473072 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.974514264 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.972337708 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.972168596 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.969337934 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 2.014934107 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.984494888 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.406756365 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.464364039 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.285746242 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.991818925 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.983469369 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.972817829 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.278675761 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.9746158 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.970605002 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 2.184808479 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.477443333 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.97981408 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.978450877 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.451140967 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.981132131 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.990750879 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.979468203 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 2.1940629 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.981167437 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 2.015940838 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.972109266 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.979006304 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.974179729 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.989618453 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.977041539 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.971967714 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.442553684 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 2.081099755 seconds)
  done (took 243.184864601 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.96698783 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.965070328 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.967415767 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.96436781 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.964286751 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.970727843 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.965934838 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.967150471 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.972700874 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.966191859 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.9659983 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.967247463 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.969306108 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.967001649 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 2.457154667 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.975915533 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.581723998 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.96759038 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.969394941 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.981343505 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.649118945 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.971258833 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.968935801 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.967637937 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.96908564 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.968985498 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.97005146 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 7.011733165 seconds)
  done (took 170.849989015 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.976496432 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.162359778 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.992577198 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 2.011804047 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.982406284 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.974346361 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 2.000506978 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.998192215 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.977365503 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.972575087 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.973430924 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 2.038453648 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.987476733 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.105855559 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 2.004456033 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 2.004621496 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.083120289 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.980650065 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.97416086 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.974979187 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 2.005719625 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.970576673 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 2.040578207 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.104306391 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.99225313 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.095369438 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.980961354 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.97712826 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.975812592 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.095707552 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.989434445 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 2.037283802 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 2.004636181 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.993322645 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.095775038 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.093278136 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.082931068 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 2.004902836 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.979607503 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.974101191 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.976385689 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.966558258 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.095367781 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.995451683 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.978805598 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.087337772 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.994259438 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.976282485 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.987695519 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.976081103 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.991939777 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.992567188 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 2.043045136 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.107719334 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 2.013463083 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 2.00102476 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 2.003521847 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 2.264350537 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.986946728 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.080371538 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.970637092 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.097085184 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.996778356 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.966443706 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.97839203 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.983149433 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 2.007565602 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 2.006336143 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.081514448 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.984152095 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.081370561 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 2.011179395 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.981229793 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.978565104 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.981585661 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.097629604 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.103617829 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 2.01242379 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 2.013909854 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 2.006652098 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.971729189 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.979640191 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.96821166 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.996988769 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.980321285 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.09641809 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.099093749 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.988074543 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.979646919 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.98151776 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.980284977 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 2.004783661 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.101848339 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 2.017424297 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.077533897 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 2.04626658 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 2.056573514 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.99302587 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.992812581 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.981741895 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 2.044010566 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.99392323 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.990787474 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 2.313738397 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 2.052209069 seconds)
  done (took 214.119883473 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 2.077142055 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.471878897 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 2.029838766 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 2.032490473 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.258690551 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.40216729 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.787138497 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 2.027282943 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 2.026284681 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 2.052005233 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.186531108 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 2.084318785 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 2.041987846 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 2.015771208 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.424905164 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 2.017048457 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 2.028840798 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 2.046674402 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 2.030517319 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.56468441 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.341851737 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 2.147976749 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 2.027347331 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.152393426 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 2.012303426 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.338852728 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.347788935 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.4080225 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 2.061571931 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.37574751 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.357185131 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.700103171 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.240972569 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.276535715 seconds)
  done (took 78.307407659 seconds)
done (took 867.900880586 seconds)
SAVING RESULT...
DONE!
