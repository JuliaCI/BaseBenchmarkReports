cset: moving following pidspec: 31148
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.265331099 seconds)
loading group "string"... done (took 0.559959631 seconds)
loading group "linalg"... done (took 7.733947016 seconds)
loading group "parallel"... done (took 0.175233687 seconds)
loading group "find"... done (took 1.191715607 seconds)
loading group "tuple"... done (took 1.860527148 seconds)
loading group "dates"... done (took 1.273612107 seconds)
loading group "micro"... done (took 0.236248386 seconds)
loading group "io"... done (took 0.77321359 seconds)
loading group "scalar"... done (took 40.926460781 seconds)
loading group "sparse"... done (took 13.024010117 seconds)
loading group "broadcast"... done (took 1.155663797 seconds)
loading group "union"... done (took 13.474577721 seconds)
loading group "simd"... done (took 4.787524035 seconds)
loading group "random"... done (took 9.711931096 seconds)
loading group "problem"... done (took 2.139361329 seconds)
loading group "array"... done (took 22.617660887 seconds)
loading group "misc"... done (took 2.060517377 seconds)
loading group "sort"... done (took 3.457435093 seconds)
loading group "collection"... done (took 19.569525902 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.574124217 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142862458 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.153199895 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.149440069 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.190404431 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.156503542 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158722976 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098962338 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 2.015685048 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174647567 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.154649045 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.525426402 seconds)
done (took 5.291765295 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.246610166 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094419909 seconds)
    (2/2) benchmarking "String"...
    done (took 0.104680509 seconds)
  done (took 0.939347377 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.078164547 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145024574 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094762004 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.080476226 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.096003074 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077554521 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095109655 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.077964723 seconds)
  done (took 1.41206433 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.086780413 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.097513379 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.08152384 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.09725212 seconds)
  done (took 1.108898903 seconds)
done (took 4.533707336 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.736765379 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.279777537 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.208354497 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.466406471 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.198622332 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215965532 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.67876395 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34630377 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.25885509 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.100392042 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.14404993 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.388474384 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137964264 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.689006215 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.091188098 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.124318593 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.178486537 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.45985828 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082316352 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.110636124 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.120437886 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14226446 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.1303679 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.0906568 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.185933629 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081921025 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.194451583 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.108563566 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080185597 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.288682895 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.200299841 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.690884672 seconds)
  done (took 10.995042291 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.110091253 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.134556701 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.098738669 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137742346 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135148991 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.099685462 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.083739117 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096951049 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.121069589 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.17639758 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.113647208 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.138103816 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095427277 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.083067191 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.116878247 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.245160912 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.120698327 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.099235168 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100896009 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.087338105 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.13724324 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.112596546 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108386147 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.094433912 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166317591 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222553602 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.112756617 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.126668002 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.096902724 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.11290586 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.143779014 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.14211617 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.095344142 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.079863326 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172822669 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124731541 seconds)
  done (took 5.205211233 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083532301 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.189421513 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121464091 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170939652 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.128469643 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.081189303 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.143629516 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.095551622 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.115487706 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.257416359 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.123591516 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.162665217 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.141361939 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.116363164 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.080183046 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093674906 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.098198385 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.080771387 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.631827074 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.156902566 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.135416839 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.095487717 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104937259 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.100360522 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.368952071 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.088163544 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096266136 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.081592972 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.082488484 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160363468 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081559426 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.155948798 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.101472616 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.101011756 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133373642 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.201227847 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.127175159 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.117450607 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096241908 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077506348 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.191121852 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087943094 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096493894 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.101999185 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.134583875 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.134785621 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096980631 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080807362 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.203723119 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.097089974 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113425455 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.929863579 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.182995898 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.09158166 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.098291222 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.321198304 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.097909043 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.098482189 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.081628477 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.276493201 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.191766531 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098400826 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.078799492 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096762146 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.080345598 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.400326626 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.082841993 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.671567275 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084434425 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.108966083 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.083672758 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.099150763 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.105852365 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088608124 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.116839011 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.080063128 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.100605996 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.078546371 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.099465327 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.080458337 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.107750197 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.101676983 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.080633106 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.165187791 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.078901004 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.11674913 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127160181 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.083167407 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.096346927 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.128939076 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.082782342 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.097704645 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133304108 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.080077875 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.123141943 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106318812 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.098606191 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.126723173 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097488998 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.13683859 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.096278254 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.125188253 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.099612678 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.113813802 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.1108051 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.098257022 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.084328707 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.095303946 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.075813857 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.095989651 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.14804816 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.095276823 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.079847358 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.099870221 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.10836716 seconds)
  done (took 22.438450292 seconds)
done (took 40.464346154 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.321009109 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.107212569 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103939254 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.104440075 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.101498356 seconds)
  done (took 1.562938227 seconds)
done (took 2.357979322 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.291058541 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.173250846 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.097252572 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168385922 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.094491657 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.174525628 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.161242598 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.111939855 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.201589596 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095517972 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.163865897 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.095344912 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076518965 seconds)
  done (took 2.728053585 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095243828 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115809283 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.081931248 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111561627 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076238093 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.115280958 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092647533 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.118282968 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110879214 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085465836 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.095118022 seconds)
  done (took 1.895995326 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094798835 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.114052091 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.082546887 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.110709153 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076204013 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111200472 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.091650476 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.116762734 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110369309 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.085606283 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.094260196 seconds)
  done (took 1.879328033 seconds)
done (took 7.28719547 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.092219501 seconds)
  done (took 0.883054359 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.930544992 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.966652717 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11450566 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.1496254 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.317463111 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.191859415 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.478922591 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125297381 seconds)
  done (took 11.255979725 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.146034196 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084316081 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.104805135 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.08501049 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.105317045 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.084739949 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.102248907 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.103089431 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.083697874 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.101108563 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085857812 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102291113 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.102810105 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.084784619 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.103196592 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.084189689 seconds)
  done (took 2.419064411 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.118966172 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117930079 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107517465 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.109851077 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.085733537 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.107106233 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107222387 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.087798999 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10385594 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104702951 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090451357 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.108057024 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104613623 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.080094651 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.106667265 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108913169 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085585592 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107590287 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107320002 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.090876697 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.108091299 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096563163 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087168261 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.108245282 seconds)
  done (took 3.347325995 seconds)
done (took 18.698497426 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.16058652 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109823373 seconds)
  done (took 1.068164855 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.096347185 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114310869 seconds)
  done (took 1.012832865 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.097639671 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.097562661 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.123022425 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110488125 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.080688348 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097865345 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120029929 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.080426822 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098883749 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.080052648 seconds)
  done (took 1.792092989 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.083302842 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.111164095 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.102694403 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095236943 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106845434 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.095982654 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088076541 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.100591496 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110764839 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077369006 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.103934179 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.114966896 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.085615417 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.117757313 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.106087354 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.08252671 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.103653116 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.099980176 seconds)
  done (took 2.593644663 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.080819524 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.098399373 seconds)
  done (took 0.985886557 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.082378832 seconds)
    (2/7) benchmarking "second"...
    done (took 0.09506132 seconds)
    (3/7) benchmarking "month"...
    done (took 0.080322444 seconds)
    (4/7) benchmarking "year"...
    done (took 0.098638354 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.09431852 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.077719018 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.095085892 seconds)
  done (took 1.429618793 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.488789887 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.136235844 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.26308586 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.084069396 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121299233 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.302985944 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.100271479 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.084782879 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.105161041 seconds)
  done (took 2.551801792 seconds)
done (took 12.234606883 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.094211348 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.116978312 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.111395818 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.469874569 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.10775101 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.101103185 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147899194 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.252308084 seconds)
done (took 2.209536878 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145589657 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.40872502 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.099542711 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.086107613 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.082553561 seconds)
  done (took 1.487421729 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.081002387 seconds)
    (2/2) benchmarking "read"...
    done (took 0.100738567 seconds)
  done (took 0.992353876 seconds)
done (took 3.437412157 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081769529 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.097625919 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.110793571 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 0.099073453 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.079697391 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.098424575 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.077142347 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.097283067 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.078734579 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.098911469 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 0.096989783 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 0.081118384 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.096456438 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.07829246 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094839941 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.08100947 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094956959 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078039989 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.098137719 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078639669 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.097350688 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.0772658 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.09462611 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.080378091 seconds)
  done (took 2.993512633 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100452952 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.099646552 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102970861 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086178232 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.103017791 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.085935719 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.106440571 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.098806769 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086596148 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.101105749 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.100568698 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085824339 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.100703788 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084173751 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.101014267 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.102531478 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.087096402 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098803346 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.082409094 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.104069572 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.103295573 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081748421 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.103183346 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.085168113 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.103022709 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.102402429 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082519524 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099272608 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.103680797 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085826053 seconds)
  done (took 3.680965839 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086031036 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.094465646 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079674456 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.103107686 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.078450395 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097805224 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077397606 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.097127841 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078726062 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.096016447 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.078710114 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.09677566 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.076957631 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098522642 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.077774641 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099953835 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.108451425 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.078624516 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.09585319 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.079668519 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09905 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078742098 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.09615133 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.078051499 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.09568479 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.078385508 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096452753 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.078347043 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.09668094 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.078148572 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.099872197 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081771357 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.09764406 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084157336 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100847009 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.077900086 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100275955 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077140948 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097331623 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.076982563 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.097327598 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.093632357 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079515042 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.102480431 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079454048 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.098441798 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079321644 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097548937 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.078954419 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099895393 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077549821 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.0980898 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.081615426 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.100993793 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.083930744 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.099126583 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.080254059 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.099737234 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.098404342 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.080070796 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.096703875 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.080121968 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.100561995 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.081682083 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.114727802 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.0874442 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.099295735 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.081821721 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.100793012 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.082143236 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.100681518 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.094783824 seconds)
  done (took 7.292123429 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084333123 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.107768064 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.079677809 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098773999 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076465335 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098682912 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.099248239 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079846817 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.097712735 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.084347471 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097286957 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079315823 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.099483067 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.108133521 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080090472 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.0984035 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084715076 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.095388943 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.078804954 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.10356345 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.080853129 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.103908075 seconds)
  done (took 2.836824483 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.209448901 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106135573 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.143723391 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.108305822 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083211031 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.107263142 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.103764509 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.089056198 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.105894774 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.085386245 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105226805 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.105585791 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.084797704 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.104184211 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.102779687 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086745246 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.107046396 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086323618 seconds)
  done (took 2.745991554 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094131203 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099847889 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.102107902 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100375539 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.09977415 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.084175856 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.105415934 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108181701 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08407844 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.098733923 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.090221203 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103472051 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101493454 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.081694357 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.103943704 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.083569409 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.105279825 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.082015313 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.111363432 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107784865 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.088546349 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.112167424 seconds)
  done (took 2.971677672 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097447688 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.101412108 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.117611521 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084704447 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095800804 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.079467645 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.107187547 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.080035052 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.110133525 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.100265279 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.081864003 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.100001617 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.088368253 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100912746 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.10461216 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.082249317 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.102265673 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.081494622 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.102492175 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.076549608 seconds)
  done (took 2.720144557 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.212740998 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10218805 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.100807203 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092742775 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.102574538 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.082339932 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.111221045 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.102007907 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.083592764 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.128764373 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.104702548 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.084503941 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.113264044 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.110493363 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.102557558 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.094916748 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.11464485 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.113138377 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.084945811 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105125067 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.129780016 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.084070337 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.113854606 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.103447727 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.083495861 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101761593 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100545021 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.088660576 seconds)
  done (took 3.779734174 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082055533 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.099294775 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.079543658 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.097240713 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.079308743 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.096739121 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080401712 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.099380613 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.084734473 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.100415521 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.083416619 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.102449041 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.087089873 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.102544657 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.084016473 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.103185287 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.084432925 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.100359037 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.080945615 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101087622 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.083480602 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102770234 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.082820884 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.100945912 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.08106841 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.102979143 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.080483465 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.100283862 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.082754728 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.100436854 seconds)
  done (took 3.576145496 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.092166926 seconds)
    (2/2) benchmarking "in"...
    done (took 0.107667201 seconds)
  done (took 1.028092317 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079749941 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.114957613 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078311821 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.10497377 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.08519163 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.101894586 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108224183 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.086564096 seconds)
  done (took 1.588564468 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097016866 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.111284518 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082905837 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.114026617 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110272269 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.097443448 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.171234645 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.102148767 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.086056747 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099487164 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.113686774 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.081255098 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.106458017 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.081388097 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.106742676 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087008018 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.098962438 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.105432343 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.085552452 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.098852764 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.08322719 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111232671 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085373074 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.101493898 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.105107517 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.092218203 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.113855292 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.082342438 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107766495 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.110644461 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.089791287 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.097162545 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.084915595 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.105105968 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.081623201 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.114413796 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.120508815 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.087740917 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.114470503 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.0845869 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.116665993 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.099054161 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.089635674 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.110341056 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.094487379 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.105218448 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.104192847 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.079549993 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.101426937 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.087582568 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.098274597 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082567214 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.097424555 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089126349 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.105192418 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111137498 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081396248 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.10211306 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.084446187 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.105291357 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.087175982 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.103511634 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.102142301 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.082541582 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.107920044 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.085656505 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.11107739 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.07710734 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.098322817 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.081306045 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.114509037 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.128937543 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.093687653 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.105730124 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.104082458 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.081730849 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.107080995 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086298422 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.111023915 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.088416747 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.103217961 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108468555 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.09006123 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102415052 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.08476802 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.111134352 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.099287211 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.084687969 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.10026526 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.119927555 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.083600917 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.101152941 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.082002328 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.114789617 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.087148384 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.103769046 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080030071 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.1091231 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07498159 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.101958527 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.101711324 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.082670702 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.112129744 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.105781099 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.089813213 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.110532533 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.088655104 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.101388737 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.10395296 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.079981554 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.102452484 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.084207466 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.107507338 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.075864098 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.105523125 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.082822999 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.102111826 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.109040299 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.080764432 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.101954624 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.089556178 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107033606 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.080038218 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.098529142 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.084452215 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.101893312 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.104364003 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.091531805 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.100603988 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.076622393 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.097441728 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.084180226 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.102044544 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.104323089 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.087376336 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.105219286 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.076348074 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.099770833 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.104546832 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.09197231 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.101927533 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.08296499 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.110177727 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.084637358 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.104762058 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.11013536 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.086891708 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.102739806 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.089262781 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.105355253 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.077114386 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107997402 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.103101306 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.081728836 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.104488384 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.086044047 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.103683628 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.082225894 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.100718373 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.107467329 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.083735044 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.100055343 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082796085 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.100872092 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.093998453 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.105737379 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078659547 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.102281275 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.111080131 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.080142015 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.103527959 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.083372131 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.107846714 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.085738184 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.104388112 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.083816085 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.107658217 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.11794848 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.088982901 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.107300056 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.110520513 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.096836197 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.105060016 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.087316742 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.10514159 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.086351398 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.106702376 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.114479427 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.090288666 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.111357214 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.087496144 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.102483505 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.110025183 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.093578252 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.103890131 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.083800947 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.104034878 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.088146615 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.112258387 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.108013409 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.086903973 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.103286628 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.085770084 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.109766341 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.087568958 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.10610908 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.083346745 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.11148217 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.10408969 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.092588776 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.107698707 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.117063429 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.089956538 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.100098971 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.089177854 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.10391215 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.091036242 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.101758339 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.082231048 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.105294025 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.105547114 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.085865914 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.108567822 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.079818314 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.112611823 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.093060057 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.106148669 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.083655189 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.106479415 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111913971 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.087273256 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.108898396 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.088783487 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.113229789 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.115295867 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.086414459 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.107788979 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.097648446 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.106274232 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.07870641 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.112156479 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.083182944 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.106383365 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.103556187 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.083901772 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.108813561 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.095596728 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.113919855 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.0768522 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.108011788 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.100270213 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.081675212 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.099516412 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.08809738 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.107651735 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.086276273 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.113128233 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.105688693 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.087429614 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.1090816 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.085799913 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.106372396 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.086022755 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109155454 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.105253726 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.088964454 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.105066729 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.088928108 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.10737619 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.08269453 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.107219559 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.085623993 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.106225313 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090637929 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.105882088 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104817341 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.087129008 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.104509293 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.084075323 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.104129541 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.082800439 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109072776 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.08466681 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.105367422 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.104143002 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.078761824 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.112066122 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.083424628 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.113621427 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.082072152 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.101662285 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.108120358 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.086980623 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.109826703 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.083143604 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.106521227 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.083679589 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.104740805 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.105892793 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.09050118 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.100608571 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.09496082 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.115258261 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.105299415 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.089245029 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.105910547 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.087441772 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.105086331 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.086786284 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.107302466 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.084961251 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.106819271 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.109514361 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090250444 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.105713245 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086857695 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.106767546 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.085510362 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.107566868 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.078593778 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.106159349 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.083554007 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.105357231 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.11474766 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.083908379 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.109080336 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.083770538 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.108125456 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.084088149 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.103366579 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.113966256 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.096311856 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.108174387 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.11333388 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.085878023 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.106922117 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096854954 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.101318894 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.082933101 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.10563127 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.082837595 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114484939 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.104552299 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.092996349 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.102265906 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.081605487 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.100053153 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.083294111 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.104833644 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.078157975 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.104115381 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.107327593 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.088022283 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.102151831 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.084312263 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.105008632 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.084064902 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.114355143 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.109194299 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.083878247 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.102694748 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.079653119 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.10092807 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.082843345 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.105870181 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.084117412 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.101268491 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.079750954 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.103281424 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.082709927 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.104887894 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.101614233 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.085296248 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109339771 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083003269 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.10619034 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.086166611 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.098065524 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105425101 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.083417606 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.102239969 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.082088055 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.107582747 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.085817112 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104775527 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.111103689 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.083512794 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.103112042 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.083825052 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.100713994 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.082886473 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.103248697 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.082959612 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.102328703 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.10323446 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.092129585 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.101371019 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.085968855 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.102660306 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.082455446 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.111179694 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103127481 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.086552674 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.111451157 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.086068712 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.105067006 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.089886505 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.10699569 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.105703082 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.08374249 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.105099686 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.088053805 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.102920408 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.108229695 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083560474 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104214051 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.084670413 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.100470411 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083190355 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.103549349 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.081307812 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.109535356 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.102552084 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.082915744 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.101150905 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.081860756 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.103466388 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.087163215 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.111815027 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.084150374 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.106469389 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.097766112 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.080920406 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104368871 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.081041086 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.105466318 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.086977235 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109729375 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.084672331 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.104381265 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.100958963 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.09371026 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.109245952 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.086677142 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.102218724 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.086998244 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.105566159 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.104706568 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.084812436 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.103067965 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.085445721 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.107997027 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.084500406 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.103948201 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110147956 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.088073092 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10441594 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.085481775 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.104235451 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.083125274 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.0999627 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.084245099 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.106059566 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.107905871 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.086370781 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103245966 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094148149 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.104547614 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.082435148 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.108257312 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101989856 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.08934607 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.098367987 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.085917612 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.104980965 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.083957258 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.099704265 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.081869714 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.102317675 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.10478703 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.084324236 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.098289124 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.094443163 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.112968812 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.086694645 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.103318367 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.101612172 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.079267781 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098275907 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.083618448 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.106154455 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.084768487 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.115004955 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.081783031 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.102696662 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.096963686 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.084880955 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106574905 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.087052519 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.100737473 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.078980204 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.102465794 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.086742876 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.11066525 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081055025 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.104231147 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.106797975 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.086434726 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.102126472 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.086965466 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.100733851 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.08726463 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.118976385 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104805493 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.085247408 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.110645922 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.091686566 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.105994904 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.099389531 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.086130389 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.106424735 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.08388241 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.105671332 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.084439761 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.120714122 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107273382 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.083050616 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.103189644 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.086148458 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.104101325 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.091326449 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.105488192 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104675945 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.088599585 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.106334257 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.091821255 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.107138958 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.112646791 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.086737991 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.107632292 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.083107163 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.104763911 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.081215354 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.103715652 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104162036 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.086636647 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.10923423 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.09241659 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.104388354 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.113947477 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.093482257 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.109447692 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.079610788 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103939054 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.082756278 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100407528 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.086186587 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.107407152 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101908304 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.085169675 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.105289979 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.087755939 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.112562026 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085036454 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.107359875 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.084157016 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.102481221 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.087801971 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.111402931 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.104835581 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.083168505 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.107110807 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.087359582 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.110137552 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.087727082 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.104938813 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.084891017 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.105983903 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104351859 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.080791713 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.110494093 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.083998366 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.107001286 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.08312526 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.106247557 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.085056265 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.108532001 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.10990767 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085891328 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107193135 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.095370155 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.111295258 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.104676529 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.084963076 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.110289981 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.082634433 seconds)
  done (took 58.884369866 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.148183636 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.08148609 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.099117064 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079362841 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113550302 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.100368456 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.079962211 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.100787052 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080788959 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.105743182 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.081807966 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.105217469 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.113812523 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.129692533 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097457845 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.110885695 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.081649627 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.106353759 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.103354019 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.084576015 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.115261622 seconds)
  done (took 3.002590277 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105481894 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.119214145 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.116600815 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.119929332 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090146684 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.117243502 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.116054841 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.114898967 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.100322242 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.112880795 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.120369225 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115293096 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.092187961 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112667167 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.111085034 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.093186481 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.119979724 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.111304652 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.116688409 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095835889 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113992376 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.11639787 seconds)
  done (took 3.311625664 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085394675 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.103338599 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.085665451 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098748561 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083319352 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.099488721 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.08796996 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.1024099 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.086758412 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.103972304 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081719422 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103733944 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.104513182 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.080300202 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.104112533 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.082644739 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.152052177 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.108563731 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08317365 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.106271806 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.077622024 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.107814235 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.099429205 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.079533526 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.103710845 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088393891 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.10547958 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.082011908 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104977395 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081841458 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.105661922 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.081159368 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.106353784 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.083081459 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.104548493 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.10293415 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083893461 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103624405 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07964325 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.102027519 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.085493566 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100130461 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.08425578 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105944321 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.082038049 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102907011 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084977248 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.10502195 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.077916476 seconds)
  done (took 5.538588159 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105303543 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.161491379 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086569785 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.145169529 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.121807702 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114321972 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087400573 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.143602511 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.10392639 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.081742254 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.12460802 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.121579686 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104761014 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088700853 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.112847513 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104181938 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086122263 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.10342164 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107833142 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.0847522 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109353302 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.09011207 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120259046 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.119937248 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108796177 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.083438268 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.105101266 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.108947588 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097894813 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110346266 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110574362 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090775289 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.121932673 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.107421289 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082721936 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.109221238 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.123157074 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.084300965 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.108452606 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.103085964 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086865399 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.110674986 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.111347833 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.101846771 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.107092482 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.110163133 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.084597926 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102569304 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117897653 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.086808848 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.114654205 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.120645453 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088928189 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.111066417 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.114515903 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.125134279 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.089607062 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.108155368 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.09122814 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.124371314 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.107300201 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.091960568 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.124463289 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.112445342 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.095905914 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.125826953 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.116143182 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.113157563 seconds)
  done (took 8.314838447 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.093747448 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112434047 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121950881 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.120598783 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.091516892 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.112826419 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.111245293 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.090678138 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.113190019 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117792454 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.111697892 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.135354962 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086998305 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.115832887 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111691074 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.092014794 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.112521121 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.112254289 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090611197 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11288011 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.112414601 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.120734027 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.093068531 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.127000517 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.144983671 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.107158747 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.091782895 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.113692418 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.121509404 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.112107872 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.124698029 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.092481323 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.112882295 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.121635221 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.123702908 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.091277363 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.105661528 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.11167159 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091982497 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.112131252 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.10560894 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10050762 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.11557342 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.110944602 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093948575 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.116820784 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.126220526 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.128354334 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.118334816 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.100052068 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.117843789 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.126502876 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.116890115 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.09565334 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.126690832 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.153221823 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.126158522 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.126589917 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.117114627 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.105521572 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.126895359 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.135239302 seconds)
  done (took 7.88539347 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.109820583 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.115730282 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.119518054 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.101158708 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083859297 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109897113 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082336667 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.103689406 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.115563791 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095434968 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118688239 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10946964 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091363237 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118676815 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.110360454 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113206383 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088318973 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.115573396 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.120479768 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.092677328 seconds)
  done (took 3.014119251 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.093937394 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.12752204 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.086788736 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.118786783 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.114259754 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.094934857 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.114411219 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.112937467 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.091019627 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.114755087 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.100565921 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.123570684 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.112849908 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.095847039 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.123511809 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.118423539 seconds)
  done (took 2.645913627 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.100266115 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119516896 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.123258843 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.0869053 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.110943622 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.084206596 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.111764305 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.105441447 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.082999586 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.123545107 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.08460266 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.11091152 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.110000325 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.087103528 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.107901271 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091069377 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.108706572 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.086302268 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.112331015 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.125800982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.099815415 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.110239887 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.088948811 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.114417785 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.111878225 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.094091224 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.112630061 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.108908833 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.087812649 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.111246064 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.089730724 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.119774271 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.107350222 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.089236142 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.109514795 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.086271052 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.112097104 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.08887544 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.115210712 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.110506733 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.088369953 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.11145449 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.089741045 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.113335153 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085249853 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.112377204 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.083927921 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.118163911 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.109982637 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.089222678 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.111985474 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.090341865 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.114293367 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.122537747 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.093496339 seconds)
  done (took 6.580181846 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.10277215 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.112695605 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.085435345 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.110380642 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091380134 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.114558412 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.114393333 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.093340059 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.113641292 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.087214633 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.114248352 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.093110749 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.115054862 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.114692057 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.092352365 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115851117 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.085714479 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.113781199 seconds)
  done (took 2.780533723 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091661801 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.109995304 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.097423476 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.112294548 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.088902781 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.115651781 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.084517859 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.111278445 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.10936391 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.090553104 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111518491 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.091757181 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.111181444 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.09193786 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.112250297 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088842013 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.115741333 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109046426 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.090084038 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.107116274 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.0930765 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.110678857 seconds)
  done (took 3.149788117 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.121000142 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.132437437 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.096712534 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.243497974 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.10863944 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.140558849 seconds)
  done (took 1.749296572 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109678327 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122014994 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.109083932 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.111847055 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.122479114 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090637618 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115060915 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.113794837 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.123384486 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.106827894 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.115115532 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.1250482 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124204775 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101336093 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.120954637 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.121141702 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.112830766 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092385286 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.113370021 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.135631604 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092143036 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125033544 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.114514507 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.091353568 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114391763 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124741118 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.125572689 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.105518287 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.115057428 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124472193 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.120049158 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.091537324 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.124577457 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.129746724 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.092587449 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.125194376 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.115202522 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.134697834 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.119673454 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.10207383 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.116378194 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.120651502 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101777029 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.120498518 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.124868669 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.114159284 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098102194 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.114852094 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.113898275 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.141676221 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.09844487 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124680097 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.121858239 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.124240443 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102825218 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.141331908 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.128447857 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124899813 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122127162 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.128345822 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.124256796 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099711142 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.1237555 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.129627524 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.12197366 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.101835056 seconds)
  done (took 8.572703331 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.102856401 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.127979558 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108956465 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122541384 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.096967851 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.10975735 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108762869 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087848788 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.110112697 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107902192 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.152740666 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088823694 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119068306 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118687225 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087365173 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110415528 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109768815 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118749717 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087516426 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.136434703 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110251824 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118430866 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096775327 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.119062208 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.124237429 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116584826 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.107968883 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088879797 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109329611 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.086225853 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.116412876 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110247869 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.119288445 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.086911676 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119677622 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.110395866 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086705071 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.116205943 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109994827 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114614025 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098311249 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129751835 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110890153 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108256224 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101922372 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10954527 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.110452849 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087217989 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.110258039 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107748186 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.102323313 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124037783 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.124299326 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.119018173 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108494684 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08850137 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109246196 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.109342721 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088056845 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.117037903 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118451034 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087868191 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.137626341 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.110021032 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.109198639 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118094258 seconds)
  done (took 8.146152996 seconds)
done (took 159.595507292 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.234099731 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.232449073 seconds)
  done (took 1.378747585 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099546008 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.142402703 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.100667023 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.175561609 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.107130079 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.120479313 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.138780608 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097496318 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.108715836 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.085325256 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.107979879 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.087375336 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.188751547 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.084959024 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.10902208 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.109685702 seconds)
  done (took 2.782220523 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.201115317 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.256161717 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.102752143 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.107748623 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08894731 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.112672465 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104585597 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.092007115 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.111794217 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.085898545 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.110661157 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.086016507 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.10758574 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.085757169 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.112386125 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08787883 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.107775071 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.08713073 seconds)
  done (took 2.966489563 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113808609 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.150215999 seconds)
  done (took 1.188773887 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.121937351 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.181474131 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.319581848 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.157032875 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107538248 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.128615649 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.158304644 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.13178645 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.198883111 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.124956134 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.124369065 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097656596 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.141107236 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.116181443 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.093123484 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119346733 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.143021537 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.092629653 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116930635 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.116774604 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116991968 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107561639 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.11496048 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.094169528 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.182395678 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.121208831 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.084659215 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.108910657 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.117052821 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.09446552 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114522526 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.125734708 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098202798 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.179143303 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.10188767 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.178296062 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097405271 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.11311976 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.093897719 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.113987005 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.120069359 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118043042 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10486834 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.120048834 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.084655365 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.120594867 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.106276787 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.085794514 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.118392579 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.09903435 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.12035403 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.115173563 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.156421811 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119505005 seconds)
  done (took 7.654556659 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.799060581 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.157044842 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090487211 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.888364361 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.135856248 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.104471237 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.780938274 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.111262118 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.25651434 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.758081939 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133572286 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120319046 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.204557317 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.258505421 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.95574242 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.291591613 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.667990393 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.127648463 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.153801828 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153969746 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118950022 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.136565792 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.108954331 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.429381291 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.116911378 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111043645 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095400516 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.119821942 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.15979844 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.125630683 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.112937222 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176848144 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.249403026 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.205270078 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.093472421 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.112406047 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.110282991 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.17103865 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.265466322 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.191135431 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.180500842 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.109499539 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.08840105 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.12205569 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.132845206 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.086335507 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.184631211 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.174630532 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.168304516 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.11593164 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118253165 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.098416401 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.121766483 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.163064876 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.121608925 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.318568446 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309730164 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.089278499 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121980402 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.12647372 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.261503162 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.101521727 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.226090353 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.139003923 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.210389799 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.091088706 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.798474405 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.168868449 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.11126868 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.095963914 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.121179589 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.11580391 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.098740852 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.167292699 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.391944733 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.124653805 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.115060352 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.089815407 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.235186598 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.10260916 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.11223496 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.161965113 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.118330338 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.120580965 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.102101256 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.122549364 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.167651952 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.256176333 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.101312732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120248911 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.115557623 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.102385439 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.117768047 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.211686897 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.21998467 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.163312588 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.230022268 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.099886081 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.184973753 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.168589902 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118643684 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.173253715 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.11931335 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102101835 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.122648414 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.216744674 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.145716042 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.123766273 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.094239622 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118820992 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.148800886 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.126598084 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.096107949 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.192983367 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.462001954 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168913119 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.109907646 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.127298783 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.097862221 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.160812297 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.118608658 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.258685835 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.121567585 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.17081243 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.119516009 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.087775062 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.120964589 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.168712085 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.122004195 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.120361138 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.100595679 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119923233 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.235573057 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.217123223 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.121161487 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.220058758 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183369179 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.118806516 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.172143494 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12123963 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168007258 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.119873381 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.097452782 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118538514 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.79174264 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.123190377 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098566542 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116595266 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.188633037 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089817552 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.125322592 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.125154971 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.087562999 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.77910639 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.128371441 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.121478359 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.102782786 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.119338217 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.120461858 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.09639246 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.116725986 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162586426 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.229421183 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119882022 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097546186 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.125213767 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.159932955 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117522635 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.126263103 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.1022002 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.126029117 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.122299131 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.114107287 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.103788775 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.168082862 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.186443768 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.21787102 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.568497497 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.112883978 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.123897232 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.204348901 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.113757661 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.288453689 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.09699375 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.225609215 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.184801053 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.100241252 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.308728019 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.166444743 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.188997486 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.128608085 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.173440422 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.110825018 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118142316 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.16707172 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.08912437 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.118664032 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.162700551 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.126825983 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124274957 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.962095011 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090157867 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.223801876 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.110783946 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17220171 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.117900041 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120153009 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.272306271 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.11366982 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128769812 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.166046893 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.116739051 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.10294198 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.733882795 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.124997867 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.099836543 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119703272 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.221522463 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.164370005 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120598055 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.096089703 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.121758594 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.161525181 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.231376443 seconds)
  done (took 44.063979549 seconds)
done (took 60.949532056 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.286683646 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.220218411 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.270622178 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.172134479 seconds)
  done (took 1.97443336 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.174099002 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.1517402 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121670642 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109886189 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.152833088 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.08453193 seconds)
  done (took 1.739165884 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.367035418 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.279051114 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.245522309 seconds)
  done (took 1.842581479 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.320698755 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.252132667 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.477009682 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.327280545 seconds)
  done (took 2.427368136 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.210664232 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.134123438 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.112450302 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103916839 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199741039 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.24752977 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.14385143 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.203269717 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.098083139 seconds)
  done (took 2.448993527 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.1993787 seconds)
done (took 11.581545822 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.330835491 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.162570705 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.228649217 seconds)
    (4/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.094195061 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.233455809 seconds)
    (6/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.133468278 seconds)
    (7/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.222821158 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.178056728 seconds)
    (9/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.144877386 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.10972857 seconds)
    (11/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.204682061 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.130573486 seconds)
    (13/286) benchmarking ("sort", Float64, true)...
    done (took 0.231117453 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.10013929 seconds)
    (15/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.241483273 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.213663265 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.176530181 seconds)
    (18/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.233763088 seconds)
    (19/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.107847079 seconds)
    (20/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.125434482 seconds)
    (21/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.236868315 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.227653761 seconds)
    (23/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.127813746 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.099182149 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.230351373 seconds)
    (26/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.208927681 seconds)
    (27/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.10428479 seconds)
    (28/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.18652256 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 0.218449186 seconds)
    (30/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.120800163 seconds)
    (31/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.117139429 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.118509624 seconds)
    (33/286) benchmarking ("sort", Float64, false)...
    done (took 0.172417301 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.154645538 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.093379105 seconds)
    (36/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.172867579 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.097864021 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.124878716 seconds)
    (39/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.072616191 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.127213365 seconds)
    (41/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.196079428 seconds)
    (42/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.09547809 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.117253812 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.09348363 seconds)
    (45/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.202763718 seconds)
    (46/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.175757821 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.086539483 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.110709444 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.093166607 seconds)
    (50/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.098785179 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.111157372 seconds)
    (52/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.172831791 seconds)
    (53/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.183833888 seconds)
    (54/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.098270113 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.129116397 seconds)
    (56/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.193740636 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.156213345 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.112518297 seconds)
    (59/286) benchmarking ("sort", BigInt, true)...
    done (took 0.218830002 seconds)
    (60/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.121927848 seconds)
    (61/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.140426621 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.187966965 seconds)
    (63/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.094110898 seconds)
    (64/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.12077034 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.094539701 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.122316072 seconds)
    (67/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.180317931 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096236415 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.121475777 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.137582406 seconds)
    (71/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.076606058 seconds)
    (72/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.091473183 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.219077379 seconds)
    (74/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.194714789 seconds)
    (75/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.07186484 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 0.119710832 seconds)
    (77/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.072176343 seconds)
    (78/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.12191431 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.14430665 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.103620526 seconds)
    (81/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.090181464 seconds)
    (82/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.083698724 seconds)
    (83/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.083703044 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.111297172 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.139959246 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.088258925 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.111278419 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.114072165 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110159403 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.1882859 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.086705235 seconds)
    (92/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.08964046 seconds)
    (93/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099325102 seconds)
    (94/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.221466071 seconds)
    (95/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.066532215 seconds)
    (96/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.186109303 seconds)
    (97/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.06684964 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.114616196 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.113061662 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.115475578 seconds)
    (101/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.108082666 seconds)
    (102/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.159246162 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.128038428 seconds)
    (104/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.0868887 seconds)
    (105/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.192560519 seconds)
    (106/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.142671101 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.196388418 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.09428159 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.133281501 seconds)
    (110/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.093514607 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.186916086 seconds)
    (112/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.101138593 seconds)
    (113/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.067152893 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.128384172 seconds)
    (115/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.068398396 seconds)
    (116/286) benchmarking ("sort", Int8, true)...
    done (took 0.214569551 seconds)
    (117/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.076807002 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110383891 seconds)
    (119/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.094850847 seconds)
    (120/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.178962065 seconds)
    (121/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.116914065 seconds)
    (122/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.068311154 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 0.181421262 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.119232495 seconds)
    (125/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.114895058 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.118770769 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.093162628 seconds)
    (128/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.171454012 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091872875 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.119500628 seconds)
    (131/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.138847482 seconds)
    (132/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.094413838 seconds)
    (133/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.12617194 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.093659706 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.111503319 seconds)
    (136/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.066279668 seconds)
    (137/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.091187058 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.086238405 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117454886 seconds)
    (140/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.087178735 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.119923501 seconds)
    (142/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.152144594 seconds)
    (143/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.112183762 seconds)
    (144/286) benchmarking ("sort", Float32, false)...
    done (took 0.176150269 seconds)
    (145/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.088002418 seconds)
    (146/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.118105452 seconds)
    (147/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.102552667 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.20112755 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.067239397 seconds)
    (150/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.141308197 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.094783232 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138771715 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.110323632 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.11103121 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.091674622 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086765842 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.137612321 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142445944 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.083374398 seconds)
    (160/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.067835875 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.125074331 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085639056 seconds)
    (163/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.189209571 seconds)
    (164/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.118093445 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.144255263 seconds)
    (166/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.100739637 seconds)
    (167/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.097339896 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.111923909 seconds)
    (169/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.187364625 seconds)
    (170/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.094282866 seconds)
    (171/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.119883741 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.192560305 seconds)
    (173/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.149011945 seconds)
    (174/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.09098064 seconds)
    (175/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.150621797 seconds)
    (176/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.1159239 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.093488684 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.167052172 seconds)
    (179/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.289461491 seconds)
    (180/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.120076702 seconds)
    (181/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.066193231 seconds)
    (182/286) benchmarking ("sort", Int8, false)...
    done (took 0.188332279 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.121916839 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.066716324 seconds)
    (185/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.091666149 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.085571543 seconds)
    (187/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.155834283 seconds)
    (188/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.067399457 seconds)
    (189/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.175057789 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 0.215883889 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.085044524 seconds)
    (192/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.093197045 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.067378285 seconds)
    (194/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.142469066 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.086885779 seconds)
    (196/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.19021113 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.086937634 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.093663262 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.086134135 seconds)
    (200/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.092629156 seconds)
    (201/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.069629915 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.136832414 seconds)
    (203/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.125353622 seconds)
    (204/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.116906661 seconds)
    (205/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.066116632 seconds)
    (206/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.166927139 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.119713566 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.094845403 seconds)
    (209/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.100462455 seconds)
    (210/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.087976954 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.119134584 seconds)
    (212/286) benchmarking ("sort", Float32, true)...
    done (took 0.224027497 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.089526195 seconds)
    (214/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.118189461 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.086716211 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.115736368 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.068402478 seconds)
    (218/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.149218062 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.08628036 seconds)
    (220/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.067134914 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.114414133 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.090442582 seconds)
    (223/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.111928261 seconds)
    (224/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.068280824 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.092184691 seconds)
    (226/286) benchmarking ("sort", BigInt, false)...
    done (took 0.221260832 seconds)
    (227/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.069320616 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.114266968 seconds)
    (229/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.067508716 seconds)
    (230/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.119214963 seconds)
    (231/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.067647424 seconds)
    (232/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138902597 seconds)
    (233/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.139269829 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.118052631 seconds)
    (235/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.085904539 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.119991334 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.128455899 seconds)
    (238/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.068491478 seconds)
    (239/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.110798384 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086573826 seconds)
    (241/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.119099282 seconds)
    (242/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.077235333 seconds)
    (243/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.135293459 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.067783281 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.117285369 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.089619107 seconds)
    (247/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.066682277 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.137204895 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.12047438 seconds)
    (250/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.115190246 seconds)
    (251/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.160275034 seconds)
    (252/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.066937632 seconds)
    (253/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.093064034 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.088796811 seconds)
    (255/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.138821258 seconds)
    (256/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.078186844 seconds)
    (257/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.093391015 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.069738068 seconds)
    (259/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.084703771 seconds)
    (260/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135283421 seconds)
    (261/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.091353889 seconds)
    (262/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.091380752 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.117990384 seconds)
    (264/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.079279884 seconds)
    (265/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.143743588 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.089307162 seconds)
    (267/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.112146712 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.086427118 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.125007775 seconds)
    (270/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.076525153 seconds)
    (271/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.06692325 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.09259394 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.086196618 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.119469903 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.085486094 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.11620612 seconds)
    (277/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.086283321 seconds)
    (278/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.118025413 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.08623203 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.117455077 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.06659414 seconds)
    (282/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.091585169 seconds)
    (283/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.078741061 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.067580845 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.110869603 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.086186811 seconds)
  done (took 36.491034376 seconds)
done (took 37.442442573 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.104091261 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.149666942 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094761926 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.136460204 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124625171 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091905982 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.119587784 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097486176 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.125433325 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.125971712 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.097735715 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.094332149 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.099176756 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.121549302 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.095775439 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.140594171 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.123469356 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.094823836 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.120080243 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086000207 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120822004 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.085299066 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.113782701 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.069242024 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.123738345 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093908697 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.118953351 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119982591 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.087823691 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.110657895 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.090867888 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117981005 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.08670227 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.124706382 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.093656922 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.119707295 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097041889 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121717129 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.086802237 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.112591744 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117361735 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087982009 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.116112172 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.095779825 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.116218376 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092295131 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118636642 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.098306648 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.140664194 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114649565 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.096465882 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120778244 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.095543003 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.117953736 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090495162 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119731278 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.090952681 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.14087787 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119292145 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.091766232 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.119278689 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.094493657 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.117304028 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.094335056 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.120973209 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.095530966 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.123447537 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.115763069 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.097854589 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.117041911 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.087299452 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.119991563 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.08990492 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.112144636 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.095445815 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.122956785 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.085397187 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.118577864 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.092878391 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.117656508 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.085771313 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.114276032 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.112205883 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094270998 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.113615622 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.07154577 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.090022544 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.117896429 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.086136341 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.120294092 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.116334433 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094324307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112022259 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099161583 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11058908 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.092029999 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111373548 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087187612 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.113111814 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.091264564 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.110834244 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089019646 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.120523642 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.088845147 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.118547436 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098433235 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.11317903 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.092074408 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.112008961 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.084994507 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.126679961 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.122264653 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.08676286 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117106712 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086690127 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.119587157 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.086035461 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111762416 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086632809 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.112148215 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092241808 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.112521334 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.08970695 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.120122772 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.100968808 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.111993935 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.090336377 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.115643124 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.11016642 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093713834 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.111026789 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088001171 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.112213641 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.079510884 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.088667544 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.112916331 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.118486917 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.09098022 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.119504807 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089170854 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120104014 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.091608494 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.118037882 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.093473795 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.110986669 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074431225 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.117667827 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090182372 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112378664 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087330494 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.113668404 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.086740439 seconds)
done (took 17.048805055 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.088694471 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.185710787 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151474839 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.142685972 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.107786451 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.113710549 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.12232191 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119557187 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.115063842 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.143341306 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.110816565 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.133276989 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.149214586 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086553827 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.113076763 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.092185122 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.114304951 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.102031007 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.148179852 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.134578014 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.164118791 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085853101 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146691729 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.136826152 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.120731725 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.115834483 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.112337569 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091277471 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.115697759 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.10326965 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.135469366 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.116729141 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.089193099 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.136895761 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.105077154 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120995583 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.087025412 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.120354944 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085942166 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.113760224 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.141532017 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.134693027 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.094217801 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.117963096 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091880904 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.115696329 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089372764 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.122236582 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097496888 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.118355174 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.126602732 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.156256267 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091516284 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.124251837 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.086477524 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.124342905 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.121337878 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090677165 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.112305844 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090933884 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.111393597 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091569816 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.128064348 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.141973563 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091379322 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.123205121 seconds)
  done (took 8.718265404 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.10534731 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.140565584 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103876299 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.132143928 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.111944504 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088378616 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.113178437 seconds)
  done (took 1.809281586 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089478185 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.134882597 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111986408 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.137450279 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.132732058 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.110353748 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.124236592 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088652266 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.132397907 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.088267079 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.136714539 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.152310055 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.089464327 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.122540804 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.137806944 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.088518843 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.138622304 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.089252962 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.11775604 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111585134 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.11813982 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.13536006 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.09077469 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.11411999 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.103170502 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.115059718 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.162020721 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094537212 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.115920909 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.09233171 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.112989904 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.166522662 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.103407622 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.126257096 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087327515 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.130434352 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.128510421 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.087421651 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.131502837 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.093801783 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.129281819 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.089113028 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.116464153 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.10337206 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.119453259 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.12381725 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090867057 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.114608278 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092042216 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.134333713 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089475036 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.128532548 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.088763053 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.11865243 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089829241 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.120397867 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.123181153 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.090955244 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.133887508 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090436538 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.132431968 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.104666536 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.130162626 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.130604024 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.092200972 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.128477633 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.103114 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.118586272 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091236899 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.119124787 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.130502206 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.088428533 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.11479515 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100659232 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.116061693 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112678563 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.138584771 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089495371 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.126844485 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.114332291 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.090349609 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.114018203 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112815142 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.121662199 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.089113132 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.119772715 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.091145259 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.114087864 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087002182 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.119128095 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.087289111 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.116564306 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.091479653 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.115424507 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.115444082 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.107345678 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.115215437 seconds)
  done (took 11.939660217 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.09129594 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.114859306 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092560274 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.115149672 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.092044749 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.115613569 seconds)
  done (took 1.646619809 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.115631595 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.119313421 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.10360035 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121688725 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.157577762 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.103233123 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.130821343 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123481828 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.106956444 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.129121314 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.130437342 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.105150379 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.136960807 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.121460983 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.104538547 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.121358032 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.103747534 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.127898474 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.127485654 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.096092387 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.137854469 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.12205979 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096436481 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132979738 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.092785859 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.122677647 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.125730911 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102887153 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.129658 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.122598847 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.096691552 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.119148944 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.095713674 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.124314436 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.130293281 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.09606789 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.122029383 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.093188046 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.127027554 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.119457167 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.104976077 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123741235 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.126899396 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.094360252 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.125324333 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.121281035 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.095295663 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125948361 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103974666 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.120739989 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.119777206 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095804356 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.119280865 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093801757 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.122496872 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.123459552 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094060241 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.130830675 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094831503 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.123781898 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117921079 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093300296 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.124781184 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.092646533 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.130643554 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.119968735 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096681047 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.12335993 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.12152894 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096700034 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.119762599 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092928811 seconds)
  done (took 9.315345744 seconds)
done (took 34.439590841 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.698177302 seconds)
  done (took 1.723547996 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.840279544 seconds)
  done (took 1.868589435 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 17.20515977 seconds)
  done (took 18.260111172 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.509629426 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.596845436 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 1.008131492 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180136505 seconds)
  done (took 3.326316075 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.978194965 seconds)
  done (took 2.024933911 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.297149997 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.260669819 seconds)
  done (took 1.590032493 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.79500239 seconds)
  done (took 1.834457279 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.374968977 seconds)
  done (took 2.407979632 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.33605598 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.186881897 seconds)
  done (took 1.562012189 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.551055837 seconds)
  done (took 1.592764444 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.004485185 seconds)
  done (took 8.052242072 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.270418426 seconds)
  done (took 1.325258993 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.304564198 seconds)
  done (took 1.349484391 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.589307856 seconds)
  done (took 4.636922612 seconds)
done (took 52.591089769 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.102454845 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.127205728 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.102662973 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.125910277 seconds)
  done (took 1.498841184 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.102337769 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.121811039 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100223863 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.12277131 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.12679694 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.09671539 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.124013891 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.100835507 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.122376689 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.096063649 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.122382955 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.120165906 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.099089434 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.123812587 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.093400775 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.125388378 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.09905749 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.122624531 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.125293822 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.096605097 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.119776382 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.097034814 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.126639416 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093780077 seconds)
  done (took 3.730142081 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.101266494 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.120586885 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096543095 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.118934781 seconds)
  done (took 1.492542185 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.10298347 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.142418645 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.138837063 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.101090171 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.143544797 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.135996149 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.09306493 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.117100933 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.094359104 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.126020039 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.090423409 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.149617815 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.138512864 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.099608392 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.128757923 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.088037193 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.119104519 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.137333702 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.100266844 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.127053992 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.092494943 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.127496035 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.089357874 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.141199757 seconds)
  done (took 3.876263725 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170740221 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.128908776 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.139054001 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.09535532 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.161212221 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.141447507 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.088439964 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.141925454 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087866835 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.132770738 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.117501953 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135083708 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.131276362 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.088353961 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.116456598 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.087376418 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.130784116 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.130068996 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.092109917 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128436027 seconds)
  done (took 3.495736279 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098617647 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.118158973 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.08955707 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.117772322 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.100018976 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.122573288 seconds)
  done (took 1.703969211 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.093499988 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.114880249 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.09142425 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.114726482 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095114412 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.115683938 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089341482 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.116131131 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.091182411 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.118034667 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.089661731 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.115186735 seconds)
  done (took 2.302009431 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.502138047 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.120745626 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.119928721 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.090010785 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.122767695 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.08979416 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.131554911 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093446924 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.142301525 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.088563591 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.117323943 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090363942 seconds)
  done (took 2.764048069 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234089797 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128041279 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.287965523 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.371261673 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15814663 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.179044826 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.283591754 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.165457801 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.226319069 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168492131 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.202880766 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224676296 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.152033151 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189154637 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13914267 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.118209466 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232412094 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.248010408 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154625627 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.20883888 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229449317 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.167086076 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.181256228 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.152223634 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138204548 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173686869 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.09421179 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131867122 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233748667 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175453319 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.215799274 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16207643 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.147264392 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.211756509 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253481133 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221057116 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.28548116 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.110199948 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.178096152 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.170131055 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.267826494 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138849976 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.20442872 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156420148 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.132795076 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190376752 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193142694 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.177631125 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.152426048 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.112257963 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.22245891 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238900081 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.193922323 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.139611944 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.307020136 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155290071 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.175421421 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222861421 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224516985 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.22883486 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188176875 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.122927695 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.190150724 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.221157024 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.187968301 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175207963 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.182459703 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14895326 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.227737068 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.189752077 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.165695365 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220065589 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.189513928 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141954826 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1717427 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.173986143 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172751826 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.259360362 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183906443 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.1240333 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170768928 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150604206 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.132870004 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.168978114 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.126298717 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2393409 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11760929 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.16493679 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243836845 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.160361049 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.160893159 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205732931 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.231047343 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.121025453 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.113181085 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154965977 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.15591578 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194530045 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141278081 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159896097 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164059142 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130080626 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.186884617 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.096681496 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213041188 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.091609682 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174056938 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.211200018 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.100070205 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.16275867 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.152718528 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.154027231 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174360235 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.226316073 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.115721876 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.135774429 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.210027779 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205700813 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150861028 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178786011 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.203211685 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.145378961 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150516085 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.199799319 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.245604428 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140905623 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.203307522 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157817425 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.136495212 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.104618019 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210928651 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.155567317 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161902442 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108794784 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.209614819 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208135617 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.127482109 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.110349333 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.222567546 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.134234987 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.105932991 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162721438 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148444933 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.140568524 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.152763005 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.155093806 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182555343 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177683042 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155644516 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16468771 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.153821734 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.253735939 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142746974 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.151026642 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.149130418 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.094742592 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.218120646 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.201032133 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.130257012 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.206043587 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172833776 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.231622047 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173838196 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134278345 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.178505725 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.103894891 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.122266865 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194482276 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.168908155 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162127673 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.22377842 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.200789002 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.181875826 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.213222262 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.17477639 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172897924 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.166875884 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157593435 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.139772853 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161816816 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174913008 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.096203651 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.145370688 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.135514265 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149060246 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143156577 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.106805971 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225337522 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170264813 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192350634 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.16148199 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150938204 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.182251172 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.130345105 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173829406 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.206052953 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12167821 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.228625726 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195689489 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184179257 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.144873775 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23020426 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.094791124 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127177869 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.142631766 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.172725175 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107586022 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.136821368 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164575436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181329985 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.209300329 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.178901531 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.24121925 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.175564659 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.192206958 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.094416308 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.170090619 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18564328 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.205092972 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.16811753 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141910332 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.151941289 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18017484 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.159423787 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.255878487 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168444781 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17594449 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.238128629 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.151147419 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.105446191 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.154071219 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.221971528 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155008587 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.178734286 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.149202012 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.11491966 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161719103 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.135558178 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.160350815 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211274205 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164037982 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.191155672 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.15227038 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185162001 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.128982678 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164578485 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161302543 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.166687667 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081727006 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174798699 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234452645 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150848634 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169030636 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189584408 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.13342849 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.311141661 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.247217722 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.196291545 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139000414 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157118042 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.162160296 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.166239761 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172400182 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.178321131 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161060766 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.188589968 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.160603162 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.138156389 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141016776 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.120842804 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.151575189 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.133429552 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.150143346 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.17665155 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.140401108 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184416735 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164138006 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.16141621 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174474671 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.151680179 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.146890199 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150801863 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.216905742 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182778623 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239391758 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.152071888 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180897186 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235017249 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099608541 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133928229 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.133525973 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.178629671 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109137313 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.222485134 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.189427709 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23608124 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.184195828 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.194083807 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.141469891 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.119653367 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130136314 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202940044 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.211470823 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.156178871 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.160890573 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.229561315 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.120150166 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.135540139 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.179228998 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.297928122 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147945334 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225466373 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080894181 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.283858878 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.130870789 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.105681585 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.165559076 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237507938 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.137732199 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.189838209 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.172986757 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.171720206 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.166079306 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150640748 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.192693215 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.218942323 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232577784 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180324641 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.135283651 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157895643 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.177946525 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193442671 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158169123 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.142293774 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.231393728 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.198706395 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.197470323 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.144482629 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170451535 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169089757 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.15917158 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216793898 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.108605003 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236323387 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106225505 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225027049 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.155281645 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145906548 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178048167 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.19047131 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.144650283 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188770616 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.213031091 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.107339183 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135001498 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170772712 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180772707 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158173694 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.129875343 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180980519 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.127217677 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.195362315 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261873831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136843119 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.155341685 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147982695 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.109452175 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157080296 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159418051 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.142193453 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.1645803 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.2063895 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.13619231 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.191388249 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232707338 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.172503452 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.176271229 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.147322134 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.69428136 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.130907704 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.197264 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.161304307 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205945143 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150649293 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174389074 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.159865475 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169045522 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227661593 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16202808 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.232726613 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194328007 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.20665029 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.106828596 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.159508857 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164521112 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.145821917 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.152252757 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170976263 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160930718 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15464697 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.178941986 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.173144205 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.136688273 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.141445004 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202303097 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161927663 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183109224 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.181197039 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.140607301 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.174953488 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217082731 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.106790369 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.207627641 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208731574 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.144307322 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153748888 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.13464671 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.158265885 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.235351933 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.127233573 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.234777159 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188624506 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161189632 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171200468 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.148000679 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194841607 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158988878 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.21501216 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.12049818 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.160304408 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159170338 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.139778066 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.131404125 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.156687087 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1704207 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.150420538 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.161607513 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.141539153 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197332009 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.126523086 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146295203 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.296784309 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.223804385 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.217183531 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.137817677 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.107355873 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163494221 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153705297 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.17699367 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.207935609 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.10747036 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139279087 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.138197795 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.131798044 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.142350793 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.157728979 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.199687034 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166902297 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235263911 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.111303332 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.28325092 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142176148 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.156824162 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.090299985 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.134055109 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151612337 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.118004262 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161034309 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.22194073 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.269667113 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.119273076 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.135311075 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.151684256 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.125946994 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109664989 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.167963876 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16406785 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.17746724 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146623797 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.110407049 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.157094536 seconds)
  done (took 83.96313578 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.168390198 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.134424714 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.149633729 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.205575214 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.179684247 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.270606208 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.213036371 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.256039543 seconds)
  done (took 2.721534903 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09400972 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.149675293 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.159101731 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.134900474 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.092133425 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.120339882 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.349633418 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.134331948 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.118579011 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122515931 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.176189803 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.093974142 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.557826491 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091686294 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.119586368 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.110793127 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.09282685 seconds)
  done (took 3.860781532 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.480671973 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.742069109 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.520844048 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.09842373 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 4.218752745 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.113844007 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.833764437 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.202865947 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.119003295 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.495891506 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.772498777 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.169299841 seconds)
  done (took 18.92225284 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.100002659 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.121807674 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.108568725 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.137070508 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.096222009 seconds)
  done (took 1.721791002 seconds)
done (took 133.092170894 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.105448795 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.406222441 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.071764744 seconds)
  done (took 1.667429041 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108303961 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.137386531 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.109364491 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.137250119 seconds)
  done (took 1.655950776 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099329136 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.127733858 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.109953809 seconds)
  done (took 1.495503499 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.325883803 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.191229603 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.172218526 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.107550789 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.130272435 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103817798 seconds)
  done (took 1.502982009 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098024511 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.12817363 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.09840314 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.131665668 seconds)
  done (took 1.618528487 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.096299958 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070810816 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.101763426 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.075305054 seconds)
  done (took 1.501400501 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114691086 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.132288042 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104464295 seconds)
  done (took 1.514779977 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.130543047 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.139964161 seconds)
  done (took 1.435002357 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.107386131 seconds)
  done (took 1.267801495 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118632213 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.170337248 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.191011379 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.166938628 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.23749751 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.16699837 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.141580773 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.113625562 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.132770666 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.144736462 seconds)
  done (took 2.748795099 seconds)
done (took 18.359711204 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.104014507 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.424189166 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384074768 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.145885399 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.72476748 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381082978 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.081961064 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.147196516 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.166271231 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093769134 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.140979937 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.672128469 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.037375846 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.381691189 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.99471173 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.378958078 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.677033763 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.12320705 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122571109 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094625717 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.064049447 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092839835 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.122868589 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.092009491 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.705345643 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.427785528 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.09619019 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.376993721 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092899351 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.128073624 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382147946 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.125186571 seconds)
  done (took 17.135510987 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.096265471 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.174602561 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.098724301 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.139379882 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.124483518 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094970308 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.125555905 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.094154496 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.180531217 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123917285 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.111446339 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.122472007 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.126410024 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095802167 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.142435559 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.09304617 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.126651605 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.092498626 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.122541948 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121447514 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.1126275 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.120949087 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.09592401 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.122042861 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.093908525 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.137371598 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.094689399 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.12301313 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.12158106 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.100135975 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.128472479 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094949721 seconds)
  done (took 4.9201966 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141794899 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.184008941 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.129721528 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.127593653 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.170901391 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.12526021 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.200531267 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117719737 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.184194509 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.125041033 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.139997515 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.093067123 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.158092141 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.094527625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.144641698 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.120826545 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.097987309 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.123143058 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.09249218 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.125278898 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.140096685 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.094190732 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.123324361 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.094209034 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12473953 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.108835824 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.126534412 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.120583969 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.09527508 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.127596329 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099950171 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.124900452 seconds)
  done (took 5.251643848 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097845731 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.126283619 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.110325392 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.138928049 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.095369156 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.127105923 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096872044 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.125893452 seconds)
  done (took 2.090677022 seconds)
done (took 30.557854162 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.112623508 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.126854971 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107111206 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.134975279 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.103210063 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.132897371 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.091196396 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.134987598 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.133998484 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.103980018 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.137940239 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.092617286 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.123160121 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.092575902 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.136187193 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.098141398 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.134010041 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.101716519 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.135192812 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.133012305 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.094610229 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.133694687 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.103660215 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.134188125 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104055403 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.13577303 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.137179569 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.100179295 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.122596342 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.09522721 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.125624824 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.104548658 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.124681942 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.106118058 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.127833479 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097027971 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.124399398 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094082181 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.134354756 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.134086952 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.101327925 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.133970777 seconds)
  done (took 6.099383335 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.109214733 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.140197084 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.106176928 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.081180761 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.118537803 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.081161627 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.139468684 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.080800461 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.111247253 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.10865591 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.074180294 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.108354704 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.079062991 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.101865147 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.078778382 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.075866207 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.109170666 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076927747 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.076357007 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.106994207 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080390686 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.072725411 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.109841178 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.079123809 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.075740016 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.111890124 seconds)
  done (took 3.668605163 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101201763 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.136218447 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.114698009 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.185704726 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.162098916 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.100110621 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.13363421 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.109623113 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.140043939 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.120395311 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.097388336 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.151037898 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.110456563 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.130567025 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.09160379 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.139005823 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.135485143 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.095001008 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.128117356 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.113672311 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.139936055 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102698633 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.144349534 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.132789744 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.093237868 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.122989902 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096655274 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.135649797 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.098048003 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.1324858 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096037015 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.126853585 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.122735152 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105660707 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.126766715 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.094822407 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.143026312 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102927679 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.132366234 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.092207515 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.127277507 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.121835512 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.115256248 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.169991975 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.091303622 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.131204813 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.099136974 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.13405689 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.12116047 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111548571 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.13195164 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.092704487 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.125923626 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091526055 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.123211355 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.106625454 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.124698241 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094116114 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.13348868 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123815851 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106294735 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.125895173 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.109094618 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.122655653 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.10034976 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.122852654 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.092865881 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.122168648 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.114787595 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.124813028 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.164190776 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.094324914 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.123736006 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.102194596 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.131568553 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.128003414 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.094751722 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.138628759 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.103791851 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.125990724 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.103063847 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.126914387 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095576886 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.142444608 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.094186628 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.125327846 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092532936 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.129346551 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.124374209 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.095729931 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.136188797 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.092722563 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.126893386 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110485242 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.123653162 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093347206 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.132255815 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.126293583 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.093317537 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.135576716 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.108477905 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.123600652 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.101564223 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.123737184 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.124603557 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.104560897 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.126457853 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.09280673 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.127760955 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099560338 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.123204811 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.093477756 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.127071804 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.093701206 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.133716516 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098713123 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.129335658 seconds)
  done (took 14.977212885 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228838522 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.216151819 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.207546668 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.295540832 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.136679441 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.11382883 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.211992599 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.156518708 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.123516844 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.161419446 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.175243885 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.181270856 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.169717974 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.184688142 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.171045054 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093829772 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.142777635 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.13375346 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.246277556 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.260490373 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.14432958 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.100716754 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.16205239 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.161222362 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.138112654 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.131008673 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.111999998 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.137316016 seconds)
  done (took 5.888900011 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.10924895 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.158180027 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.098845232 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.146234946 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14963741 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.092474329 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.129284619 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.094169698 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.137456314 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.13618085 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093246126 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.130555701 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.100144627 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.134034906 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.123594642 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103913622 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.133220417 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094954358 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.126825869 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.09768657 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.131644199 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101454874 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.128366007 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091219106 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.134038909 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.121770509 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087281197 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.143312437 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091974753 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.146162867 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.121450946 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.100401466 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.134297658 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.093741933 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.123792727 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.094824982 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.125858291 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094581455 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.125653785 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091309594 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.122895747 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077421489 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.122773618 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106395633 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.130730282 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.079874958 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.131019792 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.128815478 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.096764314 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.119769737 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097359476 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.126292799 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.099106398 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.13094505 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.099097463 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.12521391 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.097710045 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.116126646 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.100723495 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.125301419 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.085291691 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.121005078 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.100719055 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.117861102 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.10192896 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.129522699 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.09342827 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.126740083 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.098207673 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.131111731 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.096631371 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127246023 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.09132138 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.126962402 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.095510696 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.129101837 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095803099 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.123970763 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091740217 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.125565646 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.075589831 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.125191189 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074469104 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.127678324 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.092165488 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.123252541 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.096172084 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.130745535 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.13773239 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.096056009 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.133299108 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.094575259 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.123481825 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.096768787 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.114087395 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.097708039 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.140234413 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.142003712 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.09426766 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.12159712 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.109107425 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.127109565 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093362408 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.106699443 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.102174389 seconds)
  done (took 13.087709429 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127763533 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.155240254 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094942005 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.145504859 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.156829928 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.158356317 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102921536 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.13144898 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096528934 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.143005933 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.094458096 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.133381672 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.097957474 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.139572938 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.157955349 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104013202 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.126535948 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107800297 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.13307834 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.171170086 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111842921 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.143880266 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.107251273 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.126150171 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.098839675 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.142511215 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.162144366 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.10802 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.138257195 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.142069531 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109990031 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.162562469 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111892741 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.130372579 seconds)
  done (took 5.580055735 seconds)
done (took 50.471481827 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.292320134 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.527715176 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.263231581 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.283056986 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.299501331 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.287472192 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.275536647 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.264501834 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 6.418957129 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.265152712 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.497960967 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.983995564 seconds)
done (took 59.854072442 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.354765345 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.402427619 seconds)
    (2/2) benchmarking "String"...
    done (took 1.530642352 seconds)
  done (took 4.123829903 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.624811495 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.226621912 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.527916867 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.265695941 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.267176119 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.559291161 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 3.08575522 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.656995008 seconds)
  done (took 28.781287836 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.278458103 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.360758551 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.295773628 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.275387439 seconds)
  done (took 6.403188506 seconds)
done (took 49.486540494 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.259127602 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.321238073 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.275662874 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.247278437 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.408684918 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.301747879 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.649109493 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.281819003 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.285864462 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.27076894 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.291396482 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.289706918 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.277360855 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.657636949 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.270687266 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.275153819 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.332659983 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.777032508 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.689166198 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.278869799 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.289835375 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.294086562 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.274029348 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.29017563 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.315504818 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.26778607 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.276491014 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.284652273 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.98943968 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.268909647 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.293980084 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.844661357 seconds)
  done (took 193.326289491 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.269904087 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.511065002 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.62410402 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.315845013 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.949072894 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.468541813 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.406611424 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.910773466 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.293854577 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.295224798 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.387588803 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.271115264 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.449603799 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.246851018 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.298910569 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.362908488 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.631876768 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.473980556 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.32264349 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.449704519 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.288267427 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.25643675 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.195033197 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.371646675 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.327733071 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.37763122 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.332857742 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.30931767 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.460837933 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.556141996 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.28469262 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.31659407 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.931130244 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.130328095 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.296257629 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.285576729 seconds)
  done (took 152.859026379 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.338599354 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.269787285 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.269053494 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.270711926 seconds)
    (4/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.269324288 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.304078732 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.270166821 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.885381904 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.869274204 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.77245142 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.476554599 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.778288117 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.57166817 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.272144114 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.369761089 seconds)
    (15/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.272253837 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.286645228 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.273440164 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.287922902 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.32254359 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.276804954 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.274567774 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.888432083 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.291466819 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.315497852 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.47837703 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.28846924 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.308030393 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.665691186 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.27425313 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307274608 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.609197725 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.328973561 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.272837816 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.70824746 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 13.173508138 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.391359099 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.275112856 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.307991091 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.27554696 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.558084371 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.27225725 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.272514276 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.280107588 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.993492174 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.27789072 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.891609663 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.278191374 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.292379926 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.27897379 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.275676187 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 22.255828353 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 11.032533157 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.2989223 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.275831749 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.277371897 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.27522259 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.277625843 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.311489631 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 22.126360295 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.372354211 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.294246066 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.279794996 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.30910034 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.274290361 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.291329387 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.298836742 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 22.044786657 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.352306253 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.393356909 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.893575164 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.280540235 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.37388784 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.398351065 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.275259573 seconds)
    (75/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.276205955 seconds)
    (76/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.276856699 seconds)
    (77/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.278994942 seconds)
    (78/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.391682707 seconds)
    (79/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.275910702 seconds)
    (80/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.722575213 seconds)
    (81/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.455702239 seconds)
    (82/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.295591509 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.784656695 seconds)
    (84/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.379566068 seconds)
    (85/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.275397091 seconds)
    (86/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.697915542 seconds)
    (87/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.278882487 seconds)
    (88/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.277855004 seconds)
    (89/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 5.130003935 seconds)
    (90/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.37822168 seconds)
    (91/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.276265931 seconds)
    (92/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.276036656 seconds)
    (93/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.276825672 seconds)
    (94/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.277182569 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.7231181 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.872986312 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.599512435 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.278729813 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 22.117238195 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.283755636 seconds)
    (101/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.741109064 seconds)
    (102/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.861967801 seconds)
    (103/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 5.000533336 seconds)
    (104/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.284366536 seconds)
    (105/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.39328998 seconds)
    (106/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.46060297 seconds)
    (107/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.296472641 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.279424871 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.278386365 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.789397906 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.281369324 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.3379122 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.278777968 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.679135936 seconds)
  done (took 378.058929308 seconds)
done (took 726.781593709 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.957720418 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.945098579 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 2.065185087 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.936811638 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.896408076 seconds)
  done (took 11.004753125 seconds)
done (took 12.213472284 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.485312957 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.480815548 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341792549 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.482718329 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.307296486 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.499785355 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.459928977 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.299263336 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.388441099 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.366614989 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.385699966 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.336770495 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.30474523 seconds)
  done (took 19.344018333 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.612929333 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.608437165 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.341498621 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.603786439 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317154018 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.606445844 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.482559898 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.505205147 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.499111091 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.314227304 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.291177633 seconds)
  done (took 17.390391203 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.626405089 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.610308444 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.344906582 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.61352191 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.317692981 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.616391477 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.494396058 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.503185612 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.501715247 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.316438683 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.29219761 seconds)
  done (took 17.440125262 seconds)
done (took 55.386826389 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.286080571 seconds)
  done (took 2.486275125 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.320859737 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.487515151 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.304664568 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.289428336 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.28664209 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.285783581 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.290789885 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.287327482 seconds)
  done (took 11.755498285 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.285122414 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.282606887 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.284489888 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.282594381 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.284488029 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.285502949 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.283555267 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.286064388 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.282795944 seconds)
    (10/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.283280747 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.28675498 seconds)
    (12/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.283039543 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.28663861 seconds)
    (14/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.283616116 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.285821506 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.282583121 seconds)
  done (took 21.752919698 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.288385957 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.28245605 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.283913829 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.283675264 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.283537834 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.284768802 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.285100647 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.283694008 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.284426204 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.28500992 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.285450008 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.285325763 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.285791618 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.284456259 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.284478986 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.283811941 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.284490664 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.285099311 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.287921125 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.283788786 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.285067755 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.284083978 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.28498627 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.285089034 seconds)
  done (took 32.043018291 seconds)
done (took 69.247655219 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.474767627 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 4.068055532 seconds)
  done (took 9.747939575 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.289965026 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.285551694 seconds)
  done (took 3.784699283 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.290831119 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.28445332 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.287172635 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.282362099 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.28913537 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.288551195 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.285755163 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.289666878 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.28824665 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.286773054 seconds)
  done (took 14.078733422 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.287083333 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.286203454 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.285751074 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.290276884 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.288614075 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.285872621 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.284699868 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.290691524 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.28993796 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.286514377 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.289467902 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.287056736 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.289859021 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.2874964 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.290118921 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.287539707 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.284329594 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.286410566 seconds)
  done (took 24.382489362 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.289749821 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.289635322 seconds)
  done (took 3.788083449 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.288482574 seconds)
    (2/7) benchmarking "second"...
    done (took 1.286651664 seconds)
    (3/7) benchmarking "month"...
    done (took 1.287336085 seconds)
    (4/7) benchmarking "year"...
    done (took 1.28762608 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.28793249 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.286091884 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.2866013 seconds)
  done (took 10.221071808 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.293501495 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.475505482 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.548415344 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.890360352 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.291038457 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.298112341 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.194555492 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.295399433 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.295954665 seconds)
  done (took 14.789421051 seconds)
done (took 82.002753713 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.317991278 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.299849578 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.539769303 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.290649132 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.3214854 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.587382323 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.294411876 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.415199989 seconds)
done (took 38.282004427 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.284712066 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.276281275 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.293670287 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.271547606 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.355845605 seconds)
  done (took 18.406193701 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.369570344 seconds)
    (2/2) benchmarking "read"...
    done (took 1.623833934 seconds)
  done (took 5.200851261 seconds)
done (took 31.104455404 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.295671458 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.289916312 seconds)
    (3/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.286064416 seconds)
    (4/24) benchmarking ("one", "Float64")...
    done (took 1.29101091 seconds)
    (5/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.292096806 seconds)
    (6/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.288689706 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.289265524 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.291031222 seconds)
    (9/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.291151144 seconds)
    (10/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.291214193 seconds)
    (11/24) benchmarking ("zero", "Float32")...
    done (took 1.294172172 seconds)
    (12/24) benchmarking ("one", "Float32")...
    done (took 1.292910043 seconds)
    (13/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.290920781 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.289504332 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.291527074 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.289344699 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.291298594 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.290821958 seconds)
    (19/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.29553069 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.289492416 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.293580384 seconds)
    (22/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.292104167 seconds)
    (23/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.29102921 seconds)
    (24/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.291677343 seconds)
  done (took 32.200451551 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.295261233 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.291427757 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.295753841 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.292742149 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.289133773 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.291747334 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.297543527 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.291658904 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.28992269 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.295480475 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.29148943 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.291267624 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.290854038 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.289543082 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.293573224 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.287562084 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.294273058 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.292428788 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.292928817 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.292470671 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.292483873 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.291784933 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.293737907 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.295444878 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.291134075 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.289735274 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.295911077 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.293989343 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.293996043 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.294654845 seconds)
  done (took 39.989480175 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.302460748 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.304879686 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.294580313 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.296040552 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.293983722 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.295683847 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.292968932 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.294065914 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.293833702 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.299045136 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.296441044 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.296543772 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.295779616 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.296372213 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.296727304 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.295783501 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.297691169 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.295586024 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.295178694 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.295816473 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.296364585 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.298795549 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.296631041 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.298010832 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.296262536 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.296314327 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.296199834 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.298904905 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.297041091 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.298343892 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.299225858 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.295746635 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.297320095 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.300485341 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.298879284 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.298262956 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.306160879 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.307293194 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.296856868 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.299130093 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.294241297 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.297542952 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.297035079 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.296638509 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.296668843 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.302737821 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.299658815 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.298948275 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.300986875 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.300579022 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.300849846 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.301028985 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.297635492 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.297271516 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.299522707 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.300055288 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.300645175 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.299318358 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.300259545 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.302275484 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.299384381 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.301119737 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.300503785 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.302037541 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.304212251 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.304880035 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.300273168 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.302681986 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.302011827 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.304526119 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.300977743 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.300743474 seconds)
  done (took 94.721745978 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.306938509 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.300521419 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.298716371 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.298621086 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.302737939 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.30235184 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.302476525 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.304166113 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.302083345 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.307335631 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.303511438 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.303393406 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.303298654 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.306779561 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.307179543 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.30067552 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.301735878 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.302700981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.307328048 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.303113441 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.303915735 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.302283421 seconds)
  done (took 29.889801574 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.304783033 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.306233962 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.301876988 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.305801488 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.303210103 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.307237206 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.305383476 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.306642935 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.308080171 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304622007 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305936922 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.308456576 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.305029407 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.30638195 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.306351104 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.305108842 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.307291397 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.309670382 seconds)
  done (took 24.725740242 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.304293384 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.305743828 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.304127582 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.303786017 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.304809353 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.309673416 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.305394888 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.310880564 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.306822417 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.307420412 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.309591201 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.306433869 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.308256406 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.305805921 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.307655346 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.304532596 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.308560755 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.307259822 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.309195771 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.306009789 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.305166365 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.308366659 seconds)
  done (took 29.970338147 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31092625 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.307313801 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.306527289 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.305246872 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.304971179 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.309402044 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.310237694 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.304714165 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.310437474 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.308285051 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.304132228 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.31077807 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.308173967 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.307350834 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.308945297 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.308040396 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.310853871 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.308550875 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.310763666 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.307407857 seconds)
  done (took 27.383342931 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.313489824 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.309790253 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.311855446 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.3132948 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.312865314 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.313528473 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.311463264 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.313666945 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.313036212 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.313732777 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.313025232 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.312772587 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.313657113 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.314221189 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.312184489 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.314550234 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.31175581 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.315936624 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.313243744 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.311150768 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.312323032 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.314243307 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.314569718 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.314972455 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.315584354 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.312818503 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.313640337 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.314763634 seconds)
  done (took 37.993010853 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.31382377 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.311923167 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.309863031 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.311130423 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.311083799 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.311219971 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.31018766 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.309329124 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.312413199 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.309398622 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.313400391 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.314430931 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.312864363 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.314641662 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.314249477 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.314310602 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.313884786 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.312617771 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.313051458 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.311618143 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.314564894 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.315285758 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.315573615 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.315191482 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.312136468 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.315670968 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.314265247 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.314518662 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.315680481 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.313344853 seconds)
  done (took 40.61623783 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.334148142 seconds)
    (2/2) benchmarking "in"...
    done (took 1.334221988 seconds)
  done (took 3.893614863 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.31425207 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.314260051 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.313594622 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.30949984 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.313521799 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.316489758 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.316255251 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.312434367 seconds)
  done (took 11.73363803 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.314041987 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.314090008 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.31411761 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.31500119 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.317230807 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.317283561 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.322801112 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.337448316 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.317017403 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.316726431 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.323398386 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.324836202 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.318479942 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.315183868 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.315767806 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.316545828 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.316848406 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.318023971 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.316889545 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.316813136 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.317463765 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.31974283 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.320478647 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.316082249 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.319561551 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.326038843 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.339504196 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.315932435 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.316494631 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.318991956 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.317210987 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.314119622 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.317866271 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.318312667 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.31942817 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.318136806 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.327521535 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.336914273 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.322885471 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.337811008 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.319504136 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.323684361 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.318851066 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.318250253 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.318882461 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.316042694 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.317041941 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.315171315 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.315935713 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.319967744 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.32535016 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.317545567 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.313068749 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.320690143 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.317675891 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.320928644 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.342084347 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.320070998 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.327627423 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.327747552 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.349192146 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.341721163 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.319489346 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.31860287 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.329763931 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.345016591 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.326153323 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.339354353 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.316274551 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.319649215 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.324398532 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351326004 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.344089802 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.31779148 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.320965841 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.320311671 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.319795138 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.31917782 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.324945647 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.343581458 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.320572304 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.321923272 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.331206739 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.342628429 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.319454838 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.321800582 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.321675901 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.319215942 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.322345447 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.328740043 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.344407341 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.322469319 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.318988349 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.31984391 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.321000899 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.320874526 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.31820293 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.321581978 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.320368618 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.322283437 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.320311318 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.324758864 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.330793819 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.320953277 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.32300328 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.327501885 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.341236963 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.322175542 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.326658218 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.322336241 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323548497 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.323821487 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.327480688 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.318113012 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.326247292 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.328513584 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.322154012 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.321352464 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.322517524 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.323407705 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.332863498 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.346413821 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.323624649 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.323992328 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.327422621 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.33451828 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.321925523 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.32466738 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.322408682 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.321398205 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.3197924 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.323313152 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.322453041 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.324957312 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.323820742 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.327153237 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.32071083 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.324434694 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.325400382 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.32350447 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.323479225 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.32316795 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.323182993 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.324426814 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.324793331 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.325804645 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.327685825 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.341872779 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.324197666 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.323920687 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.321520662 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.326076438 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.325264684 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.325048227 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.324180882 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.326069852 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.324537096 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.324949665 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.326204514 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.324359714 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.324403228 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.325456691 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.330842669 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.324350973 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.329250422 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.323984336 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.320062562 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.326336977 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.327190619 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.3238981 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.325173392 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.323774603 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.329086236 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.334859693 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.327520039 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.327691843 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.329154966 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.328005367 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.330196367 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326888743 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.328945494 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.336326127 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.328383591 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.330337216 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.346835308 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.330664359 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.329594031 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.326443732 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.326234062 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.326693404 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.331647018 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.335063072 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.338990439 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.350238853 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.329747477 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.332708996 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.32879687 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.333083965 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.331370356 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.328494975 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.330508341 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.325795148 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.327756031 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.327357146 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.328893076 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.326758682 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.326330915 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.329112285 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.327935142 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.327912686 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329047563 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.329056903 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.329572496 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.325348786 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.329666105 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.329461217 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.329645895 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.327102089 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.327357293 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.327337309 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.331302948 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.331096506 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.334274162 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.32690633 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.329167317 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.330234188 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.330401095 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.327385139 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.331242913 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.331366583 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.329086842 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.335002334 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.352506367 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.329508023 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.336378762 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.353812549 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.329447562 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.332506138 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.330996721 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.329229331 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.333001808 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.339756986 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.331238754 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.331290703 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.333422189 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.332621418 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.329172705 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.337276056 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.348790334 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.33196093 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.331061519 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.33038124 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.329507147 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.331976784 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.331806315 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.330988803 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.332333675 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.332125633 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.331328081 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.332640003 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.33369189 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.334348653 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.334979717 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.336228352 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.341526693 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.337039213 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.330831155 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.333768663 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.33316919 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.336212917 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.330511526 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.331748318 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.33170671 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.344350999 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.357062317 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.339423802 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.352542236 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.331908113 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.338098427 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.352492552 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.338842985 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.33383565 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.331862614 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.333488772 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.332426492 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.330680653 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.335529338 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.334213137 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.334669148 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.334721492 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.339216787 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.334035441 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.335409482 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.333869257 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.334816749 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.3336471 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.333948769 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.333962882 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.336236568 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.33632852 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.332224141 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.334505046 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.34084105 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.355991451 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.335847947 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.332817021 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.333021843 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.334246391 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.335849481 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.335407514 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.339921682 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.345902687 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.338838151 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.34756406 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.336355141 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.345229765 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.337376165 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.338122234 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.346824207 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.333722568 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.333350064 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.335415836 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.336293714 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.342795266 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.358970789 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.339847749 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.341385097 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.338008485 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.337904198 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.338591709 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.335096469 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.33804749 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.335681321 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.341798319 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.357903766 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.340457848 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.336596438 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.333679146 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.339410583 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.339425212 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.334697394 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340132939 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.338553993 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.33934324 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.336002428 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.337553282 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.336971316 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.337585049 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.337917026 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.334943611 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.336468671 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.344358215 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.361831038 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.341851466 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.339105594 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.345042395 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.356724081 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.343694041 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.361761963 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.337682587 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.338088265 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.339951965 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.338656421 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.339617641 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.339279439 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.339553852 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.340911698 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.34270978 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.339618433 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.3419832 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.339376307 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.338375007 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.338188494 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.348294816 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.365169049 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.34197074 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.344823118 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.337179895 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.338222559 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.344441907 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.338705576 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.337002031 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.341786974 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.351207457 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.348316485 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.340991038 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.337568403 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.341795845 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.339758832 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.341973651 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.340173598 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.339163284 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.341413585 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.339360285 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.340547478 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.344004372 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.341484732 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.342378483 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.34237118 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.342632498 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.351290886 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.359524983 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.34333906 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.341815245 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.343896151 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.343080638 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.340468887 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.342725175 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.340082422 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.341758352 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.345863191 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.350060134 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.348919013 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.342991384 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.340926005 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.342521673 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.341141045 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.342913601 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.344022051 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.343584053 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.342773163 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.342071274 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.341389 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.34424245 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.34174162 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.343459298 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.342738991 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.342733195 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.344164944 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.351231466 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.342059099 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.340234288 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.343878379 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.343745178 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.342327707 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.343054368 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.348279368 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.364668148 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.35548146 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.353808602 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.349417577 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.342754822 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.345918801 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.351057636 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.342639342 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.343464255 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.342629449 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.343864467 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.345148801 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.348346252 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.344034307 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.35049126 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.362952478 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.342975994 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.350790379 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.365768281 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.345708328 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.347200163 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.348073993 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.34445325 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.342582315 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.346085596 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.345505069 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.349613889 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.366003218 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.345309411 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.348066212 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.343812241 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.346215169 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.350746657 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.345521199 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.344578491 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.343087453 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.345413854 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.345474264 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.345482698 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.345199587 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.344097927 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.343033104 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.34815683 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.353481199 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.346015852 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.347912596 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.34638619 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.346665016 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.343035439 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.347715626 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.344188674 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.344270931 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.345604751 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.346432438 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.34497871 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.347550843 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.34633765 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.347991518 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.348675205 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.349022406 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.350223374 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.357840551 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.355940405 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.34478034 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.344373385 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.346450907 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.347615341 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.347395934 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.350041249 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.346144779 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.346859983 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.34633431 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.348649737 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.348942809 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.351689558 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.364430119 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.36976183 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.348701393 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.347050084 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.350757182 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.347990823 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.344804895 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.348899928 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.348235468 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.35261037 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.357461533 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.349577476 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.355518602 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.367909879 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.348906704 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.353956839 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.351074768 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.357671405 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.350193217 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.35048992 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.351561963 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.354356445 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.367211688 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.350227576 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.360010349 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.378550546 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.368615417 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.351554949 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.351667721 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.348547856 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.350301258 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.352006112 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.351123233 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.350659363 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.349340897 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.350840799 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.352327447 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.35610717 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.35184576 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.352493276 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.351693789 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.350128774 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.352488796 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.348934513 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.352347264 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.352876044 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.352845687 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.352790927 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.351043521 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.352053584 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.363057065 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.376062091 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.352058016 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.351939217 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.350398617 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.355970643 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.355627174 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.363732057 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.363003773 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.35167711 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.352895083 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.353632278 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.352268423 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.351441542 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.352268648 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.35024367 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.351941163 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.350525165 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.364481253 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.377273672 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.35673124 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.352406045 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.354110818 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.354272888 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.353523727 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.352661499 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.353747196 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.353170109 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.354651237 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.356830033 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.354510282 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.352975991 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.355778004 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.364687315 seconds)
  done (took 798.304048743 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.351912224 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.350984781 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.351199397 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.352085207 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.351263818 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.350174114 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.351976158 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.350530817 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.350368678 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.351328346 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.350142439 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.352336186 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.352613008 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.353245532 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.350937098 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.350609519 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.353127629 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.352061645 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.352255054 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.352677158 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.352233054 seconds)
  done (took 29.64483301 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.353162171 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.352427696 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.353814281 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.356192174 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.354085263 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.354736486 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.351727976 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.354918331 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.357031452 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.354850335 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.355968165 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.35535765 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.353312899 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.355749768 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.355537547 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.356736839 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.354828075 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.354660981 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.357615144 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.35370315 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.358230295 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.355354557 seconds)
  done (took 31.071688607 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.357078968 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.359665284 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.357231729 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.353555799 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.356389471 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.356064334 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.356668692 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.35508212 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.356126052 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.357561312 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.355599125 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.3547026 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.361460274 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.364862766 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.356508298 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.356639103 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.501675519 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.357732509 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.359768173 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.357978055 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.353740077 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.362613969 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.375788713 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.354982941 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.35679104 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.359282289 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.357594668 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.358429073 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.357606728 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.359558488 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.36145987 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.358894203 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.35851448 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.36027757 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.358792289 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.359166303 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.365486578 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.359808872 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.358496801 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.358793227 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.367048778 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.380726283 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.358203552 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.366430023 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.378273909 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.359565853 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.362522854 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.370533302 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.358067339 seconds)
  done (took 68.052976868 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.357544542 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.359364525 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.359860812 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.360843485 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.360902838 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.358598358 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.358375309 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.361817868 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.356440447 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.356589299 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.361641719 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.358734373 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.357778617 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.358875672 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.360831181 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.356359791 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.358556439 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.358211956 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.357899012 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.358190004 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.357047235 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.360267172 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.361177593 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.360236038 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.360703213 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.359611965 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.359619915 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.36093548 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.358565711 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.359312348 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.362294658 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.358678808 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.362390084 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.361228823 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.359279234 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.362322132 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.361952255 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.358608968 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.360618233 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.359314902 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.360997035 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.362176014 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.362302339 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.36303246 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.360520611 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.359476487 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.360338525 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.361649999 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.359985997 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.360809639 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.36332514 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.358940626 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.362558987 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.35970582 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.361976852 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.363557589 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.359311548 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.360692391 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.361640179 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.361721928 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.359521813 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362532252 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.361380206 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.365599711 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.364096094 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.361396226 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.362889034 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.362740554 seconds)
  done (took 93.774556732 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.366668403 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.363990847 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.36443081 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.363569868 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.365521294 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.364492246 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.364135527 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.363598408 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.362830481 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.363531005 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.363924029 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.363631652 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.364333947 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.363255655 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.364621499 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.364951719 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.365251692 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.366271805 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.365873116 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.365711977 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.364555812 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.364468557 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.366204607 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.368026259 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.366492727 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.365779437 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.364984256 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.367060974 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.366817571 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.365422385 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.367036737 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.366355304 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.366617503 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.366136242 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.366156527 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.368031359 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.368367132 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.367108647 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.364873563 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.365860591 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.364705802 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.366597654 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.366276998 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.366303346 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.366647386 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.366547855 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.36726813 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.368679816 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.367465741 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.369181211 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.366834224 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.368970306 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.367474391 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.366617326 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.36773503 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.368522995 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.365955831 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.369806353 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.367174371 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.367397838 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.367937243 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.367238552 seconds)
  done (took 85.969805969 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.367136031 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.367540425 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.365352308 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.362614289 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.368390576 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.363655332 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.367787536 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.367979294 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.367883511 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.366902744 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.367594661 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.365563654 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365548816 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.368582851 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.366421842 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365193178 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.36464519 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.364727974 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.369634445 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.367624501 seconds)
  done (took 28.603934956 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.365731369 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.369850321 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.365445566 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.365753743 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.369604584 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.368042777 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.369136542 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.368758131 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.365639244 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372248956 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.370443145 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.369453763 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.365841539 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.36560606 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.36983542 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.365401481 seconds)
  done (took 23.161894067 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.368547459 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.370070931 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.368896473 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.368891439 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.368855788 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.367034333 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.370624241 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.365781215 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.367235535 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.370733286 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.370645389 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.372910439 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.368490559 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.36898657 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.366379533 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.369565715 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.368006533 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.366576045 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.372318997 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.369740108 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.371149725 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.369537487 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.37175634 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.370775921 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.370353246 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.370140464 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.370337 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.366659649 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.366253972 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.369470751 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.366734591 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.364589025 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.366649428 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.367304937 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.371122063 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.370325651 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.370259108 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.370539491 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.371546154 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.371312325 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.370990578 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.369960158 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.372579428 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.370271958 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.368068276 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.374579226 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.36990711 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.371516837 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.370295079 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.374314995 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.37436879 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.373540974 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.374117118 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.369925895 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.374916936 seconds)
  done (took 76.621666584 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.375646841 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.374249072 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.370687976 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.373747833 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.373117797 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.371655827 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.372082811 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.373681127 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.370166717 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.373391999 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.372108246 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.375034522 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.371482114 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.37290866 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.372221978 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.372442551 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.372373915 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.372980542 seconds)
  done (took 25.986745926 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.370837497 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.370411633 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.374137788 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.369839585 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.370852775 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.375476394 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.369971107 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.373733804 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.375278376 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.372446638 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.373013841 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.374325211 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.372680219 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.375999711 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.371591308 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.371182901 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.374908529 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.376342941 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.372856596 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.371183172 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.374376475 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.373984218 seconds)
  done (took 31.487273941 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.375470507 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.37335349 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.375432405 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.390090038 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.392904601 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.397833239 seconds)
  done (took 9.58534204 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.382583256 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376345173 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.373319613 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376808002 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.373946053 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374061993 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374240338 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372214235 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376188544 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.372373983 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.372769556 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375376323 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.375498528 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.371638589 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.376932297 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.374396778 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3745672 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374010083 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.374299461 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.374549655 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.373199647 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.375613358 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375865953 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.374683397 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375740373 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.374817494 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378693573 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375234239 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.3755708 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378190018 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378362109 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376531209 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.37846552 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375612191 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378960965 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378525685 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377369955 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.380348652 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.37874333 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375245222 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.379473087 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378426941 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.376862868 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.373869029 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376640972 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377519562 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.375373936 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376617744 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375830378 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379722097 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380611787 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.376497075 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378546106 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377536734 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379512348 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378522748 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.375456105 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378709495 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378634206 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378283499 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.375498789 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378255219 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.376659256 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.376928847 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.37830381 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377086154 seconds)
  done (took 92.154250485 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378921622 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.376817718 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378570879 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.378580506 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377434814 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.375300391 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377223289 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.377553298 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379000387 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.375215847 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379680152 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.377108296 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378601375 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378740282 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377373452 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380823685 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.377982751 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.380288533 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.376508753 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380615998 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.377392236 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380258399 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378737098 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379790611 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379981408 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380832192 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.37942756 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.380401362 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379437578 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.380752404 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381782505 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.378641135 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.379480862 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.380734732 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.378598442 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.380105352 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.379963226 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.381907913 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381380798 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.382656327 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.377610619 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.381328056 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.377649462 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.38034572 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.378649474 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.379648024 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.378886364 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.381830669 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.379992344 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381612195 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.377785636 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.379467361 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379854176 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.380200555 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.379003168 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.378345058 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.379541942 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.381414033 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.378190928 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.385353708 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.381570183 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381740692 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.381625389 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.379503902 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.380439131 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.380525586 seconds)
  done (took 92.332319603 seconds)
done (took 1861.081934637 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.380843726 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.435239102 seconds)
  done (took 14.101433913 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.547331872 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.499649033 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.3810398 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.381324118 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.374326648 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.406506064 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.374200228 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.378259036 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.382040872 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.383576098 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.383828228 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.571844648 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.383765744 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.375707758 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.385106927 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.476812846 seconds)
  done (took 43.979751376 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.414383457 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.388813826 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.514769248 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.406851226 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.411240643 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.591752733 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.445486458 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.386623927 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.583949162 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.431361744 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 3.21352671 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.413987162 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.385281749 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.616405177 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.402445602 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.593053335 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.668335575 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 3.128024752 seconds)
  done (took 32.286431646 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.9034704 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.418566515 seconds)
  done (took 9.60977492 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.407819512 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.389185091 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.389533071 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.387180832 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.392529307 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.371191786 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.387225369 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.392302689 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 5.537691385 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.532096519 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.391471491 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.395098564 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.408358263 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.387574258 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.386135068 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.425668864 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.546349914 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.385411647 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.384950745 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.396311655 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.38742668 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.496054387 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.433784853 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.389687618 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.532720831 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 5.562674503 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.391156918 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.395441197 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.576107082 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.387567846 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.390313416 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.389881737 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.391588119 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 2.029668681 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.95107858 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.415473457 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.408289721 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.396986826 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.385600974 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.557873458 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.391132098 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.393347317 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.397792324 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.936835764 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.52539258 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.519339187 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.717106301 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.402500113 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.390088686 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.458591212 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.390560338 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.389732116 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.421293302 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.206582437 seconds)
  done (took 116.003248639 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.382015454 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.777380072 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.556905668 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.406592386 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.213709098 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.140298278 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.399646868 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.715605195 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.444411928 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.381841732 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.690112084 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.944160314 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.400116566 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.452813287 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.852012076 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.437578642 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.385035493 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.166167233 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.400059381 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.381953036 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.911628056 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.386470291 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.379534417 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.60524558 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.425674386 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.883266012 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.945490393 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.867857314 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.402564196 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.384641383 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.901905154 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.403617557 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.400287492 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.385388084 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.674508388 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.786175387 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.772195223 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.397935342 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.388464682 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.38268217 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.39304496 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.881344607 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.779410481 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.399412666 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.377337326 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.878630978 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.396254295 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.395292849 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.390228685 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.600980437 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.040718691 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.385322459 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.917134989 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.382730385 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.710634362 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.463857357 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.422074601 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.916167364 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.396290381 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.53532075 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.439321554 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.387347341 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.382127662 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.389545504 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.380477695 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.784747103 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.672390989 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.392217661 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.789533028 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.917518232 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.401565139 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.966540741 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.301482492 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.411101732 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.440232869 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.386521514 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.995309189 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.934760516 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.445737213 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.381084603 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.773963677 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.406240566 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.69283538 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.398138566 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.399734305 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.917014609 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.388387686 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.426567489 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.388421609 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.393460117 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.160165366 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.391773057 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.688738467 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.435728652 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.389095332 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.389551959 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.403441604 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.388455434 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.401745771 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.39525347 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.95882824 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.409689574 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.394342787 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.400294147 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.39118112 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.399850439 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.387750983 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.39198477 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.622153155 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.850754487 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.403017485 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.389952595 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.382519846 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.392616666 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.620530187 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.390088169 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.749034423 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.408857355 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.390459043 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.384078681 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.197291896 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.411098383 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.386899647 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.387036451 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.325395769 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.59483134 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.408022709 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.390783976 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.389568462 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.408287712 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.751673067 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.407794619 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.412101179 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.39264625 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.13785252 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.421241279 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.414789042 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.701878904 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.398555138 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.39082845 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.386606151 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.392527379 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.691927982 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.677609534 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.539300344 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.38790414 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.403097936 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.118705374 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.449626786 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540275768 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.405495104 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.379547855 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.594884779 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.539103302 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.394153531 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.986844546 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.393434762 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.614632142 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.392384576 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.71443819 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.929384101 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.408331914 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.401267395 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 2.152698026 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.109285357 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 3.146282204 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.396529177 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.685757115 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.370720426 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.877588276 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.393836418 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.393807613 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.975766132 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.394492407 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.396176949 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.393192143 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.394597429 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.455986614 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.570364927 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.647929238 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.395955226 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.902073105 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.427662003 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.395631446 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.388200479 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.391975123 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.743724152 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.434536938 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.399287314 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.406315848 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.394705528 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.402886901 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.923237354 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.376644447 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.390005398 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.552807187 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 2.071859591 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.412133258 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.393307011 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 4.005391016 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.631884042 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.979783012 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.472100894 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.757921595 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.412967644 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.435451093 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.131364178 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.431500202 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.92561034 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.415027227 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.389267962 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 2.044314142 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.409791139 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.460231166 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.394009812 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.394736721 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.996017132 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.412974315 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.401223691 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.762684132 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.409207111 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.669528868 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.396715854 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.448431655 seconds)
  done (took 1126.139525439 seconds)
done (took 1343.413800699 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.398209996 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.392102471 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.381026861 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.397126907 seconds)
  done (took 26.871418023 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.408052511 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.40440473 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.406232059 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.403147147 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.407303123 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.404376626 seconds)
  done (took 9.739858995 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.497838761 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.39708537 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.399644442 seconds)
  done (took 19.600252934 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.637304009 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.819010062 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.798368525 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.891092151 seconds)
  done (took 11.45134585 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.406832666 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.405929415 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.403363558 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.40674907 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.409671617 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.410747982 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.407399737 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.408306767 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.409219682 seconds)
  done (took 13.970794867 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.4098663 seconds)
done (took 84.355230789 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 3.127920272 seconds)
    (2/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.415734639 seconds)
    (3/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.395038163 seconds)
    (4/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.509728904 seconds)
    (5/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.630274813 seconds)
    (6/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.411913923 seconds)
    (7/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.282857256 seconds)
    (8/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 4.129893261 seconds)
    (9/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 2.143517676 seconds)
    (10/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.692253345 seconds)
    (11/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 2.066277816 seconds)
    (12/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.459314746 seconds)
    (13/286) benchmarking ("sort", Float64, true)...
    done (took 6.400422757 seconds)
    (14/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.436656778 seconds)
    (15/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.850534168 seconds)
    (16/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.826410301 seconds)
    (17/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.439574996 seconds)
    (18/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.363255981 seconds)
    (19/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.527767228 seconds)
    (20/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.402070982 seconds)
    (21/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.431989557 seconds)
    (22/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 3.041543114 seconds)
    (23/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.419018959 seconds)
    (24/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.304909242 seconds)
    (25/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.372668959 seconds)
    (26/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.997400376 seconds)
    (27/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.522381271 seconds)
    (28/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.687375762 seconds)
    (29/286) benchmarking ("sort", Int64, true)...
    done (took 6.39564272 seconds)
    (30/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.417623389 seconds)
    (31/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.40895243 seconds)
    (32/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.526190813 seconds)
    (33/286) benchmarking ("sort", Float64, false)...
    done (took 5.774587988 seconds)
    (34/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.361075396 seconds)
    (35/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.297386334 seconds)
    (36/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.861750472 seconds)
    (37/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.624960877 seconds)
    (38/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.527106327 seconds)
    (39/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.381884787 seconds)
    (40/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.48069971 seconds)
    (41/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.380627851 seconds)
    (42/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.420637843 seconds)
    (43/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.40235744 seconds)
    (44/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.308748227 seconds)
    (45/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.383947682 seconds)
    (46/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.375284324 seconds)
    (47/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.403686612 seconds)
    (48/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.217543626 seconds)
    (49/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.506519528 seconds)
    (50/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.381897952 seconds)
    (51/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.651663484 seconds)
    (52/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.405521955 seconds)
    (53/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.70359574 seconds)
    (54/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.410541029 seconds)
    (55/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.978693501 seconds)
    (56/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.616180251 seconds)
    (57/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.390968618 seconds)
    (58/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.452870835 seconds)
    (59/286) benchmarking ("sort", BigInt, true)...
    done (took 6.402326415 seconds)
    (60/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.796978419 seconds)
    (61/286) benchmarking ("map", identity, Int64, false)...
    done (took 2.09247341 seconds)
    (62/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.922658577 seconds)
    (63/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.481745632 seconds)
    (64/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.511468175 seconds)
    (65/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.402206871 seconds)
    (66/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.513284549 seconds)
    (67/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.420500323 seconds)
    (68/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.408423168 seconds)
    (69/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 4.539087361 seconds)
    (70/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.375202489 seconds)
    (71/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.809686051 seconds)
    (72/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.422555783 seconds)
    (73/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.404006635 seconds)
    (74/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.339974691 seconds)
    (75/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 3.149942781 seconds)
    (76/286) benchmarking ("sort", Int64, false)...
    done (took 5.672053954 seconds)
    (77/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.378061959 seconds)
    (78/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.460920147 seconds)
    (79/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.403023331 seconds)
    (80/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 2.166557813 seconds)
    (81/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.446605766 seconds)
    (82/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.407581964 seconds)
    (83/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.556972538 seconds)
    (84/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.398864916 seconds)
    (85/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 3.199174462 seconds)
    (86/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.428772192 seconds)
    (87/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 3.243608244 seconds)
    (88/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.417165299 seconds)
    (89/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.278753008 seconds)
    (90/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.501462177 seconds)
    (91/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.680059968 seconds)
    (92/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.395673794 seconds)
    (93/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.539933339 seconds)
    (94/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.385015164 seconds)
    (95/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.408156024 seconds)
    (96/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.378869627 seconds)
    (97/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.572715757 seconds)
    (98/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.504581352 seconds)
    (99/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.35763137 seconds)
    (100/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 2.090357324 seconds)
    (101/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 3.165115694 seconds)
    (102/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.596067901 seconds)
    (103/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.964034837 seconds)
    (104/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.494615989 seconds)
    (105/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.971821372 seconds)
    (106/286) benchmarking ("map", abs, Float64, false)...
    done (took 2.096543565 seconds)
    (107/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.420123309 seconds)
    (108/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.619653032 seconds)
    (109/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 4.194923885 seconds)
    (110/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.434586278 seconds)
    (111/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.512077787 seconds)
    (112/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.90423907 seconds)
    (113/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.708307887 seconds)
    (114/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 4.143955924 seconds)
    (115/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 4.577700424 seconds)
    (116/286) benchmarking ("sort", Int8, true)...
    done (took 6.416952388 seconds)
    (117/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.882677678 seconds)
    (118/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.782753913 seconds)
    (119/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.522638971 seconds)
    (120/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.736514058 seconds)
    (121/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.51230685 seconds)
    (122/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.603727933 seconds)
    (123/286) benchmarking ("sort", Bool, false)...
    done (took 1.944395952 seconds)
    (124/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.446522106 seconds)
    (125/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.603563343 seconds)
    (126/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.689621439 seconds)
    (127/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.915842653 seconds)
    (128/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.187061006 seconds)
    (129/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.279443679 seconds)
    (130/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.682858536 seconds)
    (131/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.489586949 seconds)
    (132/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.436447132 seconds)
    (133/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.993692077 seconds)
    (134/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.513115433 seconds)
    (135/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.429273576 seconds)
    (136/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.897742489 seconds)
    (137/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.823185739 seconds)
    (138/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.28095101 seconds)
    (139/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.43053052 seconds)
    (140/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.985810758 seconds)
    (141/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.842556282 seconds)
    (142/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.761200082 seconds)
    (143/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.41139854 seconds)
    (144/286) benchmarking ("sort", Float32, false)...
    done (took 5.465961795 seconds)
    (145/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.233422123 seconds)
    (146/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.513122754 seconds)
    (147/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.555490862 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.503123067 seconds)
    (149/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.409050651 seconds)
    (150/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.837443054 seconds)
    (151/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.4476704 seconds)
    (152/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 3.068690271 seconds)
    (153/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.846641137 seconds)
    (154/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.444291147 seconds)
    (155/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.390456903 seconds)
    (156/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 2.053505868 seconds)
    (157/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 4.035339316 seconds)
    (158/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 6.053376473 seconds)
    (159/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 2.015939466 seconds)
    (160/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 2.042488573 seconds)
    (161/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.496433754 seconds)
    (162/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.415987295 seconds)
    (163/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.387855659 seconds)
    (164/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.428845413 seconds)
    (165/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.42942932 seconds)
    (166/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 3.040586051 seconds)
    (167/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.425178344 seconds)
    (168/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.410658397 seconds)
    (169/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.405783925 seconds)
    (170/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.433390837 seconds)
    (171/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.436207056 seconds)
    (172/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.389388134 seconds)
    (173/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.202141034 seconds)
    (174/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.391747424 seconds)
    (175/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.431139064 seconds)
    (176/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.492452837 seconds)
    (177/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.435425165 seconds)
    (178/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.426401827 seconds)
    (179/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.387004611 seconds)
    (180/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.516985413 seconds)
    (181/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.233187558 seconds)
    (182/286) benchmarking ("sort", Int8, false)...
    done (took 4.50074247 seconds)
    (183/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.454852301 seconds)
    (184/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.39128944 seconds)
    (185/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.408685821 seconds)
    (186/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.272593891 seconds)
    (187/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.394262687 seconds)
    (188/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.38500712 seconds)
    (189/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.406243037 seconds)
    (190/286) benchmarking ("sort", Bool, true)...
    done (took 5.619899047 seconds)
    (191/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.487943297 seconds)
    (192/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 3.192711989 seconds)
    (193/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 3.349583429 seconds)
    (194/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.486372765 seconds)
    (195/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 2.15283438 seconds)
    (196/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.515055873 seconds)
    (197/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.411813287 seconds)
    (198/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.405829362 seconds)
    (199/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 3.26689524 seconds)
    (200/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.387031854 seconds)
    (201/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.415739227 seconds)
    (202/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 4.171435403 seconds)
    (203/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.347448238 seconds)
    (204/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.436946152 seconds)
    (205/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.682189998 seconds)
    (206/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.396803284 seconds)
    (207/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 2.052279353 seconds)
    (208/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.631063167 seconds)
    (209/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.299627219 seconds)
    (210/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.412458689 seconds)
    (211/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.466288323 seconds)
    (212/286) benchmarking ("sort", Float32, true)...
    done (took 6.407552572 seconds)
    (213/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.497353669 seconds)
    (214/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.438450296 seconds)
    (215/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.794654212 seconds)
    (216/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.452599301 seconds)
    (217/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.407333988 seconds)
    (218/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.892881153 seconds)
    (219/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.449210595 seconds)
    (220/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.330882061 seconds)
    (221/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.471571868 seconds)
    (222/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.432521347 seconds)
    (223/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.420541262 seconds)
    (224/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.386772564 seconds)
    (225/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.404355747 seconds)
    (226/286) benchmarking ("sort", BigInt, false)...
    done (took 6.414025686 seconds)
    (227/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.39897138 seconds)
    (228/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.457138666 seconds)
    (229/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.746731227 seconds)
    (230/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.424821522 seconds)
    (231/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.394552853 seconds)
    (232/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.32773286 seconds)
    (233/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.433713184 seconds)
    (234/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.449171948 seconds)
    (235/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.413636823 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.460093661 seconds)
    (237/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 6.117744279 seconds)
    (238/286) benchmarking ("map", identity, Float64, false)...
    done (took 2.116459459 seconds)
    (239/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.427043123 seconds)
    (240/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.651182717 seconds)
    (241/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.440872582 seconds)
    (242/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.820642654 seconds)
    (243/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.414439441 seconds)
    (244/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.388917065 seconds)
    (245/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.435687439 seconds)
    (246/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.54097511 seconds)
    (247/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.411759213 seconds)
    (248/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.417939484 seconds)
    (249/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.846062879 seconds)
    (250/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.309642032 seconds)
    (251/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.528267651 seconds)
    (252/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.396215077 seconds)
    (253/286) benchmarking ("map", abs, Int64, false)...
    done (took 2.131734324 seconds)
    (254/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.525027765 seconds)
    (255/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 4.129938564 seconds)
    (256/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.418137226 seconds)
    (257/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 2.002373013 seconds)
    (258/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.395965608 seconds)
    (259/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.531848499 seconds)
    (260/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.43303759 seconds)
    (261/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.409483102 seconds)
    (262/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.54380056 seconds)
    (263/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.496698207 seconds)
    (264/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.396783658 seconds)
    (265/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.784858851 seconds)
    (266/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.533727422 seconds)
    (267/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.473303435 seconds)
    (268/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.499432673 seconds)
    (269/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 4.02098596 seconds)
    (270/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.814442376 seconds)
    (271/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.398152644 seconds)
    (272/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.392585477 seconds)
    (273/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.522177663 seconds)
    (274/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.227022186 seconds)
    (275/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.492145068 seconds)
    (276/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.458221079 seconds)
    (277/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.427138087 seconds)
    (278/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.444720506 seconds)
    (279/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.863549688 seconds)
    (280/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.461074524 seconds)
    (281/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 3.000502758 seconds)
    (282/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.720245325 seconds)
    (283/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 4.22937027 seconds)
    (284/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.402786206 seconds)
    (285/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.451041736 seconds)
    (286/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.947924709 seconds)
  done (took 974.524311233 seconds)
done (took 975.838356457 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.450017126 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.448071192 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.429661489 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.449993796 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.541422016 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.457055024 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.441914377 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.430935698 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.476727133 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.479479074 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.428390852 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.457320694 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.430372011 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.431167717 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.428930748 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.443601815 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.640923428 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.429404803 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.449012819 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.438428509 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.446683637 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.426768162 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.481147447 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.455044939 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.433725144 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.431922743 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.433174524 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.449850691 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.541369994 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.434449446 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.431926546 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.442812596 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.588015619 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.423159425 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.425260096 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.451794872 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.443527118 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.442900194 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.433735813 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.46371597 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 3.039335886 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.440114517 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.43360368 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.432591188 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.431695726 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.436629548 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.43605278 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.440108907 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.445855335 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.446233311 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 3.035139441 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.455377905 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.436450119 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.43389521 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.44207667 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.431622094 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.437368145 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450093984 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.452656924 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.450597262 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.587847387 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.431074679 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.432333983 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.448983148 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.439512008 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 3.067847602 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.437594566 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.439948715 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 3.052212264 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.447803098 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 3.071348027 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.449970045 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.434898645 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.445216771 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.463760212 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.627562087 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.423096142 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.4330116 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.442623456 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.43152422 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.444460104 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.447853264 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.439551625 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.432949821 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.44794555 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.460655483 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.444625367 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.435356961 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.444356714 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.453532729 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.44353178 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.446615889 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.436816464 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.43092964 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.446462274 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.440229155 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.437435674 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.438206913 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.442614225 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.444741235 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 3.039481598 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.464320558 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.433349681 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.432655886 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.432608833 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.45104705 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 3.042861969 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.44914728 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.456393498 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.482400741 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.438578523 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.576882137 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.434055441 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.455168477 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.444729029 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.443552509 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.432246351 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.579085919 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 3.033386887 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.46298547 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.439377729 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.43412374 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.456081158 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.439409616 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.433427222 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.592959079 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.433954901 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.450618259 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.557603809 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.44874602 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.469902668 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.435037808 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.442650828 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.464785781 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.455075001 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.469099494 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.441612094 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.456630005 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.453561718 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.435368336 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.451221274 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.450858589 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.438349273 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.444477794 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.432177363 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.463622496 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.453005742 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.454316436 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.460076238 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.56055005 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.437896674 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.58144278 seconds)
done (took 243.299420088 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.496479517 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.434117807 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.523562628 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.435536774 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.53771556 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.536682347 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.433137617 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.43076297 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.431105717 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.819931916 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.433039336 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.434978028 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.428737571 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.432269809 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.519628311 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.436344372 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.43301452 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.7814487 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.438783403 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.507217272 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.427486695 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.432825282 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.437752857 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.861704444 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.435043179 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.436261191 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.505173639 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.434025259 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.781682297 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.432012896 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.433488914 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.787725398 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.526066156 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.451606154 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.444302802 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.443279179 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.539491904 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.455109991 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.516510824 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.515331744 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.527925974 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.477367875 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.430987111 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.436753804 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.437665227 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.438651514 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.433660708 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.465238195 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.434750471 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.436316662 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.784815392 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.447501755 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.43650515 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.43597549 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.43564833 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.467279631 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.436565414 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.439192066 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.530096735 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.438768983 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.500342569 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.827492854 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.820100143 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.438421867 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.440055286 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.436210461 seconds)
  done (took 155.3881342 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.502527438 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.514673635 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.561953426 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.455818705 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.489053857 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.564959371 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.457195587 seconds)
  done (took 11.882975765 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.44676561 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.438650057 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.488586536 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.486444112 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.439231126 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.585919883 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.440581127 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.449776255 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.438807273 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.491689545 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.44062922 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.443375313 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.448739794 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.431539102 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.48937287 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.45188264 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.55442569 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.441148708 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.440263735 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.597579759 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.437881233 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.447407479 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.493493218 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.451862098 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.440482207 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.445158858 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 2.008349572 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.44093653 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.438961371 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.439760836 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.437799976 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.477084379 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.442482122 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.441724684 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.437012278 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.557118237 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.4425157 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.436670497 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.439357413 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.439889173 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.4400372 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.443457375 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.443352859 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.439835547 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.441778117 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.464365577 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.442612989 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.441942436 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.441630908 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.442785661 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.491076072 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.445054116 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.439822982 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.439076061 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.497262652 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.447871045 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.441171714 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.440704767 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.44282907 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.438730241 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.597472368 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.49225114 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.441489651 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.489758681 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.442279277 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.44207041 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.442969161 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.440874962 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.506401205 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.442276175 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.490903427 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.44112314 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.597783846 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.466108024 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.444195824 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.444546445 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.444043737 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.443463482 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.442124872 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.448948198 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.43913416 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.443677052 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.44779787 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.441830796 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.440784252 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.545673836 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.551765774 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.440925359 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.456973763 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.450593368 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.440582797 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.495846283 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.443974487 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.442693901 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.496583806 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.557941751 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.495986949 seconds)
  done (took 163.778096925 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.449790722 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.449969728 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.444745766 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.460361772 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.44599659 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.444148442 seconds)
  done (took 10.036291967 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.447250819 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.448745002 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.446991745 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.446345685 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.445337981 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.446494108 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.445612788 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.446404017 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.450323509 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.445179756 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.444070372 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.447009858 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.446217506 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.445910984 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.44646269 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.446618223 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.448332604 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.4436975 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.446402962 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.448284594 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.539954867 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.448282481 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.446131772 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.446656589 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.449808848 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.447421273 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.454874257 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.447716868 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.447209806 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.453442464 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.470069516 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.446389276 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.448419183 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.453432144 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.453166341 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.448858813 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45035632 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.44788103 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.444925214 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.449070274 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.447285554 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.447906571 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.446911874 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.446708274 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.451156291 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.452492427 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.453937324 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.45432667 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.449685748 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.449120282 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.448179991 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.447196629 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.447843541 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.448475453 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.450897344 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.469510054 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.454536159 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.450511812 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.449222386 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.451443381 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.450873982 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.450391938 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.450745654 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.454609829 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.456645743 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.450335594 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.450626029 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.455144336 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.45053357 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.450681033 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.451293014 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.44769282 seconds)
  done (took 106.807576468 seconds)
done (took 449.233746165 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.655247544 seconds)
  done (took 8.001914076 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.720514097 seconds)
  done (took 8.067703449 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 23.290578848 seconds)
  done (took 24.643225956 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.474640578 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.441995853 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.465717197 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.44683424 seconds)
  done (took 27.176907741 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.791412531 seconds)
  done (took 8.137963994 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.444028871 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.452131266 seconds)
  done (took 14.242828189 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.757646775 seconds)
  done (took 8.104106077 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 7.142616865 seconds)
  done (took 8.494832457 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.451743386 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.477582179 seconds)
  done (took 14.551619418 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.43992351 seconds)
  done (took 7.787192492 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.728696987 seconds)
  done (took 9.078295399 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.453872001 seconds)
  done (took 7.804420127 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.456728499 seconds)
  done (took 7.805603913 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 9.400629315 seconds)
  done (took 10.75270643 seconds)
done (took 166.004298101 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.443751228 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.446339707 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.447513473 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.448018943 seconds)
  done (took 27.134911451 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.486534436 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.486260574 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.486994293 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.497681966 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.490316916 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.486987513 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.478439179 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.479034652 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.497868777 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.488985308 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.490373511 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.489172132 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.489878778 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.480032215 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.490369723 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.490134436 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.498518306 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.489805924 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.48018214 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.490152808 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.454807302 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.499159494 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.489427114 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.456494736 seconds)
  done (took 37.018672414 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.978075801 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.525728957 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.607451917 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.506267551 seconds)
  done (took 7.967260801 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.507180196 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.509293826 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.522135707 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.558955138 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.584212228 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.516593341 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.482848592 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.477534069 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.462375839 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.509699195 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.584930164 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.524858684 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.593590498 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.456684264 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.651682765 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.455527507 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.45598108 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.50661583 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.563958441 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.573909355 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.457208493 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.507825979 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.511755488 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.526342021 seconds)
  done (took 37.855558963 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.454704357 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.475786723 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.455528347 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.455624693 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.464844173 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.456254425 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.457067201 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.456011569 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.457812237 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.4627068 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.455029104 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.469418848 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.456511461 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.456793204 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.462213012 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.458758867 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.462742445 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.455578478 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.455699124 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.463783464 seconds)
  done (took 30.547187396 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.451236191 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.30502657 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.802597962 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.705612703 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.451619276 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.451002562 seconds)
  done (took 28.523758024 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.538660988 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.704099914 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.451062809 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.876429146 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.966047342 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.471545277 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.457973805 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.726983723 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 2.101712439 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 2.106148785 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.517763802 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.527578203 seconds)
  done (took 21.80219742 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.46197905 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.451077608 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.459685182 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.468593164 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.522202113 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.473036117 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.466210929 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.45276135 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.524653018 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.539824704 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.476845587 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.52622712 seconds)
  done (took 39.180590447 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.546427015 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.502432107 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.503602222 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.496421855 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.196079756 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.659228028 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.540187194 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.932401949 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.450959445 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.727455641 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.463075082 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.551822205 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.712867966 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.469345437 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.449094042 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.549162352 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.693790651 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.03254164 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454917601 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.059256612 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.479993676 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.467624295 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.170037453 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.488684259 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.669331069 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.603760316 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.716281791 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.232310028 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800688604 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.466926341 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465722545 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.456910139 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.729792622 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.191654209 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565582336 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465380066 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.454823675 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.005721182 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.456598773 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 5.040568579 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.459428977 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.45873056 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.4674064 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.457692792 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.389970639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.455970455 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.94621787 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.456053079 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.167900186 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.458596513 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.467853354 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.552585459 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.460614512 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.450174518 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.535546423 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.455176279 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.455052546 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.555924475 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.041666231 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.556255688 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.47179229 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.39394511 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.475333629 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.975866686 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.172380973 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.573724372 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.461687105 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.462552978 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.393930168 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.06177658 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.474678069 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.598569106 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.47391521 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.119928524 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.240480224 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.492077642 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.391615826 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.095650496 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.469999124 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.393017749 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.687483986 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.236138512 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.399718793 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.401366772 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.394259297 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.284958133 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.465756922 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.998386656 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.479617674 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.968377148 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.463370544 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.478035189 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483402707 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.683388285 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.338726323 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.460236451 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.459256943 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.594836841 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474380106 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.947073512 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.386310853 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.456346766 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.718995521 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.665111454 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.460469735 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.578505423 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.716010765 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.4526983 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.481128258 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.461000602 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.472435214 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 2.143116759 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488333192 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.570220824 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.476958294 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.236680825 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.314799255 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.46084042 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.56147539 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.471034598 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.738792912 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.346931626 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.344659227 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.000001045 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467061487 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.460891804 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.089356823 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.059912071 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.345823644 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.457029005 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.462758379 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.473934371 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.462562816 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.423343739 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.464819568 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.456616393 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.242323521 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.688053144 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.459728449 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.759614356 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396405362 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.603875125 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.474005918 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.681446757 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.864490268 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.480841429 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.725138241 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.472516484 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.462160879 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47407889 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.483156454 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.565424152 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.484051872 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.470256717 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.72152427 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.466883493 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.466869554 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.074449305 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.248075331 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465054234 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.470152579 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.488954464 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.148371617 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.459272691 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.460565051 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.36012538 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.477457135 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.532660806 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.470965307 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.476215733 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.592135948 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486185014 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.493254293 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.470932146 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.690381223 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475412857 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 5.08714514 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.545866847 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.702021918 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.138809743 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.497847001 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.399859735 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.173644544 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.159136896 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.465361815 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.670082578 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.466940596 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.474844717 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.477927249 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.484045672 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.136741705 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.487769479 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.002765497 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.47205388 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.479244406 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.47172072 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.466348794 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.58565008 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.595525109 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478327683 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.478283649 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.610282325 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.481398983 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.400248438 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.982233929 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.471509954 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.469571257 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.243431023 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.502308785 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.002753469 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.994971977 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.722001317 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.466949293 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.473165225 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.198764224 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.503640038 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.470271525 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.470936066 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475580508 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.469426533 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.495291652 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.47768098 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.07303281 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.845165191 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.026957013 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.278636409 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.122884914 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.52132887 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.478231077 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.362713765 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.957498012 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.396711943 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.127886774 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.685372425 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.97041327 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.419297792 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.70425928 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.861478902 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.38090471 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.478471913 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.698528462 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.506128236 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.464638572 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.481832355 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681201366 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.50200274 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.472341279 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.40011589 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.760178881 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.765457453 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.467447291 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.548465526 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.95919431 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.461210469 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.270414914 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.508761129 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.9402093 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.681876354 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.01063498 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.867790908 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.467965032 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.472437865 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.014166767 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.465476764 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.999941664 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.180292852 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.489535512 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.708745103 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.40291016 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.481005162 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.481045245 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.467523157 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 4.043393217 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.461914325 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.721650056 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.475006062 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.405735112 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.483237809 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.095355996 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.352719411 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.478306788 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.471079088 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.345862511 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.476882375 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.816234996 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.471867459 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.524872137 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.489303956 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.407480307 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.404110978 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.16489387 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481170863 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.442316854 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.058010854 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.483992965 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.486072593 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478464309 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323275398 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.729394486 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.487321209 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.160662242 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.718593657 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.471585459 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.494694425 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.574889927 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.479201431 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.456308426 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.374341006 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.710313025 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487904761 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.690918071 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.549780491 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.365197453 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.478189485 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.700293778 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.373208498 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.474449605 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.772956537 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.206017462 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.478673844 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.379157674 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.520480193 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.475141874 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.493466861 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.488439197 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.492644234 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.567477645 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.487740459 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.485708866 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.485578026 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.673210568 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.467675329 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479091432 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.487485627 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.568456087 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.630959233 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.594305625 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.24886621 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.17170666 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.323773839 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 2.179309138 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.509027116 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.477076016 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.475734619 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.412879847 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.622979581 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.004865865 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.750210827 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.599064047 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.467447931 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.498792801 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.477657104 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.487197844 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.688889565 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.75160088 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45184476 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.477122787 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.267803035 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.36169567 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.490742485 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.689474514 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.076831526 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.142452831 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.600994095 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.488698137 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.964893976 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.74334592 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.570650834 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.478654502 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.072476044 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.485811446 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.98047375 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.503326987 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.496665873 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.626484998 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490212242 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.197137683 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.502469562 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.638640525 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.252916561 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.145163908 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.739658656 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.055790025 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.482289094 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.174555033 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.33557173 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.746476589 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.550990891 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.490183902 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.58598159 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.63008311 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.492195549 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.365511548 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.479744006 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.330304615 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.190031653 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.489272007 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.175520784 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.768326109 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.477314826 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.492674322 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503647609 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.490616478 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.703699795 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.309138497 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.704769674 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.493058927 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.490253936 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.474492275 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.175271512 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.513661418 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.416055239 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.477894089 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.777001269 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.738549652 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.498586048 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.934485872 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.191156445 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.132524927 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.45731331 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.503591824 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.490526319 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.312069785 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.177371678 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.626295658 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.081640323 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.143888738 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.482379017 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.757678836 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.487168672 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.481428213 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.760373647 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.486149378 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.485274236 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.494513762 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 2.178901931 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.405665381 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.50298869 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.167114446 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.420567364 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.710597587 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.488224172 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.411809851 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.475970449 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.691193151 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.476309217 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.603623015 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.487844586 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.488459363 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479108267 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.235663893 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.775840323 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.483842071 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.467294421 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.470438917 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.505736214 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.583521969 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.781668255 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.479076589 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.166606628 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.83696479 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.741277991 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.490252826 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.464569385 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.486714603 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.483834722 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.212513897 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.502495552 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.495939637 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.144463416 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.499899248 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.49545343 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.489036783 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.703308324 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.698413354 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.491809975 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.499482827 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.49013392 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.501381584 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.386160667 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.259576934 seconds)
  done (took 1726.21437512 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.504581834 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.496479995 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.523142495 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.540439308 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.52426434 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.602991925 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.568451148 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.62454749 seconds)
  done (took 53.771398906 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.4978261 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.63730712 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.521479085 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.495751774 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.489339623 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.494284126 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 2.020622453 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.520221146 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.488919667 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.49661743 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.486540503 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.501683272 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 2.24191733 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.496399857 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.492753266 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.475914531 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.495762013 seconds)
  done (took 68.247586321 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.486103446 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 7.166757039 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.525151084 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.478755664 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 8.205339864 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.504339097 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 7.053482516 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.48699119 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.488885473 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.636036717 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.130437718 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.527641995 seconds)
  done (took 83.079092076 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.495682331 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.493878433 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.496776631 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.496810999 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.495198985 seconds)
  done (took 8.866427185 seconds)
done (took 2171.570270481 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.495224271 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.332598162 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 2.215066241 seconds)
  done (took 5.936841208 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.635429847 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.682310347 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.801966527 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.809711116 seconds)
  done (took 8.317418503 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.770937773 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.857444541 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.685991792 seconds)
  done (took 6.699588995 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.816375196 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.502949466 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.506971433 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.486548038 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.486415821 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.489747469 seconds)
  done (took 20.849888851 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.49238288 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.493409765 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.490580702 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.494867402 seconds)
  done (took 7.360426531 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.467905131 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.211981214 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.469194381 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.484480229 seconds)
  done (took 19.021171873 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.242921951 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.252508673 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.235121041 seconds)
  done (took 8.118407399 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.522426254 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.517395893 seconds)
  done (took 4.427295684 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.806850904 seconds)
  done (took 3.193435191 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.505926779 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.545799619 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.731576477 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.640886489 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 5.128240517 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 6.497347701 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 3.420117627 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.958151142 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.612951451 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 4.093389965 seconds)
  done (took 34.522956785 seconds)
done (took 136.163873512 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.823959665 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.508676028 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.693019831 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.796107665 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.712358432 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.693936345 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.915326528 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.75793332 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 5.301433825 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 5.285136665 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.788676757 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.713164903 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.650287414 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.518882503 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.649809402 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.491360321 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.722356591 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.856307508 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.481022145 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.505237918 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.906832684 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 5.437381565 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 5.621914352 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 5.447337619 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.715779396 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.646995845 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.024990655 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.728175066 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.504832893 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.03805534 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.638341002 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.508811475 seconds)
  done (took 203.472892947 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.490460654 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.483195728 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.485183426 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.505537724 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.51517949 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.49984965 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.483069335 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.493034903 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.483031983 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.485254394 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.491944359 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.483360206 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.48333714 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.501086603 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.483683129 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.482746131 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.497434466 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.491907769 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.484530203 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.489785012 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.485369736 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.484816381 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.504515912 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.484929238 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.502602578 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.50332567 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.519177939 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.50003647 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.496139674 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.484087203 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.485289231 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.501425183 seconds)
  done (took 209.156427398 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.49242036 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.493788342 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.485154482 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.485737895 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.493959311 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.487837814 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.484434754 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.483462578 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.489938398 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.485195921 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.484315728 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.486192323 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.486253122 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.502611059 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.488136274 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.485334075 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.513216908 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.501179867 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.485994805 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.486411729 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.487502113 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.487379911 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.515945752 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.485897263 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.490367205 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.485477963 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.48786458 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.503818185 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.496914516 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.486482865 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.489867217 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.50021496 seconds)
  done (took 209.112655027 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.692080745 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.500137154 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.503635504 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.437956925 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.503777172 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.502041909 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.496792177 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.700740472 seconds)
  done (took 15.731231081 seconds)
done (took 638.869889978 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.95419843 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.645033945 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.715557886 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.525295279 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.436392905 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.535332272 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.52426265 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.721964675 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.489960345 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.72571239 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.904482278 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.530467148 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 3.060816114 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.514662403 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.813780636 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.634262117 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.438091735 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.563630847 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.874350383 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 3.170914338 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.807469218 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 3.114743994 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.735252945 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.491136926 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 3.060277212 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 3.105908048 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.330316223 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.420489937 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.532762156 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.885521226 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 4.329977094 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.586382992 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.590878192 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.597226398 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.652913407 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.635053761 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.569284231 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.5866327 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.739385679 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.87061804 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 3.174145268 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.288286933 seconds)
  done (took 101.280043657 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.48807187 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.48879521 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.48864842 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.489451187 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.490358904 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.48845396 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.487483694 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.488455213 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.488850192 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.489720535 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.488530588 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.489316578 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.487092797 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.488409837 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.486966271 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.489391376 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.487195608 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.49085621 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.488532457 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.488824196 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.488281085 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.487347697 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.489423885 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.488941092 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.489821236 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.490915775 seconds)
  done (took 40.107207807 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.507293455 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.789819944 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.96035085 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.513463797 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.506866762 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.509486811 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.59986538 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.509316555 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.509684146 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.510334743 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.699354427 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.509548553 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.545532341 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.999212516 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.509423597 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.506992956 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.50719469 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.508487756 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.801627386 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.508801862 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.621458067 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.506222928 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.60106075 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.513399516 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.531195312 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.510541549 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.513058134 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 2.050173743 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.529261397 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.692319117 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.452497586 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.597365993 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.998168406 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.998733825 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.45930853 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.511260046 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.511074094 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.700015717 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.514686471 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.509931306 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.602154992 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.512164263 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.972453484 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.153483371 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.525137701 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.512346696 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 2.072938143 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.719387363 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.803605903 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.518666256 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.992226779 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.505868014 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.513921663 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.513197219 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.808796465 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.51764715 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.510124377 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 2.075551696 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.529706936 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.603008127 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.515087609 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.511716874 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.798390372 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.503752914 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.78628681 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.506318162 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.519793006 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.53187289 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.967861619 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.505119419 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.177172744 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.524379802 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.512628005 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.693694258 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.779957304 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 2.104798087 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.527822364 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.802647809 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 2.003290821 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.620979451 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.516146657 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 2.036914566 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.618199199 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.510060856 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.515843135 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.515205657 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.511875111 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.565059761 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.603009725 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 2.099689641 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.181941228 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 2.092740339 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.622622845 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.520060252 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.513808208 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 2.083744277 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.529386524 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.516011689 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.981975078 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.179246184 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.535804015 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.521129171 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.187806532 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.530025986 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.608726238 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.52097293 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.99057376 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.516342226 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.565904438 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.512947083 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.518902562 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.537146031 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.607112956 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.517638734 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.515388099 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.167840697 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.734879832 seconds)
  done (took 198.393877448 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.507012913 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.500182155 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.507577339 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.519834474 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.507470864 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.51681975 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.50772319 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.510609883 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.516339017 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.508076931 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.50911775 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.511375339 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.50962152 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.516013131 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.512255233 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.51605322 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.162405401 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.510156415 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.521626192 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.501371051 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.349460098 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.514167189 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.521249924 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.500898481 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.508060698 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.509117216 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.512166778 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.506614431 seconds)
  done (took 157.199772343 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.51665218 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 2.210467568 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.536076473 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.674268144 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.543533983 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.513024705 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.6727822 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.585518265 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.528460299 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.516173785 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.516511497 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.878060113 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.513137822 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 2.130587752 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.739535241 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.694923739 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 2.117586278 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.530873526 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.515365668 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.517050827 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.677184269 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.524035351 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.877436772 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 2.206134126 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.538578701 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 2.212531786 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.504176309 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.519551847 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.518888154 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 2.180445656 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.52785807 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.872503152 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.603563765 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.589145361 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 2.191428683 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 2.129254827 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 2.130940177 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.684244991 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.509369156 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.516358261 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.516306006 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.501992475 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 2.176739421 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.530871717 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.519474026 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 2.168019219 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.533702379 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.519986641 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.525505496 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.517323367 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.588989759 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.599378637 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.883854782 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 2.178039895 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.622915873 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.531556806 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.67031482 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.905359419 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.523594602 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 2.124276792 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.495686314 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 2.185115146 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.533016829 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.5044562 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.520516992 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.525753691 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.701524927 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.672198705 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 2.129333585 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.531496369 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 2.124873287 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.710756646 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.516613886 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.519337809 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.521745619 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 2.179759955 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 2.133370366 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.712256718 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.676150431 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.743239145 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.505067053 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.520706295 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.505604687 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.615695937 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.522487991 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 2.185674786 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 2.142327583 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.534842718 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.521930848 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.52312682 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.524082831 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.732639193 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 2.203139459 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.625414596 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 2.149953396 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.895654263 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.86927049 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.517473662 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.593848878 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.531744168 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.877224514 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.517180621 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.592769831 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.972501762 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.880191505 seconds)
  done (took 182.212845608 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.800101823 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.826374722 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.615346193 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.665646319 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 2.166766832 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 2.128884544 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.82919169 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.662559485 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.638794776 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.810316734 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.797861285 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.605732233 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.721860553 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.60201904 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.326991239 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.612290639 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.646971476 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.680441102 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.644048475 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.602182912 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.197206389 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.822922252 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.712150597 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.540796357 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.619408448 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.388701878 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 2.112515268 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 2.061462929 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.719254362 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.931653993 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 2.105811719 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.713148193 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.56164077 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.275939881 seconds)
  done (took 72.562521477 seconds)
done (took 753.158515267 seconds)
SAVING RESULT...
DONE!
