cset: moving following pidspec: 7799
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.349179097 seconds)
loading group "string"... done (took 0.599420597 seconds)
loading group "linalg"... done (took 7.370830256 seconds)
loading group "parallel"... done (took 0.17111349 seconds)
loading group "find"... done (took 1.187712446 seconds)
loading group "tuple"... done (took 2.086648883 seconds)
loading group "dates"... done (took 1.30776554 seconds)
loading group "micro"... done (took 0.242459448 seconds)
loading group "io"... done (took 1.041900064 seconds)
loading group "scalar"... done (took 41.184369549 seconds)
loading group "sparse"... done (took 13.1651016 seconds)
loading group "broadcast"... done (took 1.011004125 seconds)
loading group "union"... done (took 14.459056852 seconds)
loading group "simd"... done (took 4.995689311 seconds)
loading group "random"... done (took 10.125430663 seconds)
loading group "problem"... done (took 2.030290424 seconds)
loading group "array"... done (took 23.768153215 seconds)
loading group "misc"... done (took 2.118768325 seconds)
loading group "sort"... done (took 3.450707111 seconds)
loading group "collection"... done (took 19.614359024 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.556041937 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.144797461 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.118839847 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.141784509 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.1865571 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.133653317 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.144361906 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.086513859 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.888038213 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.162944383 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.141880526 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.517372685 seconds)
done (took 4.957076773 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.220208097 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.089052437 seconds)
    (2/2) benchmarking "String"...
    done (took 0.099214005 seconds)
  done (took 0.865898809 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.067966101 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.130133296 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.081090848 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.068375516 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.068942869 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.08380749 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.069831206 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.06883876 seconds)
  done (took 1.258224898 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.074898718 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.06987422 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.085839951 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.069828134 seconds)
  done (took 0.987176146 seconds)
done (took 4.090942798 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.93368039 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.258931215 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.193318518 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.4685622 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.156859924 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.195826308 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.668860823 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.34083412 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.220294077 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.106554149 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.108649326 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.394444309 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.11103642 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.679166178 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.079310983 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.112366316 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.163173805 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453963183 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.084758949 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.085393226 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.107055808 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14216222 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.104747858 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.081363432 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.173335044 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.07291722 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.157517336 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.09722539 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.069130067 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.249935354 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.191277156 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.698430604 seconds)
  done (took 10.685653085 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.099972548 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.121608771 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.070837097 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.142495467 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.119685244 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.072277614 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.073579145 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.085368094 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.0941685 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.161183892 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.117791066 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.124540628 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.068104613 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.071918092 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.105551224 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.232999763 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.096033917 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.104749282 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.075214235 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.077828355 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.129246929 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.101900091 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.084458561 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.09738308 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.154747269 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.193960362 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.102370138 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.115385582 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.070399502 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.102131636 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.132613343 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.130528848 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.069088873 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.084283809 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.161815384 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.09826406 seconds)
  done (took 4.641524808 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.107467642 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.10198273 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.181660834 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.097369234 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.158042716 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.084860079 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.114556769 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.082923932 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.101606907 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.253881509 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.113000843 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.49028312 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.114492498 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.103887181 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.068839863 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.085933069 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.069309331 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.614479717 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.112678826 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.139566659 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.087127069 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.096259127 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.08984246 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.364217893 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.069864356 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.068777977 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088719571 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.062751882 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.151618799 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.070946944 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.268609751 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.11187705 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.072674021 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.122975026 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.18516285 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.097823965 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.125662769 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.083264757 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.069655625 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.177331508 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.07517245 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.086164398 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.093594134 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.125300765 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.124365999 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.086302141 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.071445356 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.188152461 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.070476021 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.104205232 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.974207215 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.167345609 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.078511594 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.068144323 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.303275191 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.106177005 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.07095106 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.066838591 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.288399924 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.162661043 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.069929465 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.113784425 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.069444315 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.091233384 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.072817278 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.391192013 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.086494513 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.707711524 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.072432172 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.079902063 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.089315039 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.071252172 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.092883154 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076445553 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.106305704 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.066934881 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.06929202 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.089446106 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.069272724 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.085287316 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.072159515 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.104979944 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.068332675 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.21624062 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.069044133 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.088455646 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.067067987 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.1061583 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.100132663 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.08955454 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.069083375 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.120484245 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.071514233 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.087095514 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.107896365 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.088528059 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.106401999 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.074150453 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.132244711 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.071171252 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.163967582 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.069588914 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.118237365 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.076913832 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.118647945 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.098008009 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.076098212 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.161453562 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.067834335 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.085421197 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.070799549 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.084092738 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.072649409 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.071815607 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.103810286 seconds)
  done (took 21.656465553 seconds)
done (took 38.775186582 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.320504929 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.096992011 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.097363222 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.079323681 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.098050675 seconds)
  done (took 1.454147031 seconds)
done (took 2.187776102 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.153897408 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.105819745 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08358745 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.101342212 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.083388725 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.106823891 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.12045287 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.084459693 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.121962307 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.065976572 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.11736661 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.066568725 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.081632812 seconds)
  done (took 2.053448753 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.082972939 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.087085021 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08757572 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084242282 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.08213644 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.085601862 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082678202 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.109092112 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.083247355 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.089981351 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.066436015 seconds)
  done (took 1.668241807 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.08250745 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.086978665 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.087805743 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.084342618 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.080837199 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.083426102 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.082169542 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.105119255 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.082760508 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.091308537 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.067582847 seconds)
  done (took 1.66455061 seconds)
done (took 6.110600192 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.080639078 seconds)
  done (took 0.805414326 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.746164744 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 7.830983703 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.08551578 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.137183954 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.225939006 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.159882162 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.456531061 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.112707757 seconds)
  done (took 10.689555135 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.10322396 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.103099469 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.074599525 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.091344863 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.07214047 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.088595975 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.073239221 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.071975883 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.087212198 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.070065466 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.086516997 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.074495323 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.087177473 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.073666818 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.087496885 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.075181908 seconds)
  done (took 2.115058666 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.108472281 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.107105104 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.09509461 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.079556281 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.092302046 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.075866709 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.095963668 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.078229514 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.09014747 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.075903065 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.095072425 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.078200264 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.090565243 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.068750592 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.094608667 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.080045391 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.090906707 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.078519518 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.094372359 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.079245929 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.095263988 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.068350597 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.091527184 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.07827137 seconds)
  done (took 2.929098259 seconds)
done (took 17.271522351 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.133803561 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.0776712 seconds)
  done (took 0.942375765 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.082608909 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.100451153 seconds)
  done (took 0.922810611 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.084289937 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.081813197 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.090569155 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.094646625 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.084047227 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.06947172 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.10659994 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.070915138 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.08518945 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.070450831 seconds)
  done (took 1.576974977 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.070017961 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.094893194 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.072309015 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.099915149 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.077673104 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.083141824 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.077954376 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.087375852 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.081686546 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.081751338 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.074209745 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.10168572 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.074543126 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.102638663 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.093450113 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.071468326 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.090016575 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.071206493 seconds)
  done (took 2.245456146 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.067457811 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.068777743 seconds)
  done (took 0.877581207 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.068616842 seconds)
    (2/7) benchmarking "second"...
    done (took 0.065467662 seconds)
    (3/7) benchmarking "month"...
    done (took 0.08544714 seconds)
    (4/7) benchmarking "year"...
    done (took 0.069629197 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.082739554 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.066279233 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.082194492 seconds)
  done (took 1.260104927 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.422843287 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.112849707 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.271808346 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.074238893 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.109506986 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.300984011 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.068983498 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.073595577 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.091931668 seconds)
  done (took 2.310580227 seconds)
done (took 10.873639373 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.080724995 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.087037585 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.115635392 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.441304402 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.106598766 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.068045926 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.146147398 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.213401712 seconds)
done (took 2.001726646 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 0.130943944 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 0.629979436 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 0.418983493 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 0.223514389 seconds)
  done (took 2.017304373 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.385084674 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.093492008 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.076559109 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.067761524 seconds)
  done (took 1.372647636 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.067540831 seconds)
    (2/2) benchmarking "read"...
    done (took 0.070687104 seconds)
  done (took 0.887937221 seconds)
done (took 5.157243544 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.06813372 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.067147024 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 0.08238486 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.069576956 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 0.066779073 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.083112687 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.069189075 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.069225929 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.102836106 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 0.087081282 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 0.069211019 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.06944375 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.085931372 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067551399 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.066546691 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.086933653 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.066992909 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.067046704 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.085012417 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067187 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.083130862 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069439988 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.066719061 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.083101319 seconds)
  done (took 2.605465786 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.087829266 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.083833722 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.07353604 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.089058652 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.072712852 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.088810624 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.076403959 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.069758959 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.090295457 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.071851185 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089384259 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.073848372 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.087838882 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.074448851 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.087617488 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.073929448 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.091099416 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.069671142 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071965106 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.090951332 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.07496401 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085843548 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.07417601 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.090458784 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.073191838 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.088970603 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.071249245 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.085338777 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.075360875 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.08950969 seconds)
  done (took 3.174318933 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.072961523 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.065226612 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.081794832 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.074183405 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.06730097 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.085533254 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.066375478 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.083268852 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.067883217 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.066323159 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.084816994 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.067044519 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.06695169 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.084140237 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.067775406 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.086484913 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.084845877 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.066973727 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.0837691 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.067694912 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.085773236 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.067091776 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.066548989 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.083484417 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.066227752 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.066698625 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.083366812 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.066864533 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.083638463 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.067138378 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.069648811 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.086378531 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.066901375 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.073127032 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.087122811 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.067217276 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.070147802 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.083499335 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.06741815 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.082595991 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.066562765 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.06684288 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.082882254 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.073693354 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.066728827 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.08554649 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.066715757 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.084864474 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.06753452 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.070398053 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.083159413 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.067086429 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.085426653 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.068062506 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.070535024 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.082815839 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.067754437 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.066059272 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.083606593 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.066460168 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.082606823 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.06659443 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.070119514 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.083939853 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.083191758 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.090003523 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.067088163 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.068750578 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.084630659 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.069452827 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.069135658 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.097286415 seconds)
  done (took 6.14137393 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.119207335 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.094549408 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.084000478 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.067953757 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.081158283 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.065884177 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.070980613 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.082020299 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068500628 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.088823078 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.06569681 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.083465754 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.068621818 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.082229531 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.084213251 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.069608244 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.08958524 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.06517951 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.067124648 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087859214 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.067841461 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.087350636 seconds)
  done (took 2.500977412 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.189147997 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.088843574 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.112539877 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.091909358 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.085839135 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.075559882 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.087747818 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.071438056 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.071477587 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.08697774 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070596517 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.088295422 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.070261589 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.085579421 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.07035631 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086747137 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071731564 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.086936469 seconds)
  done (took 2.348262947 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.080014288 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.067692381 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.107411969 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.068305172 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.084531782 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070652653 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.089037007 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.077253912 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.085939507 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.068976992 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091998762 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.070909909 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.196138594 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.068506024 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.071576514 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.085525672 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.071723815 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.0845263 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.076753631 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.089299361 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.073186509 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.093393313 seconds)
  done (took 2.630443886 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.082825612 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.069382765 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.102499989 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086732908 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.063976107 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.066493859 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.090324208 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.068404549 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.090490642 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.069950725 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.084359131 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.068829764 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.074707333 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.085858173 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.074023282 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.0852912 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.071179148 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.084798806 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.071479456 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.065758655 seconds)
  done (took 2.316731757 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.08934934 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.085319406 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.069602153 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.09556357 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.07139146 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08764882 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.080776267 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.087313318 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.072107428 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.113547712 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.071434019 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.087806084 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.079744136 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093053558 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.07143279 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.096683126 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.079605364 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.096983554 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.087356243 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.071575967 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.11181536 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.071308448 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.096017626 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.072124804 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.087280092 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.071664554 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.087592896 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.076841139 seconds)
  done (took 3.12889406 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.068612316 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.068068734 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08380951 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.067053308 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.066781128 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.085092315 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.066956651 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.067069768 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.086756087 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.067663952 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.085630239 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.06918516 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.070197233 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.085767217 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.069897645 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.069432265 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.08556477 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.067023204 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.067060567 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.083745496 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.069224307 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.085827229 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.06922932 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.067486212 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.083941806 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.069878768 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.067077071 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.08350196 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.069475426 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.066890522 seconds)
  done (took 2.981191262 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.078198496 seconds)
    (2/2) benchmarking "in"...
    done (took 0.091855184 seconds)
  done (took 0.93851972 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.065349118 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.082764224 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.082214693 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.072267656 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.091779538 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.070469801 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.094882354 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.075151629 seconds)
  done (took 1.398948133 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.085269628 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.080939251 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.087257063 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.097428742 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.081038648 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.087737986 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.163883868 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.087365606 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.075718284 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.084614231 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.08438579 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.06932467 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.094746771 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.070542402 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.093714777 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.077018144 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.084105615 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.075990183 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.072307789 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.08523835 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071651 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.099231069 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.072162686 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.084114583 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.070981024 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.078929679 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.099395718 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.071212659 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.090399544 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.079037407 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.092353809 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.064446806 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.069881497 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.087942775 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.067955413 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.097092435 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.086879334 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.090296869 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.080057094 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.087842051 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.080985985 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.081890631 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.074809708 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.076129868 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.097360673 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.070450794 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.088215559 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.065118442 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.084230882 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.072530266 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.065538574 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.086675944 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.06492246 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093866229 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.073752639 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.080467541 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.08625465 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.071781515 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.090680477 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.07370657 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.093444238 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.072063204 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071999 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.086752286 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.077387336 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.091116895 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.080720621 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.081562779 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.06409751 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.067448272 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.097528143 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.09343195 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.092483716 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.069916995 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.087529247 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.068512326 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.073127472 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.087376763 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.075963085 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.093086342 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.070189112 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.093111748 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077779289 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.086866938 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.073008382 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.078466514 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.086435645 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.072250927 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.084888995 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.088408407 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.086963505 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.06769214 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.067408295 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.097784867 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.072974451 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.08700663 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.06858031 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.093608161 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.064840576 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.070854748 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088052081 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.071295101 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.098743127 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.076267614 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.093108429 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.079865324 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.095850621 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070402008 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.073232436 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.084297819 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07154373 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.086580544 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.078132084 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.063611774 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.090429508 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.071155645 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.087840318 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.079656482 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.085000984 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.070362061 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.077869467 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.09302852 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.069120189 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.084208733 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.073491553 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.087281289 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.073093416 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.078280287 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.085584452 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.065082868 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.081935446 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.074015491 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.069661188 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.09036797 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.075428704 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089838872 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.063385946 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.084735925 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.075858917 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.097758353 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.071170975 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.071383094 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.094272051 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.071644454 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.086896537 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.076689726 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.072818265 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.087727198 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.076590224 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.088645935 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.065362241 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.090384062 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.072842619 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.068557991 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.091779172 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.073851111 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.090156969 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.071399081 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069568598 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.093539138 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.071126745 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.087079711 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.070253896 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.085257298 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.081519058 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.072270886 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.083580335 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.06783839 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.094705258 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.068483131 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.086186692 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.069017382 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.072698309 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.088011685 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.068579957 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.085971195 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.071847798 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.082053608 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.09276011 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.071468179 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.092613828 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.08195591 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.087651695 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.073011125 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.087122442 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.071584082 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.07180584 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.097324676 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.075438491 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.092703315 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.072974489 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.084454837 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.07614791 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078063865 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.087566743 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.067940691 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.08613723 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.074949713 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.092748227 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.074189594 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.070858521 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085327391 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071736142 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.091447671 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.073372842 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.069551637 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.086521526 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.074859069 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.086872667 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.077619648 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089286359 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.080989274 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.090943997 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.066445006 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.073218839 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.085832793 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.076775134 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.083542206 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.068464071 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.069010219 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.088344347 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.069163886 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.090625754 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.065168498 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.077193313 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.096616724 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.0707626 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.087768818 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.071256421 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.095244239 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.07228904 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.07419136 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.090903429 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.076815225 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.098855496 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.069901156 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.090181297 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.081948561 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.070600244 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.082849953 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.076236316 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.085951574 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.069416471 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.069101126 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.085897338 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.073654902 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.097117288 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.078143448 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.081823808 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.072863622 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.068453519 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.087342423 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.06670408 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.09244279 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.07455167 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.07031343 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.094827647 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.071733086 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.088335434 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.074183823 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.087211627 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.071593809 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.071301956 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.090855621 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.071246124 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.090422204 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.070749307 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.090679016 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.06988647 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.067221757 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.089874057 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.070677689 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.07033965 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.093921602 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.070212697 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08815429 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.073176835 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.088774145 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.071768816 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.070598004 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.086474526 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.074444468 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.088586103 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.071266673 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.072938025 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.083009524 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.077883801 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.087502172 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.079068092 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.070001183 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.085909135 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.075931882 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.091142989 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.076147326 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.089483185 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.072129399 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.071255429 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.088699838 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.073343343 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.094981299 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.068223066 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.099418263 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.079427399 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.089088227 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.073437291 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.070480187 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.089443158 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.069367485 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.088415396 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.071718313 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.071004271 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.087731299 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.075171771 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.090328888 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.070746284 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.071588551 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.089253603 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.07089388 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.089201278 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.06515803 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.068943745 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.087585499 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.070082232 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.099047271 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.07131901 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.086877489 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.0693886 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.071729105 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.086956937 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.06762777 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.096476795 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.080094821 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.088184767 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.07853521 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.069314073 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.090389541 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.080985259 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.085196754 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.068974336 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.085112083 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.068201222 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.077792603 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.089012087 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.079903416 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.087477652 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.06974086 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.067640285 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.088592203 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.068453746 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.081885397 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.068368135 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.074145537 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.087634776 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070094228 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.08780029 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.074096385 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.07162582 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097813688 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.069648028 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.088813477 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.071130642 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.084882183 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.070154701 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.069055715 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.091122356 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.071644168 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.085452863 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.068022382 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.070702939 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.088998683 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.072070365 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.069580291 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.089876213 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.078550481 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087676319 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.073776611 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.092275367 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.065270416 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.073623698 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.087642748 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.070733167 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.086846696 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.074807952 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.073786183 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.089736096 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.080105715 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.087729129 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.071414097 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.087760163 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.068921365 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.070240147 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.087904817 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.070140871 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.087719099 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.071668505 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.078646278 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.086850865 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.073883553 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.088522947 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.071588715 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.095521296 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.071816119 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.073990628 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.096089177 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.070855105 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.090122689 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.079002698 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.09245187 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.074027771 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.089716022 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.072856575 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.076969284 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.087206062 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.077569518 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.088526459 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.071222103 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.071978903 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.087010317 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070980034 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.087699684 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.070286981 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.076835326 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.088767387 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.069569234 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.087691512 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.068118366 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.071308717 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.092057359 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.079599968 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.090853565 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.074304534 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.083524665 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.067518452 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.071365714 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.086118325 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.0727502 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.091460046 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076813112 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.072083632 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.088859034 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.069212288 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.098098916 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.076766808 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.092050691 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.068972377 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.074102533 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.090486954 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.0733613 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.089282937 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.070979988 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.071566141 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.092670784 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.07246065 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.08733369 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.078606277 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.091784012 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.07163096 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.071599914 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.08954337 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.070987809 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.082985182 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.071515802 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.073432899 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.094045419 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.07306384 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.088698792 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.081961931 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.066957797 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.08946353 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.074440986 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.088139165 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.075898876 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.082956366 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.07199795 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.071214063 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.088940006 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.065662032 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.087318329 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.06879988 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.073356308 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.087490036 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.066307349 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.099401471 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.080139867 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.090937132 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070547344 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.069193206 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.084421782 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.065763409 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.086851491 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.072365834 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.072721837 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.099740014 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.06926715 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.087541949 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.065889833 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.070324546 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.09108568 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.074175209 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.085749676 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.06626602 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.069897506 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.092277491 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.075720215 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.087059839 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.071057138 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.073900573 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.09118098 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.068392675 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.092978755 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.068071438 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.092003922 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.08502081 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.088699133 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.071439449 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.076925585 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.09643013 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.071023165 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.084448327 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.070991047 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.073465672 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.090386218 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.071629302 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.090282026 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.086276914 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092835511 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.071198325 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.086399434 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.073494959 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.069883325 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.097094769 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.072008069 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.089613914 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.076354099 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.071855725 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.09879901 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072489057 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.096509039 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.073721002 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.091836791 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.069707826 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08868494 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.068144945 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.069218265 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.090086561 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.07174154 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.094111087 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.080199552 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.087778778 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.082436132 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.098253675 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.072881069 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.066950006 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.08893806 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.070517935 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.065139724 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.090436011 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.069158545 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.087330829 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.069586295 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.069191395 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.089229928 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.077039931 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.090371001 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.07181464 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.088437616 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.065393991 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.072854322 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.091997345 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.072975683 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.067599795 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.088322053 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.071824766 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.093561424 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.074807081 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.086511392 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.073028958 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.071923084 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.090105154 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.066321398 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.095497985 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.070222706 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.073814084 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.088996165 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.071536463 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.089776352 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.074589196 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.075356732 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.090521791 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.072661644 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.096695089 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.072556987 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.085663585 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.068375053 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.075760401 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.086792315 seconds)
  done (took 48.448966348 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.110151309 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083910438 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.063906453 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.082594742 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.077148865 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.085007126 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.065965108 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.066517059 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.085776224 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.069535057 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.084819518 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066453176 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.093954929 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.091911485 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.097827332 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.088626464 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.066395712 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.066589913 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.084594645 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.068172695 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.093215214 seconds)
  done (took 2.498219377 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.089007911 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.10190362 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.079597424 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.101720535 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.093016348 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.081010642 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.098971667 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079924731 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.102486137 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.095827137 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.083850609 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099063439 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.075730158 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.095909741 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.077488651 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.097371545 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.102011245 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.076465293 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.100576655 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.081722207 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.096606326 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.081828333 seconds)
  done (took 2.797665111 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.069736263 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.068201175 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.087648247 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.064052974 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.068816765 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.083474773 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.07455725 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.085407484 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.073381417 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.067603831 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.08667389 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.068927325 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.089991846 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.077466542 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.06944025 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.086413281 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.134259314 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.072143023 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.08712188 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.070401139 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.064533448 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.090171006 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.064835045 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.082611129 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.067668084 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.072244364 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.087703946 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.066032878 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.085478469 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.067714615 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.068606852 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.085051945 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.069726213 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.070386498 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.086812981 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.06710058 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.086209563 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.068552026 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.064820319 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.085383735 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.069358558 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.082746389 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.069395934 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.070462632 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.085099659 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.066652246 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.069885158 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.088088427 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.063775641 seconds)
  done (took 4.56354669 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.088011125 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.142574284 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.090437143 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.125929019 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.084430345 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.095812677 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.073188432 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.124900169 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.085346162 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.066813864 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.104531981 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.083328262 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.087552254 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.0738788 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.092807688 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.068800164 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.087977578 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067715049 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.090732339 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.068860967 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.090114689 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.075934405 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.100832689 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.082567034 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.091435338 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.067325093 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.086507884 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.073296353 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.099869428 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.090872494 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.074086296 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.09252635 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.084692371 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.091005963 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068379466 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.088934631 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.084806643 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.087318427 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.071390261 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.085306488 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.072225098 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.091021721 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.075764176 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.103185543 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.068212627 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.091365618 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.069270321 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.084305652 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.082131996 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.088622729 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.076894488 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.10212416 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.07137628 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.087455128 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.072942259 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.10243476 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086177463 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.066793783 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.070394052 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.099736809 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.084355267 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.073523711 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.10061073 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.071296147 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.093832955 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.083254099 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.091823533 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.072536696 seconds)
  done (took 6.765744467 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.077731839 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.092721455 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.083650764 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.101799068 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.093285481 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.075426521 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.09272178 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.074837017 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.092761494 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.079610871 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.093005208 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.116459208 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.070242195 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.095071576 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.074715128 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.094569216 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.074259135 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.094768201 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.092494663 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.076431045 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.092947281 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.083124146 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.09345437 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.101183962 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.105901624 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.088089261 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.074656856 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.092411581 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101557177 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.075645272 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.104683068 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.074983075 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.09336612 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.102397314 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.087423611 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.092642425 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.068293903 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.092333216 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.074650156 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.093028869 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.069745128 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101855269 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.093174934 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.070790176 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.093103458 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.07588341 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.10099028 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.105995063 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.07896445 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097062952 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.07527292 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103005636 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.092430617 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.07538776 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.10186316 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.12785559 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.084398745 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.101769198 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.093033526 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.083461698 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.101781961 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.108881554 seconds)
  done (took 6.396141745 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.090257263 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.095789571 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.09899074 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.064496655 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.067300724 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.093057714 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.066800178 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.085749541 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.077730855 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.096031859 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.080069956 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.091980436 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.075718984 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.098061766 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.090524415 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.075662488 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.090682575 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.072704198 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.095055384 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.072507761 seconds)
  done (took 2.496809117 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.078013224 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.1044722 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.069996675 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.093827732 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.073214302 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.075307995 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.090122701 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.07118293 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.087938113 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.072620362 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.098581908 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.079987443 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.088118427 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.075974772 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.098388938 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.07437498 seconds)
  done (took 2.155589796 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.081639317 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.098607579 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.084183734 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.089737583 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.067657588 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.085429157 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.069404357 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.064256983 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.084918703 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.083964963 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.088537599 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.07146659 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.088279519 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.067633001 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.065332194 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.091978614 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.065232096 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.085613371 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.069002813 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.103721015 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.08058555 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.08617576 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.070287214 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.089956069 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.06946572 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.093920638 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.070144634 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.067547474 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.088153162 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.071112044 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.090630705 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.078792017 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.087620899 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.070229208 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.088221058 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.068683168 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.070004879 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.089719476 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.073739305 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.089859339 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.069809225 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.088967461 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.071430941 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.072472763 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.085860145 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.071519922 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.085907509 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.077314889 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.068339011 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.090843383 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.070305901 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.091634918 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.072056729 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.099842146 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.074741327 seconds)
  done (took 5.217660222 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083061729 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.07175139 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.084557581 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.06712559 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.091265838 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.07118923 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.072165497 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091525093 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.070853878 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.086134122 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.071802518 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.090994525 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.071906229 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.072847697 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.091664139 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.074478121 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.086032628 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.073012441 seconds)
  done (took 2.251379547 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.074918931 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.068756549 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.095323217 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.069270778 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.08754211 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.07208673 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.066016075 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.088823417 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.069289727 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.088808324 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.070816481 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.073364852 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.087545497 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.072722282 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.08944764 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.071800106 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.072986897 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.089555862 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.071415839 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.085993696 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.073918514 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.068276285 seconds)
  done (took 2.539705448 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 0.07513738 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 0.096874876 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 0.169273009 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 0.111711342 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 0.08643827 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 0.103037373 seconds)
  done (took 1.474924179 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.093847815 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101329933 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.069782381 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109969928 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.077169712 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089247328 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071745371 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088326607 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.080322163 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.103645688 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.07066696 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.099561423 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.097778694 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.083647273 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.0952403 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.07649843 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.090841926 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.070517669 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089024941 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108144438 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.07199456 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098661347 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072447874 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.089615312 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.070828986 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097156092 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098137383 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.084886981 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089042483 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.078966437 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094588259 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.070353432 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.099895448 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.104104826 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072942306 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.099667874 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.071833393 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109252767 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095184707 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.080285389 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.091469979 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.07812902 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098166378 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.075840128 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.098084384 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.089324965 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.076817855 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089310821 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072319128 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.115548096 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.095597287 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.079517725 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096189112 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.080343727 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098566631 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.115529065 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103819614 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.079886884 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.09582712 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.104272602 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.080400788 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.095570242 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079191871 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.105299128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.096029693 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.079983799 seconds)
  done (took 6.718279903 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.086149925 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.107772812 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.071709275 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.105139967 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098874084 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072782477 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092264866 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.07381968 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.092538939 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.07298358 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.134517832 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072989809 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101525582 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.101171676 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072788228 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092304008 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073808191 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.101321786 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.072323693 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117979348 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092636851 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.081692654 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101729668 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.100841898 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.086774412 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.097864312 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.072318442 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093374155 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.071647615 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.092951738 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.096879339 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.073573238 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.100363951 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.072508964 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.100922803 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.073582762 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.092699772 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.077406987 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.093273497 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.078594646 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103356811 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.111317204 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.073371362 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.092786055 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.106892932 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.073474603 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.092292091 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.072769182 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.09211809 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073457405 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10662091 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.087271763 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107099001 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.100771613 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073838504 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.093046772 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.073363436 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.092349245 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073486007 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.099053872 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.10140771 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.073588535 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.1181974 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.072755174 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.09284985 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.100560539 seconds)
  done (took 6.760802047 seconds)
done (took 131.999839381 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.210044918 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.186298313 seconds)
  done (took 1.224744156 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.071069408 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.120095156 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.083154769 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.132610937 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.088773649 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.103709011 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.120520902 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.08222588 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.068896065 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.089630376 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.069848203 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.092045272 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.135530696 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.068804751 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.089200724 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.071050388 seconds)
  done (took 2.322972081 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.106096237 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.202450696 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.113678841 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.067665133 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.102652019 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.081560094 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.088919006 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.080838218 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.093838932 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.068821978 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.100133897 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.079534383 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.068285816 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.099778041 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.095834167 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.083757218 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.069075729 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.103182378 seconds)
  done (took 2.54532595 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.109367195 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.145622662 seconds)
  done (took 1.093175656 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 0.204063648 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 0.124007737 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 0.207745223 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 0.43493279 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 0.214592528 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 0.295751416 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 0.17614294 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 0.177191252 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 0.15842524 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 0.171368308 seconds)
  done (took 2.997729643 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.10150121 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.174081561 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.322122564 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.142250424 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.090177945 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.12076749 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.143710109 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.11216635 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.085445935 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.10451009 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.103129434 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.080220859 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.121336151 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.078338357 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.098874592 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.08256631 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.127337264 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.077802719 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.101460989 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.079869577 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.123670617 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.069324978 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.099135643 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.077838025 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.10264874 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.083175186 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.090246294 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.070912411 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.100274133 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.080568183 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.104207376 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.1198316 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.084897518 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.1384196 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.107913262 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.139748605 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.080971632 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.096464264 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.077222554 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.096732099 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.081368369 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.101931659 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.108618976 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.083176709 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.06998113 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.102394777 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.070490228 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.09027581 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.084507911 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.103322243 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.084628993 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.104670363 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.140010448 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.102086499 seconds)
  done (took 6.45725607 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.764908711 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.137277441 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.074270355 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.831985769 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117657977 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.085679139 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.755255459 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.09761637 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.238589662 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.766474681 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.117445008 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.080271548 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.212373212 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.219994958 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.938252247 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.294152927 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.65014802 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.111558177 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.114011209 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.137529009 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.166468143 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.160349065 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.153298556 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.405962708 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.09877065 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07414657 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.141103642 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.101543082 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.1447048 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.086169298 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.098583391 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.159660651 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.233051083 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.184990709 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.078263753 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.093504833 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.072512732 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.153716693 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.250271232 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.195658174 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.161480202 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.071136827 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072901436 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.164913804 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.135459735 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.07113884 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.14597091 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.158716106 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.174005678 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.077160528 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.079857841 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.167221839 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.144497982 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.148292626 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.104303399 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.281764903 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.292008125 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.093225499 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123761273 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.087254871 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.245459911 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.084966705 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.205786683 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.142671171 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.193624702 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.073787439 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.756427451 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.154381682 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.072467173 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.09961979 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.122720687 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.077824524 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.143205172 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.147879165 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.373623055 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.147128073 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.09700172 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.072586678 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.212150704 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.087628476 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.093185874 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.145305245 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.079202089 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.126001787 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.148872528 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.171274545 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.152795421 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.217649619 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.148417105 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.164402473 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.077371256 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.127800421 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.098506968 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.195682622 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.177269887 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.165588902 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.192335751 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.145755558 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.146607108 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.1520088 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102236937 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.156463949 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125516959 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.105282142 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.144735359 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.176644866 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.128168753 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.105955316 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.076171271 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.165720358 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.129438524 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.089573263 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.1442945 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.174250082 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.434590144 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.153201579 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.069158241 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.111370659 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.143895287 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.145089456 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.099852645 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.216324542 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.126798354 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.173497684 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.125991386 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.070744456 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.125392086 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.146956829 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.102518785 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.127133601 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.144384564 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.08044658 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.217230055 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.198073657 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.102885496 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.201940867 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.165661984 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.07817736 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.17558746 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.12499314 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.152880299 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.080990864 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.143224993 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099061329 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.775974435 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.148503905 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.125702443 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.076498142 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.168590466 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.07182953 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.106440996 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.106458272 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.069577154 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.752977769 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.088240464 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.103879753 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.084864398 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.099448302 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.125436017 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.141453819 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.075796547 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.165746295 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.188209632 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.100676134 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.123946286 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.0851304 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.164804883 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.079087382 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.107171862 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.085879688 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.107727616 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.126795457 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.075829535 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.1079414 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.15290006 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.145294217 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.201629356 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.547196888 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093603556 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.085921685 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.208781894 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.092959596 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.247375709 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.139607187 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.206419313 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.146193232 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.103884295 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.288101496 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.148489072 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.169166918 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.088350836 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.15626989 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.091588533 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.141132161 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.148305842 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.093574612 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.079576207 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.145581604 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.172202186 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.149275252 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.943931469 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.073668064 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.207839746 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.069291389 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.17441319 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.07908978 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.102029743 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.253513265 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.094193576 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.151902798 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.147311198 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.097011983 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.085887508 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.700525446 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.085855023 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.16483352 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.079548161 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.201601288 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.147289617 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.140718681 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.141935431 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.101122969 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.145857691 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.189675332 seconds)
  done (took 41.46852322 seconds)
done (took 58.943322925 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.288596677 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.198472161 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.258579677 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.152500218 seconds)
  done (took 1.839501453 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.148749655 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.108695553 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.126239619 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.089814632 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.111493658 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.091080492 seconds)
  done (took 1.540580045 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.431739319 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.28168652 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.242990767 seconds)
  done (took 1.821311195 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.308207628 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.239286748 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.465415829 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.308987322 seconds)
  done (took 2.293736291 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.203138331 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.121082407 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.093943195 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.089782122 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.169586794 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.271450147 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.132826999 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.197530126 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.081238492 seconds)
  done (took 2.272756862 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.207512792 seconds)
done (took 10.842662489 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 0.220526119 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.11785911 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.263165929 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.312835576 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.11160377 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 0.2018268 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.197249845 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 0.197735475 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 0.188307084 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.141379914 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.071035084 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.10571428 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.084154058 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.078437972 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.104291941 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 0.152033216 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.256651837 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.087477325 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 0.12722927 seconds)
    (20/309) benchmarking ("map", identity, Bool, true)...
    done (took 0.164495323 seconds)
    (21/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.104209779 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 0.056630571 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.170047224 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.075784158 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.287085869 seconds)
    (26/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.180156574 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.077680125 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.128634415 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.097339684 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.281527155 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.173818077 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.104779155 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.18792338 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.108121925 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.093155351 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 0.077463733 seconds)
    (37/309) benchmarking ("map", abs, Float64, true)...
    done (took 0.138327712 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 0.110252908 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.279840997 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 0.19977436 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.124902535 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.065957017 seconds)
    (43/309) benchmarking ("perf_sum", Float32, true)...
    done (took 0.102710274 seconds)
    (44/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.078350672 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.301430816 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.098358188 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.111373834 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.089665621 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.101923002 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 0.202400536 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.078017176 seconds)
    (52/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.100206404 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.08029472 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 0.127603671 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.07864101 seconds)
    (56/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.267282661 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 0.098990252 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.258421059 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.244955858 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 0.072905742 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.104541859 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 0.200235236 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.089660773 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.102929649 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.055745511 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.095566196 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 0.175132425 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.274241942 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 0.10674094 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.078224049 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.07363367 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.078486896 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.172419707 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.195831266 seconds)
    (75/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.097787344 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.091771893 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 0.070397524 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 0.19967296 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.073480658 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 0.121059567 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 0.12221993 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 0.175820325 seconds)
    (83/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.121175843 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.187404242 seconds)
    (85/309) benchmarking ("perf_sum", Float64, false)...
    done (took 0.075772941 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.056294663 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.277288213 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 0.178948588 seconds)
    (89/309) benchmarking ("sort", Int8, false)...
    done (took 0.172822379 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 0.094352949 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.097675072 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 0.09955808 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.127721566 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 0.126799672 seconds)
    (95/309) benchmarking ("map", abs, Float32, true)...
    done (took 0.066044618 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.083225629 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 0.181913123 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.250471497 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.273731303 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.078650027 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 0.12316416 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.056373236 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.055111402 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.14389479 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.181895881 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 0.097110158 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 0.217866288 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.118159456 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 0.066255015 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.101312779 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.079919369 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 0.174240027 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.082214447 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 0.164082166 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.251101701 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.071899739 seconds)
    (117/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.057760276 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.267046996 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.106588182 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.082173024 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.057193888 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.252954221 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 0.165339666 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.079282318 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.12108955 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 0.122569432 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.055478684 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.249706018 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 0.097769878 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.12156863 seconds)
    (131/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.078176579 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.100449908 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 0.118308229 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 0.077455551 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 0.143565327 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.073418655 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.084998204 seconds)
    (138/309) benchmarking ("map", abs, Bool, true)...
    done (took 0.112163455 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.073845698 seconds)
    (140/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.181938379 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.105682508 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 0.276190468 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.077011028 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.247712314 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.103251379 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.070277947 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.056039705 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 0.146116772 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.07053048 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.100340415 seconds)
    (151/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.080660545 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.070657747 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 0.167696645 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.07096115 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.099499907 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 0.103320938 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.099633375 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.057347622 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.276388489 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 0.130044746 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.082145069 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.076384056 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.098633181 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 0.079154055 seconds)
    (165/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.056685385 seconds)
    (166/309) benchmarking ("map", abs, Float64, false)...
    done (took 0.078450185 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.055789599 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.076779977 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.097891527 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 0.100893169 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.104105169 seconds)
    (172/309) benchmarking ("map", abs, BigInt, false)...
    done (took 0.058110305 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 0.11753558 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.096702969 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.070619343 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.055833829 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.093869703 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.056364549 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.054963445 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.095668123 seconds)
    (181/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.070897185 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.055324318 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.09680592 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 0.066114034 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 0.200737259 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.263096912 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.084248151 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.100896646 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.070216366 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 0.056482353 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.098785028 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.055533002 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.078235002 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.093100029 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 0.093479126 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.101956579 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.085835639 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.076009203 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.078760566 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 0.097551559 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.094961823 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.080795659 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.056326629 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.091305613 seconds)
    (205/309) benchmarking ("perf_sum", Int8, true)...
    done (took 0.081593913 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 0.06612033 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 0.116644369 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 0.147075682 seconds)
    (209/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.090028737 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 0.113274095 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.095753673 seconds)
    (212/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.071839598 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 0.077896466 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.111899781 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.057051141 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.102699561 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 0.078994174 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.070841348 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.112128895 seconds)
    (220/309) benchmarking ("perf_sum", Float64, true)...
    done (took 0.072500869 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.166928038 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067846027 seconds)
    (223/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.108892674 seconds)
    (224/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.085114254 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.095370236 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 0.064945395 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 0.203612636 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.069861602 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 0.138975693 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.076755376 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 0.075996478 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.0952531 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.069066915 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.101907601 seconds)
    (235/309) benchmarking ("map", identity, Bool, false)...
    done (took 0.056501964 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.056753587 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.093296394 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 0.14663582 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.079109286 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.057912668 seconds)
    (241/309) benchmarking ("sort", BigFloat, false)...
    done (took 0.123647939 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.128698036 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 0.156460351 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.071376927 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.055968354 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.094237743 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.056384555 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.055309477 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 0.116746245 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.070399644 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.254071864 seconds)
    (252/309) benchmarking ("perf_sum", Float32, false)...
    done (took 0.074366237 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.095647779 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.077332384 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 0.144091025 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.055559455 seconds)
    (257/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.057223618 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.079092775 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 0.139694837 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.245534967 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.102099064 seconds)
    (262/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.076934782 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.078171989 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.078983574 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 0.096824411 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.069165424 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.095251916 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 0.123428448 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.25930465 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.092865902 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 0.091098228 seconds)
    (272/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.056048064 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.093817135 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.077517758 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.057424771 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.079514227 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 0.101890826 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.094098721 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.082106382 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 0.090748793 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.079440684 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 0.146097215 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.07219417 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.055879264 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.102101906 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.070647597 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.070598177 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.092391099 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.070827163 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.068789058 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.092861681 seconds)
    (292/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.070602037 seconds)
    (293/309) benchmarking ("sort", Float64, false)...
    done (took 0.155647167 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.078818816 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.093584185 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.078468475 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.058685888 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.100158141 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.056410822 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.070191541 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.080921748 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 0.186074547 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 0.081081074 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 0.210876328 seconds)
    (305/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.057312342 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.056325013 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.102631023 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.056568006 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.072374983 seconds)
  done (took 36.776735416 seconds)
done (took 37.651123902 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.08479455 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.117589627 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.078330535 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.122086273 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.08659656 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.108211691 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.078065391 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.108195047 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.086302908 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.111131376 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.08547716 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.059086219 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.103434956 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.080575226 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.103681245 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.099387819 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.10738965 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.077810009 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.102123425 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.069773999 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.078364651 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.093471793 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.071710079 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.058411604 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.106021587 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.078019733 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.10124223 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.080528137 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.069789591 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.094277622 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.074034827 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.1009349 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.070495498 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.084034032 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.100467051 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.079176587 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.103640104 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.082325832 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.072103965 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.093954292 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.079725714 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.093586847 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.077182779 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.078227464 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.09956014 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.076233456 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.100972131 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.085276528 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.123147262 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073696503 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.078873205 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.105887536 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.082453462 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.101149404 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.074553332 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.101698297 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.076268249 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.099538135 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.102986205 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.074309757 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.101533604 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.079433942 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.076287225 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.102362659 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.07952923 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.104458012 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.082121433 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.099194491 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.08106729 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.076416235 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.094003523 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.079147084 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.096729405 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.070924705 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.081988118 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.104436509 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.069621598 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.076379848 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.100783535 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.077608075 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.09340023 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073427052 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.072099579 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.099948374 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073408561 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.059154783 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.097906509 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.076788093 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.069490521 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.102133706 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.076676383 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.100720307 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.072575692 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.081882822 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.09304178 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.076314671 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.093499358 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.070474894 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.072524879 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.097455829 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.07111027 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.072979726 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.103168322 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.071908935 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.098877205 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.085434283 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.070348584 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.100297948 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.070319973 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.069564002 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.110942951 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.08031655 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.093749139 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073593908 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.092448888 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.078286963 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.069949356 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.093386007 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.070703121 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.0703402 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.10000695 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.070089281 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.073141663 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.100830045 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.08448235 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.096352875 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.074384096 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.073207209 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.093961749 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.076433182 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.070572073 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.094358981 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.072908642 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.091206225 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.073179387 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.070584256 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.101040492 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.07334941 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.079108824 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.096273532 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.079726649 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.098504298 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.076922953 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.076088866 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.093088357 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.063343412 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.073463096 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.096873415 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.071766552 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.093642885 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.072906695 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.070082546 seconds)
done (took 13.944265591 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.06876392 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.176505557 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.131400532 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.100989477 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.116248077 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.070684942 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.107176182 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.137012574 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.07242576 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.136992096 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.09443912 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.115973066 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.145772396 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.069330712 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.070638897 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.098505072 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.07231108 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.120727599 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.110752358 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.116847247 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.14994014 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.070234652 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.129728371 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.097077094 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119442334 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.12479602 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.070889203 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.075428883 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.096007912 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.131632423 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.090005532 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.072071874 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.093040042 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.105829585 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.121384543 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.11244355 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.06952677 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.111717685 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.069001691 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.07020194 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.120958238 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.130026266 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.087702713 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.109530406 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.072759881 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.094918895 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.070339375 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.115802261 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.097634719 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.108959805 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.116885474 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.140796113 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.074571174 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.112882833 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.070638551 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.117894344 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.089388327 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.09678944 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.071561168 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.072975466 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.093449257 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.074354126 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.119307252 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.100587261 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.099321487 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.08802317 seconds)
  done (took 7.577457814 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.08727705 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.118684001 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.087417503 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.111925128 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.068612525 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.070535878 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.094265388 seconds)
  done (took 1.570459943 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.069543594 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.091739992 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.116515332 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.094382547 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.113877715 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.093804171 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.105308039 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.071665766 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.113011655 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.072473876 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.118258535 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113176315 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.098246922 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.079094384 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.12254009 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.071498454 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.097724426 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.095464526 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.075080607 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.120757335 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.075133107 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.117152993 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.074122854 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.071761706 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.112331853 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.072139539 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.14640084 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.07646871 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.097325573 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.074537294 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.069875343 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.146354585 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.109684109 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.081140194 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.093856632 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.088044952 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.112031581 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.069957007 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.089746048 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.101080958 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.08722792 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.096105652 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.073592083 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.070433969 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.100285686 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.083349014 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.096923326 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.073227994 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.07493567 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.117721362 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.07312391 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111576294 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.07208419 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.076167508 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.098274161 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.079384424 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.105280776 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.072873821 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.093480452 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.09748422 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.09022497 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.114774548 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.087639695 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.115293116 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.07477939 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.111713153 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.08835528 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.074635522 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.098605258 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.075893305 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.11538549 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.07025367 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.073295911 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.108262234 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.073275058 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.120883345 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.097444501 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.097867296 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.083408841 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.072174062 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.096512989 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.071932263 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.121813723 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.076565664 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.071784179 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.101530518 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.074932617 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.094150542 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.071467539 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.075477305 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.094202405 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.073059335 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.075026218 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.096854681 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.075205994 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.115014723 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.074075869 seconds)
  done (took 9.801049179 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.071468358 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.071267102 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.097050096 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.071225329 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.073362937 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.096138072 seconds)
  done (took 1.422894821 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.10181046 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.096354417 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.084866898 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.099631538 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.111458949 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.112428353 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.089223838 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.114689645 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.091122046 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.110742205 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.088504163 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.113993756 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.094551961 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.103469765 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.088314321 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.102952618 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.089082032 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.107994928 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.086111204 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.104254608 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.094131928 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.104179497 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079728326 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.112895383 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.075128914 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.100137111 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.081357134 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.106983568 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.083581433 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.110294489 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.077488318 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.074279964 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.098658457 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.110707876 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.088748271 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.102180878 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.078327358 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.077383614 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.108101383 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.076267314 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.113974686 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.079241931 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.109496606 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.077348088 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.115207066 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.077374678 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.101960934 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.08321125 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.113466346 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.076967171 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.101851005 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.078444004 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.099432268 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.077592771 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.07813334 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.113965238 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.077367291 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.113299869 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.079070549 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.102700726 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.075757338 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.100719667 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.088530056 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.100727735 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.086577536 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.101406954 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.077698456 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.103781125 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.079071997 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.102458898 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.077143753 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.075535306 seconds)
  done (took 7.712825447 seconds)
done (took 29.008305093 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.656779517 seconds)
  done (took 1.590532224 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.815220961 seconds)
  done (took 1.751496842 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.793675871 seconds)
  done (took 16.735682666 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.655927767 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.810783896 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.828632115 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.159805009 seconds)
  done (took 3.39084029 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.885570974 seconds)
  done (took 1.843684232 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.246810764 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.257061774 seconds)
  done (took 1.447151716 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.732337372 seconds)
  done (took 1.679851448 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.299710335 seconds)
  done (took 2.242420848 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.342966228 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.188779276 seconds)
  done (took 1.482275685 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.540601121 seconds)
  done (took 1.489889279 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.560579804 seconds)
  done (took 7.516743723 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.234979117 seconds)
  done (took 1.199555321 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.275848208 seconds)
  done (took 1.230236074 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.274758524 seconds)
  done (took 4.22948167 seconds)
done (took 48.775436605 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.081816083 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.084296328 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.107446905 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.081997296 seconds)
  done (took 1.30550416 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.081600643 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.077551374 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.106431284 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.07804499 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.108956997 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.079479151 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.104989636 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.083309273 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.102385951 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.080444623 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.077990507 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.102691468 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.081938335 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.105211329 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.076319559 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.080639069 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.107106638 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.078648569 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.106458449 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.07917409 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.101066512 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.081133504 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.082017295 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.100920856 seconds)
  done (took 3.12710895 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.080404471 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.076379544 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.10320759 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.076873397 seconds)
  done (took 1.30052446 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.080292381 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.119380928 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.093483152 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.104772848 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.097308802 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.115075748 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.073390414 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.073643364 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.101967222 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.082990575 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.098076553 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.106167344 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.118220849 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.081853191 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.110030527 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.071281956 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.074265491 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.11948864 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.083174127 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.107935348 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.076078003 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.107443471 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.073359077 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.121594772 seconds)
  done (took 3.256565337 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 0.080956984 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.13020843 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 0.082300067 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 0.117151806 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 0.096468497 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.070175436 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 0.107004793 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.09749734 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 0.157633212 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 0.069191334 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.097732742 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 0.06906801 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 0.101533084 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 0.070235775 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 0.082228382 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 0.14128723 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 0.143022249 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 0.073661719 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 0.128419953 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 0.071544156 seconds)
  done (took 2.949850461 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.078074563 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.073881886 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.095427995 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.074547157 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.082007531 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.103739214 seconds)
  done (took 1.474495074 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.071699561 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.070554734 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.096530281 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.072495804 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.077482248 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.097430383 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.071143142 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.072239291 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.097611687 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.072253613 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.096390241 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.070872812 seconds)
  done (took 1.931536406 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.468248816 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.073104819 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.09618271 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.068948855 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.074407481 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.095112743 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.085736916 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.072906586 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.12412636 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.071653043 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.097299683 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.07418764 seconds)
  done (took 2.370899269 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.271654734 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.081048341 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.339670394 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173262564 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.143586425 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.162636601 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10834152 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.146066364 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.204094409 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143669827 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.237161279 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.206582259 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.138938906 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173517045 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.118354233 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.137388981 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.192101365 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.228564154 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134786746 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.233941965 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.190224844 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.161681936 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.211774502 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.108173762 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.139315807 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.150845642 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.099822473 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.083568011 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238511993 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19127527 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.182275194 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.141748998 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124030213 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.241984337 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.227513732 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.176663064 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167548786 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.11404059 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.162385481 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.172020499 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.270458061 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.117380293 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.201609913 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138266046 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.110267639 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180123526 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.150555606 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.151917688 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.141933368 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.117735158 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.182154657 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.245564063 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.173186092 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.116367466 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.141748496 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144002967 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.147924651 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.107645659 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.278992845 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.201594557 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.189821277 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.074895733 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126836482 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195792541 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.165168863 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.146500161 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.183880037 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.098648055 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200579754 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.196078588 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.149312555 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206496067 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.166072048 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.117964732 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152784802 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177549958 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160677575 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.236738127 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159410107 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.101265466 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157202759 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132235579 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.085415893 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.173766582 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.079293183 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242865771 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.129049024 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.14543505 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.143174306 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.115622283 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141424034 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.229513241 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.211572375 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.109687416 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.094301375 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.133609365 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.155168606 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182426341 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.11777654 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.140082267 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.152973688 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.082622811 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197070178 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.079661233 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.1587679 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.10676153 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158248064 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16965924 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.079108527 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1832477 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.107666107 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.133255128 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169944113 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.228838382 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.118942482 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.086752756 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234708666 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160554623 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.137515992 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.18239603 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.223132784 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.131171355 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.131242199 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185106844 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.253384912 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.118287668 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205832405 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135213554 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.113036636 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.092514029 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186027934 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145220759 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.154376407 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.088068923 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.158832676 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.236991605 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.102046396 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.10106892 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.171955346 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.110752354 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109641471 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144408436 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.105209754 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.124603512 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.131167219 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.137559572 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.175796404 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158994525 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.13847902 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.158134628 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.130998878 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.228372513 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119016413 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.110117139 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134385062 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.098119722 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.171415384 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225790735 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.083805666 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.234353809 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.161466219 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134801891 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15378876 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087487204 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.202347583 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.083149612 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.074163176 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203981075 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.142910313 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.143192753 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.191541922 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135404779 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.16097845 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.156925827 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193568333 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167856747 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.168669133 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.137639614 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.091530369 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.145013548 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.186062466 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.077261038 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.125314739 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.087893308 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.135261119 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.125784609 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.112020318 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.180909761 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16088596 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.128595886 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146068993 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.12804287 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.188103481 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.080465957 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.190822397 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.153124048 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.099240179 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.219612103 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.223291286 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172599794 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131766528 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.183553757 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.0996166 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.078396928 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.119657023 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.164752126 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.113395277 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.088150006 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150355677 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.212180775 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164515479 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172606292 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.14334186 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.155894314 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.224010231 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.075790925 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.147215992 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.18775862 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158720566 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.160106485 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.119178148 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.104431673 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.209162694 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.109087522 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.283064241 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.151450633 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.160654609 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.190048206 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.135440241 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.115277309 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.109374101 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.200935735 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.1369897 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.190363953 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.132566808 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118908106 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.143062119 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.084897573 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135891807 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.16154708 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.176632929 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.172634704 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.150206429 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.16816477 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.10687255 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.150629097 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.157740789 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15611098 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.067679599 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153223798 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.230233571 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.127291936 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15177103 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220670602 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.082721412 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.156909106 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.24757854 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.207712965 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.090396508 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140919223 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.155165973 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164749251 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152483146 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.203636544 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142208237 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17078592 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.142814567 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.090305287 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.118531641 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.129915494 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.114138685 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.127778763 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.145590847 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.151062417 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.124882572 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.165857076 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145434803 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143486524 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.151701715 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.128704251 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.096081652 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13005836 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244657172 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15537266 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.244516798 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.13182936 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.188917615 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23616879 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.104335786 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.08407242 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.110301224 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.179222518 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.087633417 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194949902 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.100868769 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.136499592 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.160895115 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.206639184 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.100432577 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.098530168 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.142375638 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.170206075 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.142724155 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.104179914 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.135977158 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.231283773 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.135834204 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.08343616 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159559122 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136228325 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.134766331 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.248434866 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.0651583 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.127010169 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.079097947 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.111708634 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.16540275 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.222833468 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.087920086 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.160549548 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.153697128 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.155501643 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.165507002 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.13160132 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.127792041 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.144043392 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.18645539 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162918784 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.121340021 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.147240983 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.166231728 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224657888 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.138832031 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.100675261 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238359367 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.220348843 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.232648112 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.093530834 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149654302 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148461534 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.145708586 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.205875858 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.087992505 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.235932549 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112711154 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.173979133 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135675445 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.123724342 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164025021 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.126649943 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.093496155 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.214600604 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.154886787 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.111275377 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.085174008 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147703092 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173714215 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.134661128 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.103339876 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.178411245 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.075390935 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200432262 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209056402 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112068312 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13858411 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.101764305 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.111956121 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13971254 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.135298664 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.116507121 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.124811935 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.242192913 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.122396888 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189730744 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.204805407 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14765735 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.17428005 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.131965654 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.670010743 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.108256246 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.196073046 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.152238942 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.247380154 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.131057276 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152188307 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.143092481 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156955745 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.205174786 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.138729425 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.184379071 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.194668307 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.156149773 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.084120887 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.136089696 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144967848 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.120446464 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.14013469 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148989196 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148136535 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.131663938 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.154329226 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.164856987 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.111816146 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.101502521 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226413628 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.153617355 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.180329808 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.204795161 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.09061305 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152512199 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.206055949 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.084049141 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.182682831 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.197350745 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141322375 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.132343211 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.1107211 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.112298533 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23898635 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.102719798 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.200676093 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185704149 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.117623585 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148080479 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.180644206 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.169420797 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.139128046 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.159747225 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.127561292 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.147005077 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.15070979 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.115265413 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.08203475 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.138066672 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.145355906 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.130729072 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.135482824 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.124860617 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217804523 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.07573758 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.126786823 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134612212 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.181412721 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.249971458 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.120203466 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.087856686 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.152051928 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.146497131 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.150035965 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160339416 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.112524798 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112831143 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.087197671 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.140085182 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.118265967 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.148555343 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.134266917 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.144411326 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.238050676 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.113817298 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.23064708 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.126873008 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.141676104 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.073847911 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.110482734 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.102042339 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.127568777 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.137407977 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.128927174 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.238013954 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.103111286 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.121272331 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.124005476 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.07766168 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.114313362 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.166806978 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.144216124 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156354641 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12881291 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.067336131 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14056995 seconds)
  done (took 74.048913047 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.139026499 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.106785432 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.122077992 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.17749203 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.150830187 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.243484023 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.186147933 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.228372594 seconds)
  done (took 2.392010048 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.071914181 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.122239504 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.10966678 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.12447867 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.093076677 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.071868423 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.308882987 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.117524857 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.069271983 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.118852996 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.123530067 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094865049 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.491639358 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.070823579 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.100146965 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.090598304 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.070333602 seconds)
  done (took 3.278236269 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.448710461 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.644135632 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.452086728 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.100170519 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.928183055 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112615835 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.387176986 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.166144843 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.094445676 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.430010977 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.732056413 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.156421541 seconds)
  done (took 17.689607651 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.078377602 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.07213922 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.115187465 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.090722587 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.105931734 seconds)
  done (took 1.500252863 seconds)
done (took 117.576204259 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.083301503 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.388919218 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.057869848 seconds)
  done (took 1.518621057 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.086964874 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.090079349 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.116332468 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.08985029 seconds)
  done (took 1.429996485 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.078122172 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.079615785 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.115442863 seconds)
  done (took 1.317487681 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.299500177 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.172739463 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.095238397 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.08712988 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.080748825 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.108079594 seconds)
  done (took 1.320730474 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.07610276 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.078540292 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.10279661 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.079339019 seconds)
  done (took 1.374882158 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.079522192 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.056943155 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.059397615 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.08879819 seconds)
  done (took 1.328742001 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.093864532 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.109295823 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.085420478 seconds)
  done (took 1.330274612 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.112120582 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.117490137 seconds)
  done (took 1.273601977 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.085292452 seconds)
  done (took 1.124236059 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.096931852 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.1461321 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.164742468 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.143222042 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.175796789 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.142741462 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.11827926 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.09210324 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.110024986 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.120698998 seconds)
  done (took 2.355970698 seconds)
done (took 16.061192511 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.08160524 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.397743353 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.364825647 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.124436629 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.674533393 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.389670839 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.033613346 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.128043206 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.115375691 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.102362953 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.091576731 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.682577509 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.983386214 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.324573357 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.999541693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.323851123 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.683775108 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.073949695 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.100780298 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.07397053 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.015445046 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101113213 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.07304703 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.100943829 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.654176619 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.377655441 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.10166592 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.323524407 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.10148972 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.076163816 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.359824534 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.101599104 seconds)
  done (took 16.174692093 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.07310686 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.148572121 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.078333245 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.087545553 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.100812453 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.072374728 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.102977906 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.072938802 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.154270369 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073343583 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.120773131 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073342005 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.105409425 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.074678436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.093989756 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.102565483 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.074537506 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.102223846 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.074179116 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.074512348 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.119541199 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.073099971 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.101632841 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074979586 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.07316212 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.114627894 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.074455808 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.101572525 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.074992162 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.074924518 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.104743349 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.074248116 seconds)
  done (took 3.968272861 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.118321544 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.157290092 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.077484367 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.13381638 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.146837521 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.073157299 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.176693021 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.098380894 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.160082514 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.073770377 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.119700919 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.073450911 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.136432439 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.07420118 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.122581948 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.073793581 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.101807961 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.0740954 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.07331104 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.102228821 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.093383577 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.101239844 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.074065696 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.074321729 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.102738684 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.087700831 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.103000823 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.077983913 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.073457461 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.103675239 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.076679096 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.103061364 seconds)
  done (took 4.292821707 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.075722133 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.078094644 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.11403574 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.088688311 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.103194918 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.078036229 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.078784115 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.103206033 seconds)
  done (took 1.769343668 seconds)
done (took 27.246335734 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.082703111 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.074597902 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.104662401 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.084658492 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.10360055 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.082660762 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.07181426 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.105408535 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.077823385 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102412159 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.079203666 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.069976049 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.101691406 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.07044623 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.077715842 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.097495797 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.084987189 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.103489025 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.083249219 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.113644807 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.075201629 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.080861671 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10783839 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.085535502 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.114050323 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.086090682 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.113983082 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.079246956 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.074368837 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.104188429 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.082393371 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.120308369 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.074540052 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.084488673 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.103319441 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.073045989 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.100925228 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.073726859 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.085354124 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.108130516 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.07527618 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.108371621 seconds)
  done (took 4.827922716 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.092826751 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.09929024 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.121768593 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.066796875 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.101035327 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.066787013 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.124831753 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.065436413 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.067081543 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.124903005 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.060959711 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.062293666 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.093605928 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.059310289 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.06264068 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.06123157 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.094332256 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.061088497 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.062307025 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.090936131 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.065199761 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.058704328 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.092575563 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.063711036 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.060657432 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.066619475 seconds)
  done (took 3.101587517 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.078876239 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.085514069 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.118424713 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.132383363 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.136795096 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.079102008 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.110063784 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.090063981 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.116820072 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.071527835 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.103574856 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.102266899 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.091659629 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.108800757 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.07305508 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.116450029 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.08807546 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.07425487 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.107141211 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.092317557 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.116143127 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.081800175 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.120535464 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.083166897 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.07062765 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.101584531 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.074662348 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.120530102 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.076925429 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.108176854 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.075976308 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.07679193 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.101442056 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.084779669 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.105934644 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.076146765 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.092846582 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.109800721 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.080543867 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.102417104 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.077000611 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.073540269 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.123886732 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.118228633 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.101824354 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.079124339 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.109503754 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.083569935 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.072540677 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.120877113 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.082553885 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.100658175 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.076253276 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.071737639 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.100924617 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.087253954 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.104124072 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.076815061 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.08237531 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.104714933 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.085274142 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.10491513 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.089717526 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.072726669 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.109304226 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.07177973 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.101513494 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.072704958 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.095780262 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102507598 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.115614383 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.102081272 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.073511823 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.110711425 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.080982633 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.078955336 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.101850236 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.088497735 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.111154662 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.077730192 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.081759022 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.103283012 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.075298249 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.118747184 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.075325562 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.074639094 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.101908732 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.077171589 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.101762996 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.072830945 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.085370424 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.099585566 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.073824756 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.116629534 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.072220333 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.07436437 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.106596673 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.075205335 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.097503307 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.083278668 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.104304997 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.072089832 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.081975738 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.100001433 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.074953453 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.108542784 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.075427951 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.069105623 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.103839952 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.077753018 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.071542046 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.099010824 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.073768318 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.100509899 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.080981652 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.076406163 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.102668501 seconds)
  done (took 11.840216288 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.198624442 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.192886528 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.074148489 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.184913012 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.07962068 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.112044422 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.185247998 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.100161731 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.09958585 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.072018003 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.071992293 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.138472826 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.132186 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.114480828 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.110485403 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.070194611 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.117389932 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.112480893 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.186991144 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.180286021 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.120399068 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.078702357 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.101554441 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.072105088 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.0721157 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.109302801 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.08689602 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.106584642 seconds)
  done (took 4.348362379 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.085265886 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.127535397 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.077600702 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.089318005 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.12236879 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.071254472 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.102835317 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.072677721 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.11216375 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.082512527 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.098753255 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.077130566 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.078424374 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.107508974 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.071551271 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.10919487 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.080774195 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.072401205 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.102265766 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.074908421 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.105820533 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.084196781 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.104150656 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.071217431 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.07797 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.099227807 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.068518751 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.118550146 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.071584503 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.118118016 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.069987985 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.105410366 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.081637513 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.071653982 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.099528998 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.073914415 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.07298568 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.10118832 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.073771653 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.097692485 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.070241231 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.061100228 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.097980793 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.083614314 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.104870996 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.062969142 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.077445586 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.105176716 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.076134633 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.069256507 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.102471731 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.073415557 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.102060678 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.078986597 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.075500099 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.104824327 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.075045727 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.069572021 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.105286814 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.073297134 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.06818574 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.098550131 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.076174693 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.098853706 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.0795166 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.075530702 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.097772198 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.072399402 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.103559272 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.077696297 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.07219382 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.101556923 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.069470499 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.072966569 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.103781486 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.075868781 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.102748109 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.069454259 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.07022415 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.100106977 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.058548935 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.070983256 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.085076448 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.074346142 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.069409614 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.097408635 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.073424816 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.107709518 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.084716632 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.100507653 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.077703183 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.072194044 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.098021599 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.073939634 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.06632104 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.101797077 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.085994651 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.11621583 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.071317141 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.097849283 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.084459502 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.104452935 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.07104249 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.06009421 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.10660027 seconds)
  done (took 10.122122012 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.096854637 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.124702759 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.07454777 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.084975139 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.126451139 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.096752808 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.107587806 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.077462257 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.072400161 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.116138206 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.071195286 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.107964956 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.075981648 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.079484813 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.124543435 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.078503813 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.101655179 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.080248842 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.079623546 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.135842677 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.084557823 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.113655649 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.080874092 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.100354433 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.07698017 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.084176308 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.126916534 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.081301231 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.108916923 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.085517794 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.110292604 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.099283247 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.086337232 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.104028664 seconds)
  done (took 4.333040731 seconds)
done (took 39.6217004 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.140799479 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.339819035 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.125467289 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.001109457 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.157617043 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.140418131 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.137375715 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.126181467 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.49821273 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.124554477 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.347919287 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.705009194 seconds)
done (took 58.915525114 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.163636521 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.258290349 seconds)
    (2/2) benchmarking "String"...
    done (took 1.393080039 seconds)
  done (took 3.718397369 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.463572289 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.103904959 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.410035791 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.122466528 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.12192001 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.568649165 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.683991219 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 1.959192814 seconds)
  done (took 27.036481124 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 6.132867774 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.485907964 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 4.454107364 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 4.528393463 seconds)
  done (took 17.669612669 seconds)
done (took 58.118400003 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.131409333 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.152751742 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.143845534 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.113332349 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.2280065 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.150561333 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.43181347 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.125081191 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.121937137 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.109523005 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.14267128 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.145097492 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.135400931 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.498238252 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.130578769 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.124607285 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.185456039 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.694614402 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.490191216 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.144012286 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.129557146 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.183047686 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.124779893 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.124907549 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.133645198 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.125737387 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.12146545 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.134433765 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.234612022 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.129454203 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.204161744 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.67993338 seconds)
  done (took 187.794102744 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.121723385 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.243130956 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.322330183 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.146100794 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.559288299 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.320769659 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.268857701 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.635536852 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.13773189 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.148632545 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.364835856 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.123560624 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.433230316 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.151935331 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.128975595 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.219359455 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.319429618 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.421987665 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.137633486 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.397516517 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.142484941 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.393948156 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.444878651 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.315439643 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.136056896 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.123057552 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.129733899 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.160493608 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.312752164 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.26522422 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.16068231 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.162003272 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.664800088 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 1.976741111 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.137443694 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.143067218 seconds)
  done (took 147.338020418 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.398278403 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.11979423 seconds)
    (2/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.118460542 seconds)
    (3/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.119443513 seconds)
    (4/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.120649744 seconds)
    (5/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.146988673 seconds)
    (6/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.119656897 seconds)
    (7/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.619416094 seconds)
    (8/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.610542481 seconds)
    (9/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.616100771 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.671147289 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.179207213 seconds)
    (12/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.301571305 seconds)
    (13/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.118007071 seconds)
    (14/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208833668 seconds)
    (15/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.130743618 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.119847134 seconds)
    (17/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.134358044 seconds)
    (18/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.145752583 seconds)
    (19/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123071978 seconds)
    (20/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.119482742 seconds)
    (21/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.614222186 seconds)
    (22/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.135125854 seconds)
    (23/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.10518262 seconds)
    (24/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.128822621 seconds)
    (25/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.119436137 seconds)
    (26/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.14662491 seconds)
    (27/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.510046888 seconds)
    (28/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.120649482 seconds)
    (29/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.146467694 seconds)
    (30/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.427226891 seconds)
    (31/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.160558557 seconds)
    (32/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.119311839 seconds)
    (33/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.39786265 seconds)
    (34/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.577352197 seconds)
    (35/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.224332107 seconds)
    (36/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.121691369 seconds)
    (37/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.148294551 seconds)
    (38/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.119795047 seconds)
    (39/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.382431152 seconds)
    (40/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.120416215 seconds)
    (41/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.121062818 seconds)
    (42/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.12319104 seconds)
    (43/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.679621902 seconds)
    (44/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.12446479 seconds)
    (45/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.618882836 seconds)
    (46/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.124088768 seconds)
    (47/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 3.984732421 seconds)
    (48/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.120462217 seconds)
    (49/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.120442944 seconds)
    (50/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.409477446 seconds)
    (51/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.538901963 seconds)
    (52/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.123415143 seconds)
    (53/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.121066993 seconds)
    (54/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.123491782 seconds)
    (55/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.12072716 seconds)
    (56/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.120446703 seconds)
    (57/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.149193382 seconds)
    (58/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.554619978 seconds)
    (59/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.220379728 seconds)
    (60/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.122754462 seconds)
    (61/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.120674476 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.122891411 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.148245802 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.120520359 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.123126011 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.123485354 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.47524949 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.178786799 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.237595921 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.605018558 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.122319985 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.208809607 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.233985729 seconds)
    (74/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.119061249 seconds)
    (75/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.118576383 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.119845532 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.119606081 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.120140963 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.222778868 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.119822703 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.493280764 seconds)
    (82/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.119962458 seconds)
    (83/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.125434883 seconds)
    (84/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.121135791 seconds)
    (85/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.176854604 seconds)
    (86/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.209703651 seconds)
    (87/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.12054021 seconds)
    (88/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.382278055 seconds)
    (89/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.119912246 seconds)
    (90/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.120012271 seconds)
    (91/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.76331551 seconds)
    (92/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.208710503 seconds)
    (93/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.119748172 seconds)
    (94/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.119854179 seconds)
    (95/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.119598573 seconds)
    (96/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.49034793 seconds)
    (97/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.597943458 seconds)
    (98/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.268869029 seconds)
    (99/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.120602821 seconds)
    (100/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.2984535 seconds)
    (101/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.122807134 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.500980426 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.587651143 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.671799469 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.123452863 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.222728294 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.124306269 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.121859203 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.120029213 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.148997177 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.120213282 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.178472697 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.120907989 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.513608721 seconds)
  done (took 334.897092979 seconds)
done (took 672.495476836 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.727016735 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.705450411 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.810362753 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.70570317 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.671239763 seconds)
  done (took 9.684058159 seconds)
done (took 10.747412421 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.288897356 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.287903581 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.171977193 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.289661479 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.146359259 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.304961265 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.26819905 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.14121281 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.214530675 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.187045816 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.212810261 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.163514707 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.145118496 seconds)
  done (took 16.887334579 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.421781899 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.418901391 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.186553016 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.422978613 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.161592688 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.423727752 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.322547244 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.323312951 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.312137514 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.138135909 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.135833341 seconds)
  done (took 15.333947381 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.435889489 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.427394692 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.188568265 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.430890074 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.162709271 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.449466915 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.32117116 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.333078886 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.306098677 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.137272641 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.135503803 seconds)
  done (took 15.393733243 seconds)
done (took 48.679422204 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.132397973 seconds)
  done (took 2.198556017 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.163546452 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.32341429 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.145087352 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.136478226 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.131961917 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.13458197 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.136056335 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.134117977 seconds)
  done (took 10.372155992 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.127992748 seconds)
    (2/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.129629487 seconds)
    (3/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.131417183 seconds)
    (4/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.131331878 seconds)
    (5/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.130332373 seconds)
    (6/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.126708139 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.130071611 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.130853428 seconds)
    (9/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.128353462 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.128262201 seconds)
    (11/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.127944139 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.131043116 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.127186852 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.130707717 seconds)
    (15/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.128344539 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.130917023 seconds)
  done (took 19.138362362 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.128931776 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.127345173 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.127722006 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.128063544 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.12770254 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.128067757 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.128389585 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.127677353 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.130009199 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.127175 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.128043909 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.12741013 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.128115168 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.127220284 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.127016737 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.128646381 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.127480034 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.128594149 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.132139564 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.12819101 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.127251762 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.127322244 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.128552602 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.128169752 seconds)
  done (took 28.147173344 seconds)
done (took 60.920657074 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 3.953734672 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.583293167 seconds)
  done (took 8.603935015 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.130463712 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.132287062 seconds)
  done (took 3.330146456 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.130582273 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.129896996 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.129931881 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.130853522 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.130556929 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.13020912 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.131511384 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.131827342 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.130018502 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.130591245 seconds)
  done (took 12.372187476 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.130304174 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.130187692 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.12817934 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.13072972 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.130373904 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.128182276 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.130984091 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.131407094 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.13041366 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.128395569 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.131363811 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.128200674 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.130732511 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.128366939 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.130354669 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.127978089 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.129540979 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.128393117 seconds)
  done (took 21.401157925 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.130877795 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.131021966 seconds)
  done (took 3.329804839 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.129049322 seconds)
    (2/7) benchmarking "second"...
    done (took 1.128665932 seconds)
    (3/7) benchmarking "month"...
    done (took 1.129458962 seconds)
    (4/7) benchmarking "year"...
    done (took 1.129435435 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.128775921 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.128767354 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.129116952 seconds)
  done (took 8.970868252 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.132797422 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.315085134 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.394275728 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.709517823 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.133191095 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.134429291 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 1.993566146 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.13626597 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.137050685 seconds)
  done (took 13.153612778 seconds)
done (took 72.226591556 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.09695093 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.124861134 seconds)
  (3/8) benchmarking "parseint"...
  done (took 2.929259447 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.133268087 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.140912978 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.468477668 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.140286814 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.244640309 seconds)
done (took 36.346407777 seconds)
(9/20) benchmarking "io"...
  (1/4) benchmarking "skipchars"...
  done (took 6.128659429 seconds)
  (2/4) benchmarking "array_limit"...
    (1/3) benchmarking ("display", "Array{Float64,1}(100000000,)")...
    done (took 1.810058711 seconds)
    (2/3) benchmarking ("display", "Array{Float64,2}(100000000, 1)")...
    done (took 1.816202886 seconds)
    (3/3) benchmarking ("display", "Array{Float64,2}(10000, 10000)")...
    done (took 6.126796218 seconds)
  done (took 10.822134301 seconds)
  (3/4) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.115441456 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 1.956446217 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.116023501 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.046803862 seconds)
  done (took 17.305182667 seconds)
  (4/4) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 1.68600161 seconds)
    (2/2) benchmarking "read"...
    done (took 1.456671998 seconds)
  done (took 4.21240533 seconds)
done (took 39.536367625 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.134218511 seconds)
    (2/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.133639718 seconds)
    (3/24) benchmarking ("one", "Float64")...
    done (took 1.131319815 seconds)
    (4/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.134407105 seconds)
    (5/24) benchmarking ("zero", "Float64")...
    done (took 1.131475038 seconds)
    (6/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.131445849 seconds)
    (7/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.134111093 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.133041868 seconds)
    (9/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.134040421 seconds)
    (10/24) benchmarking ("zero", "Float32")...
    done (took 1.135010477 seconds)
    (11/24) benchmarking ("one", "Float32")...
    done (took 1.134637067 seconds)
    (12/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.133851057 seconds)
    (13/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.132942259 seconds)
    (14/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.131744361 seconds)
    (15/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.131978991 seconds)
    (16/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.134013038 seconds)
    (17/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.132187483 seconds)
    (18/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13217465 seconds)
    (19/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.134855228 seconds)
    (20/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.132194357 seconds)
    (21/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.133368251 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.134995188 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.132602078 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.132601529 seconds)
  done (took 28.267548855 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.134315591 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.133138663 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.135683781 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.13499646 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.13213105 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.135827655 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.135703326 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.132233516 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.13541104 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.134824842 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.133158582 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.132671115 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.134638888 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.132249881 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.135353616 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.133472652 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.136080018 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.133153506 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.135524005 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.133498537 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.135537177 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.13290281 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.13303342 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.136114279 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.133430126 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.133628863 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.135981508 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.133360374 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.135536159 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.134587518 seconds)
  done (took 35.099405338 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.140557807 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.142614159 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.135922727 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.135976417 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.136739451 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.136758356 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.136221703 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.136740733 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.136265307 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.136232348 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.135562607 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.136905388 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.136836028 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.136846325 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.13677089 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.136616734 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.138709586 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.137502591 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.138204028 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.137605657 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.137056912 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.137797829 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.137609369 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.137784597 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.136288501 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.137590513 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.137934478 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.137411682 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.137386539 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.137620091 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.137279365 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.138029723 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.137642972 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.137616507 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.137561037 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.138905793 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.142952154 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.144271403 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.138305551 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.137833847 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.138028255 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.137218027 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.138176721 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.137311647 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.137783219 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.138176551 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.138805886 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.137760215 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.138629788 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.138105374 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.138450327 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.138259182 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.137931127 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.138043252 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.137748181 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.138072998 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.138520248 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.138487463 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.138672814 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.138405003 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.139055784 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.138969638 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.138401209 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.138936217 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.138915579 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.139274267 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.139524879 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.13971044 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.139246335 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.139109298 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.139446528 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.139664074 seconds)
  done (took 83.018147278 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.139329074 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.137511777 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.135927624 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.136858832 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.136388424 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.138968663 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.136426462 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.139953034 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137032403 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.139326222 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.13947842 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.138051795 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.137687282 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.139626383 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.13912978 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.136847377 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.13973727 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.136989231 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.139469174 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.13983081 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.13943084 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.136898446 seconds)
  done (took 26.1167009 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.13985593 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.140117233 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.138014602 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.140164979 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.137401682 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.139604411 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.141730716 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.140352968 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.140962804 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.138183948 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.137895428 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.140873873 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.138052824 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.138525092 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.13812354 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.138253417 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.141319652 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.139087452 seconds)
  done (took 21.585024794 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.139988774 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.138882415 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.141345413 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.139691811 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.139043236 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.141938941 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.138896323 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.141601022 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.141514304 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.138595837 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.142269983 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.141840921 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.142433367 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.139510249 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.141862394 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.139799492 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.14233109 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.139821317 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.141955393 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.138853748 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.140115576 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.141967166 seconds)
  done (took 26.171745319 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.142105651 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.142528011 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.13990143 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.139854273 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.138253253 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.142098447 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.14233593 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.139162647 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.142183615 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.141868494 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.140263234 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.143468606 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.139727701 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.140198934 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.1392928 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.140201345 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.143002134 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.14122885 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.142578162 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.14026742 seconds)
  done (took 23.897914907 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.143264557 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.144063909 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.143964728 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.143816269 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.142934859 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.1442454 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.143406772 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.143461972 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.143171003 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.143811518 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.144452256 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.143673843 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.143214618 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.143400087 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.143886746 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.144163254 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.144152601 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.1434963 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.143797624 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.145262376 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.144105034 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.144700082 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.143964545 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.144645267 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.144671583 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.144996469 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.145355499 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.144694733 seconds)
  done (took 33.112530989 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.145018507 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.144084259 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.142820912 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.143237783 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.142454084 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.143445897 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.142737436 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.142438319 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.144684787 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.142341498 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.144780197 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.145480392 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.145252599 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.144565867 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.146062405 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.145133865 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.144489284 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.143287149 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.143224507 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.142975133 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.146559786 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.146197008 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.145163044 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.143861889 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.143002575 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.146605771 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.143777812 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.142878936 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.146477483 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.143149813 seconds)
  done (took 35.407894482 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.164187174 seconds)
    (2/2) benchmarking "in"...
    done (took 1.163874575 seconds)
  done (took 3.409559885 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.143458744 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.146400014 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.14576585 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.144075385 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.143635386 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.147231251 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.146480124 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.143889709 seconds)
  done (took 10.242407032 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.145113518 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.147254315 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.146291412 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.146853343 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.145812989 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.145429521 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.153337166 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.161405513 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.147334333 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.146759026 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.152384673 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.152308384 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.148715406 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.146617278 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.145944336 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.147826595 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.146484983 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.147343407 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.146934021 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.146858888 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.147017242 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.148945219 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.149466635 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.144964989 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.147718391 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.156257445 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.151129837 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.148028686 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.147172294 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.150668455 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.146535844 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.146050731 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.147675347 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.147669698 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.148135876 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.147802037 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.156453995 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.162374538 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.154902934 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.148999266 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.149422822 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.146034134 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.148771787 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.14948245 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.149260701 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.148111479 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.150089497 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.14671832 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.147539331 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.150616097 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.153271666 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.146854007 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.146741736 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.151725608 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.150032901 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.155502112 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.164071071 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.150076303 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.156132749 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.159694469 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.162520248 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.156691508 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.151046865 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.149833453 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.15844506 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.171102187 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.15676177 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.163466121 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.147817531 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.150471484 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.15666859 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.163262631 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.158223281 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.149515 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.149621299 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.150972549 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.150054904 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.151595539 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.155987312 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.167319745 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.149865892 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.150237043 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.159374933 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.170617967 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.149175956 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.150699059 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.150288995 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.149979228 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.151363307 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.16090944 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.166020375 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.151545139 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.149342285 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.150345873 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.151916279 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.151121839 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.149132071 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.152111383 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.14974561 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.152191131 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.151569545 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.154387208 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.158463554 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.150877281 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.15140699 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.157234387 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.152724496 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.15040424 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.157655341 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.152724438 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.151725693 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.152798278 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.156403466 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.149305648 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.154399589 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.158816282 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.152219497 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.15245556 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.152751368 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.153366848 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.16129193 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.177008799 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.153203604 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.15312021 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.15540802 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.163027645 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.152574066 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.155105368 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.153697334 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.150616433 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.15151692 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.153784595 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.154445405 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.15298474 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.153654172 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.154137923 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.151271235 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.154578538 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.153117817 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.153646892 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.154203593 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.152688518 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.155363595 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.15503821 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.153911878 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.1548182 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.158584002 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.153084936 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.154951534 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.154834449 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.151616165 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.154164728 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.154493992 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.154580058 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.152529552 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.155112399 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.153361147 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.154001639 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.155107617 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.154709853 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.1550372 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.154079707 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.157427765 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.155423494 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.157620449 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.15408264 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.153784072 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.154024463 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.155449265 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.154046816 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.155467317 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.153220617 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.157110583 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.162288639 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.154926423 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.154917849 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.156815865 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.154275545 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.155213481 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155311751 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.157104459 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.161950033 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.155405302 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.160696376 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.154259063 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.155011168 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.156491703 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.15484269 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.154195615 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.155616939 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.157664411 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.163607445 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.167505186 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.164044265 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.156304136 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.159492032 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.156539964 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.159924703 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.15843191 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.156789328 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.155709949 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.15536987 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.155039999 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.155848739 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.156926535 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.155806951 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.154586247 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.156601563 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.156933332 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.155970322 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.156723009 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.157075404 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.156922136 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.154674371 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.156943363 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.156421305 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.15584227 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.154206491 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.154561888 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.155732962 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.157564341 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.157072251 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.162453088 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.155369821 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.157578318 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.158322551 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.156980186 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.156677788 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.157394103 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.159289438 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.157947564 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164804149 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.172714619 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.158549154 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.164023367 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.170968716 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.156199729 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.159754598 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.158342881 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.15567146 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.159695115 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.166127617 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.15846635 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.157991805 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.157987927 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.15724612 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.159588257 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.163731271 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.1564252 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.157740161 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.158839788 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.15861714 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.157045346 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.159170189 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.159113776 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.158825045 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.159286466 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.159379082 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.159155315 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.159678858 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.158947277 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.158310564 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.158909014 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.160705456 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.166032165 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.163879649 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.159348769 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.160926803 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.159987976 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.162250278 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.158731561 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.158859566 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.159556385 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.171323898 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.167499146 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.16547796 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.160759942 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.160853447 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.164277567 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.160239762 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.162844046 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.160036976 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.159450296 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.159949358 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.15917643 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.158239086 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.160731137 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.160596268 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.161120468 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.161181491 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.164680207 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.161268052 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.159812898 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.161580343 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.15925091 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.161759881 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.15943035 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.161937063 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.161415113 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.162554382 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.159649224 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.160471874 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.167149487 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.174696572 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.161404703 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.160301807 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.160627306 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.16021037 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.162614467 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.161821429 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.163409397 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.168609657 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.163938898 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.169251322 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.162209978 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.169494215 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.162138857 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.164456022 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.168789312 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.160287697 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.159813989 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.16149245 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.161731467 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.16888607 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.178156714 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.162269326 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.166210872 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.162103543 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.162541299 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.161908031 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.163100834 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.163620306 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.163359159 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.170468296 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.17756482 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.165811555 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.16444918 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.161435244 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.162413567 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.163283842 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.16191938 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.165896809 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.163321192 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.163599963 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.162308052 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.162918433 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.163756845 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.163497398 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.164098049 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.161489173 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.163126182 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.169394036 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.178693841 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.167678037 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.164998357 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.170391259 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.164508651 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.169771918 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.179990263 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.163251544 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.164035688 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.164215116 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.164996033 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.162963222 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.163989552 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.163742157 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.164987698 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.168096234 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.163953908 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.165610527 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.164711878 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.164594973 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.163763994 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.17312776 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.186303867 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.164992809 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.169099959 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.163351152 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.164255701 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.167999337 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.165093607 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.163496893 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.166696134 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.173406282 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.17242779 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.164802888 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.164602637 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.164894509 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.16552237 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.165779457 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.16554567 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.165041502 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.165706123 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.165135614 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.164792816 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.168156783 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.166701559 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.166732168 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.166371135 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.167075646 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.174950977 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.16557199 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.166764317 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.165775641 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.166351733 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.165792819 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.166182412 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.166202272 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.166924302 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.166904531 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.16731783 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.171745441 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.170677233 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.169588626 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.165838243 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.166783521 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.165852787 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.166896871 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.166225065 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.166806352 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.166515927 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.167772089 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.16613772 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.167171018 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.164607039 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.167305206 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.166927328 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.168258407 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.168271599 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.17165366 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.166872464 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.165030874 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.166434099 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.168058505 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.165684003 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.167342959 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.174100399 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.169836813 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.176795661 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.174844101 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.170834326 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.167053483 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.170856073 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.174722161 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.166405492 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.16773162 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.167696261 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.168204387 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.168877272 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.169420356 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.168650594 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.17437646 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.168032418 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.166825436 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.176297411 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.183119504 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.168405984 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.169066662 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.171658158 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.167552105 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.16643581 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.168979013 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.167177329 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.175606986 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.184593686 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.169309919 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.169680599 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.167332443 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.169286353 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.173151108 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.169363749 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.169744342 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.167474859 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.168924053 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.169423627 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.170641819 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.167639937 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.16848619 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.16808157 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.172390492 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.175029975 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.167354308 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.171449156 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.169527762 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.170537925 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.170483085 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.171590394 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.168171532 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.167882057 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.169775446 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.169704512 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.169863692 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.172327419 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.170217744 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.170692497 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.171598634 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.170473757 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.173119367 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.178905535 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.178348715 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.169226909 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.170954574 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.171277309 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.172533065 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.171004491 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.17136811 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.170437583 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.172528623 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.172296571 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.17126472 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.171462262 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.173850089 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.185968859 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.186801231 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.170121718 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.170846019 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174068275 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.171874934 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.169551071 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.17192529 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.17328363 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.173883518 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.178431828 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.172319974 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.178189638 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.185675813 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.172685912 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.175749595 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.174879276 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.178230183 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.174458677 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.172489193 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.173198895 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.175983295 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.186528181 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.173399675 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.181818006 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.201248622 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.188011214 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.17364834 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.172157321 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.171779071 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.173081871 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.173637799 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.173202813 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.173775273 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.17369595 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.172972084 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.173254931 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.177313712 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.174420302 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.173278037 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.173095486 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.172835736 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.173852451 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.170735423 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.173252815 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.173866655 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.172843782 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.174207937 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.173025439 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.173079391 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.185522598 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.182427349 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.175293049 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.173987833 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.172117369 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.17617303 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.176266256 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.183534143 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.181554591 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.174850788 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.174005311 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.175325669 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.174251235 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.172933652 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.175184647 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.173196614 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.173576155 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.173089214 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.186864188 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.182619235 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.178856425 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.175192601 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.174549236 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.175114491 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.174415631 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.175300978 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.175376034 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.176227929 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.17641064 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.178431721 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.175926778 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.175963355 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.177762197 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.183692973 seconds)
  done (took 694.14639851 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.173907975 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.17366303 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.17340439 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.174232591 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.173065644 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.1735421 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173301484 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.173541429 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.173896007 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.173683565 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.173065133 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.173996504 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.174427627 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.173850835 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.173822993 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.174852182 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.174560337 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.174318799 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.173746822 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.173648339 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.174582791 seconds)
  done (took 25.761361229 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.176784431 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.1744156 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.173614833 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.176400163 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.174498119 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.177131496 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.175302965 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.17718756 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.177218435 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.173805464 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.177216036 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.176958045 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.174703346 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.174953478 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.174581342 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.17675813 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.177135579 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.174944517 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.177320096 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.17580599 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.177408812 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.175592574 seconds)
  done (took 26.981402084 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.176865846 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.176809621 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.176880324 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.176095146 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.178767295 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.175011695 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.177106246 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.17727933 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.177597689 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.177050605 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.176063076 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.177995535 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.183491343 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.183272997 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.179442507 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.178295274 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.32284229 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.177814344 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.178450054 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.178702266 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.176528359 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.183734135 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.177142099 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.176994543 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.177113159 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.177674301 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.179396444 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.179212992 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.178476603 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.179645726 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.180807486 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.179305304 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.177663516 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.179806386 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.178349366 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.179656117 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.182875667 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.179094043 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.177320538 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.179248334 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.187955315 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.198296581 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.179296699 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.185105713 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.180111685 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.179100922 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.182519685 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.187012563 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.177630141 seconds)
  done (took 59.056054658 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.180050389 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.179938212 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.17797008 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.179710931 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.180608966 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.180231948 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.179984784 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.180009338 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.17868497 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.177399217 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.18057575 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.178189132 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.178534546 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.181952259 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.182299289 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.17787204 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.177732556 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.178465438 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.177507627 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.178316685 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.178303815 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.180647016 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.181014996 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.178994088 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.181057091 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.179447031 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.179566409 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.181211764 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.179532827 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.178388069 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.182076972 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.180930281 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.18098199 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.179603963 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.178698892 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.180514318 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.181823292 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.17951975 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.18162713 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.180945469 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.181965037 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.182175202 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.181783844 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.182362747 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.179769063 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.180694448 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.179230113 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.180021028 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.181094114 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.183027945 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.182905432 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.180035572 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.182905675 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.179706208 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.182777282 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.182799365 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.180447799 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.180462272 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.183965799 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.181193762 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.18142069 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.183889498 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.181600985 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.183624191 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.184577952 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.181339198 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.182224507 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.184619104 seconds)
  done (took 81.400366706 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.182758653 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.18248201 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.182749722 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.182417132 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.18303006 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.183075792 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.182651017 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.183337755 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.182918065 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.182963998 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.183178599 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.184177892 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.183295042 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.183351921 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.183314633 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.184091056 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.184907866 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.182601594 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.182826837 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.183361492 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.183216045 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.183244872 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.183508768 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.183556034 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.184341653 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.18446784 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.183285584 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.18412538 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.183494089 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.18394615 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.184198287 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.183762161 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.184186945 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.183848987 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.184454775 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.184204746 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.184560141 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.184579326 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.184093842 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.185677987 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.184193983 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.184426924 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.18441745 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.184537237 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184172778 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.184573777 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.185051466 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.185122489 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.185130135 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.185634609 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.184840961 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.184587864 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.18455871 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.184524655 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.185743401 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.185236834 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.185477967 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.185610865 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.184903837 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.18617962 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.185265971 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.186524504 seconds)
  done (took 74.534429491 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.185413953 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.186481672 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.183058436 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.18468257 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.186468395 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.183801538 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.186292167 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.186309272 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.186703666 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.186770262 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186659529 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184573006 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.18376353 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186868811 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.182966784 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184032731 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184780781 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.184557857 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186715997 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.184249248 seconds)
  done (took 24.825166842 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.184973562 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.187135587 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.184611262 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.184572491 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.187433172 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.185072655 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.187424992 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.186922157 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.184456258 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186992976 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.186861114 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.187490435 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184696535 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.184664272 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.187750717 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.185644212 seconds)
  done (took 20.098669751 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.185231496 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.186654624 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.187327485 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.186651742 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.185232226 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.18578104 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.187869236 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.185355865 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.185452558 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.188599113 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.188071672 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.188010165 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.187735202 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.187841303 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.185907684 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.187513399 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.185989668 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.185737034 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.18869761 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.188398982 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.18631787 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.186831289 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.188354162 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.189116381 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.186520644 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.187054154 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.187152241 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.186674723 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.187111255 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.18933401 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.187090415 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.1871571 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.186240069 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.18768058 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.188666652 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.186999358 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.189637996 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.189484801 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.189546189 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.189828097 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.190882138 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.187345687 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.190130328 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.189814917 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.187707918 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.189485305 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.187326633 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.187363256 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.186989906 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.187085304 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.190527867 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.189327157 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.189466187 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.190560253 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.18993278 seconds)
  done (took 66.452505564 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.189770721 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.18976535 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.188138484 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.19022155 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.190462306 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.187358761 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.19110435 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.188159243 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.188467313 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.19076683 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.189802462 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.191334425 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.188408014 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.190448433 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.190011165 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.19142409 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.189144 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.188851136 seconds)
  done (took 22.5379436 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.189057401 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.189372153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.191697239 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.188790578 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.189135108 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.192095298 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.189481638 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.191749732 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.19132299 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.189584751 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.189359616 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.191314353 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.191970014 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.192208985 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.189025421 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.189774963 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.192925995 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.192202424 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.189115782 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.189176041 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.192291488 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.191764362 seconds)
  done (took 27.319801242 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("__nextpow2", "Int64", "+")...
    done (took 1.190768614 seconds)
    (2/6) benchmarking ("__nextpow2", "UInt64", "+")...
    done (took 1.19029793 seconds)
    (3/6) benchmarking ("__nextpow2", "BigInt", "+")...
    done (took 1.20696443 seconds)
    (4/6) benchmarking ("__prevpow2", "BigInt", "+")...
    done (took 1.231409579 seconds)
    (5/6) benchmarking ("__prevpow2", "UInt64", "+")...
    done (took 1.219704988 seconds)
    (6/6) benchmarking ("__prevpow2", "Int64", "+")...
    done (took 1.190452454 seconds)
  done (took 8.354781144 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191114929 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.192324082 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.190833441 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193944606 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193408491 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190647664 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.18982225 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190631339 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193988702 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190945809 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.190369251 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.192558829 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193524845 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.190794453 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.193173198 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193351382 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.190731832 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.191104472 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192068585 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192833235 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.191571633 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.192883035 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191528018 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.190335783 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.191428742 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.191459545 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193885913 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.191654887 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192307282 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194081399 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193542952 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192113335 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194854242 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192367919 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195305426 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194927549 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192645206 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195298798 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194178848 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19324075 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.196170065 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195440053 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195630551 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192611192 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195292215 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193500651 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.19262252 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192083134 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193583385 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195724323 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195600235 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.192444349 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195345597 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195912373 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195832135 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195947349 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.193959551 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.192893295 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195132007 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.192807977 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194060988 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.196195699 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193348936 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.19390459 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.195515734 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193698061 seconds)
  done (took 79.88139422 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.193363122 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.193154118 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.19417704 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194554731 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.194147655 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194067104 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193200465 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.193867729 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194031647 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.193791488 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197020558 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194344756 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.193818594 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.193479152 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194718871 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.19480424 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.194899565 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194640565 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.194166888 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197436989 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195094278 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.194427654 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194692575 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194770012 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195543649 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.197774121 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194477349 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.195357589 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.194467319 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195205597 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195322441 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195614814 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.194835592 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.194858357 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.194948339 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194726663 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195393645 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.19604907 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.194129496 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198694836 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196037953 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.198023573 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196294542 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.195272237 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196524766 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.195874468 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.195245549 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196107407 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.195999984 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196806602 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196642363 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.196529701 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196077408 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.196483984 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196045115 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.195641758 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.196179541 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.196095338 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.196008506 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.198273645 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.196910428 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.197145212 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.199203861 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196484132 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.196378291 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.197208597 seconds)
  done (took 80.034042451 seconds)
done (took 1618.782423124 seconds)
(11/20) benchmarking "sparse"...
  (1/7) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.246718639 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.216948869 seconds)
  done (took 13.59589764 seconds)
  (2/7) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.360679782 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.311318781 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.196327396 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.235309628 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.196393752 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.214792841 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.212623959 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.196049446 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.196474206 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.19611155 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.195803776 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.384294744 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.251470701 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.196826336 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.196265486 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.288817805 seconds)
  done (took 40.971759779 seconds)
  (3/7) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.223799123 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.205657358 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.304513342 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.219980119 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.223683127 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.371057857 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.249228416 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.202370567 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.354034038 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.239212055 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.602658474 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.224692126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.203095542 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.197687634 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.218464792 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.371204661 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.426333523 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.610065821 seconds)
  done (took 27.580724728 seconds)
  (4/7) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.601352882 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.197273904 seconds)
  done (took 8.934138268 seconds)
  (5/7) benchmarking "sparse solves"...
    (1/10) benchmarking "square system (ldlt), matrix rhs"...
    done (took 6.234314785 seconds)
    (2/10) benchmarking "square system (lu), vector rhs"...
    done (took 6.194348938 seconds)
    (3/10) benchmarking "square system (lu), matrix rhs"...
    done (took 6.227741751 seconds)
    (4/10) benchmarking "square system (default), matrix rhs"...
    done (took 6.213377756 seconds)
    (5/10) benchmarking "square system (default), vector rhs"...
    done (took 6.215096233 seconds)
    (6/10) benchmarking "least squares (qr), vector rhs"...
    done (took 6.232677405 seconds)
    (7/10) benchmarking "least squares (qr), matrix rhs"...
    done (took 6.255176136 seconds)
    (8/10) benchmarking "least squares (default), matrix rhs"...
    done (took 6.261653599 seconds)
    (9/10) benchmarking "square system (ldlt), vector rhs"...
    done (took 6.228580319 seconds)
    (10/10) benchmarking "least squares (default), vector rhs"...
    done (took 6.239274651 seconds)
  done (took 63.445358717 seconds)
  (6/7) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.219591859 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.202211032 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.203287919 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.200392024 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.192859308 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.194120992 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.200619716 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.196559573 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.433091533 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.317232321 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.218179458 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.209362346 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.202573005 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.203049886 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.199876141 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.236356454 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.343086622 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.20097356 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.199621962 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.207723706 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.202714099 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.280821194 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.240138531 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.201872881 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.315022695 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.440883979 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.208300987 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.209671053 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.326200488 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.200243473 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.202233342 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.202991402 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.20485691 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.756073592 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.727790577 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.210139687 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.224805787 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.211335839 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.201832141 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.322698472 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.203490186 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.209897626 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.195918125 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.701209185 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.357867903 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.304965384 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.356339958 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.203541695 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.204540504 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.261994361 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.20425469 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.204363962 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.230884652 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 1.921391546 seconds)
  done (took 103.169292474 seconds)
  (7/7) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.19736235 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.682565031 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.364688297 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.211960467 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.030725921 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.812472795 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.19702978 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.453207164 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.198875703 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.197101875 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.474520008 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.67436771 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.203178262 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.259821863 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.696774586 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.208865136 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.199410295 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.103355431 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.197702239 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.197482475 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.604562303 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.217292724 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.211374272 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.300769711 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.23451205 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.630787795 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.48944638 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.682303099 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.196756725 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.19854187 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.63838858 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.204214717 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.239810186 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.200333115 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.458165544 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.521721185 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.498874027 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.200562578 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.205161125 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.203071559 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.217435084 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.626597375 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.511252764 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.204387623 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.20348748 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.631551777 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.19940596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.203956297 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.206849024 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.402728008 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.09489767 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.199952197 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.497903548 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.201604828 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.455600041 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.299284172 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.234398225 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.658500566 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.19912118 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.274018314 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.250846638 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.201084933 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.205711017 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.20006261 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.201395143 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.515135653 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.578986534 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.205352021 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.51708657 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.631165716 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.199850904 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.702918085 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.070530756 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.220526671 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.255548575 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.20735769 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.894724531 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.657866953 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.244143533 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.199605572 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.50323118 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.202693391 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.463198264 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.21237332 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.201209801 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.615616088 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.216751614 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.244964504 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.200416732 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.217612664 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.973542336 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.202106343 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.453524695 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.263749927 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.200363627 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.200873648 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.200904009 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.19943499 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.202839559 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.203411801 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.70419425 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.205010523 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.320028976 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.222441992 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.213100749 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.203264795 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.200718618 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.202603047 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.421684036 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.775291528 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.206795397 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.203832006 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.205083517 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.201941703 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.32420189 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.203196521 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.478698651 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.202942294 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.202230121 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.215516752 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.844711022 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.21999126 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.201596808 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.207094504 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.024193607 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.407699155 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.218849483 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.202824877 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.202417945 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.226346504 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.474815239 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.206058616 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.211530491 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.202567019 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.878931853 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.227098164 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.23391219 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.76091761 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.208584719 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.077869178 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.226753586 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.204842254 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.497954049 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.463556791 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.471127528 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.203821889 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.204231841 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.863623623 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.237412081 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.343037992 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.220456843 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.234989874 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.398969749 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.307438972 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.204267603 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.750871005 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.203025671 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.41840593 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.20594354 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.511650321 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.666375028 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.203894666 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.207402987 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.880485631 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.852481776 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.841810267 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.2066293 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.467568056 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.198129148 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.663020611 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.204553976 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.205254619 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.785632102 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.206812095 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.210872786 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.203930127 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.205431052 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.267703645 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.378660489 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.858568725 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.210050637 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.63587619 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.270386256 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.204758721 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.208506193 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.205456921 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.55683662 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.245424837 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.210500197 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.210354221 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.206024117 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.211474812 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.647315805 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.130901669 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.20804511 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.357154727 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.812744292 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.205233752 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.205959141 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.950713379 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.537618886 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.724918173 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.219857435 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.485404837 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.215080037 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.244006706 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.970139957 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.275907048 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.689377944 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.208685008 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.2098779 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.780838953 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.206026694 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.275333348 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.207596995 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.207994236 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.718075931 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.206164266 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.210942426 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.444376227 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.206577826 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.456522311 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.208207134 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.235796258 seconds)
  done (took 1080.78363809 seconds)
done (took 1339.61169116 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.207005562 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.211216184 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.197826856 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.210186416 seconds)
  done (took 25.974290121 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.218230335 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.212730143 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.219107027 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.212298367 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.216822717 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.212079026 seconds)
  done (took 8.439023483 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.255642486 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.210365146 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.21052552 seconds)
  done (took 18.823891392 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.413742701 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.385313552 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.5591025 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.201084811 seconds)
  done (took 9.708083773 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.215232279 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.215806276 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.215099876 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.218442392 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.220812324 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.22153656 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.218862873 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.218015801 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.22040748 seconds)
  done (took 12.112864344 seconds)
  (6/6) benchmarking "26942"...
  done (took 4.853216551 seconds)
done (took 81.05896351 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/309) benchmarking ("map", abs, Int64, false)...
    done (took 1.791346959 seconds)
    (2/309) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.296525643 seconds)
    (3/309) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.066522481 seconds)
    (4/309) benchmarking ("broadcast", identity, Float32, false)...
    done (took 1.478812326 seconds)
    (5/309) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.452217838 seconds)
    (6/309) benchmarking ("map", identity, Float32, true)...
    done (took 1.916521384 seconds)
    (7/309) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.208818262 seconds)
    (8/309) benchmarking ("sort", Union{Nothing, BigFloat}, false)...
    done (took 6.212025381 seconds)
    (9/309) benchmarking ("sort", Union{Nothing, Float64}, false)...
    done (took 6.221698948 seconds)
    (10/309) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.258356163 seconds)
    (11/309) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.208697752 seconds)
    (12/309) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.251078659 seconds)
    (13/309) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.208240744 seconds)
    (14/309) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.237236762 seconds)
    (15/309) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.213827633 seconds)
    (16/309) benchmarking ("skipmissing", collect, Union{Nothing, BigFloat}, false)...
    done (took 3.478216781 seconds)
    (17/309) benchmarking ("broadcast", abs, Float64, false)...
    done (took 1.734826391 seconds)
    (18/309) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.356352622 seconds)
    (19/309) benchmarking ("map", identity, Int64, false)...
    done (took 1.773271868 seconds)
    (20/309) benchmarking ("map", identity, Bool, true)...
    done (took 1.549507253 seconds)
    (21/309) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.236104866 seconds)
    (22/309) benchmarking ("map", identity, Float32, false)...
    done (took 1.559164152 seconds)
    (23/309) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.801706886 seconds)
    (24/309) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 1.910828069 seconds)
    (25/309) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 2.456030162 seconds)
    (26/309) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.714428961 seconds)
    (27/309) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.237000676 seconds)
    (28/309) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.226290851 seconds)
    (29/309) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.27386653 seconds)
    (30/309) benchmarking ("broadcast", identity, Int8, false)...
    done (took 1.338159252 seconds)
    (31/309) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.535812742 seconds)
    (32/309) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.236251737 seconds)
    (33/309) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 2.952822706 seconds)
    (34/309) benchmarking ("skipmissing", collect, Union{Nothing, Complex{Float64}}, false)...
    done (took 5.455256617 seconds)
    (35/309) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 1.971989311 seconds)
    (36/309) benchmarking ("perf_sum", Bool, true)...
    done (took 1.313318601 seconds)
    (37/309) benchmarking ("map", abs, Float64, true)...
    done (took 2.414439175 seconds)
    (38/309) benchmarking ("skipmissing", collect, Union{Missing, BigFloat}, true)...
    done (took 3.503144977 seconds)
    (39/309) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 1.671272615 seconds)
    (40/309) benchmarking ("skipmissing", sum, Union{Missing, Int64}, true)...
    done (took 1.2326166 seconds)
    (41/309) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.605895477 seconds)
    (42/309) benchmarking ("map", identity, BigFloat, false)...
    done (took 1.998644059 seconds)
    (43/309) benchmarking ("perf_sum", Float32, true)...
    done (took 1.319207464 seconds)
    (44/309) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.237434587 seconds)
    (45/309) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.194620611 seconds)
    (46/309) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 1.918011757 seconds)
    (47/309) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.378537494 seconds)
    (48/309) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.194518311 seconds)
    (49/309) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.089116837 seconds)
    (50/309) benchmarking ("sort", Union{Missing, BigFloat}, true)...
    done (took 6.212968548 seconds)
    (51/309) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.321211821 seconds)
    (52/309) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.227365978 seconds)
    (53/309) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.29606335 seconds)
    (54/309) benchmarking ("map", abs, Float32, false)...
    done (took 1.560986779 seconds)
    (55/309) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.238908168 seconds)
    (56/309) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 2.625907478 seconds)
    (57/309) benchmarking ("perf_countequals", "Int8")...
    done (took 1.48541583 seconds)
    (58/309) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 2.474631901 seconds)
    (59/309) benchmarking ("broadcast", abs, Int8, false)...
    done (took 1.368283896 seconds)
    (60/309) benchmarking ("perf_sum", Bool, false)...
    done (took 1.268397416 seconds)
    (61/309) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.236065386 seconds)
    (62/309) benchmarking ("sort", Union{Missing, Int8}, true)...
    done (took 6.210550209 seconds)
    (63/309) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.910984156 seconds)
    (64/309) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.246140478 seconds)
    (65/309) benchmarking ("broadcast", identity, Float32, true)...
    done (took 1.935247706 seconds)
    (66/309) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.270892655 seconds)
    (67/309) benchmarking ("map", abs, Int8, true)...
    done (took 1.576940117 seconds)
    (68/309) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 3.795594453 seconds)
    (69/309) benchmarking ("skipmissing", sum, Union{Nothing, Bool}, false)...
    done (took 1.27253307 seconds)
    (70/309) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 1.8245568 seconds)
    (71/309) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.278781565 seconds)
    (72/309) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.50341408 seconds)
    (73/309) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.45883993 seconds)
    (74/309) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.809297434 seconds)
    (75/309) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.253533702 seconds)
    (76/309) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.027152057 seconds)
    (77/309) benchmarking ("sort", Int64, false)...
    done (took 5.352038799 seconds)
    (78/309) benchmarking ("sort", Union{Missing, Bool}, true)...
    done (took 5.295716665 seconds)
    (79/309) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.232893293 seconds)
    (80/309) benchmarking ("skipmissing", collect, Union{Missing, Int8}, true)...
    done (took 2.038061209 seconds)
    (81/309) benchmarking ("skipmissing", sum, Union{Nothing, Float64}, false)...
    done (took 1.286730661 seconds)
    (82/309) benchmarking ("sort", Union{Nothing, Float32}, false)...
    done (took 6.211848597 seconds)
    (83/309) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.212355303 seconds)
    (84/309) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.697197616 seconds)
    (85/309) benchmarking ("perf_sum", Float64, false)...
    done (took 1.295035641 seconds)
    (86/309) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.759239434 seconds)
    (87/309) benchmarking ("broadcast", identity, Bool, true)...
    done (took 1.517116744 seconds)
    (88/309) benchmarking ("map", identity, BigInt, true)...
    done (took 2.538719014 seconds)
    (89/309) benchmarking ("sort", Int8, false)...
    done (took 4.311216122 seconds)
    (90/309) benchmarking ("skipmissing", collect, Union{Nothing, Int64}, false)...
    done (took 3.986339022 seconds)
    (91/309) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.276717881 seconds)
    (92/309) benchmarking ("skipmissing", collect, Union{Missing, Bool}, true)...
    done (took 2.043555201 seconds)
    (93/309) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.259195802 seconds)
    (94/309) benchmarking ("map", identity, Float64, false)...
    done (took 1.794102689 seconds)
    (95/309) benchmarking ("map", abs, Float32, true)...
    done (took 1.95179591 seconds)
    (96/309) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.29827901 seconds)
    (97/309) benchmarking ("skipmissing", sum, Union{Missing, Complex{Float64}}, true)...
    done (took 1.314649458 seconds)
    (98/309) benchmarking ("broadcast", abs, Float32, true)...
    done (took 1.911426208 seconds)
    (99/309) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.20577409 seconds)
    (100/309) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.2271832 seconds)
    (101/309) benchmarking ("perf_countequals", "Float32")...
    done (took 1.438511033 seconds)
    (102/309) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 3.810242727 seconds)
    (103/309) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 2.477674014 seconds)
    (104/309) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.203253471 seconds)
    (105/309) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.717731187 seconds)
    (106/309) benchmarking ("skipmissing", collect, Union{Missing, Int64}, true)...
    done (took 3.414991183 seconds)
    (107/309) benchmarking ("sort", BigInt, false)...
    done (took 6.217660238 seconds)
    (108/309) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.231075065 seconds)
    (109/309) benchmarking ("map", identity, Float64, true)...
    done (took 2.384610546 seconds)
    (110/309) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.296144534 seconds)
    (111/309) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.214250775 seconds)
    (112/309) benchmarking ("sort", Union{Nothing, Int64}, false)...
    done (took 6.213871314 seconds)
    (113/309) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.322867489 seconds)
    (114/309) benchmarking ("sort", Union{Nothing, BigInt}, false)...
    done (took 6.212528426 seconds)
    (115/309) benchmarking ("broadcast", identity, Float64, true)...
    done (took 2.419323841 seconds)
    (116/309) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.219408285 seconds)
    (117/309) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.701585084 seconds)
    (118/309) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 2.656313014 seconds)
    (119/309) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.83666846 seconds)
    (120/309) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.294244663 seconds)
    (121/309) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.751305168 seconds)
    (122/309) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.244681603 seconds)
    (123/309) benchmarking ("sort", Bool, false)...
    done (took 1.746002645 seconds)
    (124/309) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.237870501 seconds)
    (125/309) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.297077107 seconds)
    (126/309) benchmarking ("perf_countequals", "Int64")...
    done (took 1.49031014 seconds)
    (127/309) benchmarking ("broadcast", abs, Int8, true)...
    done (took 1.533080532 seconds)
    (128/309) benchmarking ("broadcast", identity, Int64, false)...
    done (took 1.741871901 seconds)
    (129/309) benchmarking ("skipmissing", collect, Union{Missing, BigInt}, true)...
    done (took 3.521048012 seconds)
    (130/309) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.214799398 seconds)
    (131/309) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.381976546 seconds)
    (132/309) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 1.912007768 seconds)
    (133/309) benchmarking ("map", abs, BigInt, true)...
    done (took 6.204063516 seconds)
    (134/309) benchmarking ("perf_countequals", "Bool")...
    done (took 1.492255732 seconds)
    (135/309) benchmarking ("skipmissing", sum, Union{Nothing, Complex{Float64}}, false)...
    done (took 1.28938861 seconds)
    (136/309) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.236533233 seconds)
    (137/309) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.834439465 seconds)
    (138/309) benchmarking ("map", abs, Bool, true)...
    done (took 1.601312554 seconds)
    (139/309) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.688730471 seconds)
    (140/309) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.223833842 seconds)
    (141/309) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.557013439 seconds)
    (142/309) benchmarking ("map", identity, BigInt, false)...
    done (took 1.996520557 seconds)
    (143/309) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.317466991 seconds)
    (144/309) benchmarking ("broadcast", abs, Int64, false)...
    done (took 1.757284705 seconds)
    (145/309) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.302179728 seconds)
    (146/309) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.554517633 seconds)
    (147/309) benchmarking ("broadcast", identity, Int8, true)...
    done (took 1.586025524 seconds)
    (148/309) benchmarking ("skipmissing", sum, Union{Nothing, Float32}, false)...
    done (took 1.28866485 seconds)
    (149/309) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 1.914877459 seconds)
    (150/309) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.242095174 seconds)
    (151/309) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.348046807 seconds)
    (152/309) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 1.912680108 seconds)
    (153/309) benchmarking ("skipmissing", sum, Union{Missing, Float64}, true)...
    done (took 1.311195401 seconds)
    (154/309) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.221106916 seconds)
    (155/309) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.35421529 seconds)
    (156/309) benchmarking ("map", identity, Int8, false)...
    done (took 1.396892404 seconds)
    (157/309) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.242634871 seconds)
    (158/309) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.21448241 seconds)
    (159/309) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 1.626864867 seconds)
    (160/309) benchmarking ("skipmissing", sum, Union{Missing, Int8}, true)...
    done (took 1.240937488 seconds)
    (161/309) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.2006686 seconds)
    (162/309) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.539539302 seconds)
    (163/309) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.634981648 seconds)
    (164/309) benchmarking ("perf_sum", Int64, true)...
    done (took 1.239027781 seconds)
    (165/309) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.219673576 seconds)
    (166/309) benchmarking ("map", abs, Float64, false)...
    done (took 1.795677843 seconds)
    (167/309) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 1.684328739 seconds)
    (168/309) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.300964928 seconds)
    (169/309) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.452860509 seconds)
    (170/309) benchmarking ("skipmissing", collect, Union{Missing, Float32}, true)...
    done (took 2.634624703 seconds)
    (171/309) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.226608516 seconds)
    (172/309) benchmarking ("map", abs, BigInt, false)...
    done (took 6.202893605 seconds)
    (173/309) benchmarking ("skipmissing", sum, Union{Nothing, BigInt}, false)...
    done (took 6.243976523 seconds)
    (174/309) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.773332665 seconds)
    (175/309) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.605622976 seconds)
    (176/309) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.061035864 seconds)
    (177/309) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.619229238 seconds)
    (178/309) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 1.845745485 seconds)
    (179/309) benchmarking ("broadcast", abs, Float64, true)...
    done (took 2.387820191 seconds)
    (180/309) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.328055443 seconds)
    (181/309) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.216471672 seconds)
    (182/309) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 2.39134044 seconds)
    (183/309) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.236515366 seconds)
    (184/309) benchmarking ("map", identity, Int64, true)...
    done (took 2.393733103 seconds)
    (185/309) benchmarking ("sort", Union{Missing, Int64}, true)...
    done (took 6.216899545 seconds)
    (186/309) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 1.994845672 seconds)
    (187/309) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.323617112 seconds)
    (188/309) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.247443122 seconds)
    (189/309) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.832446806 seconds)
    (190/309) benchmarking ("map", abs, Int8, false)...
    done (took 1.424385426 seconds)
    (191/309) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.244576797 seconds)
    (192/309) benchmarking ("broadcast", identity, Float64, false)...
    done (took 1.745161542 seconds)
    (193/309) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 1.499754347 seconds)
    (194/309) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.341507679 seconds)
    (195/309) benchmarking ("skipmissing", collect, Union{Nothing, Float64}, false)...
    done (took 3.998972015 seconds)
    (196/309) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.259663324 seconds)
    (197/309) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.436631966 seconds)
    (198/309) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.243733214 seconds)
    (199/309) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 1.44026475 seconds)
    (200/309) benchmarking ("skipmissing", collect, Union{Missing, Float64}, true)...
    done (took 3.422620712 seconds)
    (201/309) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.284338623 seconds)
    (202/309) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.076039281 seconds)
    (203/309) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.001804663 seconds)
    (204/309) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.274916051 seconds)
    (205/309) benchmarking ("perf_sum", Int8, true)...
    done (took 1.227312745 seconds)
    (206/309) benchmarking ("map", abs, Int64, true)...
    done (took 2.408821115 seconds)
    (207/309) benchmarking ("skipmissing", collect, Union{Nothing, Int8}, false)...
    done (took 2.552073113 seconds)
    (208/309) benchmarking ("sort", Union{Nothing, Int8}, false)...
    done (took 6.232843479 seconds)
    (209/309) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 2.907332646 seconds)
    (210/309) benchmarking ("skipmissing", collect, Union{Missing, Complex{Float64}}, true)...
    done (took 4.998430173 seconds)
    (211/309) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.341447892 seconds)
    (212/309) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.266266376 seconds)
    (213/309) benchmarking ("perf_sum", Int8, false)...
    done (took 1.229512387 seconds)
    (214/309) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.503391421 seconds)
    (215/309) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.203189047 seconds)
    (216/309) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.880388449 seconds)
    (217/309) benchmarking ("perf_countequals", "Float64")...
    done (took 1.436011448 seconds)
    (218/309) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.224182665 seconds)
    (219/309) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.474537835 seconds)
    (220/309) benchmarking ("perf_sum", Float64, true)...
    done (took 1.346435462 seconds)
    (221/309) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.204040294 seconds)
    (222/309) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.580119321 seconds)
    (223/309) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 4.902345396 seconds)
    (224/309) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.923791077 seconds)
    (225/309) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.212068173 seconds)
    (226/309) benchmarking ("map", identity, Int8, true)...
    done (took 1.555672907 seconds)
    (227/309) benchmarking ("sort", Union{Missing, BigInt}, true)...
    done (took 6.219429644 seconds)
    (228/309) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.317755979 seconds)
    (229/309) benchmarking ("skipmissing", sum, Union{Nothing, BigFloat}, false)...
    done (took 6.20419591 seconds)
    (230/309) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.246430234 seconds)
    (231/309) benchmarking ("perf_sum", Int64, false)...
    done (took 1.242094179 seconds)
    (232/309) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.263114196 seconds)
    (233/309) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.261675534 seconds)
    (234/309) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.245478671 seconds)
    (235/309) benchmarking ("map", identity, Bool, false)...
    done (took 1.401088797 seconds)
    (236/309) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.283949464 seconds)
    (237/309) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.33665269 seconds)
    (238/309) benchmarking ("sort", Union{Nothing, Bool}, false)...
    done (took 6.231448934 seconds)
    (239/309) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.204063697 seconds)
    (240/309) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.508128478 seconds)
    (241/309) benchmarking ("sort", BigFloat, false)...
    done (took 6.219613548 seconds)
    (242/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.776619763 seconds)
    (243/309) benchmarking ("sort", Float32, false)...
    done (took 5.205627152 seconds)
    (244/309) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.21957813 seconds)
    (245/309) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 2.478146291 seconds)
    (246/309) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.078873175 seconds)
    (247/309) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 1.603110824 seconds)
    (248/309) benchmarking ("broadcast", identity, Bool, false)...
    done (took 1.419991454 seconds)
    (249/309) benchmarking ("skipmissing", collect, Union{Nothing, Float32}, false)...
    done (took 3.237740499 seconds)
    (250/309) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.432713341 seconds)
    (251/309) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.22039272 seconds)
    (252/309) benchmarking ("perf_sum", Float32, false)...
    done (took 1.306018152 seconds)
    (253/309) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.279943714 seconds)
    (254/309) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.247088555 seconds)
    (255/309) benchmarking ("skipmissing", sum, Union{Missing, BigFloat}, true)...
    done (took 6.210029423 seconds)
    (256/309) benchmarking ("broadcast", identity, Int64, true)...
    done (took 2.421571702 seconds)
    (257/309) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.689491895 seconds)
    (258/309) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.015344677 seconds)
    (259/309) benchmarking ("skipmissing", sum, Union{Missing, Float32}, true)...
    done (took 1.329074584 seconds)
    (260/309) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 3.571762684 seconds)
    (261/309) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.613827479 seconds)
    (262/309) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.246944819 seconds)
    (263/309) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.24592807 seconds)
    (264/309) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 2.009059617 seconds)
    (265/309) benchmarking ("skipmissing", sum, Union{Nothing, Int64}, false)...
    done (took 1.264628177 seconds)
    (266/309) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.302493098 seconds)
    (267/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.777969278 seconds)
    (268/309) benchmarking ("skipmissing", sum, Union{Missing, Bool}, true)...
    done (took 1.324291861 seconds)
    (269/309) benchmarking ("broadcast", abs, Bool, true)...
    done (took 1.512414386 seconds)
    (270/309) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.093008123 seconds)
    (271/309) benchmarking ("skipmissing", collect, Union{Nothing, BigInt}, false)...
    done (took 3.5863161 seconds)
    (272/309) benchmarking ("broadcast", abs, Float32, false)...
    done (took 1.511500301 seconds)
    (273/309) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.521169367 seconds)
    (274/309) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 1.992483822 seconds)
    (275/309) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.2070045 seconds)
    (276/309) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.2077198 seconds)
    (277/309) benchmarking ("skipmissing", sum, Union{Nothing, Int8}, false)...
    done (took 1.271170542 seconds)
    (278/309) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.710266853 seconds)
    (279/309) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.23119771 seconds)
    (280/309) benchmarking ("skipmissing", collect, Union{Nothing, Bool}, false)...
    done (took 2.558950205 seconds)
    (281/309) benchmarking ("broadcast", abs, Int64, true)...
    done (took 2.39371539 seconds)
    (282/309) benchmarking ("skipmissing", sum, Union{Missing, BigInt}, true)...
    done (took 6.206329932 seconds)
    (283/309) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.37291915 seconds)
    (284/309) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.263125266 seconds)
    (285/309) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.317527927 seconds)
    (286/309) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.620172612 seconds)
    (287/309) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.436254744 seconds)
    (288/309) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.320414498 seconds)
    (289/309) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 1.915682085 seconds)
    (290/309) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.339029446 seconds)
    (291/309) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.669104578 seconds)
    (292/309) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.232394781 seconds)
    (293/309) benchmarking ("sort", Float64, false)...
    done (took 5.474305468 seconds)
    (294/309) benchmarking ("perf_countequals", "BigFloat")...
    done (took 2.997438697 seconds)
    (295/309) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.221423882 seconds)
    (296/309) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.232793454 seconds)
    (297/309) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.206792822 seconds)
    (298/309) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.265002572 seconds)
    (299/309) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 1.629483318 seconds)
    (300/309) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.033973553 seconds)
    (301/309) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.232863154 seconds)
    (302/309) benchmarking ("sort", Union{Missing, Float32}, true)...
    done (took 6.224870277 seconds)
    (303/309) benchmarking ("map", abs, Bool, false)...
    done (took 1.404892739 seconds)
    (304/309) benchmarking ("sort", Union{Missing, Float64}, true)...
    done (took 6.222673618 seconds)
    (305/309) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.263025819 seconds)
    (306/309) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 2.512018217 seconds)
    (307/309) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.264971614 seconds)
    (308/309) benchmarking ("broadcast", abs, Bool, false)...
    done (took 1.419777807 seconds)
    (309/309) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.281525936 seconds)
  done (took 875.329679434 seconds)
done (took 876.478324538 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.256979677 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.252512571 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.236469675 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.256435995 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.348250916 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.270354878 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.245971262 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.237135982 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.283396239 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.285121078 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.234859325 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.270150017 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.237647012 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.236101232 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.234918461 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.249985421 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.210718526 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.237300754 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.252913057 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.245143229 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.252119149 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.234567253 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.283978282 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.270387973 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.239152702 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.238684135 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.239584962 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.255657837 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.348326195 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.238960456 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.238618191 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.248188159 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.211495529 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.234045204 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.230377594 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.255822615 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.248763574 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.24521921 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.239067577 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.269191582 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.604377622 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.239754342 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.238175122 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.236803291 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.237352899 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.240750058 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.23879665 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.242855411 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.250512695 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.251741701 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.615409926 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.255949732 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.240361781 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.237489688 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.247749218 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.237246802 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.239857972 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.253708351 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.257457738 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.253609831 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.203781914 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.241460945 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.238586579 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.25492098 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.244983722 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.662438652 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.236648395 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.241946954 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.614688328 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.246668133 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.663621829 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.249817283 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.239808759 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.253753576 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.269942157 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.219200535 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.233013673 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.237873951 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.246569793 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.23779016 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.24810706 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.25355125 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.244015981 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.239748656 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.25417827 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.273682057 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.248844962 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.240463809 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.247687689 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.259713999 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.247516649 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.251730418 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.241882748 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.234391151 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.248303637 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.242899767 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.243262256 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.242822293 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.244327917 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.249693121 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.614521212 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.259848565 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.235710535 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.236597871 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.238508864 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.254837376 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.61627823 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.244284297 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.261322581 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.287022669 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.241269077 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.208830419 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.244071643 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.256089025 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.24899343 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.242219714 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.237045627 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.209282033 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.578547317 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.256406047 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.242316119 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.239313968 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.256621662 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.241982932 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.23728259 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.222678013 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.241973848 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.254574824 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.362268218 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.250388857 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.27312614 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.239190979 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.243255745 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.276334251 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.257423686 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.273311784 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.244187268 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.258521742 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.258085919 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.237861721 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.253265826 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.251400675 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.24326439 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.247091026 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.235925977 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.273019626 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.254457844 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.254692224 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.26253676 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.363007974 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.238618093 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.208577297 seconds)
done (took 210.057916879 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.316008408 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.236178232 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.339153187 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.237913629 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.354021613 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.335728467 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.235975787 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.235405696 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.235942566 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.643550457 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.236022701 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.236395286 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.234717821 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.235918902 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.34128355 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.238031949 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.235492658 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.57743753 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.238226574 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.318184814 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.236849024 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.236121034 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.239159076 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.619959931 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.229838729 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.235715894 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.309491963 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.238568006 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.623621924 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.233575972 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.235476398 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.609039575 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.328347564 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.256352224 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.249110462 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.245394013 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.337126028 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.255177558 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.320654007 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.340137806 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.322877419 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.278383198 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.23254613 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.23988635 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.241025096 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.241032925 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.237462273 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.267406927 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.23573196 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.238008022 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.604911184 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.249710609 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.248147919 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.23710335 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.238188315 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.258504128 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.237572601 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.241079016 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.341581592 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.240916005 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.302434899 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.650576664 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.616182527 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.240689041 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.233285697 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.238616804 seconds)
  done (took 142.326965891 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.305046516 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.312810727 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.346951999 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.240563146 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.2890644 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.351606664 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.241659088 seconds)
  done (took 10.260271137 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.244940911 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.241453214 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.289274475 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.289658504 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.240716487 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.399852281 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.241082645 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.252231828 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.238918207 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.292861048 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.244048125 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.241498944 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.249226012 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.240456253 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.288394542 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.251806848 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.355624632 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.241254933 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.241554718 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.397221643 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.238984216 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.248949929 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.292238293 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.252210534 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.244534986 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.247306728 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.810218787 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.242346276 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240062714 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.2427125 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241031878 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.280229363 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.24251759 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.238822732 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240245318 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.358358128 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.241732409 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.240595722 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.242688857 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.238284201 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.243074997 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.242681098 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.242364558 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.240527265 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.243937142 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.264998067 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.24287781 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.242967071 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.243021734 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.243725533 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.293055884 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.243324747 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.241336639 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.241704659 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.298840507 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.251139528 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.243994753 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.24101761 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.244007504 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.241477191 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.399959984 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.291537209 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.243770034 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.290849426 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.244450888 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.243982154 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.244693093 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.244195591 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.297503248 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.244306054 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.291917077 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.242875668 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.397446168 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.266155676 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.245948466 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.246028808 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.246075534 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.243523589 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.243043773 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.249243034 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.242379621 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.245735448 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.249132172 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.242582327 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.242703072 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.346651791 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.353106991 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.242994398 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.257227024 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.252324611 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.242984897 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.297760825 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.245446055 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.243442773 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.297163599 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.35900541 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.297251579 seconds)
  done (took 144.347885162 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.250089577 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.253829256 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.246243617 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.262623541 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.245882266 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.245609231 seconds)
  done (took 8.681969041 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.248093072 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.247878475 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.246235908 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.246213088 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.246568539 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.248258112 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.246749479 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247468059 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.2497362 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.24733751 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.248263505 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.249174206 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.249224028 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.246733203 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.246898499 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.247382706 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.247605712 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.244125243 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.247580759 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.246694844 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.340867492 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.24623396 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247030665 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.247823462 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.252272937 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.247242623 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.254489432 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.247331157 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.248040877 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.253880441 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.250626943 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.249049146 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.247597586 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.252499991 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.250984856 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.248900676 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.251698043 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.250498253 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.245616987 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.250036511 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.250682163 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.247843922 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.249034681 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.251267245 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.249192053 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.25275242 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.255291643 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.254529362 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.248595782 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.251194073 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.251632891 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.24856616 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.251046121 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.251719399 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.249949359 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.25223693 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.25511946 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.249181283 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.248449867 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.249970047 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.250776301 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.251734601 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.249863442 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.252785129 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.256784853 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.253324187 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.250603035 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.253462915 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.249799061 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.249689081 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.252081918 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.247967021 seconds)
  done (took 92.248747521 seconds)
done (took 399.035053197 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.496613547 seconds)
  done (took 7.678432609 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.498579781 seconds)
  done (took 7.681608554 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 19.709683386 seconds)
  done (took 20.896689399 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.267056726 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.319865846 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.246971966 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.242631815 seconds)
  done (took 26.259191562 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.410075082 seconds)
  done (took 7.591568736 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.242871442 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.243024307 seconds)
  done (took 13.669634049 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.604328815 seconds)
  done (took 7.785907281 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.827387617 seconds)
  done (took 8.013918591 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.265669049 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.266408904 seconds)
  done (took 13.962953155 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.228814301 seconds)
  done (took 7.411474969 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.976325703 seconds)
  done (took 8.158623992 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.255823258 seconds)
  done (took 7.438601149 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.288298576 seconds)
  done (took 7.470121168 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 7.933635458 seconds)
  done (took 9.115683491 seconds)
done (took 154.315227994 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.242179235 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.247901533 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.247060399 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.245618449 seconds)
  done (took 26.165385766 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.284051009 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.284847793 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.286160815 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.295399982 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.286740517 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.284267569 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.276799152 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.277485452 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.295778894 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.286975778 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.286410988 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.286240112 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.285173075 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.276638257 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.287640457 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.287846283 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.296197202 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.286520781 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.277399547 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.288680727 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.252736129 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.296048015 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.288841672 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.252610436 seconds)
  done (took 31.991260684 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.45117696 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.322635488 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.405645398 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.303793498 seconds)
  done (took 6.66678808 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.303954011 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.305274721 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.316414449 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.355175596 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.38783886 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.314628427 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.275101003 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.273996497 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.260093534 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.305638174 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.380569769 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.322249056 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.390874666 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.253015642 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.478880374 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.252623835 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.252804585 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.304738926 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.355940606 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.369571571 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.252884035 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.304766927 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.307637272 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.321603066 seconds)
  done (took 32.830251068 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("perf_reduce", "Int64")...
    done (took 1.251204008 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.259975259 seconds)
    (3/20) benchmarking ("perf_reduce", "Float64")...
    done (took 1.258426813 seconds)
    (4/20) benchmarking ("sumabs", "Float64")...
    done (took 1.252628117 seconds)
    (5/20) benchmarking ("sumabs", "Int64")...
    done (took 1.251735793 seconds)
    (6/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.25359242 seconds)
    (7/20) benchmarking ("perf_mapreduce", "Float64")...
    done (took 1.258665666 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.253452284 seconds)
    (9/20) benchmarking ("norm", "Int64")...
    done (took 1.273923606 seconds)
    (10/20) benchmarking ("norm", "Float64")...
    done (took 1.254164254 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.250498395 seconds)
    (12/20) benchmarking ("norm1", "Float64")...
    done (took 1.252422668 seconds)
    (13/20) benchmarking ("mean", "Int64")...
    done (took 1.252003765 seconds)
    (14/20) benchmarking ("mean", "Float64")...
    done (took 1.253168516 seconds)
    (15/20) benchmarking ("perf_mapreduce", "Int64")...
    done (took 1.252546522 seconds)
    (16/20) benchmarking ("norminf", "Float64")...
    done (took 1.265037134 seconds)
    (17/20) benchmarking ("norminf", "Int64")...
    done (took 1.26673733 seconds)
    (18/20) benchmarking ("sum", "Float64")...
    done (took 1.253639934 seconds)
    (19/20) benchmarking ("maxabs", "Int64")...
    done (took 1.256825285 seconds)
    (20/20) benchmarking ("norm1", "Int64")...
    done (took 1.258260169 seconds)
  done (took 26.314531896 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.246086797 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.103682598 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.598103528 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.501428375 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.246278515 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.246609793 seconds)
  done (took 27.127757206 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.318888535 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.44711521 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.252611582 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.590073093 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.670098263 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.256803154 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.25418444 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.482231879 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.762030996 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.764626628 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.3061159 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.317041415 seconds)
  done (took 18.60935676 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.247065266 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.250491492 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.263767995 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.265675911 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.304675704 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.257933259 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.260702288 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.247534298 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.308265835 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.308928854 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.258402058 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.305782426 seconds)
  done (took 36.466794043 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.3354785 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.294310576 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.190307598 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.980074141 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.967529811 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.461204948 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.01060608 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.101270975 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.25485617 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.523958619 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.116543792 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.354917515 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.506123651 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.256044331 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.250132612 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.238557134 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.476064613 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.707784841 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.252515479 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.048787099 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.278503359 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.261730321 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.151895916 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.279634067 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.460857626 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.228421157 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.510771183 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.026531478 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.520786749 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.266147196 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.261246725 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.250144899 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.524353648 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.89486223 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.347948851 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262042642 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.937580002 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.881818883 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.242062724 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.059553954 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.897873292 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.253375131 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262212048 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25196352 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.185200372 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.258121139 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.675273248 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.259163084 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 3.963450463 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.251915633 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.263316502 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.345950391 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.255981513 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.243076002 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.283503263 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.258174233 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.249494696 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.257181026 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.821141241 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.537337268 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.26012853 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.189743058 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.62155872 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.155523792 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.851756673 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.358018448 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.256366806 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.25624855 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.187176842 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.113320446 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.272314836 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.399586617 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.278170803 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.902319478 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.954058744 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.182352535 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.200826186 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.775069076 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.256398611 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.190350205 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.480959063 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.028925536 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.189124189 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.202040843 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.1866768 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.933636348 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.262644617 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 3.631822608 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.261372472 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.664493538 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.266140134 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27030037 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.276964703 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.477445859 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.136225774 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.25355287 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 5.935312316 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.398673299 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275605243 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.667473326 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190281495 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.258180189 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.509357889 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.464685851 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.253454238 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.253789777 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.44257674 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.255791811 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.289175549 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.260044899 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.265074044 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.798974746 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.270368217 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.550675725 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.27506325 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.031163411 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.975081906 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.257222291 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.375870163 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.187048929 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.506054541 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.002274726 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.152818061 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.323453655 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.259951054 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.255652862 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.173990903 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.108522992 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.146766873 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.257075841 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.263769187 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.269885367 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.256422038 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.200901503 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.253203098 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.219789573 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.036192719 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.479491909 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.267435795 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.533702903 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.190199293 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.403948227 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.265639095 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.478529875 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.408342693 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.255460063 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.515565461 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.261638846 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.262614685 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.26992172 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.275294845 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.358536031 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.279722907 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.268067809 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.515199772 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.260427914 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.261595655 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.162577196 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.040960309 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.264871697 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.262527318 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.071366624 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.804159078 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.2375257 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.260530102 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.146231111 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.271965804 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.325517912 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.263589113 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.268462949 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 2.998406278 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.082441247 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.264149966 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.259629405 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.48318557 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.268356733 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.172617465 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.339991558 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.44227977 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.809145204 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.274563099 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.193026701 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 3.969038699 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 3.95181461 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258483603 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.447114303 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.258502189 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267249805 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269262167 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.76659525 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808084681 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.26365355 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.088077629 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.265320375 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.269920741 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.264405343 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.258716712 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 2.968125551 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.547329155 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.261172298 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.274648592 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.402056189 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.273477619 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.193646672 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.777248441 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.264865409 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.259586481 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.035465881 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.294230343 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.093789925 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.728328372 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.520463477 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.938293012 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.272686163 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.186762126 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.289351134 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.259022437 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.936067215 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.289192289 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.280452225 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.267912403 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.271164467 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.106985277 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.699582726 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.828092072 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.97015105 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.763790496 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.1579224 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.272334946 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.163234206 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.680871602 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.196422793 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.917579989 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.441562932 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.681313835 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.207766564 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.447744962 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.418933944 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 1.994095451 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.274125665 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.488454823 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.152608665 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 5.951515411 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.286835713 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.472761911 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.296007577 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.261135956 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.193620246 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.564922542 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.47994134 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.974779473 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.342671076 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.679711665 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.95124577 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.0525004 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.261315118 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.579459973 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.425166437 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.891793825 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.649958141 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.271792665 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.18835106 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.737483609 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267199357 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.788390599 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.855653901 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.266430036 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.451959251 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.19996456 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.274480133 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.273761186 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.263894961 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.48604813 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.263940243 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.517172941 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.273918824 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.198035762 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.263390235 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.765825575 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.131922721 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.269110124 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.263610844 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.98313223 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.264555201 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.538597183 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.270203163 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 2.960111159 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.270060103 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.197599376 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.197337482 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 3.957664854 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.263735811 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.239535443 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.735132431 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 2.619594359 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.253099346 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.284670543 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.109627013 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.520589611 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.278625686 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.816978935 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.493138455 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 3.056769578 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.287417629 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.365612223 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.01106438 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.267102202 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.158108537 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.500326556 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.079658785 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.489973343 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.219252475 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.170468757 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.262948715 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.478466997 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.168399111 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.222354735 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.511840894 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 3.975636921 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.284454346 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.953666693 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.293609913 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.210155145 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.290271664 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 2.634168965 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.272992012 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.337075174 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.27577387 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.277254776 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.277484558 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.429270385 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.214513701 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.280707345 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.280721715 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.360678907 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.610120656 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 2.964507456 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.040943754 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.825921717 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.987155126 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.827096231 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282076002 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.266777215 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.266228661 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.20132005 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.420142169 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.793597681 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.540577351 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.397546961 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 2.704958991 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.289276461 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.022593007 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.294012539 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.480942224 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.541718354 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.136783564 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.27892087 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.927759724 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.169005616 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.278668126 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.478064368 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.743200102 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.802443318 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.390028666 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.267767322 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.684896507 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.543332554 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.358823225 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.266754046 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.855259598 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.272708192 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.587919479 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.274037133 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.271323743 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.415652406 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.278557633 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.9192919 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.278579238 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.428291426 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.041839172 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.208085612 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.52596997 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.707864841 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.280192818 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.829160475 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.940289696 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.534555933 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.339113472 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.27955542 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.370369885 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414673522 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.277965651 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.157523598 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.270409656 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.112246771 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 3.980114494 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.278502064 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.830249061 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.535553682 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.268407493 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.278862236 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291923671 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.279306099 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.493039686 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.960722345 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.494700552 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.279596239 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.279085442 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.26006741 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.831511113 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.284830559 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.204260801 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.275231213 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.502108327 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.506489781 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.296053701 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.723858458 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 3.98203767 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.800985997 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.242967881 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.291750172 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.27826019 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.94541253 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.832581702 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 2.978067768 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.745523217 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.932213401 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.279518843 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.548701651 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.276055966 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.275677401 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.549657312 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.275405221 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.285006942 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.28472946 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.829848361 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.011967576 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.271364068 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.136971591 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.210289573 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.496670487 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.900388588 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.209351952 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.272418956 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.444929097 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.273682701 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.402172703 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.282991075 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.269762115 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272917239 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.008353787 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.545216859 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.278021398 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.256183951 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.057686358 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.274868049 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.282643169 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.49437239 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.279099312 seconds)
    (460/481) benchmarking "2d"...
    done (took 1.949379604 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.623888272 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.529045835 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.273235347 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.258771903 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.276741023 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.272626191 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.989264144 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.243104035 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 2.798362672 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.806710489 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.27537605 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.286369612 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.277349744 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.489506665 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.484556821 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.272501207 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.299454288 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.277343499 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.290847009 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.17814852 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.041893445 seconds)
  done (took 1542.792733052 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.286224418 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.306723343 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.296668567 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.336974286 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.314141237 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.34335339 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.307729796 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.316829395 seconds)
  done (took 51.719671547 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.272166302 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.427676392 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.302657708 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.283951717 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.282469878 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.28554707 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.725097726 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.283984311 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.282989961 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.282486657 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.276882453 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.282603408 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.924555738 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.285158445 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.283651111 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.261668746 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.282228558 seconds)
  done (took 64.243823921 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.280177694 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.642820463 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.360164541 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.27536013 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.086670146 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.291272957 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 10.71406641 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.330352853 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.287684239 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.370021002 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 6.929068449 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.276001888 seconds)
  done (took 83.055837408 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.282509501 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.282485332 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.281869592 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.282877528 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.281633899 seconds)
  done (took 7.623803084 seconds)
done (took 1956.790560451 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.55997096 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 1.937757322 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.911561439 seconds)
  done (took 5.061653351 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.422716306 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.47208548 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.592886499 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.599554293 seconds)
  done (took 7.301969576 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.565051229 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.661759116 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.464791977 seconds)
  done (took 5.905251039 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 2.626276127 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.282796614 seconds)
  (7/14) benchmarking "20517"...
  done (took 1.402124408 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.278383042 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.278097642 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.279690512 seconds)
  done (took 20.049970247 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.281343168 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.283989153 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.281802302 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.284526893 seconds)
  done (took 6.346390237 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.263109933 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 2.971902107 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.262368124 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.280790987 seconds)
  done (took 17.992361046 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.026818598 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.039942992 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.025320898 seconds)
  done (took 7.306335745 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 6.288723453 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 2.123006204 seconds)
  done (took 9.625511264 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.571335848 seconds)
  done (took 2.785482574 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.414086992 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.606976381 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.292541543 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.203798846 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 2.284354242 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 4.934476276 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.849037559 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.441540697 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.18902909 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.345356075 seconds)
  done (took 26.777328815 seconds)
done (took 122.235543736 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 4.931838672 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 7.519909615 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.479526825 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 4.903669963 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.516365152 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.47939631 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.703160507 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 4.868615565 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.412176507 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.405096073 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 4.907522962 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.516727661 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.440704164 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 7.521242598 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.437209962 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.525555372 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.512570844 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 4.976732853 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.623600696 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.792560549 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.705895366 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.543246079 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.738895462 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.56057411 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.510536347 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.433226887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.123086588 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.279407778 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.79722384 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.139903711 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.433333082 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 5.959829798 seconds)
  done (took 188.915430271 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.278543072 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.292011898 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.27938388 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.279279529 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.295053225 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.280521036 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.280767581 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.298966428 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.278707459 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.285402403 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.289635494 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.279794835 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.28010051 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.292882756 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.279505189 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.279594 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.280143675 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.279424924 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.279281501 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.283717555 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.280517213 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.288242091 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.280137565 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.292427207 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.28015028 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.280742701 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.280874181 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.279869565 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.280512212 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.27969672 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.281168986 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.280540724 seconds)
  done (took 202.275903642 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.281069708 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.28014813 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.280314089 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.297473825 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.280691357 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.305788251 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.283133558 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.284303143 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.27978303 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.280219324 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.280742448 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.280228719 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.295679611 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.281077543 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.282047543 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.280752455 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.282623792 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.28110092 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.29814675 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.294046089 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.281444998 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.281785253 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.295250946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.294267342 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.281978754 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.282438344 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.28099172 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.281948864 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.282636159 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.28619992 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.282409363 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.289364616 seconds)
  done (took 202.3492604 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.484533403 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.290039986 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.291995 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.242735599 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.29131924 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.290820383 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.282452971 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.481205019 seconds)
  done (took 13.874840371 seconds)
done (took 608.631109036 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.564574479 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.288788685 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.479991687 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.313667797 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.034034261 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.310889544 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.310825543 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.477654627 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.198877728 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.478207708 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.539197521 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.307235594 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.671019714 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.309063347 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.552518693 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.407049913 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.148408167 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.253485059 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.608694991 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.79348647 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.55572415 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.751761049 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.474431028 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.187140186 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.674706915 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.753866457 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.015552021 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.145958551 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.310568895 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.617455458 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.884394219 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.259297817 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.365287439 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.349937262 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.406054307 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.389239317 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.249077392 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.348746972 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.490358022 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.521595634 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.810934494 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.012978882 seconds)
  done (took 88.84477912 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.278858849 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.279839712 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.279031147 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.280058074 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.280791442 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.279315083 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.278963409 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.278795564 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.280265633 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.278173962 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.278418622 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.280058058 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.278831925 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.280360831 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.279306848 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.279982424 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.279601641 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.282180144 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.279568314 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.279149727 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.280291847 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.279684944 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.280401602 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.28035353 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.280313856 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.280640536 seconds)
  done (took 34.497585729 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.294698924 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.533449137 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.700091558 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.30174926 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.293214054 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.297411538 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.366866098 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.294973213 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.296600644 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.296594582 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.445265575 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.299652811 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.329486628 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.724749194 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.298103979 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.295718826 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.294862751 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.294227009 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.5430063 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.303633065 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.385746492 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.298747413 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.367919896 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.306564631 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.314412722 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.295040939 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.299030729 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.818923354 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.295898777 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.446106767 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.034678085 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.368567473 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.759101933 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.713240557 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.036798478 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.300987839 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.296215173 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.450370026 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.297530624 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.2952311 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.367924885 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.296392913 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.712391061 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 1.920577898 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.313895214 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.296903754 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.832304906 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.454078755 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.531298729 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.303331049 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.735626993 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.301256364 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.298791722 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.297339527 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.527989798 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.303241821 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.295590718 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.823398741 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.318211666 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.370107298 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.300996151 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.297773904 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.553547636 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.299618676 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.539082564 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.29802716 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.305569475 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.297907544 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.716094175 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.302831779 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 1.939428798 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.310688773 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.296955648 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.447971651 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.541877594 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.863859031 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.302734059 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.554098724 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.775595603 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.37124941 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.30271121 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.798802942 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.375404799 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.301801787 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.300811607 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.300370738 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.297971757 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.343553632 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.367550315 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.866556601 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.929616151 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.834941251 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.386950792 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.311042592 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.29819048 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.821605197 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.314279601 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.299164264 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.705286537 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.93789444 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.313426459 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.305631141 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 1.923096124 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.314315268 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.372390888 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.305439846 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.716630908 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.299216359 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.346464395 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.299234346 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.305775361 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.302289688 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.371893805 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.303601208 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.300787476 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 1.907699573 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.469991328 seconds)
  done (took 170.982298417 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.291116762 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.292321529 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.291632518 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.291712682 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.291974164 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.296869237 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.290599757 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.292075033 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.297685957 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.291477806 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.291555514 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.293785021 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.294973078 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.305803232 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.302707114 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.300398065 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 2.903423598 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.294264725 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.293668006 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.292797109 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.078890023 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.29496488 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.293858841 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.29340651 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.294213486 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.292374834 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.318038182 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.29588253 seconds)
  done (took 150.892724807 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.301136952 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.832569117 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.301976816 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.424350686 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.320884003 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.298958868 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.421768315 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.354160324 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.304963132 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.298939793 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.298701955 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.585838432 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.302307298 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.786675151 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.478943922 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.427827742 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.785639747 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.303122197 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.299910787 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.299296336 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.426236523 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.306744204 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.5868039 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.835871025 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.303352883 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.837770156 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.29169749 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.302175423 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.301005145 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.839070319 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.30104054 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.589879906 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.37535316 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.359481701 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.841908962 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.788587235 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.789169364 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.439871078 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.301536608 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.299801625 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.2993649 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.290741779 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.853689149 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.307177699 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.301792022 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.845359422 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.321026391 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.303655354 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.31107619 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.300623334 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.358098328 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.362289265 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.600511592 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.854686833 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.378065674 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.325425399 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.426773109 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.672647256 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.305443809 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.788403645 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.289893638 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.85838759 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.309186492 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.290883527 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.302909217 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.308477278 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.445997516 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.430168671 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.791714639 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.303528838 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.789760256 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.44591778 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.304502049 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.302420007 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.305646256 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.858652506 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.793294205 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.445820115 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.433798999 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.487971065 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.295988699 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.302428638 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.292410497 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.37586494 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.30585729 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.86374438 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.794803533 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.306382856 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.305139353 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.305877981 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.306244305 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.469647348 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.867619875 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.381240851 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.789008968 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.617113448 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.607503012 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.309411043 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.360331192 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.308235299 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.604796751 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.309994383 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.359762313 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.737713792 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.605653684 seconds)
  done (took 155.269517987 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.543688194 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.444444311 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.393821911 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.416757826 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.888446643 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.850459429 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.586535172 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.429930772 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.410469386 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.546490876 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.418218678 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.395905375 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.46689633 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.377794015 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.003690177 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.36899594 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.396788663 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.432388081 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.396128078 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.315449728 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 1.916889713 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.582850946 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.469015189 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.263709362 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.394782319 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.026357709 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.839051199 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.858522096 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.476115849 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.561637044 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.826570453 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.395844659 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.2199028 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 1.939799129 seconds)
  done (took 63.09103318 seconds)
done (took 664.797318633 seconds)
SAVING RESULT...
DONE!
