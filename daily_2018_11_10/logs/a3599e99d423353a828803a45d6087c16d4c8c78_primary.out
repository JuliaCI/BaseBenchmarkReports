cset: moving following pidspec: 10751
cset: moving 1 userspace tasks to /user/child
cset: done
LOADING SUITE...
loading group "shootout"... done (took 1.23789391 seconds)
loading group "string"... done (took 0.554777974 seconds)
loading group "linalg"... done (took 7.621688466 seconds)
loading group "parallel"... done (took 0.173362748 seconds)
loading group "find"... done (took 1.182783388 seconds)
loading group "tuple"... done (took 1.840224803 seconds)
loading group "dates"... done (took 1.274470172 seconds)
loading group "micro"... done (took 0.232844891 seconds)
loading group "io"... done (took 0.763814811 seconds)
loading group "scalar"... done (took 42.45626358 seconds)
loading group "sparse"... done (took 13.230644827 seconds)
loading group "broadcast"... done (took 1.148593241 seconds)
loading group "union"... done (took 13.667238182 seconds)
loading group "simd"... done (took 4.775007587 seconds)
loading group "random"... done (took 9.67485769 seconds)
loading group "problem"... done (took 2.157943391 seconds)
loading group "array"... done (took 22.630487414 seconds)
loading group "misc"... done (took 2.116205867 seconds)
loading group "sort"... done (took 3.452420245 seconds)
loading group "collection"... done (took 19.409832276 seconds)
FILTERING SUITE...
WARMING UP BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 0.582150419 seconds)
  (2/12) benchmarking "fasta"...
  done (took 0.142808489 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 0.14928964 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 0.146567557 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 0.188884825 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 0.154981836 seconds)
  (7/12) benchmarking "nbody"...
  done (took 0.158241626 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 0.098778283 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 1.976687801 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 0.174541708 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 0.15439899 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 0.520712687 seconds)
done (took 5.231544039 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 0.217627035 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 0.094576541 seconds)
    (2/2) benchmarking "String"...
    done (took 0.10343985 seconds)
  done (took 0.926403107 seconds)
  (3/5) benchmarking "replace"...
  done (took 0.077434586 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 0.145455916 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 0.094866912 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 0.07727482 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 0.094968323 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 0.077931924 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 0.095183336 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 0.080033758 seconds)
  done (took 1.398490194 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 0.08710085 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 0.096575374 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 0.082197539 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 0.096744611 seconds)
  done (took 1.093227422 seconds)
done (took 4.45192211 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 0.738341585 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 0.272773824 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 0.202959709 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 0.461383985 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 0.193928039 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 0.215386129 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 0.685029408 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 1.349165976 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 0.252012137 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 0.099855067 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 0.142353576 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 0.384657803 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 0.137055651 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 0.693518232 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 0.092136516 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 0.123209124 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 0.179261739 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 1.453142227 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 0.082879914 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 0.109505404 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 0.116626462 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 0.14218616 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 0.129955621 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 0.093322321 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 0.182988693 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 0.081732901 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 0.19333858 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 0.107948963 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 0.080118301 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 0.290554057 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 0.202453938 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 0.686447087 seconds)
  done (took 10.944343584 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 0.11160977 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 0.133900756 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 0.097534989 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 0.137613527 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 0.135486417 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 0.100502455 seconds)
    (7/36) benchmarking "scal!"...
    done (took 0.084615453 seconds)
    (8/36) benchmarking "gemv"...
    done (took 0.096488251 seconds)
    (9/36) benchmarking "syr!"...
    done (took 0.120744908 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 0.176130999 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 0.114756081 seconds)
    (12/36) benchmarking "her!"...
    done (took 0.135988217 seconds)
    (13/36) benchmarking "trsv"...
    done (took 0.095387113 seconds)
    (14/36) benchmarking "dot"...
    done (took 0.082669574 seconds)
    (15/36) benchmarking "dotu"...
    done (took 0.115128319 seconds)
    (16/36) benchmarking "herk!"...
    done (took 0.244469343 seconds)
    (17/36) benchmarking "trmv"...
    done (took 0.121608453 seconds)
    (18/36) benchmarking "symv"...
    done (took 0.10492353 seconds)
    (19/36) benchmarking "dotc"...
    done (took 0.100140238 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 0.103441132 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 0.122157493 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 0.111695878 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 0.108412319 seconds)
    (24/36) benchmarking "symv!"...
    done (took 0.092983689 seconds)
    (25/36) benchmarking "symm"...
    done (took 0.166424909 seconds)
    (26/36) benchmarking "herk"...
    done (took 0.222016715 seconds)
    (27/36) benchmarking "syrk"...
    done (took 0.110450904 seconds)
    (28/36) benchmarking "trsm"...
    done (took 0.125429533 seconds)
    (29/36) benchmarking "asum"...
    done (took 0.09701039 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 0.110852285 seconds)
    (31/36) benchmarking "gemm"...
    done (took 0.144112379 seconds)
    (32/36) benchmarking "symm!"...
    done (took 0.143934988 seconds)
    (33/36) benchmarking "scal"...
    done (took 0.093734371 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 0.08106983 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 0.172395094 seconds)
    (36/36) benchmarking "trmm"...
    done (took 0.124856725 seconds)
  done (took 5.184272688 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.083594013 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 0.190070424 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 0.121057553 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.170446942 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 0.080873208 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 0.142302512 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 0.094753788 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 0.155304613 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 0.259317656 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.113159763 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 1.102407864 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.1630084 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 0.094829996 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.140334258 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 0.100216081 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096928355 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 0.082039095 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 0.096228769 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.637313613 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 0.166725061 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.134059488 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.097355864 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.104301995 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 0.098450934 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 0.363799814 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.086618193 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 0.096381578 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.080786495 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 0.08154708 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.160133654 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.081361759 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.162410059 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 0.102325679 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.100739168 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.133003738 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 0.1913482 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.125172537 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 0.11704994 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.096461379 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 0.077972722 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 0.192820342 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 0.088542084 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 0.096044775 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 0.103000535 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.135005392 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 0.133350224 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 0.096177739 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.080001121 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 0.220098385 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 0.080940588 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.113827831 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 1.937375701 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 0.183333793 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 0.092398148 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 0.09700195 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 0.32455708 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 0.103629859 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097456535 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 0.078107819 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 1.279275149 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 0.183091373 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 0.098613543 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 0.080635313 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.096762097 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 0.081638735 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 0.396470981 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.08076244 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 0.702601009 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 0.084603944 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 0.106459373 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.082807756 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 0.097709226 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 0.103612132 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.088830638 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 0.093677322 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 0.099638484 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 0.096803783 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 0.081218119 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 0.097357854 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 0.0778965 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 0.099407552 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 0.106147091 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 0.087656106 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 0.097664815 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 0.147906669 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 0.096529047 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 0.099154715 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.127293539 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 0.098995794 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 0.078616117 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.131184272 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.099246312 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 0.080933328 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 0.133393784 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.098890049 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 0.091528514 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 0.099903494 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 0.143775162 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 0.097545324 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 1.138569285 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 0.07988593 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 0.092697091 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 0.107729849 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 0.100856697 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 0.130548997 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 0.112569585 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 0.097006518 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 0.085925804 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 0.095585623 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 0.077505127 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 0.163229115 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 0.082148945 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 0.099054971 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 0.080594281 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 0.110006245 seconds)
  done (took 22.415749431 seconds)
done (took 40.356612811 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 0.318318831 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 0.103950632 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 0.103505578 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 0.103532564 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 0.102845562 seconds)
  done (took 1.536253287 seconds)
done (took 2.313705677 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.290956028 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.172872949 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.095410642 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.168459551 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.09351411 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.173764558 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.160950888 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 0.112479886 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.200558302 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 0.095701987 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.164203098 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.094816909 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.076684927 seconds)
  done (took 2.707940514 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.095717015 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.115582826 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.083091791 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.112198848 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076509793 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.111849774 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.093463397 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.117982402 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110748192 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08827992 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093344849 seconds)
  done (took 1.874335222 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 0.094349979 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 0.112833295 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 0.08279495 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 0.111102223 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 0.076079161 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 0.110889097 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 0.092298663 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 0.11734314 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 0.110413257 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 0.08546128 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 0.093479647 seconds)
  done (took 1.861131039 seconds)
done (took 7.213737169 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 0.091132466 seconds)
  done (took 0.86459192 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 0.933153287 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 8.0508051 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 0.11359827 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 0.149498624 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 0.300498359 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 0.194684474 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 0.487160291 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 0.125794361 seconds)
  done (took 11.335009763 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 0.144952151 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 0.086938212 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 0.102231374 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 0.083211211 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 0.105689121 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 0.085772111 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 0.1004845 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 0.098921661 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 0.085583459 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 0.100642915 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 0.083618536 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 0.103119729 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 0.102618156 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 0.084313051 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 0.101352813 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 0.085894128 seconds)
  done (took 2.390866176 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 0.120092997 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 0.117804276 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 0.107257082 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 0.108810162 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 0.087503065 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 0.106436726 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 0.107890433 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 0.088582998 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 0.10304549 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 0.104535155 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 0.090570355 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 0.107740192 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 0.104620196 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 0.079386134 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 0.108384532 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 0.108807417 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 0.085623522 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 0.107603282 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 0.107101491 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 0.0897899 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 0.107782107 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 0.096326273 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 0.087747782 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 0.107583418 seconds)
  done (took 3.324698731 seconds)
done (took 18.691997402 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 0.161883234 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.109454001 seconds)
  done (took 1.05059773 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 0.09741722 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 0.114122797 seconds)
  done (took 0.99285915 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 0.099431767 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 0.096794322 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 0.124100039 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 0.110096071 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 0.081207774 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 0.097853142 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 0.120643599 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 0.07972856 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 0.098167576 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 0.079879484 seconds)
  done (took 1.772156906 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 0.08352891 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 0.110296172 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 0.101192615 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 0.095430178 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 0.106561488 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 0.094701365 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 0.088429856 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 0.09998971 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 0.110652423 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 0.077702802 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 0.102888271 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 0.115546006 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 0.086324364 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 0.118286856 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 0.105209632 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 0.083567692 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 0.104005031 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 0.100224746 seconds)
  done (took 2.5696993 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 0.08165059 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 0.097702972 seconds)
  done (took 0.968134444 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 0.083366741 seconds)
    (2/7) benchmarking "second"...
    done (took 0.095379155 seconds)
    (3/7) benchmarking "month"...
    done (took 0.081298782 seconds)
    (4/7) benchmarking "year"...
    done (took 0.099078012 seconds)
    (5/7) benchmarking "hour"...
    done (took 0.094101683 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 0.078279857 seconds)
    (7/7) benchmarking "minute"...
    done (took 0.09439814 seconds)
  done (took 1.413763438 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 0.492585555 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 0.135667277 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 0.255582741 seconds)
    (4/9) benchmarking "Date"...
    done (took 0.085026785 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 0.121183689 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 0.304408967 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 0.098597719 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 0.083696408 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 0.104432101 seconds)
  done (took 2.527208844 seconds)
done (took 12.077112531 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 0.093994791 seconds)
  (2/8) benchmarking "printfd"...
  done (took 0.118293411 seconds)
  (3/8) benchmarking "parseint"...
  done (took 0.113308911 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 0.46892187 seconds)
  (5/8) benchmarking "pisum"...
  done (took 0.108333811 seconds)
  (6/8) benchmarking "fib"...
  done (took 0.099945525 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 0.147158025 seconds)
  (8/8) benchmarking "mandel"...
  done (took 0.253912111 seconds)
done (took 2.194025571 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 0.145576531 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 0.328602197 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 0.116267641 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 0.068052029 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 0.098687076 seconds)
  done (took 1.406576934 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 0.080758818 seconds)
    (2/2) benchmarking "read"...
    done (took 0.099749294 seconds)
  done (took 0.969842994 seconds)
done (took 3.317820013 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.081208705 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 0.129960053 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 0.079753998 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 0.100049422 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 0.077036375 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 0.100272235 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 0.076622303 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 0.098000817 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 0.076463765 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 0.097775158 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 0.096722282 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 0.081751024 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 0.096881093 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 0.081326496 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.097303726 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078363362 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.094834063 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.081585336 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 0.094233707 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078962338 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.094359402 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080427452 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 0.094762854 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 0.078119261 seconds)
  done (took 2.973018328 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 0.100961181 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 0.100871182 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 0.102059804 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 0.086442029 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 0.102744168 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 0.086015104 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 0.103993333 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 0.097742346 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 0.086524776 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 0.100569211 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.101279492 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 0.085207228 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 0.099545661 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 0.084018818 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.100697965 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 0.100972353 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 0.08744313 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098560944 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.0826587 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 0.102087262 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 0.102297016 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.081154178 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 0.101704032 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.103048857 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 0.086167409 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.101708469 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 0.082272366 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 0.099574474 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.102906747 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 0.085727206 seconds)
  done (took 3.65216726 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 0.086890929 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 0.093789878 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 0.079497022 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 0.102284567 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 0.077870061 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 0.097729399 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 0.077402849 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 0.096717272 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 0.078918648 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 0.095789528 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 0.079634993 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 0.095945002 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 0.078120681 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 0.098173487 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 0.078406092 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 0.099596568 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 0.107225787 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 0.079731724 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 0.095491991 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 0.080946724 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 0.09987669 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 0.078099854 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 0.096439751 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 0.0776555 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 0.095688243 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 0.07785478 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 0.096021587 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 0.077756605 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 0.096503169 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 0.077175753 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 0.098823721 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 0.081399738 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 0.097090601 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 0.084641323 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 0.100969799 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 0.07732256 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 0.100133286 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 0.077689423 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 0.097923198 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 0.094299363 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 0.079007087 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 0.094250995 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 0.079399591 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 0.101678626 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 0.079838556 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 0.096847413 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 0.079084411 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 0.097180305 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 0.079050761 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 0.099516938 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 0.077505408 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 0.09589281 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 0.079509594 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 0.097713503 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 0.082588371 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 0.096237794 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 0.095228693 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 0.079236672 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 0.096384029 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 0.078893862 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 0.094685253 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 0.078124118 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 0.097595682 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 0.079358743 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 0.112179585 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 0.085585081 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 0.096080513 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 0.079960597 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 0.097372937 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 0.080649857 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 0.097402448 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 0.10978227 seconds)
  done (took 7.235696636 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 0.084528922 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106800287 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.080581383 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.098042392 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.076225581 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.098290464 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.09957082 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.079971711 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.098028536 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.085087129 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.097241951 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.079673971 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.098202854 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.10765541 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.080374809 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.098743778 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.084966469 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.094020588 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 0.079324453 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.100677899 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.078948859 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.101085942 seconds)
  done (took 2.810720403 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.212938527 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.106426282 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 0.144496342 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.107886681 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.083920116 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.108407432 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.10213311 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.088637453 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.103151642 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.083368535 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.101696392 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.102477976 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.083716259 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.102330436 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.100575088 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.086118254 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101967607 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.084834542 seconds)
  done (took 2.711769717 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 0.094839433 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 0.099866134 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 0.10190843 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 0.100752096 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 0.098446799 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.083756684 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.104891515 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.107270381 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 0.08498263 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 0.09903237 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 0.091674503 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.102677692 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 0.101591703 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.082306659 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.101763251 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.081374323 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 0.102707475 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.079935107 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.109228247 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.104700008 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.103568486 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.091492641 seconds)
  done (took 2.937603295 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.097294971 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.102631137 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.118181302 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.084872143 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.095599043 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.080289004 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 0.106520679 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 0.081527584 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 0.108764597 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 0.1009448 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.082621395 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.09799855 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 0.087833197 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.100158748 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 0.104368659 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.081528014 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.10097234 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.080569723 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.101994898 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.077544857 seconds)
  done (took 2.701326707 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.103215739 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.10176814 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.205171642 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.093572928 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.101694504 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.08182517 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.11051349 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.101071591 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.082212159 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.126611724 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.101757099 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.082516478 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.109897119 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.107520129 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.099445134 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093636346 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110641128 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.10891812 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.083897359 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.101448539 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.126288859 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.082363451 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.111608895 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.100965469 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.082761268 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.100907976 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.099519266 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.08879731 seconds)
  done (took 3.711889554 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.083077812 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.098022936 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 0.08010555 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 0.095930575 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 0.08022713 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 0.095747744 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 0.080281798 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 0.095807086 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.082319673 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.096608133 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 0.081313499 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 0.098999861 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.084529939 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 0.098730128 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.080825416 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 0.098695961 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.081634895 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 0.096631259 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.078561512 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.096707582 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 0.080999157 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.099142969 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 0.081216625 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.097490127 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.078974526 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 0.100288237 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.078768129 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.097131791 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.080318367 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.097965375 seconds)
  done (took 3.490133726 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 0.091017364 seconds)
    (2/2) benchmarking "in"...
    done (took 0.106371378 seconds)
  done (took 1.009462509 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 0.079704056 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.115175049 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 0.078906 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 0.104460177 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 0.085306897 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 0.10149092 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 0.108162544 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.08635675 seconds)
  done (took 1.572353423 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 0.097904271 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 0.11056719 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 0.082793953 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 0.112797179 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 0.110443656 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 0.095117771 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.165917317 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 0.10138236 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 0.087872925 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 0.099157961 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 0.112213016 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 0.082456121 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 0.104858032 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 0.08228981 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 0.105661213 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.087231455 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 0.097272897 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 0.087447593 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 0.103112068 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 0.097320455 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083587481 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.110749576 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.08423342 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 0.097116493 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 0.082018044 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 0.110423842 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 0.108504491 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 0.083969048 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.103893417 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 0.10691467 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 0.087956492 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 0.092772657 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 0.081998229 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 0.101603467 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 0.080553139 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 0.109837897 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.11110045 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.085966671 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 0.109539358 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.08270067 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.111635571 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 0.094119478 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 0.088563009 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 0.105726846 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.092003683 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 0.101238622 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 0.083406123 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 0.096143518 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 0.09706146 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 0.086079285 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 0.094906881 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 0.082891536 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 0.094042345 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.089613626 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 0.104564801 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111588447 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 0.081862555 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 0.100754404 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 0.085724544 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 0.102554579 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 0.088400343 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 0.102433425 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.083635457 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 0.101032719 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106997377 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 0.086560493 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.108519312 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 0.078373809 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 0.096257286 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 0.079799987 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 0.109203756 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.122578141 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 0.090645861 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 0.102166353 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.083695168 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 0.099301432 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.101544044 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.0842267 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.107174861 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 0.08965663 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 0.100940993 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.107350911 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.090224428 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 0.100880903 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 0.084996722 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 0.108515795 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 0.097121424 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 0.085516703 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 0.098306335 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.096047532 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 0.099929966 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 0.080652292 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 0.099072395 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 0.107764462 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 0.085994302 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 0.099416859 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 0.080681291 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.10754334 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 0.07588031 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 0.102150192 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.08279539 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.101302184 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 0.109023082 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.089330049 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10764534 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 0.107194806 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 0.089674675 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 0.09973229 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 0.085861543 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 0.096916806 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.083527947 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 0.103485632 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 0.088719383 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 0.09529076 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.102513253 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 0.08614395 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 0.100697408 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 0.088755516 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 0.098462652 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 0.082245104 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.109159466 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 0.107032975 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 0.081825491 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 0.09629571 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 0.085745931 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 0.10043043 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.086081406 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 0.109056376 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 0.097421666 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 0.078880693 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 0.095466723 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 0.086764106 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 0.101301618 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 0.086881136 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.105933149 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 0.103138097 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 0.077206254 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 0.097717434 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 0.087204219 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 0.109008752 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 0.081986987 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 0.10210484 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 0.104986236 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 0.083827088 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 0.099177959 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 0.088143731 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 0.101889572 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 0.082189527 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 0.105749125 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 0.08440635 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 0.096589818 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.104815482 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 0.085167472 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 0.09877533 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 0.086165155 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.10618027 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 0.083576781 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 0.102176536 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.098417345 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 0.08841271 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102699615 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 0.081047207 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 0.100985796 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 0.081319449 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 0.10992676 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 0.102571478 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 0.078640195 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 0.09686831 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 0.089465432 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 0.099358513 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 0.081828582 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 0.100067777 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 0.083873269 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 0.102454382 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 0.098060685 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 0.082425713 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 0.101550421 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.094259314 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.106582965 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.100980573 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 0.08843954 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 0.110374923 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 0.082895251 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 0.103448314 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 0.082379956 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.103720821 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 0.101444816 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 0.090926262 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 0.105615232 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 0.088026865 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 0.103580678 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 0.07781272 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.107581328 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10841524 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 0.081657531 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 0.098636748 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 0.081353851 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 0.104821186 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 0.106828752 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 0.087886128 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 0.101752027 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081132205 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.101545163 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.085196318 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 0.104289248 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 0.100219431 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 0.082570307 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 0.105956335 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 0.082493547 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 0.108554935 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.100512554 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 0.092099745 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.104611647 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 0.078357205 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105745581 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.081202884 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 0.107927592 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 0.077471426 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 0.099770577 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 0.098642972 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 0.08419638 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 0.099557298 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 0.0862876 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 0.095338483 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08983475 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.109910029 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 0.082450683 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 0.101032849 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 0.101695184 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.092637457 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 0.102359688 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.086651958 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 0.104704565 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 0.08722692 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.114024512 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 0.100585789 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 0.085643778 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 0.11048827 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 0.082435569 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 0.095752597 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 0.087717474 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 0.100586076 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 0.100461859 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 0.082357903 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 0.09958773 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.085523646 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.110342249 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 0.104339193 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 0.077352742 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 0.10297814 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 0.082168724 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 0.100047782 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 0.079564337 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 0.108584838 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 0.086529108 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 0.10390441 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.108682472 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.084303736 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 0.102852069 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.087343751 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 0.10194736 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 0.083749413 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 0.103651047 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.10480875 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 0.085469682 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 0.104895942 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 0.08229946 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 0.103434843 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 0.081290561 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 0.102455609 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 0.084289418 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 0.10291357 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 0.100701073 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.0893293 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 0.101019856 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.083270818 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 0.103898136 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 0.08326626 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.103243638 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 0.082470496 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 0.101840693 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 0.103595809 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.084880036 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 0.101976251 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 0.085940815 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 0.096464393 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.090335831 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 0.102396657 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.089808621 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 0.103455109 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 0.096827378 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 0.08941294 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 0.103532572 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 0.087818484 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 0.104143199 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 0.102270469 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 0.084641102 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 0.101976655 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 0.085645735 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.111310002 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 0.080161855 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 0.110812447 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.105915687 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.085343618 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 0.103527049 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 0.083380342 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 0.102432134 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 0.08189809 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 0.103684542 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 0.083197345 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 0.102193565 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 0.099733778 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 0.089722475 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 0.104703673 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 0.08392623 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 0.103565998 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 0.083551944 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 0.102624042 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 0.084018879 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 0.097182603 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 0.081211991 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 0.102135702 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 0.101280384 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.091810065 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 0.10305059 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 0.085464059 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 0.101038091 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.082559293 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 0.101759554 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 0.078330476 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 0.110232883 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.111847776 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 0.082589128 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 0.111001031 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 0.100824218 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 0.084528823 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111430207 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 0.076210053 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 0.101485541 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 0.080474352 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 0.1009128 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.108321721 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 0.085305793 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 0.110182918 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 0.083599092 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 0.101556013 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 0.079794834 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 0.103688412 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 0.080810946 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 0.097360155 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 0.079610552 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.105672998 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 0.103638329 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.083072002 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 0.102355105 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 0.086159444 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.103077821 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.097672813 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 0.102590738 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 0.101876107 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 0.085479947 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 0.098379442 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 0.082690125 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 0.100910584 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 0.086235615 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 0.103292602 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 0.081193553 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 0.099511392 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 0.081985734 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 0.104691337 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 0.082703978 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 0.102852657 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 0.102614541 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090405579 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101765329 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 0.086170813 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 0.107148347 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 0.077465761 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 0.105861293 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 0.101352685 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 0.08362245 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 0.10157589 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 0.087488996 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 0.105996553 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 0.084967726 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 0.109767319 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 0.101436235 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 0.084561055 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.102554646 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 0.081183288 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 0.102100336 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 0.08328465 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 0.103048732 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 0.081765575 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 0.103936463 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 0.10947571 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 0.081990439 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 0.104494114 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 0.083630058 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 0.102863369 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 0.087782776 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 0.103396731 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 0.08365598 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.110486823 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 0.105218072 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 0.084295935 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 0.108066892 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 0.086465171 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 0.106387576 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.102895145 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 0.085301592 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108250971 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 0.081223038 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 0.111784912 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 0.083232249 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 0.104223712 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 0.10328842 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 0.082052306 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.101012704 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 0.082736153 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.101884571 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 0.087886662 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 0.104108674 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 0.080958894 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 0.102343406 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 0.080706621 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 0.105271619 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 0.106207772 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.091748189 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 0.106152044 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 0.08683113 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 0.098535468 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 0.079524989 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.105065359 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 0.099748202 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 0.085625434 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 0.105491701 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.090286722 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 0.105841187 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 0.084922233 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 0.102585376 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 0.108494434 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 0.092217082 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 0.107300259 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 0.082323773 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 0.107310076 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 0.084362247 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 0.105477419 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 0.101707869 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 0.083807175 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.10301074 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 0.088379282 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 0.103826853 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 0.082143365 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 0.110833424 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 0.104676368 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 0.085107493 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 0.103391422 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 0.083940409 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 0.102512786 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 0.078483767 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 0.104740811 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 0.085403365 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.109251307 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 0.103393175 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.083535781 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.112060325 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 0.082828609 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 0.102685391 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 0.085599577 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102097045 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 0.108799643 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 0.079437412 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 0.103025552 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.084097939 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.104102972 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 0.077505847 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 0.102708609 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 0.081108508 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 0.106956523 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 0.082427624 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 0.099373836 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.111317238 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 0.092072644 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 0.106409502 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.081843654 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.102311679 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 0.078157957 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 0.098876577 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 0.082077872 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.105204073 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 0.104135796 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 0.092926808 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 0.1027495 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 0.081579749 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 0.099556704 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 0.082576629 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 0.106129743 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 0.105138492 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 0.081801242 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 0.097683713 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 0.082384119 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 0.105956229 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 0.090766281 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.102398858 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 0.083591806 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.107154096 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 0.103858631 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 0.083014712 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 0.106988882 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 0.080957692 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 0.106709433 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.092607542 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 0.104539155 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 0.102439746 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 0.090379306 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.111762334 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 0.084081489 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 0.098510915 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 0.084304977 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 0.105927967 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 0.101527455 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 0.085974751 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 0.104020085 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 0.097090344 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 0.107518819 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 0.081817182 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 0.102853713 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 0.104360465 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 0.083476336 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 0.109998819 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.084505386 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 0.104357601 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 0.087031812 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 0.10573791 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 0.11278903 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.08645206 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 0.108660675 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 0.08549724 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 0.10568183 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 0.101560285 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 0.084878119 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 0.100425816 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 0.082923539 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 0.104443262 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 0.084352186 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 0.107822518 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 0.109714235 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 0.08372582 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 0.111792691 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 0.091907537 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 0.108633956 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 0.080503602 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 0.103996588 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 0.083103048 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 0.100580469 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 0.104543619 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 0.08301743 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 0.101461265 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 0.082636174 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 0.101813111 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 0.084854185 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 0.108774326 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 0.085482212 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 0.104924698 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 0.101725564 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 0.079347635 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 0.105291129 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 0.08713916 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 0.103304192 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 0.081122996 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 0.103468847 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 0.084828789 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 0.109861719 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 0.10580729 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 0.085968935 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 0.104739803 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 0.086412234 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 0.104642512 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 0.079018584 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 0.109808662 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 0.082338999 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 0.106775741 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 0.082276797 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 0.103914428 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 0.103576044 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 0.087881555 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 0.108913659 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 0.084610188 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 0.107178156 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 0.113174119 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 0.087912116 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 0.101219196 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 0.081761878 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 0.107943006 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 0.081750052 seconds)
  done (took 57.850716974 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.147430631 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.080932846 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.098746181 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.079038251 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.113752295 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.098911128 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.080054801 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.098958755 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.080285485 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.102966663 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.079077305 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.100077973 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.109183211 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.125250835 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.093597681 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.104500409 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.077310775 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.101518292 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.098081052 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.082064804 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.110097022 seconds)
  done (took 2.925826557 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 0.105186294 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 0.118776517 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.115534827 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.118718472 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.090076867 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 0.116637475 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 0.115229715 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.113602165 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.099821293 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.111118487 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 0.11831489 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.115026078 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 0.090756332 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 0.112722103 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.11021512 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.092930169 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 0.120484707 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.109954323 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 0.115936978 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.095703146 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.113080813 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 0.115154209 seconds)
  done (took 3.275596843 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 0.085875801 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 0.101458123 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 0.084992706 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 0.098174013 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 0.083010147 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 0.098193644 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 0.086657625 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 0.101654097 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 0.087012252 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 0.102877647 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 0.081951556 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 0.103265821 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 0.103725039 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 0.07955568 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 0.101812233 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 0.081679021 seconds)
    (17/49) benchmarking "13786"...
    done (took 0.151121728 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 0.107997857 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 0.082502858 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 0.105811528 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 0.078185483 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 0.106540038 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 0.098491342 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 0.080215176 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 0.101558623 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 0.088086746 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 0.104199241 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 0.081283967 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 0.104619158 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 0.081121781 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 0.103961345 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 0.080271652 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 0.105003948 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 0.102607665 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 0.083776145 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 0.101616113 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 0.083143675 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 0.103420261 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 0.07907605 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 0.101653492 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 0.083958637 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 0.100181019 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 0.084431302 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 0.105475146 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 0.081183885 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 0.102394352 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 0.084472927 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 0.105223658 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 0.097657464 seconds)
  done (took 5.50556514 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 0.105974585 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 0.16188359 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 0.086897474 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.142920132 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 0.12158285 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 0.114284862 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 0.087703806 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.142657194 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 0.103675449 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 0.082291254 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 0.124645409 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 0.120205115 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.103829548 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 0.088053756 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 0.111657382 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.104230623 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.086756266 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.103028281 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 0.107410376 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 0.084671208 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 0.109221713 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 0.089529799 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 0.120439741 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 0.118569611 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.108377588 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 0.082849949 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 0.104501914 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 0.109151175 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 0.097208394 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 0.110278324 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 0.110143592 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 0.090027773 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 0.120553879 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 0.105513152 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.082293863 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 0.107789248 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 0.122538075 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 0.103607345 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 0.088308826 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 0.10171021 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 0.086251499 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 0.109746872 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 0.10991544 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 0.102331262 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 0.106045291 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 0.109472308 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 0.083859638 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 0.102192378 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 0.117070929 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 0.087677697 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 0.11433533 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 0.119443524 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.088339988 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 0.10624566 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 0.109673788 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 0.119449984 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 0.086504548 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 0.102606117 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 0.087150457 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 0.117984938 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 0.101744592 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.088531003 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 0.119385621 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 0.10701428 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 0.11226524 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 0.099850588 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 0.110053391 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 0.108242168 seconds)
  done (took 8.186964222 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.094260561 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 0.112044476 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.121643155 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.121555246 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.09049533 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 0.110898121 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 0.110685597 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 0.091045497 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.112213113 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 0.117412832 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.110832683 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.134954184 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 0.086970163 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.116589486 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.111650989 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 0.091584821 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 0.113050299 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.111988915 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 0.090394219 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 0.112359594 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 0.111804285 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.121292903 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 0.091094584 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.121305729 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 0.142821053 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 0.105310133 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 0.090703965 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.112180138 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.122069353 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 0.111347393 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 0.123743563 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 0.0927779 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.11273029 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 0.122907101 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 0.124152359 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 0.090302813 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.104042687 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.110775425 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 0.091472492 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 0.11222354 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 0.104427396 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 0.101982088 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 0.113067906 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 0.106856584 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.091475177 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 0.112234886 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 0.121890437 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 0.125413945 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 0.11539323 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 0.097121995 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 0.11320693 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 0.12116653 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 0.112664931 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 0.091693642 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 0.12195749 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 0.147987302 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 0.123195816 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 0.122981015 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 0.111421085 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 0.101522968 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 0.122363017 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 0.129856999 seconds)
  done (took 7.762672263 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.108956968 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 0.11669291 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 0.118143582 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 0.099855657 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 0.083892174 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 0.109492798 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 0.082503343 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 0.102578721 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 0.113295468 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 0.095381894 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.118085877 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.110393906 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.090917677 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.118078821 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 0.10945939 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.113539854 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.088682282 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 0.109808606 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.115570516 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 0.108233841 seconds)
  done (took 2.992606179 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 0.094690579 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.124984561 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 0.085122495 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.112658737 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 0.10883825 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.091804447 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 0.107773159 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.107439244 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.08681824 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.10851197 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.096301423 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.117747025 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.106769403 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.090795558 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.118107842 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.112645479 seconds)
  done (took 2.54957741 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 0.097749344 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 0.119305775 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 0.120406056 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 0.08403947 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 0.105453602 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 0.080407991 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 0.106470406 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 0.100348002 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 0.081678883 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 0.12132802 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 0.083923654 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 0.112335281 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 0.104839463 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 0.083100265 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 0.101452986 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 0.08762818 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 0.102498744 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 0.082033143 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 0.107153743 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 0.119054555 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 0.095553938 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 0.107146294 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 0.106880826 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 0.087895996 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 0.104926013 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 0.089652296 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 0.106561886 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 0.102235867 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 0.083288859 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 0.105606658 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 0.084747464 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 0.114194 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 0.100557181 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 0.084867264 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 0.102432423 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 0.082853182 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 0.106144251 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 0.085387497 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 0.109384257 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 0.104858188 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 0.085155968 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 0.105218481 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 0.085777671 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 0.10797466 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 0.081339741 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 0.107586664 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 0.100560556 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 0.092052859 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 0.1033252 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 0.085471063 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 0.106515669 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 0.086064565 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 0.107613016 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 0.117072953 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 0.089331826 seconds)
  done (took 6.309494636 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 0.100054879 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 0.109304829 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 0.079871194 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 0.103581462 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 0.088033172 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 0.108844494 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 0.108529112 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 0.088447565 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 0.10709602 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 0.083104224 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 0.107908266 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 0.088138324 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 0.107872605 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 0.108318905 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 0.086877527 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 0.10931671 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 0.079951366 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 0.106819524 seconds)
  done (took 2.660250928 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 0.091597161 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 0.105776153 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 0.093185702 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 0.105770541 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 0.084977757 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 0.109742982 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 0.079650963 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 0.1050064 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 0.104002205 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 0.086278391 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 0.105110871 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 0.088407681 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 0.104512617 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 0.087876288 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 0.106066971 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 0.084647366 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 0.108970563 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 0.10237969 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 0.085927106 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 0.100869254 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 0.087636747 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 0.104809806 seconds)
  done (took 3.019623542 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 0.118865771 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 0.125408431 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 0.092670738 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 0.22964882 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 0.102707716 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 0.132771837 seconds)
  done (took 1.690171484 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 0.110063115 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.122022512 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.10628307 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 0.107485561 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.116601127 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.08681509 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108965785 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108113769 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117330279 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.10291687 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109577459 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118510832 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118758084 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.097713403 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117155149 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.115852954 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.107838044 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.088532097 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 0.106871011 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.128398149 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087603442 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.118041693 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108470629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.08615846 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.109063988 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.118039855 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118369059 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.122155099 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.087987991 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.120049299 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114786689 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088021447 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.119242064 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.123411129 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 0.108265853 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098554595 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108979478 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.130505725 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.114059025 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098521866 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.10991216 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.114155306 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.098695282 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.114800336 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11849119 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108192445 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.093502783 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108578088 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108451185 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.136527029 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.093802975 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118291513 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114716668 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.118340953 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.098310471 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.15516827 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.103341112 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118106258 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.116697651 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123682207 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.116831402 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.094434278 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117596599 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.123096863 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.114680412 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.117883443 seconds)
  done (took 8.223556153 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.103021612 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 0.126372581 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.10819379 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 0.122890461 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.098178204 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108574962 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.108743452 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.086859432 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108242569 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107294664 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.153201919 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.089277968 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.118074066 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118744834 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.088229103 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109911108 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.109046038 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.117439925 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 0.088053858 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 0.135756729 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.108849584 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.117470674 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.117513575 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.097169419 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 0.12249677 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.116501557 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108123129 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088196769 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.109773119 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.107601422 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.094352844 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109408984 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.118472183 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 0.087642594 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.119091981 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108705464 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.087417338 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.115095691 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.109749348 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.115194614 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.098135651 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.129704271 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108375346 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 0.108290192 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 0.101471386 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.108989756 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108947817 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 0.086693605 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 0.109555631 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 0.107946878 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 0.101897555 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 0.124289324 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 0.123894885 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.118911329 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.108550662 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 0.08875885 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.108879546 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 0.108879778 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.088343976 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.11692887 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 0.117906854 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 0.087489069 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 0.157537689 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.089086121 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 0.1093231 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 0.118082093 seconds)
  done (took 8.095747762 seconds)
done (took 156.643365338 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 0.219285754 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 0.228391582 seconds)
  done (took 1.339244956 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 0.099083902 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 0.136738725 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 0.095838605 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 0.16899814 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 0.104760476 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 0.119340211 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 0.136907795 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 0.097099895 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 0.106555077 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 0.084961524 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 0.106905444 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 0.086212893 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 0.171299264 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 0.085624752 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 0.107186753 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 0.108425459 seconds)
  done (took 2.709909099 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 0.199889629 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 0.254996271 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 0.101382691 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 0.106922933 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 0.08835457 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 0.111949429 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 0.104232542 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 0.091402624 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 0.110337736 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 0.086465155 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 0.109265052 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 0.08600114 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 0.106002121 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 0.08561062 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 0.110832655 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 0.08741756 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 0.106666077 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 0.087359471 seconds)
  done (took 2.931016782 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 0.113827635 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 0.146947838 seconds)
  done (took 1.159956234 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 0.119276103 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 0.180297826 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 0.318923679 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 0.154514589 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 0.107075216 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 0.127259666 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 0.157259368 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 0.131318815 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 0.196943427 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 0.122815726 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 0.122243537 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 0.097533456 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 0.140778254 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 0.115270348 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 0.095511058 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 0.119146211 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 0.141422002 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 0.093348589 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 0.116026311 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 0.115136424 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 0.116497568 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 0.107493947 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 0.115231266 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 0.093456217 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 0.180733195 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 0.120044442 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 0.085226537 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 0.106457991 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 0.115815121 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 0.095026162 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 0.114143962 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 0.124573529 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 0.098185334 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 0.178575147 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 0.102776808 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 0.177049886 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 0.097797096 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 0.112235782 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 0.114486732 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 0.091502367 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 0.11859222 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 0.118002418 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 0.10448488 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 0.118572957 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 0.085158556 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 0.119120668 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 0.10520811 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 0.086430067 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 0.115090349 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 0.097414651 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 0.115058024 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 0.11345722 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 0.154617266 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 0.119265913 seconds)
  done (took 7.584699136 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 0.794799267 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 0.156295593 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.090341216 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.885157101 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.13690728 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.103270453 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.775228479 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.13392522 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 0.232715995 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.753495544 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.133436811 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.120152354 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.225364681 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 0.237674308 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.989772687 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.311102551 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.668957742 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.101364454 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.151637448 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 0.153198914 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.118310146 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.135650949 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.128913603 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 0.456838503 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 0.094604216 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.112451132 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.095345862 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.121158773 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.157585462 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 0.123965864 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.113591258 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 0.176557623 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 0.24779881 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.204818427 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.115140742 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.088972724 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.112280377 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 0.167829923 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.263728314 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.21458402 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 0.178378433 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.087431763 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.110963655 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.09981555 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.131307591 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.107742104 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162941239 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 0.173902634 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 0.192412114 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.091886246 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.12102126 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 0.119239975 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.099396655 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.185135562 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 0.098801357 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 0.317910573 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.309548462 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 0.111387568 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.12038954 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 0.106874685 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.26299348 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.12221594 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.222190846 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.118196777 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 0.211178554 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 0.110235353 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.765296585 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.188181976 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 0.090586484 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 0.117639022 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.117728096 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.095297097 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.120784187 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 0.171427723 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 0.39198145 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.122819301 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 0.092868669 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.111112625 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.204011855 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 0.125421337 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.10981529 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.162505916 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.094273483 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 0.11996923 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.124194531 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.12211406 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 0.16974184 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 0.228775578 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 0.123661046 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.118421874 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.094278574 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.125363654 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 0.115542225 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 0.210765478 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.217872982 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 0.162569828 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 0.206822254 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.122858144 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 0.163870101 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.189577646 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.099360889 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 0.191590529 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.098080081 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.125902178 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.123091225 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 0.214776189 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 0.14517416 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 0.10253462 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.116252761 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.116439814 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 0.147898869 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.107125544 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 0.118524288 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 0.168712373 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.502719976 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 0.168295756 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 0.107585109 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.106719388 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.119775874 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.159963082 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.117681975 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 0.255270053 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.099537578 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.190111019 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097386988 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 0.109189678 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.119620166 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 0.163599785 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.121134394 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.099192729 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.123483193 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118603407 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 0.234775966 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 0.215787095 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.100721718 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.242096429 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 0.183790655 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 0.11904186 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 0.171886109 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 0.121260376 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.167028202 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 0.118792323 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.099946841 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.117711253 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.786140364 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.101239252 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 0.121399621 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115553079 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 0.195236986 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.089609923 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.124264145 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.123409166 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 0.086401186 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 0.777364582 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 0.127004409 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 0.120147599 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 0.103304004 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.118422785 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 0.119433782 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 0.095820398 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 0.115917909 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 0.162723076 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.228837369 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.119715428 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.097671717 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 0.123685267 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 0.15810882 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 0.117391339 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 0.12554091 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 0.124689012 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 0.104916617 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 0.1215042 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 0.113049085 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 0.102667065 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 0.190671542 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 0.162938923 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 0.220975064 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.566693735 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.1130876 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 0.12370622 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 0.226234622 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.091430332 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.287198837 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 0.118543916 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 0.203117709 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 0.185503379 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 0.099224542 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 0.306582375 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 0.188224511 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 0.19668162 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 0.106663098 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 0.193909134 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.088062723 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 0.118019941 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 0.164376249 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 0.111228701 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 0.09555598 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 0.182209639 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 0.102721577 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 0.124111182 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 0.957033791 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.090013664 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 0.24880216 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 0.087381916 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 0.190307392 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 0.096328736 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 0.120395621 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 0.294269878 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 0.089744482 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 0.128883376 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 0.163194309 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 0.115289398 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 0.124722604 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 2.707086429 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 0.12517789 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 0.122346344 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 0.097470728 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 0.222930407 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 0.16130924 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 0.120611786 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 0.119570793 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 0.120612067 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 0.16689072 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 0.208244439 seconds)
  done (took 44.00234395 seconds)
done (took 60.622872503 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.275649635 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.216432128 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 0.264991552 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.169379095 seconds)
  done (took 1.924263915 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 0.170908913 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 0.149705568 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 0.121197832 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 0.109271896 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 0.150941482 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 0.084521302 seconds)
  done (took 1.708051604 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 0.358006283 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 0.275211683 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 0.240435728 seconds)
  done (took 1.800744522 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 0.28666982 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 0.246256704 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 0.475788636 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 0.324484756 seconds)
  done (took 2.379871779 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 0.208649182 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 0.133180477 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 0.110518835 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 0.103871748 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 0.199002808 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 0.245444673 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 0.142245047 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 0.201390921 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 0.099797042 seconds)
  done (took 2.415100705 seconds)
  (6/6) benchmarking "26942"...
  done (took 0.198234731 seconds)
done (took 11.351600091 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 0.301065105 seconds)
    (2/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 0.159669293 seconds)
    (3/286) benchmarking ("map", abs, Int64, false)...
    done (took 0.233238753 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 0.09256712 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 0.204915098 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 0.127518122 seconds)
    (7/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 0.201998573 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 0.099098197 seconds)
    (9/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 0.118170318 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 0.093285694 seconds)
    (11/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 0.228674602 seconds)
    (12/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 0.23522499 seconds)
    (13/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 0.194030378 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 0.190815151 seconds)
    (15/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 0.221386742 seconds)
    (16/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 0.093781292 seconds)
    (17/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 0.112927894 seconds)
    (18/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 0.204457363 seconds)
    (19/286) benchmarking ("perf_sum", Float64, true)...
    done (took 0.092498224 seconds)
    (20/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 0.184981415 seconds)
    (21/286) benchmarking ("map", identity, Int8, true)...
    done (took 0.202073393 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 0.091900404 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 0.11258522 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 0.134076967 seconds)
    (25/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 0.161099518 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 0.139780448 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 0.221205032 seconds)
    (28/286) benchmarking ("sort", Float64, true)...
    done (took 0.230373665 seconds)
    (29/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 0.233623216 seconds)
    (30/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 0.195080642 seconds)
    (31/286) benchmarking ("sort", BigInt, true)...
    done (took 0.230532031 seconds)
    (32/286) benchmarking ("sort", BigFloat, false)...
    done (took 0.172849746 seconds)
    (33/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 0.188997566 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 0.120382062 seconds)
    (35/286) benchmarking ("sort", Int8, true)...
    done (took 0.219073743 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 0.170052883 seconds)
    (37/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 0.175058549 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 0.138666407 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 0.125777976 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 0.092403279 seconds)
    (41/286) benchmarking ("perf_sum", Float32, false)...
    done (took 0.121130077 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 0.11628845 seconds)
    (43/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 0.169737128 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 0.138530772 seconds)
    (45/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 0.194310977 seconds)
    (46/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 0.09292908 seconds)
    (47/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 0.116920584 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 0.08692947 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 0.136649587 seconds)
    (50/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 0.064811643 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 0.138268329 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 0.099545193 seconds)
    (53/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 0.094454672 seconds)
    (54/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 0.182566697 seconds)
    (55/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 0.076662207 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 0.20685893 seconds)
    (57/286) benchmarking ("map", abs, Int64, true)...
    done (took 0.099567088 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 0.124435574 seconds)
    (59/286) benchmarking ("map", identity, BigInt, false)...
    done (took 0.142117169 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 0.19894981 seconds)
    (61/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 0.097303004 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 0.066292695 seconds)
    (63/286) benchmarking ("sort", Int64, false)...
    done (took 0.111150281 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 0.084866209 seconds)
    (65/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 0.117117313 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 0.136815601 seconds)
    (67/286) benchmarking ("sort", Float32, true)...
    done (took 0.228088337 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 0.093285116 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 0.142535242 seconds)
    (70/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 0.195021584 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 0.085145734 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 0.142425253 seconds)
    (73/286) benchmarking ("perf_sum", Int8, false)...
    done (took 0.132290091 seconds)
    (74/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 0.095413946 seconds)
    (75/286) benchmarking ("map", abs, Float32, true)...
    done (took 0.154132015 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 0.107329076 seconds)
    (77/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 0.162748451 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 0.108580768 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 0.204024466 seconds)
    (80/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 0.096577834 seconds)
    (81/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 0.138241147 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 0.066353198 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 0.116010958 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 0.169008313 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 0.067908878 seconds)
    (86/286) benchmarking ("map", abs, Int8, true)...
    done (took 0.075738424 seconds)
    (87/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 0.176768079 seconds)
    (88/286) benchmarking ("perf_countequals", "Float32")...
    done (took 0.116140766 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 0.165859385 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 0.117410703 seconds)
    (91/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 0.177979469 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 0.161334521 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 0.116426725 seconds)
    (94/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 0.138863479 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 0.068304418 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 0.135472702 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 0.071131229 seconds)
    (98/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 0.187340925 seconds)
    (99/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 0.093140917 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 0.120710663 seconds)
    (101/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 0.144264894 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 0.107060704 seconds)
    (103/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 0.135001049 seconds)
    (104/286) benchmarking ("sort", Bool, false)...
    done (took 0.213290012 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 0.096593143 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 0.121163017 seconds)
    (107/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 0.215576998 seconds)
    (108/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 0.083722261 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 0.094208094 seconds)
    (110/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 0.136709781 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 0.114537005 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 0.112783754 seconds)
    (113/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 0.146698206 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 0.164319153 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 0.091103504 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 0.110055984 seconds)
    (117/286) benchmarking ("perf_countequals", "Bool")...
    done (took 0.116578097 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 0.094237552 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 0.108390233 seconds)
    (120/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 0.087046815 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 0.065802939 seconds)
    (122/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 0.093816585 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 0.094819648 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 0.110428636 seconds)
    (125/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 0.065392037 seconds)
    (126/286) benchmarking ("map", identity, Int64, false)...
    done (took 0.14273543 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 0.181391861 seconds)
    (128/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 0.102669647 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 0.145895823 seconds)
    (130/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 0.068600063 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 0.109953074 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 0.086646815 seconds)
    (133/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 0.117216017 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 0.066797604 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 0.191539299 seconds)
    (136/286) benchmarking ("sort", Int8, false)...
    done (took 0.188322358 seconds)
    (137/286) benchmarking ("map", abs, Bool, true)...
    done (took 0.154267756 seconds)
    (138/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 0.068636658 seconds)
    (139/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 0.085046984 seconds)
    (140/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 0.172704249 seconds)
    (141/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 0.080713498 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 0.114586817 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 0.118625749 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 0.095642542 seconds)
    (145/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 0.118333018 seconds)
    (146/286) benchmarking ("map", abs, BigInt, false)...
    done (took 0.121030695 seconds)
    (147/286) benchmarking ("map", identity, Bool, true)...
    done (took 0.150553966 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 0.066118573 seconds)
    (149/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 0.111340234 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 0.068627264 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 0.066047516 seconds)
    (152/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 0.111480805 seconds)
    (153/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 0.067292235 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 0.123381119 seconds)
    (155/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 0.06714905 seconds)
    (156/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 0.11954522 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 0.092121922 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 0.126840744 seconds)
    (159/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 0.067157145 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 0.089899278 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 0.100329383 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 0.109271255 seconds)
    (163/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 0.101395657 seconds)
    (164/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 0.174090793 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 0.186793018 seconds)
    (166/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 0.089860689 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 0.139472071 seconds)
    (168/286) benchmarking ("map", identity, Float32, false)...
    done (took 0.142445176 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 0.157770902 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 0.118880492 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 0.085126988 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 0.112918651 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 0.11598051 seconds)
    (174/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 0.07871031 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 0.086647336 seconds)
    (176/286) benchmarking ("map", abs, Float32, false)...
    done (took 0.090343159 seconds)
    (177/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 0.096574344 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 0.119415025 seconds)
    (179/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 0.110313775 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 0.096008481 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 0.136885724 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 0.106106298 seconds)
    (183/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 0.134203499 seconds)
    (184/286) benchmarking ("map", abs, BigInt, true)...
    done (took 0.077461514 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 0.091683353 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 0.086591483 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 0.303560853 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 0.08697958 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 0.120968931 seconds)
    (190/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 0.067309393 seconds)
    (191/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 0.188029362 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 0.219977325 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 0.084534496 seconds)
    (194/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 0.091259088 seconds)
    (195/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 0.066191231 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 0.134247976 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 0.067352599 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 0.110049129 seconds)
    (199/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 0.089393641 seconds)
    (200/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 0.088967372 seconds)
    (201/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 0.068401159 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 0.133811276 seconds)
    (203/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 0.086919779 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 0.110262888 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 0.097779745 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 0.117567018 seconds)
    (207/286) benchmarking ("sort", Float64, false)...
    done (took 0.147917063 seconds)
    (208/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 0.171003079 seconds)
    (209/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 0.090802607 seconds)
    (210/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 0.066939029 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 0.171016172 seconds)
    (212/286) benchmarking ("map", abs, Float64, false)...
    done (took 0.123015611 seconds)
    (213/286) benchmarking ("sort", BigInt, false)...
    done (took 0.219716278 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 0.123616985 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 0.066680341 seconds)
    (216/286) benchmarking ("sort", BigFloat, true)...
    done (took 0.229406691 seconds)
    (217/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 0.111366758 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 0.092237932 seconds)
    (219/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 0.092208573 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 0.085777997 seconds)
    (221/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 0.089941449 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 0.066981037 seconds)
    (223/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 0.093440565 seconds)
    (224/286) benchmarking ("map", abs, Float64, true)...
    done (took 0.102295052 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 0.100969186 seconds)
    (226/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 0.111141144 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 0.085984035 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 0.091910143 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 0.092146382 seconds)
    (230/286) benchmarking ("map", identity, Int64, true)...
    done (took 0.099010554 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 0.087155997 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 0.108695543 seconds)
    (233/286) benchmarking ("map", identity, Int8, false)...
    done (took 0.066984585 seconds)
    (234/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 0.066521097 seconds)
    (235/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 0.112694606 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 0.092342138 seconds)
    (237/286) benchmarking ("map", identity, Float32, true)...
    done (took 0.099727329 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 0.086135613 seconds)
    (239/286) benchmarking ("map", identity, Float64, false)...
    done (took 0.143689663 seconds)
    (240/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 0.06713714 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 0.11503324 seconds)
    (242/286) benchmarking ("map", abs, Bool, false)...
    done (took 0.067299371 seconds)
    (243/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 0.118241496 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 0.093611743 seconds)
    (245/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 0.066681418 seconds)
    (246/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 0.111823235 seconds)
    (247/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 0.0673995 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 0.119341103 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 0.086151599 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 0.161736525 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 0.10837268 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 0.08877794 seconds)
    (253/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 0.06713692 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 0.1307511 seconds)
    (255/286) benchmarking ("sort", Float32, false)...
    done (took 0.173316999 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 0.0668368 seconds)
    (257/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 0.112189205 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 0.096894631 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 0.119240619 seconds)
    (260/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 0.095310022 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 0.100968881 seconds)
    (262/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 0.086472361 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 0.108397629 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 0.087460596 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 0.109253279 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 0.095178966 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 0.117761047 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 0.091852258 seconds)
    (269/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 0.09137233 seconds)
    (270/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 0.068085547 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 0.123734529 seconds)
    (272/286) benchmarking ("perf_sum", Int8, true)...
    done (took 0.094392154 seconds)
    (273/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 0.135443484 seconds)
    (274/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 0.090059241 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 0.09726748 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 0.08693959 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 0.111756862 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 0.09095138 seconds)
    (279/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 0.091054017 seconds)
    (280/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 0.094001931 seconds)
    (281/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 0.116174353 seconds)
    (282/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 0.066473691 seconds)
    (283/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 0.089590828 seconds)
    (284/286) benchmarking ("map", identity, BigInt, true)...
    done (took 0.077090658 seconds)
    (285/286) benchmarking ("map", identity, Float64, true)...
    done (took 0.076362904 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 0.109932417 seconds)
  done (took 35.97883817 seconds)
done (took 36.90968803 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 0.101719634 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.148053785 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 0.094742625 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 0.135217025 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 0.124076892 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 0.091287501 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 0.118430721 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 0.097235201 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 0.12433406 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 0.124459413 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 0.098237215 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 0.092627693 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 0.096286004 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 0.120704645 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 0.0977206 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.139125576 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 0.12374142 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 0.093616006 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 0.118761139 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 0.086425134 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 0.120741903 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 0.086036832 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 0.112548443 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 0.068990181 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 0.122298358 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 0.093167331 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 0.117519874 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 0.119092637 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 0.08737852 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 0.109537095 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 0.09093592 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 0.117884906 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 0.086652579 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 0.123144917 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 0.094505367 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 0.118721614 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 0.097981098 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 0.121568986 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 0.087636496 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 0.110838006 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 0.117195488 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 0.087606083 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 0.117101695 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 0.096294753 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 0.11535675 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 0.092588128 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 0.118696552 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 0.09920891 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.139797802 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.114538906 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 0.095533666 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 0.120388162 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 0.09591007 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 0.116814119 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 0.090494228 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 0.119475375 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 0.091831536 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.139504131 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 0.119517608 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.092095636 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 0.11740412 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 0.095183046 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 0.115194025 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 0.095555184 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 0.119150105 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 0.119478817 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 0.098935007 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 0.114679698 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 0.096387059 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 0.115735917 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 0.086335578 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 0.118991518 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 0.09008243 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 0.111656116 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 0.096174749 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 0.121796412 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 0.084662014 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 0.116848962 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 0.093084198 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 0.115890488 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 0.109505405 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.091071274 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 0.11124045 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 0.094716956 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.11180108 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 0.070614129 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 0.089284398 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 0.118164502 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 0.085472779 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 0.119378799 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 0.115766466 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 0.094327751 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 0.112549737 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 0.099679444 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 0.11019076 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 0.091583385 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 0.111514453 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 0.087280631 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 0.112601918 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 0.090667104 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 0.111061092 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.089219636 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 0.119340063 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 0.087813163 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 0.117819743 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 0.098969778 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 0.111149125 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 0.116295563 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 0.087405243 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 0.110331863 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 0.102769125 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 0.120559836 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 0.087040169 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.116236605 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 0.086159225 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 0.11907909 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 0.085634413 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 0.111080304 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 0.086552254 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 0.111502219 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 0.092005754 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 0.110758006 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.088445232 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 0.118758156 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 0.123045061 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 0.087188339 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 0.11261884 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 0.090781049 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 0.110039227 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 0.093085611 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 0.110080062 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 0.088362781 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 0.111790813 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 0.078212337 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.112399535 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 0.08846269 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 0.117103455 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 0.090514 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 0.118938634 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 0.089299208 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 0.120071916 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 0.090948397 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 0.11687289 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 0.09180509 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 0.109888166 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 0.074551724 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 0.115181833 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 0.090389609 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 0.112228681 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 0.087959727 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 0.112168304 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 0.08576702 seconds)
done (took 16.94272508 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 0.08917397 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 0.18321472 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 0.151565109 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 0.141208714 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 0.10758329 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 0.112129901 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 0.120504824 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 0.119030757 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 0.113689668 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 0.140816119 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 0.10959361 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 0.132916306 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 0.147231437 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 0.086265208 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 0.11144977 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 0.091134848 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 0.111991821 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 0.101497868 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 0.145129168 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 0.133172186 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 0.163764871 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 0.085756128 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 0.146989982 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 0.134675278 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 0.119284666 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 0.10586797 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 0.111462314 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 0.091474217 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 0.114896016 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 0.112929156 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 0.132028446 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 0.090348075 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 0.112261769 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 0.132511448 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 0.10412814 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 0.120575198 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 0.086507587 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 0.11856408 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 0.085699725 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 0.112156439 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 0.14054931 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 0.131754951 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 0.09479564 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 0.11543554 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 0.091642819 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 0.113130991 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 0.089676591 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 0.120261525 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 0.096912363 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 0.115709844 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 0.125465685 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 0.155238051 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 0.091044748 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 0.1211017 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 0.087175761 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 0.122755697 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 0.119000384 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 0.090826768 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 0.111084052 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 0.090796264 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 0.110301868 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 0.091838827 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 0.126381818 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 0.140688166 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 0.091117537 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 0.120909789 seconds)
  done (took 8.61751807 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 0.105690913 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 0.138497236 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 0.103933034 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 0.129970499 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 0.110535638 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 0.088070357 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 0.111684753 seconds)
  done (took 1.780043487 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 0.089548521 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.132861569 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 0.111044714 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.134991501 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 0.130353396 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 0.108821503 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 0.123315692 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 0.088019055 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 0.131225855 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 0.087850204 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 0.133882261 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 0.150361469 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 0.08911389 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 0.120605645 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 0.13661676 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 0.089376495 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.136276644 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 0.088172421 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 0.116174635 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.111230155 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 0.116283453 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 0.134295994 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 0.090204223 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 0.112251339 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 0.101931261 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 0.114213222 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.160363571 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 0.094189818 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.114523316 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 0.092806641 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.111056418 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 0.165631339 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 0.102242816 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 0.125135036 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086740131 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.128813152 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 0.142512418 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 0.086650043 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 0.129090767 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 0.092882395 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 0.127885966 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 0.08793895 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 0.115275787 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 0.084803531 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 0.118652511 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 0.122246429 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 0.090861802 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 0.112581446 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 0.092141504 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 0.132352958 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 0.089273431 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 0.126609851 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 0.089038146 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 0.117690025 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 0.089487819 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 0.119014458 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 0.12091735 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 0.091454712 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.132398955 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.090666509 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 0.130183401 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 0.10410363 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 0.127739313 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 0.129069727 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 0.091836543 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 0.126245508 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 0.102570336 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 0.117491681 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090209961 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 0.117423416 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 0.128863418 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 0.087889466 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 0.113939134 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 0.100439506 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 0.113476457 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 0.112007901 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 0.137825118 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 0.089071131 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 0.124489668 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 0.112594844 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 0.089242619 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 0.112314543 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 0.112750897 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 0.118043366 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 0.088314611 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 0.120155359 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 0.090880717 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 0.111957946 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 0.087522369 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 0.11796732 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 0.086258574 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 0.11572169 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 0.117590554 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 0.090459689 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 0.116699777 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 0.106397486 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 0.116211237 seconds)
  done (took 11.812728849 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 0.094001675 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 0.113387599 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 0.092861994 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 0.113277741 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 0.090600547 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 0.114540724 seconds)
  done (took 1.617143093 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 0.114558048 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 0.1173486 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 0.103973308 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 0.121475659 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 0.155467963 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 0.10353238 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 0.129316328 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.123465029 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 0.107103212 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 0.125976934 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 0.127508718 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 0.103990093 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 0.135842412 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 0.11973334 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 0.103204408 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 0.120155148 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 0.104285358 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 0.125457591 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 0.126042725 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.095913616 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 0.136525595 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 0.119356402 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.096675653 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 0.132627306 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 0.116196652 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 0.095914708 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.124135711 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 0.102467197 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 0.127788969 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 0.121954782 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 0.09747273 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 0.117010119 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 0.094675846 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 0.123950553 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 0.129551481 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 0.095427483 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120880488 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 0.117550515 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 0.100582959 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 0.116651082 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 0.103798762 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 0.122328197 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 0.125910989 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 0.09431521 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 0.123222727 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 0.119657783 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 0.09559725 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 0.124413023 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 0.103103297 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 0.119720535 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 0.11799704 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 0.095560156 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 0.117211769 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 0.093624428 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 0.120874201 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.121275579 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 0.094343907 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 0.128911233 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 0.094266899 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 0.121359713 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 0.117775507 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 0.093780525 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.123142607 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 0.115687544 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 0.104661035 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 0.118498277 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 0.096109946 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 0.121351337 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 0.120189076 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 0.096357459 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 0.118284224 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 0.092167402 seconds)
  done (took 9.207566451 seconds)
done (took 34.024679401 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 0.688599135 seconds)
  done (took 1.684362196 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 0.821584357 seconds)
  done (took 1.818162666 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 15.993852701 seconds)
  done (took 17.020410522 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 0.494459996 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 0.58006557 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 0.994778032 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 0.180808251 seconds)
  done (took 3.248776833 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 0.945337186 seconds)
  done (took 1.959694782 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 0.283049883 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 0.23045238 seconds)
  done (took 1.513780488 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 0.772832003 seconds)
  done (took 1.785052583 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 1.386718432 seconds)
  done (took 2.388807451 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 0.326288288 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 0.182668718 seconds)
  done (took 1.51861232 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 0.54895223 seconds)
  done (took 1.558566854 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 6.735112007 seconds)
  done (took 7.748878313 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 0.268814797 seconds)
  done (took 1.291913409 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 0.302081035 seconds)
  done (took 1.317035732 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 3.330832823 seconds)
  done (took 4.346537253 seconds)
done (took 50.207765632 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 0.100097115 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 0.125338213 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 0.10207088 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 0.122674002 seconds)
  done (took 1.459072779 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 0.101278278 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 0.119937113 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 0.100340258 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 0.121048519 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 0.124295264 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 0.097150946 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 0.121574241 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 0.101290968 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 0.120713377 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 0.095320168 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 0.120336579 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 0.118076468 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 0.098998813 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 0.121459854 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 0.092644976 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 0.123931373 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 0.098705266 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 0.121441943 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 0.123585861 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 0.095899249 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 0.118865185 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 0.098099717 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 0.124573481 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 0.093422856 seconds)
  done (took 3.670237067 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 0.100509536 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 0.117416178 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 0.096705485 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 0.117562504 seconds)
  done (took 1.46039854 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 0.101104832 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 0.129842231 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 0.106081782 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 0.124934072 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 0.129010156 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 0.105543357 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 0.115925871 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 0.092826176 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 0.118971868 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 0.099920805 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 0.11530655 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 0.113183705 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 0.13135332 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 0.124065893 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 0.101952008 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 0.114233153 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 0.091495641 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 0.131367707 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 0.12319127 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 0.101825647 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 0.116755177 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 0.100259456 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 0.114805022 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 0.10913982 seconds)
  done (took 3.736685719 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 0.170497886 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 0.127039649 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 0.136912868 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 0.095337817 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 0.159540342 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 0.139445094 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 0.089248264 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 0.139753114 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 0.087487238 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 0.130936552 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 0.116104648 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 0.135043834 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 0.127808106 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 0.087196776 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 0.113908878 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 0.08682711 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 0.128719588 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 0.126891107 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 0.090991509 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 0.126583147 seconds)
  done (took 3.448982517 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 0.098555812 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 0.115453566 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 0.088376528 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 0.115099865 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 0.099734346 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 0.119923781 seconds)
  done (took 1.667061612 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 0.091477489 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 0.112730921 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 0.091135118 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 0.113489903 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 0.095090635 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 0.113688133 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 0.089275892 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 0.113309201 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 0.090544021 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 0.113303262 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 0.090606354 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 0.11518122 seconds)
  done (took 2.259294526 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 0.498258719 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 0.12025245 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 0.118867163 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 0.089993915 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 0.120053624 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 0.090319821 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 0.128740414 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 0.093064317 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 0.141500856 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 0.08911863 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 0.115704112 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 0.090120182 seconds)
  done (took 2.724303653 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.233517046 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.125711337 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.284983975 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.363414778 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157112872 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.177406832 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.281408118 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164946673 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 0.225185199 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.166529789 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201511696 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.221174663 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15184362 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.189228235 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137961742 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 0.144061014 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.204930259 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.245382036 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153115784 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.207128077 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.226527705 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.166401649 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.179216236 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.150903268 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13670879 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171382403 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 0.093431718 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.12892147 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.232231193 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174250438 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.212714306 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.161411484 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 0.145322326 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.209680319 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.25182818 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.219269837 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.280188558 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.136398071 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 0.14753984 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 0.167716724 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.265100953 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.138169992 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227353053 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.128801674 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.129807445 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.21511751 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168017003 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 0.176366235 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 0.151338014 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.136883662 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.196528231 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.239470712 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 0.191161766 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137305975 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.300779973 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.148995254 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 0.19841869 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.193391527 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.250312624 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.199538844 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.212580665 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 0.095549499 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.212097622 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193424788 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185627299 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 0.175104117 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 0.206089107 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.14681384 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.19928951 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.1877411 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.163625513 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.219088515 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 0.184575489 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.140502701 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167991207 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.170398658 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.195364368 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.22931481 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.211335975 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 0.095624093 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.16814538 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148803507 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133285059 seconds)
    (84/481) benchmarking "5d"...
    done (took 0.192536107 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.098310752 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.237311355 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.142534008 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 0.161439423 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215497787 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.159487733 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159949656 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.227039421 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.202883073 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.148222014 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 0.084301733 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.153563627 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 0.154578418 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.218520557 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.113218915 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.159262178 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.160181303 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 0.130508113 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184695679 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 0.124433462 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183749859 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 0.116943529 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173545816 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.181979349 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 0.126919936 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.159171147 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.150689191 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 0.125441017 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.199959298 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.19793665 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141590714 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.131400984 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.208858438 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177135118 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 0.150092327 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.176797112 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 0.224604323 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 0.116791949 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149516181 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.225027544 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.240519151 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.114210413 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.225583138 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.154986647 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.107414852 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 0.131305034 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.180400779 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.1544286 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 0.161509597 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133656845 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 0.183450553 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.232721631 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 0.098039687 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.137795028 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.191075188 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 0.132087918 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.131583038 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162981373 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148167152 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 0.137368254 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 0.124789992 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 0.152327208 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.209477228 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1774913 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.153305695 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.164768007 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152719963 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.252878161 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.139959397 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 0.123243316 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.146984094 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 0.11896828 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 0.191861107 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.223312163 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.10503374 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230875086 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 0.172699395 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.203819488 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195297757 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108515196 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.175059272 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.129168166 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 0.092311855 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.219312598 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 0.167104057 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.161158949 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 0.194765245 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.224647523 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 0.183007057 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 0.20572072 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173890934 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.173481463 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 0.164588112 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.156130704 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 0.110784282 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.160287241 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.194849764 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 0.097405193 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 0.144154248 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 0.132848766 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.14653395 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.115690932 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.133022262 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221592829 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.171125056 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189538146 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.159990444 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149071708 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.180001042 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 0.127990271 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.173669914 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 0.175793444 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.148280877 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 0.223372135 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194741407 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185605433 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.143001836 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224704836 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 0.095297173 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.124267256 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 0.115904366 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.195146822 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.107231444 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.134414224 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162307436 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.181310366 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.179306369 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.202868484 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.210547485 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.198234192 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.189146554 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 0.095802922 seconds)
    (217/481) benchmarking "4d"...
    done (took 0.16755774 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184215176 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.201351805 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 0.166150986 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.141869837 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 0.150724517 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.178236403 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.158033967 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.254300808 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168130736 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.174895107 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234831476 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 0.149778758 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.104726481 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.151391322 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.217908894 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.153333946 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.175959039 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.120289453 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.14093459 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.161067566 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 0.132779243 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 0.159517526 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.183429941 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.161508647 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.216550926 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 0.149278827 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.18556448 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.126680511 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.162964753 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.158628312 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164933225 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 0.081071347 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174204648 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.232480521 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.147639902 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.169562418 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.188322895 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.131645462 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 0.306218607 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.244089027 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.194310241 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.13754892 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.155359543 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.160657565 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.164781929 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.1717602 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.177963666 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.158436156 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.185693014 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.158131374 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 0.136858375 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.139690268 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.122318943 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.150301223 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 0.131350519 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 0.147308999 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 0.176118655 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 0.138916635 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185930205 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.162072365 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.158268011 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.17054825 seconds)
    (280/481) benchmarking "3d"...
    done (took 0.149166375 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 0.143361282 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149659931 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.215329861 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.182881 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.23679162 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 0.151057098 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 0.180334627 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.23397011 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.099124394 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.13148907 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 0.132257174 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.177609706 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.109583715 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.22027276 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 0.187784002 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.230696521 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.185153645 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.193780609 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.139664773 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 0.118189046 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155413057 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173896323 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.207428706 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.152711567 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 0.158910771 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.230797096 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 0.11951781 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.132380325 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.177908091 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.314932918 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.120125392 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.224008843 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 0.080750081 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.280693494 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.127519637 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130426201 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.137197598 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.234532429 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 0.136603782 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 0.188353547 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.174229819 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.170262519 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.164325728 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.149914696 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.190829185 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.243788366 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200267997 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.205028479 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 0.106089222 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155836734 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.175254535 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.219523463 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157722608 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 0.111748992 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.230737005 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.195732909 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 0.221555702 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 0.114715509 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.167645239 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193743861 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.130687441 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.214403544 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.132666552 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208610079 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133393988 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.193786313 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.152906651 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.143706956 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.174900025 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 0.214063407 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.116260642 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.216695338 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184828456 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.134796593 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 0.106300949 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.195538543 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.180109416 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.156556168 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 0.099470682 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.208489199 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 0.097360554 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.220085185 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.257265866 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.108448039 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.154945423 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.147229222 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 0.13492234 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.15343803 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157311719 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.112155642 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 0.164560403 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.204232808 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 0.135158348 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.216664236 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.203059172 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.170504498 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.200566909 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.117654507 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 0.691463627 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 0.131181593 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.193772178 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.159237852 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.234919983 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.150559462 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.173699404 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.157905299 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.168764888 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.195795221 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.160176531 seconds)
    (390/481) benchmarking "6d"...
    done (took 0.231890484 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.220835362 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 0.17793624 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.130957807 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.15781105 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.163634878 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 0.142805444 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.124210286 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.194079244 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.132813185 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 0.15401635 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 0.205011952 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.172956915 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 0.132912134 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.113616427 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.225612928 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.13252447 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.210506396 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.179699571 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.136442711 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.171813347 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.187385278 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.133896109 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 0.18038538 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237128473 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.139983929 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.12402645 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 0.134057445 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 0.156168664 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.261741994 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 0.12343464 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.205116369 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.184561343 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.15822994 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.169368134 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 0.14609075 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.221078615 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.157559836 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.185161566 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.146088117 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 0.159756671 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.155816852 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 0.136739944 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 0.102386618 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 0.15606313 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.167905003 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 0.149672622 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 0.158269143 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 0.165340993 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.197205304 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 0.122913111 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.117447092 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.313381634 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.196275493 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.244195206 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 0.10733329 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.134744288 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.163516327 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.151703622 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 0.176810476 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.178669417 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 0.134373362 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.135842312 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 0.135402973 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 0.130688676 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 0.138919297 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 0.129566429 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 0.223838603 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.166029032 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.208049654 seconds)
    (460/481) benchmarking "2d"...
    done (took 0.135901674 seconds)
    (461/481) benchmarking "7d"...
    done (took 0.278870637 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 0.112304079 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 0.155073165 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 0.116112947 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 0.105941791 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.15036472 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.146493716 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.157528571 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 0.217340214 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 0.237869926 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 0.147689067 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 0.134794148 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 0.150462618 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 0.097674254 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.136329126 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 0.164770403 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.164927859 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 0.177481846 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 0.145008123 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 0.079725947 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 0.156227133 seconds)
  done (took 83.076412001 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.162549551 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 0.132199734 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 0.148275207 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 0.202888161 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.176666861 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.267745782 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 0.210336864 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 0.254400671 seconds)
  done (took 2.672072833 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 0.09444828 seconds)
    (2/17) benchmarking "4467"...
    done (took 0.14601806 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 0.156495122 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 0.132859786 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 0.091850934 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 0.117902287 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 0.347773568 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 0.135524796 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 0.117311652 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 0.122642107 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 0.1721665 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 0.094517979 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 0.550658479 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 0.091685408 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 0.118556652 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 0.107852021 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 0.092940061 seconds)
  done (took 3.801459101 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 0.474639603 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 0.68524081 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 0.514525028 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 0.097355475 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 3.993020411 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 0.112849016 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 4.420275081 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 0.194153738 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 0.115590705 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 0.465340306 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 5.775007439 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 0.159331518 seconds)
  done (took 18.129602628 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 0.115978058 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 0.13473866 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 0.123383856 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 0.151524426 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 0.139415198 seconds)
  done (took 1.789187077 seconds)
done (took 130.903697666 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 0.107427335 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 0.404132189 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 0.070777115 seconds)
  done (took 1.630081222 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 0.108026732 seconds)
    (2/4) benchmarking "Float32"...
    done (took 0.135297722 seconds)
    (3/4) benchmarking "Float64"...
    done (took 0.108835363 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 0.135285107 seconds)
  done (took 1.614961083 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 0.099284257 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.124491735 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 0.108457726 seconds)
  done (took 1.454544985 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 0.321544078 seconds)
  (6/14) benchmarking "18129"...
  done (took 0.187300223 seconds)
  (7/14) benchmarking "20517"...
  done (took 0.169072927 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 0.106974393 seconds)
    (2/3) benchmarking "Float64"...
    done (took 0.126979573 seconds)
    (3/3) benchmarking "Float16"...
    done (took 0.103363269 seconds)
  done (took 1.45974575 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 0.098019772 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 0.127177169 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 0.098667442 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 0.128758216 seconds)
  done (took 1.57830444 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 0.094842539 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 0.070515952 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 0.099111119 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 0.074714532 seconds)
  done (took 1.45894858 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 0.114743574 seconds)
    (2/3) benchmarking "Int"...
    done (took 0.129893776 seconds)
    (3/3) benchmarking "Float64"...
    done (took 0.104105259 seconds)
  done (took 1.476242213 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 0.129550591 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 0.138059374 seconds)
  done (took 1.394746202 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 0.106050114 seconds)
  done (took 1.227319204 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 0.118201034 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 0.168239117 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 0.178685437 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 0.159227411 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 0.202066067 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 0.158679622 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 0.142137404 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 0.136869098 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 0.126235436 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 0.138548183 seconds)
  done (took 2.655366153 seconds)
done (took 17.856542818 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.103902764 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 1.510562919 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.384693842 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.144295163 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.721883737 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.381131846 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 1.05219827 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.143663954 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.16327407 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.093293798 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.137173805 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.671173947 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 1.007421884 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 1.466678449 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.970531515 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 1.365831049 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.675565603 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.120858149 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.116768741 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.094217259 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 1.037666344 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.092385504 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120396319 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.09132609 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.70212939 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.423157946 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.095373249 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 1.369486955 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.092201953 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.124237004 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.382884803 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.120679907 seconds)
  done (took 17.092537193 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.095064198 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.1703479 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.097632401 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.136971381 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.121642398 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.094509403 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.122030167 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.092972916 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.176735987 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.121500757 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.110333866 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.119657871 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.123388457 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.095910625 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.140002807 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.092155524 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.123321602 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.091738808 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.120111866 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.118961232 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.11155219 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.118326684 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.094534081 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.1193665 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.094605277 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.133672291 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.093296487 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.119643152 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.118356116 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.098310035 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.125216655 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.094273972 seconds)
  done (took 4.815613383 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 0.141308797 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 0.180922098 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 0.125996776 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 0.126645281 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 0.167105025 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 0.122092963 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 0.196150363 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 0.117448689 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 0.181161081 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 0.123248385 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 0.136735394 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 0.092626988 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 0.154436691 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 0.09398874 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 0.14159766 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 0.118142122 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 0.096261544 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 0.119352274 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 0.091526597 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 0.121495021 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 0.137228735 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 0.09355748 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 0.120083946 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 0.093392653 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 0.12183779 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 0.107278918 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 0.122280239 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 0.117644526 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 0.093717222 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 0.125352951 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 0.099845953 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 0.122307701 seconds)
  done (took 5.140028301 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 0.097639549 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 0.123732696 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 0.109849191 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 0.135844037 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 0.094781792 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 0.124318098 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 0.096577242 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 0.123231888 seconds)
  done (took 2.040989069 seconds)
done (took 30.210647964 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 0.11070173 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 0.124775368 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 0.107659372 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 0.132415576 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 0.102229415 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 0.130633428 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 0.090493635 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 0.135226677 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 0.131677575 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 0.102840931 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 0.134967836 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 0.09229945 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 0.121712292 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 0.091555604 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 0.133607497 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 0.09772358 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 0.13063042 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 0.100768391 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 0.131440191 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 0.130225314 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 0.095240857 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 0.131421365 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 0.10298694 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 0.130706043 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 0.104459594 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 0.132096709 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 0.135734009 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 0.099925412 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 0.121273186 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 0.094862439 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 0.121977836 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 0.103965251 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 0.122078979 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 0.105191617 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 0.124849911 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 0.097165612 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 0.122174728 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 0.094741803 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 0.131620301 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 0.129659643 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 0.100173947 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 0.131828652 seconds)
  done (took 5.993803071 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 0.108314028 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 0.138464513 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 0.1049325 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 0.080220245 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 0.114808963 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 0.080328984 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 0.135524126 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 0.078404353 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 0.107204126 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 0.108408866 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 0.073236221 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 0.104815484 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 0.078177134 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 0.098976312 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 0.07777122 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 0.07450333 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 0.106003081 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 0.076038836 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 0.075851125 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 0.103672688 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 0.080253632 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 0.071716635 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 0.105960167 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 0.0794397 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 0.074422947 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 0.107994681 seconds)
  done (took 3.583756597 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 0.101223693 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 0.132248599 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 0.113721476 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.181895881 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 0.158936523 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 0.099858038 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 0.130545588 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 0.10940648 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 0.137118347 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 0.117080025 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 0.096691163 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 0.146754652 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 0.109284249 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 0.128149336 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 0.090885257 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 0.134535352 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 0.131986453 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 0.093953701 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 0.126352157 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.112878702 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 0.135635861 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 0.102211094 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 0.138634987 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 0.129058321 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 0.092897866 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.119714531 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 0.096733464 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 0.132538111 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 0.09835178 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 0.129607134 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 0.096609697 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 0.123289738 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 0.120037838 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 0.105144333 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 0.123092433 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 0.093570527 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 0.139220687 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 0.102090101 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 0.129448355 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 0.091821364 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 0.128773323 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 0.118601058 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 0.11460339 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 0.159571385 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 0.092279762 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 0.127233465 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 0.094281662 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 0.131291585 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 0.117915285 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 0.111503004 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 0.129564458 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 0.091786517 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 0.12360608 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 0.091649415 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 0.119863724 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.10583986 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 0.121895624 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 0.094305212 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 0.12996767 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 0.123462895 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 0.106764116 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 0.12257901 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.108992356 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 0.119110634 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 0.099869533 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 0.119507673 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 0.091859284 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 0.118449418 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 0.113140145 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 0.122723192 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 0.159208426 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 0.09296039 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 0.121760358 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 0.101318161 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 0.128234809 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 0.12543496 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 0.09405658 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134742649 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 0.10247067 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 0.122499082 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 0.101679927 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 0.12437374 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 0.095375602 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 0.139179885 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 0.093977689 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 0.12244255 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 0.092640624 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 0.12720175 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 0.121846669 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 0.094205712 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 0.134114054 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 0.091529003 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 0.123583063 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 0.110406817 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 0.120030182 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 0.093667077 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 0.127329374 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 0.123947702 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 0.092409686 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 0.134224465 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 0.09769062 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 0.120898853 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 0.102241207 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 0.120709173 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 0.09449218 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 0.130542069 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 0.123212114 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 0.092080074 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 0.124295522 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 0.099815502 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 0.120689614 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 0.094223363 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 0.12342869 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 0.094202118 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 0.130589912 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 0.098502844 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 0.125870893 seconds)
  done (took 14.691554205 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 0.228004269 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 0.213969202 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 0.231664902 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 0.261804185 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 0.134263032 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 0.142708638 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 0.209286538 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 0.125042695 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 0.121952937 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 0.157658487 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 0.173630195 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 0.178041367 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 0.165822849 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 0.176129566 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 0.169029687 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 0.093158098 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 0.140990688 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 0.161588403 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 0.214192721 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 0.255358679 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 0.141953456 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 0.099637092 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 0.159294615 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 0.157706183 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 0.135455311 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 0.129854393 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 0.109915042 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 0.134680843 seconds)
  done (took 5.778886892 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 0.108662532 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 0.153896688 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 0.097898709 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 0.144124855 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 0.14670913 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 0.095208599 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 0.12624059 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 0.093621121 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 0.133089563 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 0.133232759 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 0.093465914 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 0.1269823 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 0.099954512 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 0.130411264 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 0.11954928 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 0.103152575 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 0.129350857 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 0.094326595 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 0.123890706 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 0.096433761 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 0.132671963 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 0.101508181 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 0.12516143 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 0.091470307 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 0.130926417 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 0.118477907 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 0.087952259 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 0.141060986 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 0.091703615 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 0.142506915 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 0.117789122 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 0.101421564 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 0.13425428 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 0.09421695 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 0.120327905 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 0.093859018 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 0.123219401 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 0.094054629 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 0.122203735 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 0.091579731 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 0.119723734 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 0.077123128 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 0.119488009 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 0.106710947 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 0.12741425 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 0.080451884 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 0.12757443 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 0.097240645 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 0.122973146 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 0.117391884 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 0.097936527 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 0.122902895 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 0.096957809 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 0.128028965 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 0.095946712 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 0.121255863 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 0.096803459 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 0.112733727 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 0.101253845 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 0.122275851 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 0.084693775 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 0.117476606 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 0.099322453 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 0.114993074 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 0.102059152 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 0.125321948 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 0.092448868 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 0.123556212 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 0.096862236 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 0.127339031 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 0.094903248 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 0.127299987 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 0.090498168 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 0.123993873 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 0.094926058 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 0.126758571 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 0.095564647 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 0.120616473 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 0.091693894 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 0.121627374 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 0.074292243 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 0.121427165 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 0.074274098 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 0.123212878 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 0.0919445 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 0.119703114 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 0.095227823 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 0.128312039 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 0.135915901 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 0.095814675 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 0.129826318 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 0.095025367 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 0.119105814 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 0.095798825 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 0.110432295 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 0.095826429 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 0.137210119 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 0.137763229 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 0.094055524 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 0.118813721 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 0.108108817 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 0.124036869 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 0.093246864 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 0.102857284 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 0.101891616 seconds)
  done (took 12.852643943 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 0.127767486 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 0.150843509 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 0.094514781 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 0.139630913 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 0.153859936 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 0.15505195 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 0.102238524 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 0.128432195 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 0.096241101 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 0.139369481 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 0.0930793 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 0.128871838 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 0.09338189 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 0.13610367 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 0.153198769 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 0.104924335 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 0.12253701 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 0.107883279 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 0.125663219 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 0.16568993 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 0.111825182 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 0.140417001 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 0.109666347 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 0.12292992 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 0.097508184 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 0.139293788 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 0.15827123 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 0.107068207 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 0.13500332 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 0.139604496 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 0.109117896 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 0.158043025 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 0.111885675 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 0.125807815 seconds)
  done (took 5.453509998 seconds)
done (took 49.487615265 seconds)
RUNNING BENCHMARKS...
(1/20) benchmarking "shootout"...
  (1/12) benchmarking "k_nucleotide"...
  done (took 6.254542713 seconds)
  (2/12) benchmarking "fasta"...
  done (took 1.467346468 seconds)
  (3/12) benchmarking "spectralnorm"...
  done (took 6.226226812 seconds)
  (4/12) benchmarking "revcomp"...
  done (took 3.127646481 seconds)
  (5/12) benchmarking "pidigits"...
  done (took 6.22836305 seconds)
  (6/12) benchmarking "binary_trees"...
  done (took 6.2580536 seconds)
  (7/12) benchmarking "nbody"...
  done (took 2.237272446 seconds)
  (8/12) benchmarking "regex_dna"...
  done (took 6.225422423 seconds)
  (9/12) benchmarking "meteor_contest"...
  done (took 7.785721456 seconds)
  (10/12) benchmarking "mandelbrot"...
  done (took 6.223747104 seconds)
  (11/12) benchmarking "fannkuch"...
  done (took 2.489311781 seconds)
  (12/12) benchmarking "nbody_vec"...
  done (took 4.777303382 seconds)
done (took 60.457062423 seconds)
(2/20) benchmarking "string"...
  (1/5) benchmarking "join"...
  done (took 6.298429924 seconds)
  (2/5) benchmarking "findfirst"...
    (1/2) benchmarking "Char"...
    done (took 1.359546549 seconds)
    (2/2) benchmarking "String"...
    done (took 1.491873516 seconds)
  done (took 4.002553493 seconds)
  (3/5) benchmarking "replace"...
  done (took 2.569418431 seconds)
  (4/5) benchmarking "readuntil"...
    (1/7) benchmarking "no backtracking"...
    done (took 5.111939475 seconds)
    (2/7) benchmarking "target length 1000"...
    done (took 1.488455721 seconds)
    (3/7) benchmarking "backtracking"...
    done (took 6.224447976 seconds)
    (4/7) benchmarking "barbarian backtrack"...
    done (took 6.22572774 seconds)
    (5/7) benchmarking "target length 50000"...
    done (took 2.521032912 seconds)
    (6/7) benchmarking "target length 1"...
    done (took 2.79675816 seconds)
    (7/7) benchmarking "target length 2"...
    done (took 2.473895328 seconds)
  done (took 27.99257442 seconds)
  (5/5) benchmarking "repeat"...
    (1/4) benchmarking "repeat char 2"...
    done (took 1.235197552 seconds)
    (2/4) benchmarking "repeat str len 16"...
    done (took 1.305895304 seconds)
    (3/4) benchmarking "repeat str len 1"...
    done (took 1.251523355 seconds)
    (4/4) benchmarking "repeat char 1"...
    done (took 1.233686952 seconds)
  done (took 6.178280687 seconds)
done (took 48.193510826 seconds)
(3/20) benchmarking "linalg"...
  (1/4) benchmarking "factorization"...
    (1/32) benchmarking ("eigen", "Matrix", 256)...
    done (took 6.241877525 seconds)
    (2/32) benchmarking ("svd", "Bidiagonal", 1024)...
    done (took 6.283922795 seconds)
    (3/32) benchmarking ("schur", "Matrix", 256)...
    done (took 6.273032501 seconds)
    (4/32) benchmarking ("svd", "Diagonal", 256)...
    done (took 6.204728567 seconds)
    (5/32) benchmarking ("lu", "Tridiagonal", 256)...
    done (took 1.330595158 seconds)
    (6/32) benchmarking ("svd", "UpperTriangular", 256)...
    done (took 6.252329077 seconds)
    (7/32) benchmarking ("svd", "UpperTriangular", 1024)...
    done (took 6.464020239 seconds)
    (8/32) benchmarking ("schur", "Matrix", 1024)...
    done (took 6.232735104 seconds)
    (9/32) benchmarking ("eigen", "LowerTriangular", 256)...
    done (took 6.247848792 seconds)
    (10/32) benchmarking ("svd", "Diagonal", 1024)...
    done (took 6.221073576 seconds)
    (11/32) benchmarking ("qr", "Matrix", 256)...
    done (took 6.227094425 seconds)
    (12/32) benchmarking ("eigen", "Bidiagonal", 256)...
    done (took 6.226317673 seconds)
    (13/32) benchmarking ("svd", "LowerTriangular", 256)...
    done (took 6.231363207 seconds)
    (14/32) benchmarking ("svd", "LowerTriangular", 1024)...
    done (took 6.511389259 seconds)
    (15/32) benchmarking ("eigen", "Diagonal", 1024)...
    done (took 6.241254963 seconds)
    (16/32) benchmarking ("lu", "Matrix", 256)...
    done (took 6.230146891 seconds)
    (17/32) benchmarking ("eigen", "LowerTriangular", 1024)...
    done (took 6.317145631 seconds)
    (18/32) benchmarking ("eigen", "Matrix", 1024)...
    done (took 6.703285634 seconds)
    (19/32) benchmarking ("lu", "Tridiagonal", 1024)...
    done (took 1.593260618 seconds)
    (20/32) benchmarking ("svd", "Matrix", 256)...
    done (took 6.254901629 seconds)
    (21/32) benchmarking ("lu", "Matrix", 1024)...
    done (took 6.255630923 seconds)
    (22/32) benchmarking ("qr", "Matrix", 1024)...
    done (took 6.265012238 seconds)
    (23/32) benchmarking ("eigen", "Bidiagonal", 1024)...
    done (took 6.260033444 seconds)
    (24/32) benchmarking ("svd", "Bidiagonal", 256)...
    done (took 6.226994482 seconds)
    (25/32) benchmarking ("eigen", "UpperTriangular", 1024)...
    done (took 6.257401113 seconds)
    (26/32) benchmarking ("eigen", "UpperTriangular", 256)...
    done (took 6.239380764 seconds)
    (27/32) benchmarking ("cholesky", "Matrix", 256)...
    done (took 6.238449422 seconds)
    (28/32) benchmarking ("cholesky", "Matrix", 1024)...
    done (took 6.239424468 seconds)
    (29/32) benchmarking ("eigen", "Diagonal", 256)...
    done (took 4.294412832 seconds)
    (30/32) benchmarking ("eigen", "SymTridiagonal", 256)...
    done (took 6.234326401 seconds)
    (31/32) benchmarking ("eigen", "SymTridiagonal", 1024)...
    done (took 6.333154945 seconds)
    (32/32) benchmarking ("svd", "Matrix", 1024)...
    done (took 6.652790343 seconds)
  done (took 190.937986902 seconds)
  (2/4) benchmarking "blas"...
    (1/36) benchmarking "ger!"...
    done (took 6.227987994 seconds)
    (2/36) benchmarking "gbmv!"...
    done (took 3.02563821 seconds)
    (3/36) benchmarking "gbmv"...
    done (took 3.107025557 seconds)
    (4/36) benchmarking "gemm!"...
    done (took 6.276021134 seconds)
    (5/36) benchmarking "gemv!"...
    done (took 3.603641215 seconds)
    (6/36) benchmarking "blascopy!"...
    done (took 2.424472014 seconds)
    (7/36) benchmarking "scal!"...
    done (took 2.362849769 seconds)
    (8/36) benchmarking "gemv"...
    done (took 3.648375357 seconds)
    (9/36) benchmarking "syr!"...
    done (took 6.248739347 seconds)
    (10/36) benchmarking "trsm!"...
    done (took 6.228925867 seconds)
    (11/36) benchmarking "trsv!"...
    done (took 2.41813554 seconds)
    (12/36) benchmarking "her!"...
    done (took 6.228829758 seconds)
    (13/36) benchmarking "trsv"...
    done (took 2.491291983 seconds)
    (14/36) benchmarking "dot"...
    done (took 2.220401391 seconds)
    (15/36) benchmarking "dotu"...
    done (took 2.257179722 seconds)
    (16/36) benchmarking "herk!"...
    done (took 6.325169999 seconds)
    (17/36) benchmarking "trmv"...
    done (took 2.423068308 seconds)
    (18/36) benchmarking "symv"...
    done (took 2.520623577 seconds)
    (19/36) benchmarking "dotc"...
    done (took 2.275508922 seconds)
    (20/36) benchmarking "axpy!"...
    done (took 2.376064404 seconds)
    (21/36) benchmarking "syrk!"...
    done (took 6.244012972 seconds)
    (22/36) benchmarking "sbmv"...
    done (took 3.273366428 seconds)
    (23/36) benchmarking "sbmv!"...
    done (took 3.199826988 seconds)
    (24/36) benchmarking "symv!"...
    done (took 2.402242613 seconds)
    (25/36) benchmarking "symm"...
    done (took 6.257425607 seconds)
    (26/36) benchmarking "herk"...
    done (took 6.233772843 seconds)
    (27/36) benchmarking "syrk"...
    done (took 6.247561799 seconds)
    (28/36) benchmarking "trsm"...
    done (took 6.232297466 seconds)
    (29/36) benchmarking "asum"...
    done (took 2.417518552 seconds)
    (30/36) benchmarking "trmv!"...
    done (took 2.34891359 seconds)
    (31/36) benchmarking "gemm"...
    done (took 6.275023638 seconds)
    (32/36) benchmarking "symm!"...
    done (took 6.251823537 seconds)
    (33/36) benchmarking "scal"...
    done (took 1.773750697 seconds)
    (34/36) benchmarking "nrm2"...
    done (took 2.089812618 seconds)
    (35/36) benchmarking "trmm!"...
    done (took 6.231424013 seconds)
    (36/36) benchmarking "trmm"...
    done (took 6.252020219 seconds)
  done (took 149.574503071 seconds)
  (3/4) benchmarking "small exp #29116"...
  done (took 1.272825818 seconds)
  (4/4) benchmarking "arithmetic"...
    (1/114) benchmarking ("*", "Diagonal", "Diagonal", 1024)...
    done (took 1.228217212 seconds)
    (2/114) benchmarking ("\\", "Bidiagonal", "Vector", 256)...
    done (took 1.229021711 seconds)
    (3/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.228852269 seconds)
    (4/114) benchmarking ("-", "Matrix", "Matrix", 256)...
    done (took 1.256211131 seconds)
    (5/114) benchmarking ("\\", "Diagonal", "Vector", 256)...
    done (took 1.22850235 seconds)
    (6/114) benchmarking ("+", "Matrix", "Matrix", 1024)...
    done (took 1.727647536 seconds)
    (7/114) benchmarking ("cumsum!", Float32, 256)...
    done (took 1.232550089 seconds)
    (8/114) benchmarking ("sqrt", "NPDUpperTriangular", 256)...
    done (took 1.712846784 seconds)
    (9/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.72863771 seconds)
    (10/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 1024)...
    done (took 21.361275293 seconds)
    (11/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 7.355700347 seconds)
    (12/114) benchmarking ("cumsum!", Float64, 1024)...
    done (took 1.233714628 seconds)
    (13/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.452230308 seconds)
    (14/114) benchmarking ("*", "SymTridiagonal", "Vector", 256)...
    done (took 1.232983449 seconds)
    (15/114) benchmarking ("/", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.321271244 seconds)
    (16/114) benchmarking ("*", "UpperTriangular", "Vector", 1024)...
    done (took 1.243514074 seconds)
    (17/114) benchmarking ("*", "UpperTriangular", "Vector", 256)...
    done (took 1.231400139 seconds)
    (18/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 256)...
    done (took 1.246515695 seconds)
    (19/114) benchmarking ("*", "Matrix", "Vector", 1024)...
    done (took 1.273469945 seconds)
    (20/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.231955563 seconds)
    (21/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.230742855 seconds)
    (22/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.730673182 seconds)
    (23/114) benchmarking ("*", "LowerTriangular", "Vector", 1024)...
    done (took 1.242088985 seconds)
    (24/114) benchmarking ("sqrt", "UpperTriangular", 1024)...
    done (took 21.209364847 seconds)
    (25/114) benchmarking ("*", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.395480181 seconds)
    (26/114) benchmarking ("+", "Vector", "Vector", 256)...
    done (took 1.2479629 seconds)
    (27/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.258677527 seconds)
    (28/114) benchmarking ("sqrt", "UpperTriangular", 256)...
    done (took 1.616569078 seconds)
    (29/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.231169907 seconds)
    (30/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259154696 seconds)
    (31/114) benchmarking ("/", "Matrix", "Matrix", 256)...
    done (took 1.549662002 seconds)
    (32/114) benchmarking ("*", "Bidiagonal", "Vector", 256)...
    done (took 1.276790294 seconds)
    (33/114) benchmarking ("-", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.231013464 seconds)
    (34/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.540226822 seconds)
    (35/114) benchmarking ("/", "Matrix", "Matrix", 1024)...
    done (took 12.137895244 seconds)
    (36/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.342765283 seconds)
    (37/114) benchmarking ("\\", "SymTridiagonal", "Vector", 1024)...
    done (took 1.232475579 seconds)
    (38/114) benchmarking ("-", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.259973676 seconds)
    (39/114) benchmarking ("-", "Vector", "Vector", 1024)...
    done (took 1.230614389 seconds)
    (40/114) benchmarking ("\\", "Matrix", "Matrix", 256)...
    done (took 1.501242774 seconds)
    (41/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 1024)...
    done (took 1.231346521 seconds)
    (42/114) benchmarking ("\\", "Bidiagonal", "Vector", 1024)...
    done (took 1.231776624 seconds)
    (43/114) benchmarking ("\\", "UpperTriangular", "Vector", 256)...
    done (took 1.234358088 seconds)
    (44/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.844678837 seconds)
    (45/114) benchmarking ("*", "Tridiagonal", "Vector", 256)...
    done (took 1.235316956 seconds)
    (46/114) benchmarking ("-", "Matrix", "Matrix", 1024)...
    done (took 1.731202513 seconds)
    (47/114) benchmarking ("-", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 1.236545195 seconds)
    (48/114) benchmarking ("\\", "Matrix", "Vector", 1024)...
    done (took 4.114665293 seconds)
    (49/114) benchmarking ("-", "Vector", "Vector", 256)...
    done (took 1.23293084 seconds)
    (50/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 1.230844213 seconds)
    (51/114) benchmarking ("sqrt", "Hermitian", 1024)...
    done (took 21.64818558 seconds)
    (52/114) benchmarking ("\\", "Matrix", "Matrix", 1024)...
    done (took 10.755369052 seconds)
    (53/114) benchmarking ("cumsum!", Int64, 1024)...
    done (took 1.237975991 seconds)
    (54/114) benchmarking ("+", "Vector", "Vector", 1024)...
    done (took 1.219177408 seconds)
    (55/114) benchmarking ("\\", "Tridiagonal", "Vector", 1024)...
    done (took 1.223020502 seconds)
    (56/114) benchmarking ("\\", "Diagonal", "Diagonal", 256)...
    done (took 1.220995603 seconds)
    (57/114) benchmarking ("+", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.219667512 seconds)
    (58/114) benchmarking ("+", "Matrix", "Matrix", 256)...
    done (took 1.247574928 seconds)
    (59/114) benchmarking ("log", "Hermitian", 1024)...
    done (took 21.622622502 seconds)
    (60/114) benchmarking ("\\", "HermitianSparseWithNonZeroPivots", "Vector", 1024)...
    done (took 1.309891581 seconds)
    (61/114) benchmarking ("\\", "SymTridiagonal", "Vector", 256)...
    done (took 1.235613784 seconds)
    (62/114) benchmarking ("\\", "LowerTriangular", "Vector", 256)...
    done (took 1.218341268 seconds)
    (63/114) benchmarking ("-", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.243848389 seconds)
    (64/114) benchmarking ("*", "Tridiagonal", "Vector", 1024)...
    done (took 1.215422629 seconds)
    (65/114) benchmarking ("sqrt", "UnitUpperTriangular", 1024)...
    done (took 21.421095695 seconds)
    (66/114) benchmarking ("+", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.211794211 seconds)
    (67/114) benchmarking ("sqrt", "NPDUpperTriangular", 1024)...
    done (took 21.699905952 seconds)
    (68/114) benchmarking ("\\", "LowerTriangular", "Vector", 1024)...
    done (took 1.282682442 seconds)
    (69/114) benchmarking ("mul!", "Matrix{Float32}", "Matrix{Float64}", "Matrix{Float64}", 256)...
    done (took 2.3265855 seconds)
    (70/114) benchmarking ("+", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 1.70986803 seconds)
    (71/114) benchmarking ("-", "SymTridiagonal", "SymTridiagonal", 256)...
    done (took 1.205634283 seconds)
    (72/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 256)...
    done (took 1.300638047 seconds)
    (73/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.32364217 seconds)
    (74/114) benchmarking ("cumsum!", Float64, 256)...
    done (took 1.206228296 seconds)
    (75/114) benchmarking ("/", "Diagonal", "Diagonal", 1024)...
    done (took 1.205440607 seconds)
    (76/114) benchmarking ("*", "Diagonal", "Diagonal", 256)...
    done (took 1.205103635 seconds)
    (77/114) benchmarking ("*", "SymTridiagonal", "Vector", 1024)...
    done (took 1.203003915 seconds)
    (78/114) benchmarking ("/", "Diagonal", "Diagonal", 256)...
    done (took 1.203510609 seconds)
    (79/114) benchmarking ("*", "Matrix", "Matrix", 256)...
    done (took 1.310495144 seconds)
    (80/114) benchmarking ("-", "Diagonal", "Diagonal", 1024)...
    done (took 1.204009972 seconds)
    (81/114) benchmarking ("sqrt", "Hermitian", 256)...
    done (took 3.57943676 seconds)
    (82/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 256)...
    done (took 1.369908749 seconds)
    (83/114) benchmarking ("*", "LowerTriangular", "Vector", 256)...
    done (took 1.219688613 seconds)
    (84/114) benchmarking ("*", "Tridiagonal", "Tridiagonal", 1024)...
    done (took 7.325524439 seconds)
    (85/114) benchmarking ("\\", "Matrix", "Vector", 256)...
    done (took 1.299342176 seconds)
    (86/114) benchmarking ("*", "Diagonal", "Vector", 1024)...
    done (took 1.199308721 seconds)
    (87/114) benchmarking ("*", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.526598201 seconds)
    (88/114) benchmarking ("+", "Diagonal", "Diagonal", 1024)...
    done (took 1.204897443 seconds)
    (89/114) benchmarking ("*", "Diagonal", "Vector", 256)...
    done (took 1.199584026 seconds)
    (90/114) benchmarking ("/", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 4.884520238 seconds)
    (91/114) benchmarking ("*", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.291768386 seconds)
    (92/114) benchmarking ("-", "Diagonal", "Diagonal", 256)...
    done (took 1.19703296 seconds)
    (93/114) benchmarking ("cumsum!", Int32, 1024)...
    done (took 1.197765502 seconds)
    (94/114) benchmarking ("+", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.197086343 seconds)
    (95/114) benchmarking ("log", "Hermitian", 256)...
    done (took 3.57477186 seconds)
    (96/114) benchmarking ("+", "LowerTriangular", "LowerTriangular", 1024)...
    done (took 1.697644068 seconds)
    (97/114) benchmarking ("*", "Matrix", "Matrix", 1024)...
    done (took 6.359377334 seconds)
    (98/114) benchmarking ("\\", "Diagonal", "Diagonal", 1024)...
    done (took 1.196524258 seconds)
    (99/114) benchmarking ("exp", "Hermitian", 1024)...
    done (took 21.50202826 seconds)
    (100/114) benchmarking ("cumsum!", Int64, 256)...
    done (took 1.19300645 seconds)
    (101/114) benchmarking ("cumsum!", Float32, 1024)...
    done (took 1.188676202 seconds)
    (102/114) benchmarking ("exp", "Hermitian", 256)...
    done (took 3.582309786 seconds)
    (103/114) benchmarking ("*", "Bidiagonal", "Vector", 1024)...
    done (took 1.682304966 seconds)
    (104/114) benchmarking ("\\", "UpperTriangular", "UpperTriangular", 1024)...
    done (took 4.817543203 seconds)
    (105/114) benchmarking ("\\", "Tridiagonal", "Vector", 256)...
    done (took 1.192405748 seconds)
    (106/114) benchmarking ("\\", "LowerTriangular", "LowerTriangular", 256)...
    done (took 1.295988458 seconds)
    (107/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 256)...
    done (took 1.352142011 seconds)
    (108/114) benchmarking ("*", "Matrix", "Vector", 256)...
    done (took 1.205660691 seconds)
    (109/114) benchmarking ("cumsum!", Int32, 256)...
    done (took 1.185404469 seconds)
    (110/114) benchmarking ("*", "Bidiagonal", "Bidiagonal", 1024)...
    done (took 7.315046567 seconds)
    (111/114) benchmarking ("\\", "Diagonal", "Vector", 1024)...
    done (took 1.191729917 seconds)
    (112/114) benchmarking ("\\", "UpperTriangular", "Vector", 1024)...
    done (took 1.243138957 seconds)
    (113/114) benchmarking ("+", "Diagonal", "Diagonal", 256)...
    done (took 1.183646152 seconds)
    (114/114) benchmarking ("sqrt", "UnitUpperTriangular", 256)...
    done (took 1.579007298 seconds)
  done (took 364.833508052 seconds)
done (took 707.771195663 seconds)
(4/20) benchmarking "parallel"...
  (1/1) benchmarking "remotecall"...
    (1/5) benchmarking ("identity", 1024)...
    done (took 1.787278645 seconds)
    (2/5) benchmarking ("identity", 64)...
    done (took 1.790114892 seconds)
    (3/5) benchmarking ("identity", 4096)...
    done (took 1.892290898 seconds)
    (4/5) benchmarking ("identity", 512)...
    done (took 1.785208298 seconds)
    (5/5) benchmarking ("identity", 2)...
    done (took 1.752491937 seconds)
  done (took 10.119370623 seconds)
done (took 11.232081399 seconds)
(5/20) benchmarking "find"...
  (1/3) benchmarking "findall"...
    (1/13) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.367029827 seconds)
    (2/13) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.371451753 seconds)
    (3/13) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24285892 seconds)
    (4/13) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.37202065 seconds)
    (5/13) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.219790935 seconds)
    (6/13) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.386775692 seconds)
    (7/13) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.34838089 seconds)
    (8/13) benchmarking ("Array{Bool,1}", "10-90")...
    done (took 1.208744393 seconds)
    (9/13) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.282029135 seconds)
    (10/13) benchmarking ("Array{Bool,1}", "90-10")...
    done (took 1.265218042 seconds)
    (11/13) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.284891915 seconds)
    (12/13) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.237441336 seconds)
    (13/13) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.220584997 seconds)
  done (took 17.920679483 seconds)
  (2/3) benchmarking "findprev"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.490749286 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.489397937 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.24898672 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.495431348 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224527891 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.500624089 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.387525158 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.391227723 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.395083288 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.21704215 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.195165508 seconds)
  done (took 16.147754282 seconds)
  (3/3) benchmarking "findnext"...
    (1/11) benchmarking ("ispos", "Array{Float32,1}")...
    done (took 1.498462556 seconds)
    (2/11) benchmarking ("ispos", "Array{UInt8,1}")...
    done (took 1.495250824 seconds)
    (3/11) benchmarking ("BitArray{1}", "90-10")...
    done (took 1.250262189 seconds)
    (4/11) benchmarking ("ispos", "Array{Float64,1}")...
    done (took 1.497629801 seconds)
    (5/11) benchmarking ("BitArray{1}", "50-50")...
    done (took 1.224786602 seconds)
    (6/11) benchmarking ("ispos", "Array{UInt64,1}")...
    done (took 1.493363632 seconds)
    (7/11) benchmarking ("ispos", "Array{Int64,1}")...
    done (took 1.388224333 seconds)
    (8/11) benchmarking ("ispos", "Array{Int8,1}")...
    done (took 1.395320855 seconds)
    (9/11) benchmarking ("ispos", "Array{Bool,1}")...
    done (took 1.418980303 seconds)
    (10/11) benchmarking ("Array{Bool,1}", "50-50")...
    done (took 1.215545007 seconds)
    (11/11) benchmarking ("BitArray{1}", "10-90")...
    done (took 1.193404481 seconds)
  done (took 16.18051763 seconds)
done (took 51.363198103 seconds)
(6/20) benchmarking "tuple"...
  (1/4) benchmarking "misc"...
    (1/1) benchmarking "11899"...
    done (took 1.189375621 seconds)
  done (took 2.297445943 seconds)
  (2/4) benchmarking "linear algebra"...
    (1/8) benchmarking ("matmat", (8, 8), (8, 8))...
    done (took 1.220661633 seconds)
    (2/8) benchmarking ("matmat", (16, 16), (16, 16))...
    done (took 1.383538735 seconds)
    (3/8) benchmarking ("matmat", (2, 2), (2, 2))...
    done (took 1.208074865 seconds)
    (4/8) benchmarking ("matmat", (4, 4), (4, 4))...
    done (took 1.193046404 seconds)
    (5/8) benchmarking ("matvec", (2, 2), (2,))...
    done (took 1.189709116 seconds)
    (6/8) benchmarking ("matvec", (8, 8), (8,))...
    done (took 1.190767454 seconds)
    (7/8) benchmarking ("matvec", (16, 16), (16,))...
    done (took 1.193080488 seconds)
    (8/8) benchmarking ("matvec", (4, 4), (4,))...
    done (took 1.189686504 seconds)
  done (took 10.877001727 seconds)
  (3/4) benchmarking "index"...
    (1/16) benchmarking ("sumelt", "NTuple", 3, Float32)...
    done (took 1.18696972 seconds)
    (2/16) benchmarking ("sumelt", "TupleWrapper", 60, Float32)...
    done (took 1.187623709 seconds)
    (3/16) benchmarking ("sumelt", "NTuple", 60, Float64)...
    done (took 1.184453656 seconds)
    (4/16) benchmarking ("sumelt", "TupleWrapper", 8, Float64)...
    done (took 1.184820306 seconds)
    (5/16) benchmarking ("sumelt", "NTuple", 30, Float32)...
    done (took 1.187545739 seconds)
    (6/16) benchmarking ("sumelt", "NTuple", 60, Float32)...
    done (took 1.187636913 seconds)
    (7/16) benchmarking ("sumelt", "NTuple", 3, Float64)...
    done (took 1.186466836 seconds)
    (8/16) benchmarking ("sumelt", "TupleWrapper", 3, Float64)...
    done (took 1.183847363 seconds)
    (9/16) benchmarking ("sumelt", "NTuple", 8, Float32)...
    done (took 1.186458074 seconds)
    (10/16) benchmarking ("sumelt", "NTuple", 8, Float64)...
    done (took 1.184565369 seconds)
    (11/16) benchmarking ("sumelt", "TupleWrapper", 60, Float64)...
    done (took 1.184536321 seconds)
    (12/16) benchmarking ("sumelt", "TupleWrapper", 3, Float32)...
    done (took 1.1873085 seconds)
    (13/16) benchmarking ("sumelt", "TupleWrapper", 30, Float32)...
    done (took 1.186780516 seconds)
    (14/16) benchmarking ("sumelt", "NTuple", 30, Float64)...
    done (took 1.184805972 seconds)
    (15/16) benchmarking ("sumelt", "TupleWrapper", 30, Float64)...
    done (took 1.183412324 seconds)
    (16/16) benchmarking ("sumelt", "TupleWrapper", 8, Float32)...
    done (took 1.188168369 seconds)
  done (took 20.085316249 seconds)
  (4/4) benchmarking "reduction"...
    (1/24) benchmarking ("sumabs", (16, 16))...
    done (took 1.185661318 seconds)
    (2/24) benchmarking ("sumabs", (8,))...
    done (took 1.18333588 seconds)
    (3/24) benchmarking ("minimum", (2, 2))...
    done (took 1.181773815 seconds)
    (4/24) benchmarking ("sum", (4, 4))...
    done (took 1.183363662 seconds)
    (5/24) benchmarking ("sumabs", (4, 4))...
    done (took 1.183960782 seconds)
    (6/24) benchmarking ("sumabs", (8, 8))...
    done (took 1.184117218 seconds)
    (7/24) benchmarking ("minimum", (8, 8))...
    done (took 1.186032833 seconds)
    (8/24) benchmarking ("minimum", (4,))...
    done (took 1.181946816 seconds)
    (9/24) benchmarking ("sumabs", (4,))...
    done (took 1.183320231 seconds)
    (10/24) benchmarking ("sumabs", (16,))...
    done (took 1.18301309 seconds)
    (11/24) benchmarking ("sum", (8, 8))...
    done (took 1.184076164 seconds)
    (12/24) benchmarking ("sum", (2,))...
    done (took 1.182418182 seconds)
    (13/24) benchmarking ("sum", (2, 2))...
    done (took 1.184395731 seconds)
    (14/24) benchmarking ("sumabs", (2,))...
    done (took 1.181829885 seconds)
    (15/24) benchmarking ("minimum", (16,))...
    done (took 1.183541135 seconds)
    (16/24) benchmarking ("sum", (16, 16))...
    done (took 1.18458557 seconds)
    (17/24) benchmarking ("sumabs", (2, 2))...
    done (took 1.183144201 seconds)
    (18/24) benchmarking ("minimum", (4, 4))...
    done (took 1.183541402 seconds)
    (19/24) benchmarking ("minimum", (16, 16))...
    done (took 1.186886985 seconds)
    (20/24) benchmarking ("minimum", (8,))...
    done (took 1.182990622 seconds)
    (21/24) benchmarking ("sum", (16,))...
    done (took 1.184139436 seconds)
    (22/24) benchmarking ("minimum", (2,))...
    done (took 1.18366444 seconds)
    (23/24) benchmarking ("sum", (4,))...
    done (took 1.182921867 seconds)
    (24/24) benchmarking ("sum", (8,))...
    done (took 1.183933801 seconds)
  done (took 29.51770077 seconds)
done (took 63.885901091 seconds)
(7/20) benchmarking "dates"...
  (1/7) benchmarking "string"...
    (1/2) benchmarking "Date"...
    done (took 4.101335364 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 3.6839 seconds)
  done (took 8.890444922 seconds)
  (2/7) benchmarking "construction"...
    (1/2) benchmarking "Date"...
    done (took 1.185033249 seconds)
    (2/2) benchmarking "DateTime"...
    done (took 1.184119833 seconds)
  done (took 3.475799916 seconds)
  (3/7) benchmarking "arithmetic"...
    (1/10) benchmarking ("Date", "Month")...
    done (took 1.185554033 seconds)
    (2/10) benchmarking ("DateTime", "Millisecond")...
    done (took 1.184012528 seconds)
    (3/10) benchmarking ("DateTime", "Month")...
    done (took 1.184604277 seconds)
    (4/10) benchmarking ("Date", "Year")...
    done (took 1.184028909 seconds)
    (5/10) benchmarking ("DateTime", "Second")...
    done (took 1.185135626 seconds)
    (6/10) benchmarking ("Date", "Day")...
    done (took 1.184002155 seconds)
    (7/10) benchmarking ("DateTime", "Year")...
    done (took 1.184618826 seconds)
    (8/10) benchmarking ("DateTime", "Hour")...
    done (took 1.18478945 seconds)
    (9/10) benchmarking ("DateTime", "Day")...
    done (took 1.183931664 seconds)
    (10/10) benchmarking ("DateTime", "Minute")...
    done (took 1.184397589 seconds)
  done (took 12.951735472 seconds)
  (4/7) benchmarking "query"...
    (1/18) benchmarking ("lastdayofweek", "Date")...
    done (took 1.186070047 seconds)
    (2/18) benchmarking ("firstdayofmonth", "DateTime")...
    done (took 1.185190841 seconds)
    (3/18) benchmarking ("dayofyear", "Date")...
    done (took 1.182654819 seconds)
    (4/18) benchmarking ("isleapyear", "Date")...
    done (took 1.185396262 seconds)
    (5/18) benchmarking ("lastdayofmonth", "Date")...
    done (took 1.184935826 seconds)
    (6/18) benchmarking ("dayofweek", "DateTime")...
    done (took 1.182347053 seconds)
    (7/18) benchmarking ("lastdayofweek", "DateTime")...
    done (took 1.18534843 seconds)
    (8/18) benchmarking ("firstdayofweek", "Date")...
    done (took 1.184848317 seconds)
    (9/18) benchmarking ("lastdayofmonth", "DateTime")...
    done (took 1.186161977 seconds)
    (10/18) benchmarking ("dayofweek", "Date")...
    done (took 1.183930736 seconds)
    (11/18) benchmarking ("isleapyear", "DateTime")...
    done (took 1.186376204 seconds)
    (12/18) benchmarking ("daysofweekinmonth", "Date")...
    done (took 1.183326339 seconds)
    (13/18) benchmarking ("firstdayofmonth", "Date")...
    done (took 1.185441214 seconds)
    (14/18) benchmarking ("daysofweekinmonth", "DateTime")...
    done (took 1.183133464 seconds)
    (15/18) benchmarking ("firstdayofweek", "DateTime")...
    done (took 1.185928225 seconds)
    (16/18) benchmarking ("dayofweekofmonth", "DateTime")...
    done (took 1.183637001 seconds)
    (17/18) benchmarking ("dayofyear", "DateTime")...
    done (took 1.183158536 seconds)
    (18/18) benchmarking ("dayofweekofmonth", "Date")...
    done (took 1.182341444 seconds)
  done (took 22.426482116 seconds)
  (5/7) benchmarking "conversion"...
    (1/2) benchmarking "Date -> DateTime"...
    done (took 1.184738672 seconds)
    (2/2) benchmarking "DateTime -> Date"...
    done (took 1.185126502 seconds)
  done (took 3.478193163 seconds)
  (6/7) benchmarking "accessor"...
    (1/7) benchmarking "day"...
    done (took 1.183275569 seconds)
    (2/7) benchmarking "second"...
    done (took 1.181907848 seconds)
    (3/7) benchmarking "month"...
    done (took 1.182588888 seconds)
    (4/7) benchmarking "year"...
    done (took 1.183260536 seconds)
    (5/7) benchmarking "hour"...
    done (took 1.183520554 seconds)
    (6/7) benchmarking "millisecond"...
    done (took 1.183544238 seconds)
    (7/7) benchmarking "minute"...
    done (took 1.181513486 seconds)
  done (took 9.386407402 seconds)
  (7/7) benchmarking "parse"...
    (1/9) benchmarking ("Date", "ISODateFormat")...
    done (took 1.185373674 seconds)
    (2/9) benchmarking ("Date", "DateFormat")...
    done (took 1.363708931 seconds)
    (3/9) benchmarking ("DateTime", "DateFormat")...
    done (took 1.440900515 seconds)
    (4/9) benchmarking "Date"...
    done (took 1.783106045 seconds)
    (5/9) benchmarking ("DateTime", "ISODateTimeFormat")...
    done (took 1.186495334 seconds)
    (6/9) benchmarking ("DateTime", "RFC1123Format", "Titlecase")...
    done (took 1.186517206 seconds)
    (7/9) benchmarking "DateTime"...
    done (took 2.028840607 seconds)
    (8/9) benchmarking ("DateTime", "RFC1123Format", "Lowercase")...
    done (took 1.187148926 seconds)
    (9/9) benchmarking ("DateTime", "RFC1123Format", "Mixedcase")...
    done (took 1.18786539 seconds)
  done (took 13.655846847 seconds)
done (took 75.371183602 seconds)
(8/20) benchmarking "micro"...
  (1/8) benchmarking "quicksort"...
  done (took 4.172005105 seconds)
  (2/8) benchmarking "printfd"...
  done (took 6.196589871 seconds)
  (3/8) benchmarking "parseint"...
  done (took 3.231506836 seconds)
  (4/8) benchmarking "randmatstat"...
  done (took 6.192157486 seconds)
  (5/8) benchmarking "pisum"...
  done (took 6.195440276 seconds)
  (6/8) benchmarking "fib"...
  done (took 1.475413965 seconds)
  (7/8) benchmarking "randmatmul"...
  done (took 6.190789512 seconds)
  (8/8) benchmarking "mandel"...
  done (took 2.29760603 seconds)
done (took 37.057725704 seconds)
(9/20) benchmarking "io"...
  (1/3) benchmarking "skipchars"...
  done (took 6.191279415 seconds)
  (2/3) benchmarking "serialization"...
    (1/4) benchmarking ("deserialize", "Matrix{Float64}")...
    done (took 6.166347572 seconds)
    (2/4) benchmarking ("deserialize", "Vector{String}")...
    done (took 2.828513283 seconds)
    (3/4) benchmarking ("serialize", "Matrix{Float64}")...
    done (took 6.162918046 seconds)
    (4/4) benchmarking ("serialize", "Vector{String}")...
    done (took 2.158538118 seconds)
  done (took 18.422515511 seconds)
  (3/3) benchmarking "read"...
    (1/2) benchmarking "readstring"...
    done (took 2.115248086 seconds)
    (2/2) benchmarking "read"...
    done (took 1.517581352 seconds)
  done (took 4.737682006 seconds)
done (took 30.456613376 seconds)
(10/20) benchmarking "scalar"...
  (1/25) benchmarking "exp2"...
    (1/24) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.18388449 seconds)
    (2/24) benchmarking ("2pow1023", "positive argument", Float64)...
    done (took 1.181733249 seconds)
    (3/24) benchmarking ("2pow127", "negative argument", Float32)...
    done (took 1.184448595 seconds)
    (4/24) benchmarking ("2pow35", "negative argument", "Float32")...
    done (took 1.184739024 seconds)
    (5/24) benchmarking ("one", "Float64")...
    done (took 1.181469667 seconds)
    (6/24) benchmarking ("2pow3", "negative argument", "Float32")...
    done (took 1.184150934 seconds)
    (7/24) benchmarking ("zero", "Float64")...
    done (took 1.182894386 seconds)
    (8/24) benchmarking ("2pow35", "positive argument", "Float64")...
    done (took 1.182800605 seconds)
    (9/24) benchmarking ("2pow1023", "negative argument", Float64)...
    done (took 1.181787859 seconds)
    (10/24) benchmarking ("2pow3", "positive argument", "Float32")...
    done (took 1.185258529 seconds)
    (11/24) benchmarking ("2pow35", "positive argument", "Float32")...
    done (took 1.185064646 seconds)
    (12/24) benchmarking ("2pow127", "positive argument", Float32)...
    done (took 1.185324441 seconds)
    (13/24) benchmarking ("zero", "Float32")...
    done (took 1.185169893 seconds)
    (14/24) benchmarking ("one", "Float32")...
    done (took 1.184822087 seconds)
    (15/24) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.18514111 seconds)
    (16/24) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.182559579 seconds)
    (17/24) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183736256 seconds)
    (18/24) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184695513 seconds)
    (19/24) benchmarking ("2pow3", "positive argument", "Float64")...
    done (took 1.183437382 seconds)
    (20/24) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.1833178 seconds)
    (21/24) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.183406849 seconds)
    (22/24) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.185691733 seconds)
    (23/24) benchmarking ("2pow35", "negative argument", "Float64")...
    done (took 1.183112403 seconds)
    (24/24) benchmarking ("2pow3", "negative argument", "Float64")...
    done (took 1.183302242 seconds)
  done (took 29.517728282 seconds)
  (2/25) benchmarking "atan"...
    (1/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float32")...
    done (took 1.185732865 seconds)
    (2/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float64")...
    done (took 1.185637129 seconds)
    (3/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float32")...
    done (took 1.185946025 seconds)
    (4/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float32")...
    done (took 1.185782783 seconds)
    (5/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float64")...
    done (took 1.183481164 seconds)
    (6/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float32")...
    done (took 1.186771813 seconds)
    (7/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float32")...
    done (took 1.185768311 seconds)
    (8/30) benchmarking ("zero", "Float64")...
    done (took 1.183146674 seconds)
    (9/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float32")...
    done (took 1.186220336 seconds)
    (10/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float32")...
    done (took 1.185214907 seconds)
    (11/30) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.183672309 seconds)
    (12/30) benchmarking ("11/16 <= abs(x) < 19/16", "negative argument", "Float64")...
    done (took 1.183467381 seconds)
    (13/30) benchmarking ("zero", "Float32")...
    done (took 1.18570328 seconds)
    (14/30) benchmarking ("7/16 <= abs(x) < 11/16", "positive argument", "Float64")...
    done (took 1.184357007 seconds)
    (15/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.18553975 seconds)
    (16/30) benchmarking ("7/16 <= abs(x) < 11/16", "negative argument", "Float64")...
    done (took 1.184588069 seconds)
    (17/30) benchmarking ("19/16 <= abs(x) < 39/16", "negative argument", "Float32")...
    done (took 1.185600495 seconds)
    (18/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183981937 seconds)
    (19/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186882953 seconds)
    (20/30) benchmarking ("19/16 <= abs(x) < 39/16", "positive argument", "Float64")...
    done (took 1.184879658 seconds)
    (21/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float32")...
    done (took 1.186872018 seconds)
    (22/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.18400303 seconds)
    (23/30) benchmarking ("11/16 <= abs(x) < 19/16", "positive argument", "Float64")...
    done (took 1.183707994 seconds)
    (24/30) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.186578858 seconds)
    (25/30) benchmarking ("39/16 <= abs(x) < 2^66", "negative argument", "Float64")...
    done (took 1.184620033 seconds)
    (26/30) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.184366534 seconds)
    (27/30) benchmarking ("0 <= abs(x) < 7/16", "positive argument", "Float32")...
    done (took 1.185640134 seconds)
    (28/30) benchmarking ("0 <= abs(x) < 7/16", "negative argument", "Float64")...
    done (took 1.185434559 seconds)
    (29/30) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.186829751 seconds)
    (30/30) benchmarking ("39/16 <= abs(x) < 2^66", "positive argument", "Float64")...
    done (took 1.184677628 seconds)
  done (took 36.662040517 seconds)
  (3/25) benchmarking "predicate"...
    (1/72) benchmarking ("isodd", "BigInt")...
    done (took 1.191258505 seconds)
    (2/72) benchmarking ("isfinite", "Int64")...
    done (took 1.191715018 seconds)
    (3/72) benchmarking ("isfinite", "Float32")...
    done (took 1.186675085 seconds)
    (4/72) benchmarking ("isequal", "Complex{BigInt}")...
    done (took 1.188142266 seconds)
    (5/72) benchmarking ("isinf", "UInt64")...
    done (took 1.186884074 seconds)
    (6/72) benchmarking ("isodd", "UInt64")...
    done (took 1.186919939 seconds)
    (7/72) benchmarking ("isinteger", "UInt64")...
    done (took 1.186513134 seconds)
    (8/72) benchmarking ("isfinite", "Complex{UInt64}")...
    done (took 1.187178598 seconds)
    (9/72) benchmarking ("isequal", "Complex{UInt64}")...
    done (took 1.186851179 seconds)
    (10/72) benchmarking ("isnan", "Float64")...
    done (took 1.186694185 seconds)
    (11/72) benchmarking ("isequal", "Complex{Int64}")...
    done (took 1.187907991 seconds)
    (12/72) benchmarking ("isequal", "Float64")...
    done (took 1.18710494 seconds)
    (13/72) benchmarking ("isfinite", "Complex{BigInt}")...
    done (took 1.187656524 seconds)
    (14/72) benchmarking ("isinteger", "Complex{Int64}")...
    done (took 1.188454672 seconds)
    (15/72) benchmarking ("isnan", "Complex{Float32}")...
    done (took 1.188701398 seconds)
    (16/72) benchmarking ("isnan", "BigFloat")...
    done (took 1.187805651 seconds)
    (17/72) benchmarking ("isinteger", "Complex{BigFloat}")...
    done (took 1.187965614 seconds)
    (18/72) benchmarking ("isinf", "Complex{BigInt}")...
    done (took 1.18795656 seconds)
    (19/72) benchmarking ("isinf", "Complex{UInt64}")...
    done (took 1.188117861 seconds)
    (20/72) benchmarking ("isequal", "Complex{Float64}")...
    done (took 1.18765194 seconds)
    (21/72) benchmarking ("isless", "BigInt")...
    done (took 1.187855543 seconds)
    (22/72) benchmarking ("isfinite", "Complex{Int64}")...
    done (took 1.188199338 seconds)
    (23/72) benchmarking ("isodd", "Int64")...
    done (took 1.188435086 seconds)
    (24/72) benchmarking ("isequal", "Float32")...
    done (took 1.1886486 seconds)
    (25/72) benchmarking ("isequal", "UInt64")...
    done (took 1.188282276 seconds)
    (26/72) benchmarking ("isinteger", "Int64")...
    done (took 1.188660418 seconds)
    (27/72) benchmarking ("isfinite", "Float64")...
    done (took 1.188712746 seconds)
    (28/72) benchmarking ("isequal", "Int64")...
    done (took 1.188873192 seconds)
    (29/72) benchmarking ("isinf", "Float64")...
    done (took 1.188930353 seconds)
    (30/72) benchmarking ("isless", "UInt64")...
    done (took 1.188957387 seconds)
    (31/72) benchmarking ("isequal", "BigInt")...
    done (took 1.188467534 seconds)
    (32/72) benchmarking ("isinf", "BigFloat")...
    done (took 1.18901176 seconds)
    (33/72) benchmarking ("isless", "Float32")...
    done (took 1.188022035 seconds)
    (34/72) benchmarking ("isfinite", "Complex{BigFloat}")...
    done (took 1.189080356 seconds)
    (35/72) benchmarking ("isinteger", "BigFloat")...
    done (took 1.189002886 seconds)
    (36/72) benchmarking ("isless", "Float64")...
    done (took 1.18855849 seconds)
    (37/72) benchmarking ("iseven", "BigInt")...
    done (took 1.193357466 seconds)
    (38/72) benchmarking ("isnan", "BigInt")...
    done (took 1.194421803 seconds)
    (39/72) benchmarking ("isequal", "Complex{Float32}")...
    done (took 1.189125243 seconds)
    (40/72) benchmarking ("isfinite", "UInt64")...
    done (took 1.190281352 seconds)
    (41/72) benchmarking ("isfinite", "BigInt")...
    done (took 1.189813633 seconds)
    (42/72) benchmarking ("isnan", "Float32")...
    done (took 1.188515675 seconds)
    (43/72) benchmarking ("isnan", "Complex{UInt64}")...
    done (took 1.189525705 seconds)
    (44/72) benchmarking ("isnan", "Complex{BigFloat}")...
    done (took 1.190758506 seconds)
    (45/72) benchmarking ("iseven", "Int64")...
    done (took 1.190062756 seconds)
    (46/72) benchmarking ("isinteger", "Float64")...
    done (took 1.189530794 seconds)
    (47/72) benchmarking ("isinf", "Complex{Int64}")...
    done (took 1.189478099 seconds)
    (48/72) benchmarking ("isfinite", "Complex{Float32}")...
    done (took 1.189109421 seconds)
    (49/72) benchmarking ("isnan", "Complex{Float64}")...
    done (took 1.189748114 seconds)
    (50/72) benchmarking ("isinteger", "Complex{Float32}")...
    done (took 1.188318386 seconds)
    (51/72) benchmarking ("isinf", "Int64")...
    done (took 1.188903594 seconds)
    (52/72) benchmarking ("isnan", "Complex{Int64}")...
    done (took 1.188426451 seconds)
    (53/72) benchmarking ("isinf", "Complex{Float32}")...
    done (took 1.189318293 seconds)
    (54/72) benchmarking ("isfinite", "Complex{Float64}")...
    done (took 1.187863603 seconds)
    (55/72) benchmarking ("isinteger", "Complex{BigInt}")...
    done (took 1.188793776 seconds)
    (56/72) benchmarking ("isnan", "Int64")...
    done (took 1.189677248 seconds)
    (57/72) benchmarking ("isinteger", "Float32")...
    done (took 1.18791245 seconds)
    (58/72) benchmarking ("isnan", "UInt64")...
    done (took 1.189410114 seconds)
    (59/72) benchmarking ("isinteger", "Complex{UInt64}")...
    done (took 1.187008646 seconds)
    (60/72) benchmarking ("isless", "Int64")...
    done (took 1.186043339 seconds)
    (61/72) benchmarking ("isinf", "BigInt")...
    done (took 1.187504318 seconds)
    (62/72) benchmarking ("isinteger", "BigInt")...
    done (took 1.186321684 seconds)
    (63/72) benchmarking ("isfinite", "BigFloat")...
    done (took 1.188054326 seconds)
    (64/72) benchmarking ("isinf", "Float32")...
    done (took 1.187924981 seconds)
    (65/72) benchmarking ("isequal", "Complex{BigFloat}")...
    done (took 1.188215753 seconds)
    (66/72) benchmarking ("isinf", "Complex{BigFloat}")...
    done (took 1.187893819 seconds)
    (67/72) benchmarking ("isnan", "Complex{BigInt}")...
    done (took 1.184743284 seconds)
    (68/72) benchmarking ("isinteger", "Complex{Float64}")...
    done (took 1.184452516 seconds)
    (69/72) benchmarking ("iseven", "UInt64")...
    done (took 1.185490023 seconds)
    (70/72) benchmarking ("isequal", "BigFloat")...
    done (took 1.185330266 seconds)
    (71/72) benchmarking ("isinf", "Complex{Float64}")...
    done (took 1.185666815 seconds)
    (72/72) benchmarking ("isless", "BigFloat")...
    done (took 1.185118195 seconds)
  done (took 86.669035785 seconds)
  (4/25) benchmarking "sinh"...
    (1/22) benchmarking ("0 <= abs(x) < 2f-12", "negative argument", "Float32")...
    done (took 1.186052353 seconds)
    (2/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.183585864 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.182579948 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.182008748 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.182295644 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.184205924 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.182855313 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.185826365 seconds)
    (9/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.182848236 seconds)
    (10/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.185150619 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.184791518 seconds)
    (12/22) benchmarking ("2.0^-28 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.183834343 seconds)
    (13/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183213546 seconds)
    (14/22) benchmarking ("2f-12 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.184698737 seconds)
    (15/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.185518433 seconds)
    (16/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.183006779 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.185439648 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.182475392 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2f-12", "positive argument", "Float32")...
    done (took 1.18577924 seconds)
    (20/22) benchmarking ("2f-12 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.185926151 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.185252893 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.184006444 seconds)
  done (took 27.159621222 seconds)
  (5/25) benchmarking "tan"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.186060017 seconds)
    (2/18) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.188982964 seconds)
    (3/18) benchmarking ("zero", "Float64")...
    done (took 1.183168754 seconds)
    (4/18) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.18651958 seconds)
    (5/18) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.183324118 seconds)
    (6/18) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.185740077 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.186710316 seconds)
    (8/18) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.187883227 seconds)
    (9/18) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.187315214 seconds)
    (10/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.184154734 seconds)
    (11/18) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.183901399 seconds)
    (12/18) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.186385285 seconds)
    (13/18) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.184900514 seconds)
    (14/18) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.183563264 seconds)
    (15/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.184442378 seconds)
    (16/18) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.186260227 seconds)
    (17/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.186581087 seconds)
    (18/18) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.185792651 seconds)
  done (took 22.449825136 seconds)
  (6/25) benchmarking "asinh"...
    (1/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float64")...
    done (took 1.186439687 seconds)
    (2/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float64")...
    done (took 1.183957787 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float32")...
    done (took 1.18806673 seconds)
    (4/22) benchmarking ("zero", "Float64")...
    done (took 1.184886497 seconds)
    (5/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float64")...
    done (took 1.184867426 seconds)
    (6/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.187668099 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.18452473 seconds)
    (8/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.186912828 seconds)
    (9/22) benchmarking ("zero", "Float32")...
    done (took 1.187267981 seconds)
    (10/22) benchmarking ("0 <= abs(x) < 2^-28", "negative argument", "Float64")...
    done (took 1.184120599 seconds)
    (11/22) benchmarking ("2 <= abs(x) < 2^28", "negative argument", "Float32")...
    done (took 1.187997702 seconds)
    (12/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.188902301 seconds)
    (13/22) benchmarking ("2^-28 <= abs(x) < 2", "negative argument", "Float32")...
    done (took 1.188191942 seconds)
    (14/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.185258737 seconds)
    (15/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.188206729 seconds)
    (16/22) benchmarking ("2^-28 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.185835501 seconds)
    (17/22) benchmarking ("0 <= abs(x) < 2^-28", "positive argument", "Float32")...
    done (took 1.187925421 seconds)
    (18/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.184912517 seconds)
    (19/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.188693878 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.186363571 seconds)
    (21/22) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.185707225 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.188414007 seconds)
  done (took 27.21487363 seconds)
  (7/25) benchmarking "asin"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.190116734 seconds)
    (2/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.188873957 seconds)
    (3/20) benchmarking ("0.975 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.186382191 seconds)
    (4/20) benchmarking ("0.975 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.187299174 seconds)
    (5/20) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.186310287 seconds)
    (6/20) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.188812511 seconds)
    (7/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float32")...
    done (took 1.188650254 seconds)
    (8/20) benchmarking ("zero", "Float64")...
    done (took 1.185901488 seconds)
    (9/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float32")...
    done (took 1.189265043 seconds)
    (10/20) benchmarking ("zero", "Float32")...
    done (took 1.188905749 seconds)
    (11/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.186337431 seconds)
    (12/20) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.189117621 seconds)
    (13/20) benchmarking ("0.5 <= abs(x) < 0.975", "negative argument", "Float64")...
    done (took 1.18752817 seconds)
    (14/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.186702375 seconds)
    (15/20) benchmarking ("0.5 <= abs(x) < 0.975", "positive argument", "Float64")...
    done (took 1.186099233 seconds)
    (16/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.186461532 seconds)
    (17/20) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.188911966 seconds)
    (18/20) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.188282325 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.189213051 seconds)
    (20/20) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.186578937 seconds)
  done (took 24.866671469 seconds)
  (8/25) benchmarking "rem_pio2"...
    (1/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.190181296 seconds)
    (2/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190131154 seconds)
    (3/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.190532095 seconds)
    (4/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.190864177 seconds)
    (5/28) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190458271 seconds)
    (6/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.190942757 seconds)
    (7/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.190771127 seconds)
    (8/28) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.19035484 seconds)
    (9/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191303954 seconds)
    (10/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.191114825 seconds)
    (11/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.191145534 seconds)
    (12/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.19100251 seconds)
    (13/28) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191155287 seconds)
    (14/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.192201885 seconds)
    (15/28) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.192501257 seconds)
    (16/28) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.190942939 seconds)
    (17/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.191955709 seconds)
    (18/28) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191417178 seconds)
    (19/28) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.192580514 seconds)
    (20/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.191710143 seconds)
    (21/28) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.19188812 seconds)
    (22/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.191470993 seconds)
    (23/28) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.191914957 seconds)
    (24/28) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.192118392 seconds)
    (25/28) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.19095207 seconds)
    (26/28) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.191741527 seconds)
    (27/28) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.192002696 seconds)
    (28/28) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.191885519 seconds)
  done (took 34.468406222 seconds)
  (9/25) benchmarking "expm1"...
    (1/30) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.192272994 seconds)
    (2/30) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.191611718 seconds)
    (3/30) benchmarking ("huge", "positive argument", "Float64")...
    done (took 1.189930427 seconds)
    (4/30) benchmarking ("arg reduction II", "negative argument", "Float64")...
    done (took 1.189639763 seconds)
    (5/30) benchmarking ("one", "Float64")...
    done (took 1.189436081 seconds)
    (6/30) benchmarking ("zero", "Float64")...
    done (took 1.189072048 seconds)
    (7/30) benchmarking ("arg reduction II", "positive argument", "Float64")...
    done (took 1.189895133 seconds)
    (8/30) benchmarking ("arg reduction I", "positive argument", "Float64")...
    done (took 1.189427555 seconds)
    (9/30) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.192120258 seconds)
    (10/30) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.188945419 seconds)
    (11/30) benchmarking ("arg reduction II", "positive argument", "Float32")...
    done (took 1.191852012 seconds)
    (12/30) benchmarking ("huge", "positive argument", "Float3")...
    done (took 1.192707907 seconds)
    (13/30) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.192998911 seconds)
    (14/30) benchmarking ("zero", "Float32")...
    done (took 1.192347291 seconds)
    (15/30) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.191373289 seconds)
    (16/30) benchmarking ("one", "Float32")...
    done (took 1.191854009 seconds)
    (17/30) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.193379108 seconds)
    (18/30) benchmarking ("arg reduction I", "negative argument", "Float64")...
    done (took 1.190594547 seconds)
    (19/30) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.190211803 seconds)
    (20/30) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.190439739 seconds)
    (21/30) benchmarking ("arg reduction II", "negative argument", "Float32")...
    done (took 1.192667631 seconds)
    (22/30) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.192776064 seconds)
    (23/30) benchmarking ("arg reduction I", "negative argument", "Float32")...
    done (took 1.193938216 seconds)
    (24/30) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.190751733 seconds)
    (25/30) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.190958452 seconds)
    (26/30) benchmarking ("arg reduction I", "positive argument", "Float32")...
    done (took 1.192913757 seconds)
    (27/30) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.191126269 seconds)
    (28/30) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.191540987 seconds)
    (29/30) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.193499042 seconds)
    (30/30) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.191355623 seconds)
  done (took 36.855237874 seconds)
  (10/25) benchmarking "iteration"...
    (1/2) benchmarking "indexed"...
    done (took 1.213440595 seconds)
    (2/2) benchmarking "in"...
    done (took 1.21199832 seconds)
  done (took 3.539519649 seconds)
  (11/25) benchmarking "acosh"...
    (1/8) benchmarking ("one", "Float64")...
    done (took 1.191278435 seconds)
    (2/8) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.193388623 seconds)
    (3/8) benchmarking ("one", "Float32")...
    done (took 1.193190785 seconds)
    (4/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float64")...
    done (took 1.191635454 seconds)
    (5/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float64")...
    done (took 1.19030135 seconds)
    (6/8) benchmarking ("1 <= abs(x) < 2", "positive argument", "Float32")...
    done (took 1.193758321 seconds)
    (7/8) benchmarking ("2 <= abs(x) < 2^28", "positive argument", "Float32")...
    done (took 1.194108091 seconds)
    (8/8) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.191701303 seconds)
  done (took 10.654703597 seconds)
  (12/25) benchmarking "arithmetic"...
    (1/596) benchmarking ("div", "Complex{BigFloat}", "BigInt")...
    done (took 1.194401829 seconds)
    (2/596) benchmarking ("sub", "Int64", "Complex{Float32}")...
    done (took 1.193976559 seconds)
    (3/596) benchmarking ("add", "Float32", "Complex{Int64}")...
    done (took 1.19416126 seconds)
    (4/596) benchmarking ("div", "UInt64", "Complex{Float32}")...
    done (took 1.195086965 seconds)
    (5/596) benchmarking ("add", "Int64", "Complex{UInt64}")...
    done (took 1.194596862 seconds)
    (6/596) benchmarking ("div", "BigFloat", "Float64")...
    done (took 1.193611598 seconds)
    (7/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199407258 seconds)
    (8/596) benchmarking ("sub", "Complex{Float32}", "UInt64")...
    done (took 1.21228134 seconds)
    (9/596) benchmarking ("mul", "Complex{Float64}", "BigFloat")...
    done (took 1.193437854 seconds)
    (10/596) benchmarking ("sub", "BigInt", "BigInt")...
    done (took 1.194999376 seconds)
    (11/596) benchmarking ("mul", "Complex{Int64}", "BigInt")...
    done (took 1.199584249 seconds)
    (12/596) benchmarking ("mul", "BigFloat", "Float64")...
    done (took 1.200108666 seconds)
    (13/596) benchmarking ("div", "Complex{UInt64}", "BigInt")...
    done (took 1.196134471 seconds)
    (14/596) benchmarking ("mul", "Complex{BigFloat}", "BigFloat")...
    done (took 1.194140403 seconds)
    (15/596) benchmarking ("sub", "Int64", "Complex{BigFloat}")...
    done (took 1.193899282 seconds)
    (16/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.196361266 seconds)
    (17/596) benchmarking ("mul", "Int64", "Float32")...
    done (took 1.19407849 seconds)
    (18/596) benchmarking ("div", "Int64", "Complex{Float64}")...
    done (took 1.193946442 seconds)
    (19/596) benchmarking ("add", "Complex{UInt64}", "Float64")...
    done (took 1.195596958 seconds)
    (20/596) benchmarking ("mul", "Float32", "Complex{Float32}")...
    done (took 1.195033852 seconds)
    (21/596) benchmarking ("mul", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.19488869 seconds)
    (22/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.197404675 seconds)
    (23/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.196865454 seconds)
    (24/596) benchmarking ("rem type", "Char", "Int64")...
    done (took 1.192541327 seconds)
    (25/596) benchmarking ("sub", "Complex{BigInt}", "UInt64")...
    done (took 1.19600754 seconds)
    (26/596) benchmarking ("div", "BigInt", "Complex{Float64}")...
    done (took 1.205065868 seconds)
    (27/596) benchmarking ("div", "Complex{BigInt}", "Float32")...
    done (took 1.216733598 seconds)
    (28/596) benchmarking ("rem type", "Char", "Bool")...
    done (took 1.194593171 seconds)
    (29/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.194825003 seconds)
    (30/596) benchmarking ("div", "Complex{Float64}", "BigInt")...
    done (took 1.198669517 seconds)
    (31/596) benchmarking ("add", "Complex{BigFloat}", "UInt64")...
    done (took 1.19533534 seconds)
    (32/596) benchmarking ("rem type", "UInt64", "Int64")...
    done (took 1.194783269 seconds)
    (33/596) benchmarking ("sub", "UInt64", "Complex{Int64}")...
    done (took 1.196132208 seconds)
    (34/596) benchmarking ("mul", "UInt64", "Complex{Float64}")...
    done (took 1.196173879 seconds)
    (35/596) benchmarking ("add", "Int64", "Float32")...
    done (took 1.196209851 seconds)
    (36/596) benchmarking ("add", "Complex{Int64}", "Int64")...
    done (took 1.196028405 seconds)
    (37/596) benchmarking ("div", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.205451104 seconds)
    (38/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.214080506 seconds)
    (39/596) benchmarking ("div", "UInt64", "Complex{BigInt}")...
    done (took 1.202820719 seconds)
    (40/596) benchmarking ("add", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.214381628 seconds)
    (41/596) benchmarking ("div", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.19658313 seconds)
    (42/596) benchmarking ("mul", "Float32", "Float64")...
    done (took 1.194126737 seconds)
    (43/596) benchmarking ("sub", "Complex{BigInt}", "Float64")...
    done (took 1.196946154 seconds)
    (44/596) benchmarking ("div", "Complex{Int64}", "BigFloat")...
    done (took 1.196526557 seconds)
    (45/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.198426412 seconds)
    (46/596) benchmarking ("sub", "Float64", "Complex{UInt64}")...
    done (took 1.197394398 seconds)
    (47/596) benchmarking ("mul", "Float32", "Complex{UInt64}")...
    done (took 1.197255887 seconds)
    (48/596) benchmarking ("div", "UInt64", "Float64")...
    done (took 1.19395347 seconds)
    (49/596) benchmarking ("mul", "BigFloat", "BigFloat")...
    done (took 1.195933511 seconds)
    (50/596) benchmarking ("mul", "BigInt", "Complex{Int64}")...
    done (took 1.198767009 seconds)
    (51/596) benchmarking ("div", "Float32", "Float64")...
    done (took 1.200505865 seconds)
    (52/596) benchmarking ("add", "BigFloat", "Complex{BigFloat}")...
    done (took 1.196316137 seconds)
    (53/596) benchmarking ("div", "Int64", "UInt64")...
    done (took 1.193318367 seconds)
    (54/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199762343 seconds)
    (55/596) benchmarking ("add", "Float64", "Complex{BigInt}")...
    done (took 1.197009243 seconds)
    (56/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.202477896 seconds)
    (57/596) benchmarking ("add", "UInt64", "Complex{UInt64}")...
    done (took 1.216036044 seconds)
    (58/596) benchmarking ("sub", "UInt64", "Complex{BigInt}")...
    done (took 1.199115562 seconds)
    (59/596) benchmarking ("add", "Int64", "Complex{BigInt}")...
    done (took 1.20424931 seconds)
    (60/596) benchmarking ("div", "Int64", "Complex{BigInt}")...
    done (took 1.206679334 seconds)
    (61/596) benchmarking ("div", "BigInt", "Complex{Int64}")...
    done (took 1.226381521 seconds)
    (62/596) benchmarking ("div", "Complex{BigFloat}", "Int64")...
    done (took 1.219617221 seconds)
    (63/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.198964224 seconds)
    (64/596) benchmarking ("div", "Complex{UInt64}", "UInt64")...
    done (took 1.198175853 seconds)
    (65/596) benchmarking ("mul", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.206626157 seconds)
    (66/596) benchmarking ("sub", "BigFloat", "Complex{BigInt}")...
    done (took 1.216566782 seconds)
    (67/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.203495246 seconds)
    (68/596) benchmarking ("sub", "Float32", "Float64")...
    done (took 1.213599116 seconds)
    (69/596) benchmarking ("rem type", "Int64", "Int64")...
    done (took 1.194900722 seconds)
    (70/596) benchmarking ("div", "UInt64", "Float32")...
    done (took 1.198564165 seconds)
    (71/596) benchmarking ("div", "BigFloat", "Complex{Float32}")...
    done (took 1.204026763 seconds)
    (72/596) benchmarking ("div", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.226789313 seconds)
    (73/596) benchmarking ("add", "Complex{Float64}", "BigInt")...
    done (took 1.220852737 seconds)
    (74/596) benchmarking ("div", "Complex{Int64}", "Float64")...
    done (took 1.197705766 seconds)
    (75/596) benchmarking ("sub", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.198097173 seconds)
    (76/596) benchmarking ("mul", "UInt64", "Float32")...
    done (took 1.197755566 seconds)
    (77/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.199116454 seconds)
    (78/596) benchmarking ("add", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.198183154 seconds)
    (79/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.204689147 seconds)
    (80/596) benchmarking ("mul", "BigInt", "Complex{Float64}")...
    done (took 1.218770234 seconds)
    (81/596) benchmarking ("sub", "UInt64", "Complex{Float64}")...
    done (took 1.198307936 seconds)
    (82/596) benchmarking ("div", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.199504491 seconds)
    (83/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.207929813 seconds)
    (84/596) benchmarking ("sub", "Complex{BigFloat}", "BigFloat")...
    done (took 1.216429799 seconds)
    (85/596) benchmarking ("mul", "BigFloat", "Complex{UInt64}")...
    done (took 1.199080124 seconds)
    (86/596) benchmarking ("div", "Int64", "Complex{UInt64}")...
    done (took 1.198398986 seconds)
    (87/596) benchmarking ("sub", "Float64", "Complex{Float64}")...
    done (took 1.198711081 seconds)
    (88/596) benchmarking ("div", "Float64", "Complex{Float64}")...
    done (took 1.199371606 seconds)
    (89/596) benchmarking ("add", "BigInt", "BigInt")...
    done (took 1.199810736 seconds)
    (90/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.207285675 seconds)
    (91/596) benchmarking ("add", "Complex{UInt64}", "UInt64")...
    done (took 1.217834121 seconds)
    (92/596) benchmarking ("div", "Int64", "Float32")...
    done (took 1.200547918 seconds)
    (93/596) benchmarking ("sub", "BigInt", "BigFloat")...
    done (took 1.19893142 seconds)
    (94/596) benchmarking ("sub", "Complex{Int64}", "BigFloat")...
    done (took 1.199241946 seconds)
    (95/596) benchmarking ("div", "Float64", "BigFloat")...
    done (took 1.200876341 seconds)
    (96/596) benchmarking ("mul", "Int64", "Complex{UInt64}")...
    done (took 1.199755343 seconds)
    (97/596) benchmarking ("mul", "BigFloat", "BigInt")...
    done (took 1.198811565 seconds)
    (98/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.199841718 seconds)
    (99/596) benchmarking ("sub", "Float64", "Float64")...
    done (took 1.196002357 seconds)
    (100/596) benchmarking ("div", "Complex{Int64}", "Float32")...
    done (took 1.200519093 seconds)
    (101/596) benchmarking ("add", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.199712915 seconds)
    (102/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.202720808 seconds)
    (103/596) benchmarking ("add", "Complex{Float32}", "BigInt")...
    done (took 1.206505687 seconds)
    (104/596) benchmarking ("div", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.200556006 seconds)
    (105/596) benchmarking ("div", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.200338604 seconds)
    (106/596) benchmarking ("div", "BigInt", "Complex{Float32}")...
    done (took 1.207040865 seconds)
    (107/596) benchmarking ("add", "UInt64", "UInt64")...
    done (took 1.217459422 seconds)
    (108/596) benchmarking ("sub", "BigFloat", "Complex{BigFloat}")...
    done (took 1.199835131 seconds)
    (109/596) benchmarking ("div", "Float64", "Complex{BigFloat}")...
    done (took 1.206581808 seconds)
    (110/596) benchmarking ("rem type", "UInt64", "UInt64")...
    done (took 1.200119142 seconds)
    (111/596) benchmarking ("add", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.200402905 seconds)
    (112/596) benchmarking ("rem type", "UInt64", "BigInt")...
    done (took 1.20116128 seconds)
    (113/596) benchmarking ("div", "Complex{Float32}", "BigFloat")...
    done (took 1.204862607 seconds)
    (114/596) benchmarking ("add", "Int64", "Int64")...
    done (took 1.197513318 seconds)
    (115/596) benchmarking ("sub", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.203040274 seconds)
    (116/596) benchmarking ("add", "Float64", "BigInt")...
    done (took 1.20675327 seconds)
    (117/596) benchmarking ("mul", "Float32", "Complex{Float64}")...
    done (took 1.200938399 seconds)
    (118/596) benchmarking ("add", "BigInt", "Complex{Float32}")...
    done (took 1.200812064 seconds)
    (119/596) benchmarking ("mul", "Float64", "Complex{Float64}")...
    done (took 1.200803609 seconds)
    (120/596) benchmarking ("sub", "UInt64", "Complex{Float32}")...
    done (took 1.201475755 seconds)
    (121/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.210325116 seconds)
    (122/596) benchmarking ("mul", "Complex{BigInt}", "Float64")...
    done (took 1.222188463 seconds)
    (123/596) benchmarking ("add", "Float32", "Complex{Float32}")...
    done (took 1.20061919 seconds)
    (124/596) benchmarking ("add", "Float32", "Float32")...
    done (took 1.200355738 seconds)
    (125/596) benchmarking ("sub", "BigInt", "Complex{UInt64}")...
    done (took 1.204636589 seconds)
    (126/596) benchmarking ("sub", "Float32", "Complex{Float64}")...
    done (took 1.210110297 seconds)
    (127/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.20046416 seconds)
    (128/596) benchmarking ("mul", "Complex{BigInt}", "Float32")...
    done (took 1.203750565 seconds)
    (129/596) benchmarking ("mul", "Complex{Float32}", "Float32")...
    done (took 1.20157928 seconds)
    (130/596) benchmarking ("add", "Float64", "UInt64")...
    done (took 1.19902178 seconds)
    (131/596) benchmarking ("sub", "UInt64", "Float64")...
    done (took 1.198002704 seconds)
    (132/596) benchmarking ("sub", "Float64", "Complex{BigInt}")...
    done (took 1.201978062 seconds)
    (133/596) benchmarking ("add", "Complex{Float32}", "UInt64")...
    done (took 1.202415403 seconds)
    (134/596) benchmarking ("add", "Complex{Float64}", "BigFloat")...
    done (took 1.201818962 seconds)
    (135/596) benchmarking ("div", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.201268717 seconds)
    (136/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float64}")...
    done (took 1.203178568 seconds)
    (137/596) benchmarking ("div", "UInt64", "UInt64")...
    done (took 1.200410244 seconds)
    (138/596) benchmarking ("mul", "Float32", "Int64")...
    done (took 1.202046806 seconds)
    (139/596) benchmarking ("div", "Float32", "Complex{Float64}")...
    done (took 1.202428202 seconds)
    (140/596) benchmarking ("sub", "Complex{Float32}", "BigInt")...
    done (took 1.202727084 seconds)
    (141/596) benchmarking ("div", "BigInt", "BigFloat")...
    done (took 1.20328531 seconds)
    (142/596) benchmarking ("add", "Complex{BigInt}", "BigFloat")...
    done (took 1.201098244 seconds)
    (143/596) benchmarking ("add", "Complex{BigInt}", "Float32")...
    done (took 1.202538811 seconds)
    (144/596) benchmarking ("div", "Complex{BigInt}", "BigFloat")...
    done (took 1.204263094 seconds)
    (145/596) benchmarking ("sub", "Complex{UInt64}", "Int64")...
    done (took 1.202605918 seconds)
    (146/596) benchmarking ("sub", "Float32", "Complex{BigInt}")...
    done (took 1.20318093 seconds)
    (147/596) benchmarking ("div", "BigInt", "Complex{BigInt}")...
    done (took 1.208969328 seconds)
    (148/596) benchmarking ("sub", "BigFloat", "Float64")...
    done (took 1.219493795 seconds)
    (149/596) benchmarking ("add", "Float32", "Complex{BigInt}")...
    done (took 1.203023691 seconds)
    (150/596) benchmarking ("mul", "Float64", "BigInt")...
    done (took 1.203595002 seconds)
    (151/596) benchmarking ("sub", "Float64", "UInt64")...
    done (took 1.200328423 seconds)
    (152/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.203736191 seconds)
    (153/596) benchmarking ("mul", "BigFloat", "Complex{Float64}")...
    done (took 1.202738937 seconds)
    (154/596) benchmarking ("sub", "Complex{Int64}", "Int64")...
    done (took 1.203586352 seconds)
    (155/596) benchmarking ("mul", "Float32", "BigFloat")...
    done (took 1.201772111 seconds)
    (156/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.203826891 seconds)
    (157/596) benchmarking ("mul", "Complex{BigFloat}", "Int64")...
    done (took 1.202423278 seconds)
    (158/596) benchmarking ("mul", "Complex{Int64}", "Float64")...
    done (took 1.20320316 seconds)
    (159/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.20292467 seconds)
    (160/596) benchmarking ("div", "Float32", "Complex{Int64}")...
    done (took 1.203910635 seconds)
    (161/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.203154587 seconds)
    (162/596) benchmarking ("sub", "UInt64", "BigInt")...
    done (took 1.204480771 seconds)
    (163/596) benchmarking ("mul", "BigFloat", "Complex{BigFloat}")...
    done (took 1.207139527 seconds)
    (164/596) benchmarking ("add", "Int64", "Complex{Int64}")...
    done (took 1.203231461 seconds)
    (165/596) benchmarking ("div", "Complex{Float32}", "BigInt")...
    done (took 1.206779607 seconds)
    (166/596) benchmarking ("mul", "UInt64", "Complex{BigFloat}")...
    done (took 1.202907489 seconds)
    (167/596) benchmarking ("div", "Int64", "Float64")...
    done (took 1.202475977 seconds)
    (168/596) benchmarking ("mul", "UInt64", "Int64")...
    done (took 1.202939586 seconds)
    (169/596) benchmarking ("div", "Int64", "Complex{Float32}")...
    done (took 1.203634967 seconds)
    (170/596) benchmarking ("add", "BigInt", "BigFloat")...
    done (took 1.203558364 seconds)
    (171/596) benchmarking ("add", "Int64", "Complex{Float32}")...
    done (took 1.204591417 seconds)
    (172/596) benchmarking ("mul", "BigFloat", "Int64")...
    done (took 1.202658025 seconds)
    (173/596) benchmarking ("mul", "Int64", "Complex{BigInt}")...
    done (took 1.207013789 seconds)
    (174/596) benchmarking ("mul", "Float64", "Complex{Float32}")...
    done (took 1.211017261 seconds)
    (175/596) benchmarking ("div", "Float32", "UInt64")...
    done (took 1.204650522 seconds)
    (176/596) benchmarking ("div", "Complex{Int64}", "Int64")...
    done (took 1.203395414 seconds)
    (177/596) benchmarking ("div", "Complex{Int64}", "BigInt")...
    done (took 1.206779995 seconds)
    (178/596) benchmarking ("div", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.203530418 seconds)
    (179/596) benchmarking ("div", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.204463529 seconds)
    (180/596) benchmarking ("sub", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204808616 seconds)
    (181/596) benchmarking ("add", "Complex{Int64}", "BigInt")...
    done (took 1.206402038 seconds)
    (182/596) benchmarking ("sub", "BigFloat", "Complex{Int64}")...
    done (took 1.209758132 seconds)
    (183/596) benchmarking ("sub", "Complex{Float64}", "Float32")...
    done (took 1.205690421 seconds)
    (184/596) benchmarking ("div", "BigFloat", "Complex{BigInt}")...
    done (took 1.211833868 seconds)
    (185/596) benchmarking ("add", "Int64", "Complex{Float64}")...
    done (took 1.223218436 seconds)
    (186/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.20505702 seconds)
    (187/596) benchmarking ("add", "Complex{Int64}", "Float32")...
    done (took 1.205034028 seconds)
    (188/596) benchmarking ("add", "BigFloat", "Complex{Int64}")...
    done (took 1.20401695 seconds)
    (189/596) benchmarking ("sub", "Complex{BigFloat}", "UInt64")...
    done (took 1.203821025 seconds)
    (190/596) benchmarking ("div", "Complex{Int64}", "Complex{Float64}")...
    done (took 1.204357809 seconds)
    (191/596) benchmarking ("mul", "BigInt", "Complex{UInt64}")...
    done (took 1.207197476 seconds)
    (192/596) benchmarking ("rem type", "Int64", "UInt64")...
    done (took 1.211621452 seconds)
    (193/596) benchmarking ("div", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.21571755 seconds)
    (194/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.228316837 seconds)
    (195/596) benchmarking ("mul", "Int64", "BigInt")...
    done (took 1.205459972 seconds)
    (196/596) benchmarking ("sub", "UInt64", "Float32")...
    done (took 1.209091144 seconds)
    (197/596) benchmarking ("add", "BigInt", "UInt64")...
    done (took 1.205783619 seconds)
    (198/596) benchmarking ("div", "Float64", "Complex{Float32}")...
    done (took 1.209920541 seconds)
    (199/596) benchmarking ("div", "Complex{BigInt}", "Float64")...
    done (took 1.209211066 seconds)
    (200/596) benchmarking ("div", "Float64", "Complex{UInt64}")...
    done (took 1.205575624 seconds)
    (201/596) benchmarking ("sub", "Complex{Int64}", "Float32")...
    done (took 1.20564691 seconds)
    (202/596) benchmarking ("add", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.205315584 seconds)
    (203/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.205452079 seconds)
    (204/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.205836938 seconds)
    (205/596) benchmarking ("div", "Complex{UInt64}", "BigFloat")...
    done (took 1.206823186 seconds)
    (206/596) benchmarking ("sub", "Complex{Float64}", "Int64")...
    done (took 1.205291954 seconds)
    (207/596) benchmarking ("sub", "BigFloat", "UInt64")...
    done (took 1.205832302 seconds)
    (208/596) benchmarking ("div", "Float32", "Complex{Float32}")...
    done (took 1.206928657 seconds)
    (209/596) benchmarking ("rem type", "Char", "UInt64")...
    done (took 1.20546624 seconds)
    (210/596) benchmarking ("div", "UInt64", "Complex{UInt64}")...
    done (took 1.206404527 seconds)
    (211/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.2071043 seconds)
    (212/596) benchmarking ("add", "Complex{Float32}", "BigFloat")...
    done (took 1.205996978 seconds)
    (213/596) benchmarking ("add", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.206586988 seconds)
    (214/596) benchmarking ("add", "Int64", "Float64")...
    done (took 1.203594775 seconds)
    (215/596) benchmarking ("mul", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.206958802 seconds)
    (216/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.206460963 seconds)
    (217/596) benchmarking ("div", "Complex{BigFloat}", "UInt64")...
    done (took 1.205849778 seconds)
    (218/596) benchmarking ("mul", "Float64", "UInt64")...
    done (took 1.203945403 seconds)
    (219/596) benchmarking ("sub", "BigFloat", "BigFloat")...
    done (took 1.206295695 seconds)
    (220/596) benchmarking ("div", "BigInt", "Int64")...
    done (took 1.206400585 seconds)
    (221/596) benchmarking ("add", "Float32", "Complex{UInt64}")...
    done (took 1.206945702 seconds)
    (222/596) benchmarking ("mul", "UInt64", "Complex{UInt64}")...
    done (took 1.206062732 seconds)
    (223/596) benchmarking ("div", "Float32", "Complex{BigFloat}")...
    done (took 1.211909304 seconds)
    (224/596) benchmarking ("add", "Float64", "Float64")...
    done (took 1.205160799 seconds)
    (225/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.209028548 seconds)
    (226/596) benchmarking ("mul", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.207633192 seconds)
    (227/596) benchmarking ("sub", "BigInt", "Complex{BigFloat}")...
    done (took 1.206954226 seconds)
    (228/596) benchmarking ("mul", "Int64", "BigFloat")...
    done (took 1.206065624 seconds)
    (229/596) benchmarking ("mul", "Int64", "Complex{Float32}")...
    done (took 1.207265122 seconds)
    (230/596) benchmarking ("add", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.209317829 seconds)
    (231/596) benchmarking ("sub", "Complex{BigFloat}", "Float64")...
    done (took 1.207245021 seconds)
    (232/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.214286891 seconds)
    (233/596) benchmarking ("div", "BigFloat", "Float32")...
    done (took 1.224797311 seconds)
    (234/596) benchmarking ("add", "BigFloat", "Complex{Float32}")...
    done (took 1.208096056 seconds)
    (235/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.214074995 seconds)
    (236/596) benchmarking ("add", "Int64", "BigFloat")...
    done (took 1.225650729 seconds)
    (237/596) benchmarking ("sub", "UInt64", "BigFloat")...
    done (took 1.206755943 seconds)
    (238/596) benchmarking ("mul", "Complex{Float32}", "BigInt")...
    done (took 1.209281164 seconds)
    (239/596) benchmarking ("sub", "Float32", "Complex{Int64}")...
    done (took 1.207640046 seconds)
    (240/596) benchmarking ("mul", "Float64", "Float64")...
    done (took 1.205017248 seconds)
    (241/596) benchmarking ("sub", "Complex{Int64}", "BigInt")...
    done (took 1.210461494 seconds)
    (242/596) benchmarking ("add", "Complex{Float32}", "Float32")...
    done (took 1.214847195 seconds)
    (243/596) benchmarking ("rem type", "Bool", "Bool")...
    done (took 1.209411262 seconds)
    (244/596) benchmarking ("mul", "Complex{UInt64}", "UInt64")...
    done (took 1.208335964 seconds)
    (245/596) benchmarking ("add", "Complex{Float64}", "Float64")...
    done (took 1.209097898 seconds)
    (246/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.209230821 seconds)
    (247/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.208539405 seconds)
    (248/596) benchmarking ("div", "BigFloat", "Complex{UInt64}")...
    done (took 1.215464917 seconds)
    (249/596) benchmarking ("sub", "Int64", "Int64")...
    done (took 1.22353058 seconds)
    (250/596) benchmarking ("mul", "Complex{UInt64}", "BigFloat")...
    done (took 1.208158203 seconds)
    (251/596) benchmarking ("sub", "Complex{Float32}", "Float32")...
    done (took 1.208861537 seconds)
    (252/596) benchmarking ("div", "UInt64", "BigInt")...
    done (took 1.209697983 seconds)
    (253/596) benchmarking ("div", "Float64", "Float32")...
    done (took 1.20685234 seconds)
    (254/596) benchmarking ("add", "BigInt", "Complex{Float64}")...
    done (took 1.209364209 seconds)
    (255/596) benchmarking ("sub", "BigFloat", "Complex{Float64}")...
    done (took 1.209083402 seconds)
    (256/596) benchmarking ("add", "BigInt", "Float64")...
    done (took 1.209223039 seconds)
    (257/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.21039094 seconds)
    (258/596) benchmarking ("sub", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.209225255 seconds)
    (259/596) benchmarking ("div", "Complex{Float32}", "UInt64")...
    done (took 1.207997099 seconds)
    (260/596) benchmarking ("add", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.208934275 seconds)
    (261/596) benchmarking ("add", "Complex{Float64}", "UInt64")...
    done (took 1.209944307 seconds)
    (262/596) benchmarking ("div", "Complex{Float64}", "UInt64")...
    done (took 1.210126023 seconds)
    (263/596) benchmarking ("add", "Complex{Int64}", "Float64")...
    done (took 1.208992142 seconds)
    (264/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.211159158 seconds)
    (265/596) benchmarking ("mul", "Float64", "Complex{Int64}")...
    done (took 1.216028666 seconds)
    (266/596) benchmarking ("div", "Int64", "Complex{BigFloat}")...
    done (took 1.214934083 seconds)
    (267/596) benchmarking ("add", "BigFloat", "Float32")...
    done (took 1.208049927 seconds)
    (268/596) benchmarking ("div", "Float32", "BigInt")...
    done (took 1.210553366 seconds)
    (269/596) benchmarking ("sub", "BigInt", "UInt64")...
    done (took 1.21063374 seconds)
    (270/596) benchmarking ("sub", "Float32", "UInt64")...
    done (took 1.212584005 seconds)
    (271/596) benchmarking ("add", "Float32", "Complex{BigFloat}")...
    done (took 1.209995217 seconds)
    (272/596) benchmarking ("sub", "Float64", "Complex{Int64}")...
    done (took 1.209327651 seconds)
    (273/596) benchmarking ("mul", "Complex{BigInt}", "BigFloat")...
    done (took 1.210116703 seconds)
    (274/596) benchmarking ("div", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.220977069 seconds)
    (275/596) benchmarking ("sub", "Int64", "Complex{UInt64}")...
    done (took 1.23281684 seconds)
    (276/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.216410921 seconds)
    (277/596) benchmarking ("mul", "Complex{BigFloat}", "Float64")...
    done (took 1.227142934 seconds)
    (278/596) benchmarking ("mul", "Float32", "Complex{Int64}")...
    done (took 1.209763297 seconds)
    (279/596) benchmarking ("div", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.215388378 seconds)
    (280/596) benchmarking ("add", "Int64", "BigInt")...
    done (took 1.228004269 seconds)
    (281/596) benchmarking ("mul", "Float64", "BigFloat")...
    done (took 1.21368669 seconds)
    (282/596) benchmarking ("sub", "Complex{UInt64}", "Complex{BigFloat}")...
    done (took 1.209921609 seconds)
    (283/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.210148742 seconds)
    (284/596) benchmarking ("add", "Complex{BigFloat}", "BigInt")...
    done (took 1.210545775 seconds)
    (285/596) benchmarking ("mul", "Complex{Int64}", "BigFloat")...
    done (took 1.209564568 seconds)
    (286/596) benchmarking ("add", "Float32", "Float64")...
    done (took 1.208499066 seconds)
    (287/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.211003509 seconds)
    (288/596) benchmarking ("add", "UInt64", "Complex{Float32}")...
    done (took 1.210483137 seconds)
    (289/596) benchmarking ("mul", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.211270156 seconds)
    (290/596) benchmarking ("add", "Complex{BigInt}", "BigInt")...
    done (took 1.21140091 seconds)
    (291/596) benchmarking ("mul", "UInt64", "UInt64")...
    done (took 1.214666016 seconds)
    (292/596) benchmarking ("div", "Float32", "Complex{UInt64}")...
    done (took 1.211160406 seconds)
    (293/596) benchmarking ("mul", "BigFloat", "Complex{Int64}")...
    done (took 1.210987387 seconds)
    (294/596) benchmarking ("div", "UInt64", "Complex{Float64}")...
    done (took 1.211663018 seconds)
    (295/596) benchmarking ("mul", "Complex{Float32}", "Float64")...
    done (took 1.212068173 seconds)
    (296/596) benchmarking ("add", "Complex{UInt64}", "Float32")...
    done (took 1.211625529 seconds)
    (297/596) benchmarking ("sub", "Complex{BigFloat}", "Int64")...
    done (took 1.211226626 seconds)
    (298/596) benchmarking ("add", "Complex{Float32}", "Int64")...
    done (took 1.211627222 seconds)
    (299/596) benchmarking ("div", "Complex{Float64}", "BigFloat")...
    done (took 1.212557507 seconds)
    (300/596) benchmarking ("sub", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.212285021 seconds)
    (301/596) benchmarking ("sub", "BigFloat", "BigInt")...
    done (took 1.210903386 seconds)
    (302/596) benchmarking ("sub", "Complex{UInt64}", "BigFloat")...
    done (took 1.210918268 seconds)
    (303/596) benchmarking ("div", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.217637062 seconds)
    (304/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.23032054 seconds)
    (305/596) benchmarking ("mul", "Complex{Float32}", "BigFloat")...
    done (took 1.212538267 seconds)
    (306/596) benchmarking ("mul", "BigFloat", "Complex{BigInt}")...
    done (took 1.211202792 seconds)
    (307/596) benchmarking ("add", "Int64", "Complex{BigFloat}")...
    done (took 1.211748637 seconds)
    (308/596) benchmarking ("sub", "BigFloat", "Int64")...
    done (took 1.211393041 seconds)
    (309/596) benchmarking ("mul", "BigInt", "Float64")...
    done (took 1.212927326 seconds)
    (310/596) benchmarking ("mul", "Complex{UInt64}", "Float64")...
    done (took 1.212142019 seconds)
    (311/596) benchmarking ("mul", "BigInt", "Complex{BigInt}")...
    done (took 1.215326804 seconds)
    (312/596) benchmarking ("div", "Complex{Int64}", "UInt64")...
    done (took 1.218094447 seconds)
    (313/596) benchmarking ("add", "Complex{UInt64}", "BigInt")...
    done (took 1.215037387 seconds)
    (314/596) benchmarking ("mul", "Complex{BigFloat}", "Float32")...
    done (took 1.218905947 seconds)
    (315/596) benchmarking ("sub", "Complex{BigInt}", "BigInt")...
    done (took 1.213817592 seconds)
    (316/596) benchmarking ("div", "BigFloat", "Complex{BigFloat}")...
    done (took 1.220041704 seconds)
    (317/596) benchmarking ("add", "Float64", "Complex{UInt64}")...
    done (took 1.212433209 seconds)
    (318/596) benchmarking ("mul", "Complex{BigInt}", "BigInt")...
    done (took 1.215605589 seconds)
    (319/596) benchmarking ("sub", "Complex{Int64}", "UInt64")...
    done (took 1.219459811 seconds)
    (320/596) benchmarking ("div", "Int64", "Int64")...
    done (took 1.209002012 seconds)
    (321/596) benchmarking ("mul", "UInt64", "BigFloat")...
    done (took 1.212218113 seconds)
    (322/596) benchmarking ("add", "Float32", "BigFloat")...
    done (took 1.212277484 seconds)
    (323/596) benchmarking ("mul", "Int64", "Complex{Float64}")...
    done (took 1.212687258 seconds)
    (324/596) benchmarking ("div", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.220288381 seconds)
    (325/596) benchmarking ("mul", "Complex{Float64}", "Int64")...
    done (took 1.231359568 seconds)
    (326/596) benchmarking ("rem type", "Bool", "BigInt")...
    done (took 1.21452232 seconds)
    (327/596) benchmarking ("sub", "Int64", "Complex{Int64}")...
    done (took 1.215971204 seconds)
    (328/596) benchmarking ("add", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.214389133 seconds)
    (329/596) benchmarking ("sub", "UInt64", "Complex{UInt64}")...
    done (took 1.215122653 seconds)
    (330/596) benchmarking ("sub", "Float32", "Float32")...
    done (took 1.214704631 seconds)
    (331/596) benchmarking ("div", "UInt64", "Complex{Int64}")...
    done (took 1.213375219 seconds)
    (332/596) benchmarking ("div", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.213131636 seconds)
    (333/596) benchmarking ("mul", "Complex{Float64}", "Float32")...
    done (took 1.214043914 seconds)
    (334/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float64}")...
    done (took 1.222264514 seconds)
    (335/596) benchmarking ("mul", "UInt64", "BigInt")...
    done (took 1.233518753 seconds)
    (336/596) benchmarking ("sub", "UInt64", "Complex{BigFloat}")...
    done (took 1.216622767 seconds)
    (337/596) benchmarking ("sub", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.214968464 seconds)
    (338/596) benchmarking ("mul", "Int64", "Int64")...
    done (took 1.210679726 seconds)
    (339/596) benchmarking ("div", "Complex{Float64}", "Float64")...
    done (took 1.214136138 seconds)
    (340/596) benchmarking ("sub", "Int64", "Float32")...
    done (took 1.214923461 seconds)
    (341/596) benchmarking ("add", "BigFloat", "BigFloat")...
    done (took 1.212942242 seconds)
    (342/596) benchmarking ("mul", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.216078202 seconds)
    (343/596) benchmarking ("div", "Complex{Float64}", "Int64")...
    done (took 1.213931365 seconds)
    (344/596) benchmarking ("sub", "BigFloat", "Complex{Float32}")...
    done (took 1.214063476 seconds)
    (345/596) benchmarking ("mul", "BigInt", "Complex{BigFloat}")...
    done (took 1.214494244 seconds)
    (346/596) benchmarking ("mul", "BigFloat", "Float32")...
    done (took 1.213343811 seconds)
    (347/596) benchmarking ("sub", "Int64", "UInt64")...
    done (took 1.214357066 seconds)
    (348/596) benchmarking ("div", "Complex{UInt64}", "Float64")...
    done (took 1.214258232 seconds)
    (349/596) benchmarking ("div", "Complex{Float32}", "Float32")...
    done (took 1.215386444 seconds)
    (350/596) benchmarking ("rem type", "Bool", "Int64")...
    done (took 1.212925075 seconds)
    (351/596) benchmarking ("sub", "Float32", "Int64")...
    done (took 1.2145308 seconds)
    (352/596) benchmarking ("div", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.220638145 seconds)
    (353/596) benchmarking ("rem type", "Int64", "BigInt")...
    done (took 1.234298344 seconds)
    (354/596) benchmarking ("sub", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.217300091 seconds)
    (355/596) benchmarking ("sub", "Float32", "Complex{UInt64}")...
    done (took 1.21484146 seconds)
    (356/596) benchmarking ("div", "Float32", "Complex{BigInt}")...
    done (took 1.221410477 seconds)
    (357/596) benchmarking ("sub", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.233197675 seconds)
    (358/596) benchmarking ("div", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.221768455 seconds)
    (359/596) benchmarking ("add", "Complex{UInt64}", "Int64")...
    done (took 1.233869219 seconds)
    (360/596) benchmarking ("sub", "Float64", "BigInt")...
    done (took 1.215008953 seconds)
    (361/596) benchmarking ("sub", "Float64", "Complex{Float32}")...
    done (took 1.21498809 seconds)
    (362/596) benchmarking ("sub", "UInt64", "Int64")...
    done (took 1.215329546 seconds)
    (363/596) benchmarking ("div", "Int64", "BigInt")...
    done (took 1.216933831 seconds)
    (364/596) benchmarking ("add", "BigFloat", "UInt64")...
    done (took 1.214996492 seconds)
    (365/596) benchmarking ("mul", "BigFloat", "Complex{Float32}")...
    done (took 1.215853906 seconds)
    (366/596) benchmarking ("sub", "Complex{Int64}", "Float64")...
    done (took 1.215409539 seconds)
    (367/596) benchmarking ("mul", "BigInt", "BigInt")...
    done (took 1.216847457 seconds)
    (368/596) benchmarking ("rem type", "Int64", "Bool")...
    done (took 1.21841839 seconds)
    (369/596) benchmarking ("add", "Complex{Float64}", "Int64")...
    done (took 1.215884401 seconds)
    (370/596) benchmarking ("div", "BigInt", "Float64")...
    done (took 1.217634379 seconds)
    (371/596) benchmarking ("div", "Complex{BigInt}", "Int64")...
    done (took 1.216110627 seconds)
    (372/596) benchmarking ("mul", "Complex{Int64}", "UInt64")...
    done (took 1.216059702 seconds)
    (373/596) benchmarking ("add", "Complex{BigFloat}", "Int64")...
    done (took 1.216386646 seconds)
    (374/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.223471636 seconds)
    (375/596) benchmarking ("mul", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.235151 seconds)
    (376/596) benchmarking ("sub", "Complex{BigInt}", "Int64")...
    done (took 1.216962329 seconds)
    (377/596) benchmarking ("mul", "Complex{Float32}", "Complex{UInt64}")...
    done (took 1.219008234 seconds)
    (378/596) benchmarking ("div", "UInt64", "Int64")...
    done (took 1.21292955 seconds)
    (379/596) benchmarking ("add", "Complex{BigInt}", "Int64")...
    done (took 1.217436067 seconds)
    (380/596) benchmarking ("mul", "Complex{UInt64}", "Int64")...
    done (took 1.219456908 seconds)
    (381/596) benchmarking ("add", "UInt64", "Complex{Float64}")...
    done (took 1.217202206 seconds)
    (382/596) benchmarking ("div", "BigFloat", "Int64")...
    done (took 1.215161716 seconds)
    (383/596) benchmarking ("sub", "Complex{UInt64}", "BigInt")...
    done (took 1.217973299 seconds)
    (384/596) benchmarking ("add", "Complex{UInt64}", "Complex{BigInt}")...
    done (took 1.225486149 seconds)
    (385/596) benchmarking ("add", "Complex{UInt64}", "Complex{Float32}")...
    done (took 1.22214523 seconds)
    (386/596) benchmarking ("add", "Complex{Int64}", "BigFloat")...
    done (took 1.217485895 seconds)
    (387/596) benchmarking ("sub", "Complex{Float64}", "UInt64")...
    done (took 1.216995342 seconds)
    (388/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigInt}")...
    done (took 1.216355736 seconds)
    (389/596) benchmarking ("add", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.216897348 seconds)
    (390/596) benchmarking ("add", "UInt64", "Float32")...
    done (took 1.217016088 seconds)
    (391/596) benchmarking ("sub", "Complex{Float32}", "Int64")...
    done (took 1.216841529 seconds)
    (392/596) benchmarking ("add", "Complex{Float64}", "Float32")...
    done (took 1.216442963 seconds)
    (393/596) benchmarking ("mul", "UInt64", "Complex{Float32}")...
    done (took 1.21716811 seconds)
    (394/596) benchmarking ("div", "Int64", "BigFloat")...
    done (took 1.217629355 seconds)
    (395/596) benchmarking ("add", "Float64", "Complex{Float32}")...
    done (took 1.216904704 seconds)
    (396/596) benchmarking ("mul", "Complex{Float32}", "Complex{BigFloat}")...
    done (took 1.219895052 seconds)
    (397/596) benchmarking ("add", "Float32", "Int64")...
    done (took 1.216495573 seconds)
    (398/596) benchmarking ("add", "Float32", "BigInt")...
    done (took 1.217846484 seconds)
    (399/596) benchmarking ("div", "Complex{BigFloat}", "BigFloat")...
    done (took 1.217197366 seconds)
    (400/596) benchmarking ("add", "BigInt", "Int64")...
    done (took 1.218720424 seconds)
    (401/596) benchmarking ("div", "BigFloat", "Complex{Int64}")...
    done (took 1.226878253 seconds)
    (402/596) benchmarking ("sub", "Complex{Float32}", "Float64")...
    done (took 1.235505069 seconds)
    (403/596) benchmarking ("mul", "BigInt", "Float32")...
    done (took 1.218366425 seconds)
    (404/596) benchmarking ("div", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.2176124 seconds)
    (405/596) benchmarking ("rem type", "BigInt", "UInt64")...
    done (took 1.219402502 seconds)
    (406/596) benchmarking ("sub", "Float32", "Complex{BigFloat}")...
    done (took 1.217575905 seconds)
    (407/596) benchmarking ("sub", "BigFloat", "Complex{UInt64}")...
    done (took 1.218323784 seconds)
    (408/596) benchmarking ("div", "Float64", "Complex{Int64}")...
    done (took 1.217942893 seconds)
    (409/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Float32}")...
    done (took 1.217970897 seconds)
    (410/596) benchmarking ("add", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.218112985 seconds)
    (411/596) benchmarking ("add", "UInt64", "Complex{BigInt}")...
    done (took 1.218708366 seconds)
    (412/596) benchmarking ("add", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.223145181 seconds)
    (413/596) benchmarking ("div", "BigFloat", "UInt64")...
    done (took 1.223824302 seconds)
    (414/596) benchmarking ("mul", "Complex{Float64}", "BigInt")...
    done (took 1.221037348 seconds)
    (415/596) benchmarking ("mul", "Complex{BigFloat}", "BigInt")...
    done (took 1.218091223 seconds)
    (416/596) benchmarking ("mul", "Float64", "Complex{UInt64}")...
    done (took 1.219187338 seconds)
    (417/596) benchmarking ("add", "Float64", "Complex{BigFloat}")...
    done (took 1.218394583 seconds)
    (418/596) benchmarking ("div", "BigFloat", "BigFloat")...
    done (took 1.219534496 seconds)
    (419/596) benchmarking ("mul", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.21834412 seconds)
    (420/596) benchmarking ("div", "Complex{UInt64}", "Int64")...
    done (took 1.219098666 seconds)
    (421/596) benchmarking ("add", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.219522003 seconds)
    (422/596) benchmarking ("sub", "Complex{BigInt}", "Float32")...
    done (took 1.219471195 seconds)
    (423/596) benchmarking ("div", "Complex{Float32}", "Float64")...
    done (took 1.218680504 seconds)
    (424/596) benchmarking ("div", "UInt64", "BigFloat")...
    done (took 1.219506774 seconds)
    (425/596) benchmarking ("mul", "BigFloat", "UInt64")...
    done (took 1.217747467 seconds)
    (426/596) benchmarking ("mul", "Float32", "UInt64")...
    done (took 1.218605412 seconds)
    (427/596) benchmarking ("sub", "BigInt", "Float64")...
    done (took 1.217664373 seconds)
    (428/596) benchmarking ("mul", "Complex{Int64}", "Complex{Float32}")...
    done (took 1.219504014 seconds)
    (429/596) benchmarking ("sub", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.222146272 seconds)
    (430/596) benchmarking ("mul", "Complex{BigFloat}", "UInt64")...
    done (took 1.22515791 seconds)
    (431/596) benchmarking ("add", "Complex{BigFloat}", "Complex{UInt64}")...
    done (took 1.219223887 seconds)
    (432/596) benchmarking ("sub", "Int64", "Float64")...
    done (took 1.217211038 seconds)
    (433/596) benchmarking ("mul", "Int64", "UInt64")...
    done (took 1.2189527 seconds)
    (434/596) benchmarking ("add", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.219761762 seconds)
    (435/596) benchmarking ("div", "BigFloat", "BigInt")...
    done (took 1.2182219 seconds)
    (436/596) benchmarking ("add", "Complex{BigFloat}", "Float64")...
    done (took 1.219602226 seconds)
    (437/596) benchmarking ("div", "Float64", "Complex{BigInt}")...
    done (took 1.22627107 seconds)
    (438/596) benchmarking ("add", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.239748063 seconds)
    (439/596) benchmarking ("mul", "Complex{BigInt}", "UInt64")...
    done (took 1.227826125 seconds)
    (440/596) benchmarking ("sub", "BigInt", "Int64")...
    done (took 1.227184984 seconds)
    (441/596) benchmarking ("mul", "Int64", "Complex{Int64}")...
    done (took 1.223574112 seconds)
    (442/596) benchmarking ("add", "BigFloat", "Complex{UInt64}")...
    done (took 1.219476571 seconds)
    (443/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Int64}")...
    done (took 1.222384443 seconds)
    (444/596) benchmarking ("sub", "Complex{Float64}", "BigFloat")...
    done (took 1.226291835 seconds)
    (445/596) benchmarking ("mul", "BigInt", "BigFloat")...
    done (took 1.219278847 seconds)
    (446/596) benchmarking ("add", "BigFloat", "Complex{Float64}")...
    done (took 1.220564472 seconds)
    (447/596) benchmarking ("sub", "Complex{UInt64}", "Float64")...
    done (took 1.22087686 seconds)
    (448/596) benchmarking ("div", "Complex{BigFloat}", "Float32")...
    done (took 1.219950956 seconds)
    (449/596) benchmarking ("sub", "Int64", "BigInt")...
    done (took 1.220330114 seconds)
    (450/596) benchmarking ("sub", "Complex{BigFloat}", "BigInt")...
    done (took 1.22306818 seconds)
    (451/596) benchmarking ("mul", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.21965925 seconds)
    (452/596) benchmarking ("div", "BigFloat", "Complex{Float64}")...
    done (took 1.22659743 seconds)
    (453/596) benchmarking ("sub", "Complex{BigFloat}", "Float32")...
    done (took 1.237729043 seconds)
    (454/596) benchmarking ("sub", "Float32", "BigFloat")...
    done (took 1.219270761 seconds)
    (455/596) benchmarking ("div", "Complex{Float64}", "Complex{BigInt}")...
    done (took 1.22722049 seconds)
    (456/596) benchmarking ("add", "Complex{BigInt}", "Float64")...
    done (took 1.239067761 seconds)
    (457/596) benchmarking ("sub", "Complex{Float64}", "Complex{Float32}")...
    done (took 1.221437632 seconds)
    (458/596) benchmarking ("add", "Complex{BigInt}", "UInt64")...
    done (took 1.221967658 seconds)
    (459/596) benchmarking ("sub", "Complex{BigInt}", "BigFloat")...
    done (took 1.223050494 seconds)
    (460/596) benchmarking ("add", "BigInt", "Complex{BigFloat}")...
    done (took 1.221580768 seconds)
    (461/596) benchmarking ("add", "Float64", "Float32")...
    done (took 1.218543931 seconds)
    (462/596) benchmarking ("div", "Complex{UInt64}", "Float32")...
    done (took 1.221183487 seconds)
    (463/596) benchmarking ("mul", "Int64", "Complex{BigFloat}")...
    done (took 1.221263484 seconds)
    (464/596) benchmarking ("div", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.227289203 seconds)
    (465/596) benchmarking ("mul", "Float32", "Complex{BigFloat}")...
    done (took 1.240085401 seconds)
    (466/596) benchmarking ("sub", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.221292049 seconds)
    (467/596) benchmarking ("sub", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.222610442 seconds)
    (468/596) benchmarking ("rem type", "BigInt", "BigInt")...
    done (took 1.220821027 seconds)
    (469/596) benchmarking ("add", "BigInt", "Complex{BigInt}")...
    done (took 1.22218562 seconds)
    (470/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float64}")...
    done (took 1.224527493 seconds)
    (471/596) benchmarking ("mul", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.221731859 seconds)
    (472/596) benchmarking ("sub", "Complex{Float64}", "BigInt")...
    done (took 1.221920299 seconds)
    (473/596) benchmarking ("mul", "UInt64", "Float64")...
    done (took 1.218614885 seconds)
    (474/596) benchmarking ("div", "Complex{BigInt}", "UInt64")...
    done (took 1.221584082 seconds)
    (475/596) benchmarking ("sub", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22145806 seconds)
    (476/596) benchmarking ("sub", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.222251549 seconds)
    (477/596) benchmarking ("add", "UInt64", "Float64")...
    done (took 1.220055768 seconds)
    (478/596) benchmarking ("add", "UInt64", "BigFloat")...
    done (took 1.221177841 seconds)
    (479/596) benchmarking ("add", "BigFloat", "BigInt")...
    done (took 1.221565358 seconds)
    (480/596) benchmarking ("mul", "UInt64", "Complex{BigInt}")...
    done (took 1.224356965 seconds)
    (481/596) benchmarking ("sub", "Int64", "BigFloat")...
    done (took 1.226956035 seconds)
    (482/596) benchmarking ("mul", "Float64", "Int64")...
    done (took 1.219314794 seconds)
    (483/596) benchmarking ("add", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.223583773 seconds)
    (484/596) benchmarking ("add", "Complex{UInt64}", "BigFloat")...
    done (took 1.222366919 seconds)
    (485/596) benchmarking ("add", "BigInt", "Float32")...
    done (took 1.221608794 seconds)
    (486/596) benchmarking ("add", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.22304318 seconds)
    (487/596) benchmarking ("add", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.223361661 seconds)
    (488/596) benchmarking ("mul", "Float64", "Float32")...
    done (took 1.221211061 seconds)
    (489/596) benchmarking ("sub", "Float64", "Int64")...
    done (took 1.220256865 seconds)
    (490/596) benchmarking ("sub", "BigFloat", "Float32")...
    done (took 1.223112132 seconds)
    (491/596) benchmarking ("add", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.22300117 seconds)
    (492/596) benchmarking ("add", "Complex{BigFloat}", "Float32")...
    done (took 1.222991193 seconds)
    (493/596) benchmarking ("mul", "BigInt", "Complex{Float32}")...
    done (took 1.224599104 seconds)
    (494/596) benchmarking ("add", "BigFloat", "Int64")...
    done (took 1.222042445 seconds)
    (495/596) benchmarking ("mul", "BigInt", "Int64")...
    done (took 1.224404489 seconds)
    (496/596) benchmarking ("add", "Float64", "Int64")...
    done (took 1.222863151 seconds)
    (497/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Int64}")...
    done (took 1.222783466 seconds)
    (498/596) benchmarking ("add", "Complex{BigInt}", "Complex{UInt64}")...
    done (took 1.22433993 seconds)
    (499/596) benchmarking ("sub", "Int64", "Complex{BigInt}")...
    done (took 1.231046464 seconds)
    (500/596) benchmarking ("add", "UInt64", "Int64")...
    done (took 1.228552243 seconds)
    (501/596) benchmarking ("div", "Float64", "Int64")...
    done (took 1.221510862 seconds)
    (502/596) benchmarking ("div", "BigInt", "UInt64")...
    done (took 1.222533914 seconds)
    (503/596) benchmarking ("sub", "BigInt", "Float32")...
    done (took 1.223582742 seconds)
    (504/596) benchmarking ("mul", "Float64", "Complex{BigInt}")...
    done (took 1.225108091 seconds)
    (505/596) benchmarking ("mul", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.221786272 seconds)
    (506/596) benchmarking ("add", "Float32", "Complex{Float64}")...
    done (took 1.224506737 seconds)
    (507/596) benchmarking ("add", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.224273683 seconds)
    (508/596) benchmarking ("mul", "Float64", "Complex{BigFloat}")...
    done (took 1.22313967 seconds)
    (509/596) benchmarking ("add", "Float32", "UInt64")...
    done (took 1.224279946 seconds)
    (510/596) benchmarking ("mul", "Complex{Float64}", "Complex{UInt64}")...
    done (took 1.223735619 seconds)
    (511/596) benchmarking ("mul", "Float32", "Float32")...
    done (took 1.223929914 seconds)
    (512/596) benchmarking ("add", "BigInt", "Complex{UInt64}")...
    done (took 1.225756978 seconds)
    (513/596) benchmarking ("div", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.237678701 seconds)
    (514/596) benchmarking ("mul", "Complex{Float32}", "Int64")...
    done (took 1.242930149 seconds)
    (515/596) benchmarking ("sub", "Complex{BigInt}", "Complex{BigFloat}")...
    done (took 1.223732956 seconds)
    (516/596) benchmarking ("sub", "Complex{Float32}", "BigFloat")...
    done (took 1.224287083 seconds)
    (517/596) benchmarking ("mul", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.226370155 seconds)
    (518/596) benchmarking ("div", "Complex{Float32}", "Int64")...
    done (took 1.224519362 seconds)
    (519/596) benchmarking ("sub", "Float64", "Float32")...
    done (took 1.221688499 seconds)
    (520/596) benchmarking ("mul", "Complex{Float32}", "UInt64")...
    done (took 1.224895134 seconds)
    (521/596) benchmarking ("div", "BigInt", "Float32")...
    done (took 1.225853985 seconds)
    (522/596) benchmarking ("sub", "BigInt", "Complex{BigInt}")...
    done (took 1.225986732 seconds)
    (523/596) benchmarking ("add", "Float64", "Complex{Int64}")...
    done (took 1.230264604 seconds)
    (524/596) benchmarking ("add", "Complex{Int64}", "UInt64")...
    done (took 1.225042298 seconds)
    (525/596) benchmarking ("mul", "Complex{BigInt}", "Complex{Float32}")...
    done (took 1.230723109 seconds)
    (526/596) benchmarking ("sub", "Complex{BigFloat}", "Complex{Int64}")...
    done (took 1.242537212 seconds)
    (527/596) benchmarking ("mul", "BigInt", "UInt64")...
    done (took 1.225835626 seconds)
    (528/596) benchmarking ("sub", "Float32", "Complex{Float32}")...
    done (took 1.228059222 seconds)
    (529/596) benchmarking ("mul", "Complex{UInt64}", "BigInt")...
    done (took 1.227152763 seconds)
    (530/596) benchmarking ("add", "Float64", "BigFloat")...
    done (took 1.230687244 seconds)
    (531/596) benchmarking ("mul", "Float32", "Complex{BigInt}")...
    done (took 1.226796885 seconds)
    (532/596) benchmarking ("sub", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.226581858 seconds)
    (533/596) benchmarking ("mul", "Complex{Float64}", "UInt64")...
    done (took 1.225329647 seconds)
    (534/596) benchmarking ("sub", "BigInt", "Complex{Int64}")...
    done (took 1.228752777 seconds)
    (535/596) benchmarking ("div", "BigInt", "Complex{BigFloat}")...
    done (took 1.238213592 seconds)
    (536/596) benchmarking ("div", "Complex{Float32}", "Complex{Int64}")...
    done (took 1.224850106 seconds)
    (537/596) benchmarking ("mul", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.234170156 seconds)
    (538/596) benchmarking ("div", "Complex{Int64}", "Complex{BigFloat}")...
    done (took 1.250528732 seconds)
    (539/596) benchmarking ("sub", "Float32", "BigInt")...
    done (took 1.244274304 seconds)
    (540/596) benchmarking ("mul", "Float32", "BigInt")...
    done (took 1.227032527 seconds)
    (541/596) benchmarking ("mul", "Complex{Int64}", "Int64")...
    done (took 1.226052845 seconds)
    (542/596) benchmarking ("add", "Complex{BigFloat}", "BigFloat")...
    done (took 1.224899574 seconds)
    (543/596) benchmarking ("sub", "Complex{Float64}", "Float64")...
    done (took 1.225607258 seconds)
    (544/596) benchmarking ("div", "BigInt", "BigInt")...
    done (took 1.228678575 seconds)
    (545/596) benchmarking ("add", "UInt64", "Complex{Int64}")...
    done (took 1.225926762 seconds)
    (546/596) benchmarking ("mul", "Complex{Int64}", "Float32")...
    done (took 1.22603894 seconds)
    (547/596) benchmarking ("div", "Complex{Float32}", "Complex{Float32}")...
    done (took 1.225594385 seconds)
    (548/596) benchmarking ("div", "Int64", "Complex{Int64}")...
    done (took 1.226371328 seconds)
    (549/596) benchmarking ("add", "UInt64", "BigInt")...
    done (took 1.227502637 seconds)
    (550/596) benchmarking ("add", "Complex{Float32}", "Complex{BigInt}")...
    done (took 1.230354567 seconds)
    (551/596) benchmarking ("sub", "BigInt", "Complex{Float32}")...
    done (took 1.226683393 seconds)
    (552/596) benchmarking ("rem type", "BigInt", "Bool")...
    done (took 1.227879302 seconds)
    (553/596) benchmarking ("sub", "UInt64", "UInt64")...
    done (took 1.22677949 seconds)
    (554/596) benchmarking ("sub", "Float64", "BigFloat")...
    done (took 1.226349989 seconds)
    (555/596) benchmarking ("div", "Float32", "BigFloat")...
    done (took 1.227126912 seconds)
    (556/596) benchmarking ("div", "Float64", "UInt64")...
    done (took 1.22458441 seconds)
    (557/596) benchmarking ("add", "Complex{Float32}", "Float64")...
    done (took 1.227021585 seconds)
    (558/596) benchmarking ("rem type", "UInt64", "Bool")...
    done (took 1.227442678 seconds)
    (559/596) benchmarking ("mul", "Complex{Float64}", "Float64")...
    done (took 1.226121943 seconds)
    (560/596) benchmarking ("add", "Float64", "Complex{Float64}")...
    done (took 1.226709189 seconds)
    (561/596) benchmarking ("sub", "Complex{UInt64}", "UInt64")...
    done (took 1.227983683 seconds)
    (562/596) benchmarking ("add", "BigFloat", "Complex{BigInt}")...
    done (took 1.227217962 seconds)
    (563/596) benchmarking ("div", "Complex{Int64}", "Complex{BigInt}")...
    done (took 1.238292346 seconds)
    (564/596) benchmarking ("div", "Float64", "BigInt")...
    done (took 1.251127636 seconds)
    (565/596) benchmarking ("mul", "Complex{UInt64}", "Float32")...
    done (took 1.227671538 seconds)
    (566/596) benchmarking ("mul", "UInt64", "Complex{Int64}")...
    done (took 1.226877394 seconds)
    (567/596) benchmarking ("div", "Float64", "Float64")...
    done (took 1.224949834 seconds)
    (568/596) benchmarking ("div", "Complex{BigInt}", "BigInt")...
    done (took 1.230866382 seconds)
    (569/596) benchmarking ("mul", "Complex{BigInt}", "Int64")...
    done (took 1.230029274 seconds)
    (570/596) benchmarking ("add", "Complex{BigInt}", "Complex{BigInt}")...
    done (took 1.236199511 seconds)
    (571/596) benchmarking ("div", "Float32", "Float32")...
    done (took 1.233222086 seconds)
    (572/596) benchmarking ("sub", "Int64", "Complex{Float64}")...
    done (took 1.227412403 seconds)
    (573/596) benchmarking ("div", "Complex{Float64}", "Float32")...
    done (took 1.228377193 seconds)
    (574/596) benchmarking ("sub", "BigInt", "Complex{Float64}")...
    done (took 1.229202003 seconds)
    (575/596) benchmarking ("mul", "Complex{Float64}", "Complex{Int64}")...
    done (took 1.227078054 seconds)
    (576/596) benchmarking ("rem type", "BigInt", "Int64")...
    done (took 1.227296396 seconds)
    (577/596) benchmarking ("sub", "Float64", "Complex{BigFloat}")...
    done (took 1.228721812 seconds)
    (578/596) benchmarking ("add", "UInt64", "Complex{BigFloat}")...
    done (took 1.227678082 seconds)
    (579/596) benchmarking ("add", "Complex{BigFloat}", "Complex{BigFloat}")...
    done (took 1.2282659 seconds)
    (580/596) benchmarking ("mul", "Int64", "Float64")...
    done (took 1.225251563 seconds)
    (581/596) benchmarking ("div", "BigInt", "Complex{UInt64}")...
    done (took 1.238791658 seconds)
    (582/596) benchmarking ("sub", "Complex{Int64}", "Complex{Int64}")...
    done (took 1.25100948 seconds)
    (583/596) benchmarking ("div", "UInt64", "Complex{BigFloat}")...
    done (took 1.232220364 seconds)
    (584/596) benchmarking ("add", "BigFloat", "Float64")...
    done (took 1.229513577 seconds)
    (585/596) benchmarking ("add", "Complex{Int64}", "Complex{UInt64}")...
    done (took 1.22874329 seconds)
    (586/596) benchmarking ("sub", "Complex{UInt64}", "Float32")...
    done (took 1.227414195 seconds)
    (587/596) benchmarking ("add", "Complex{Float64}", "Complex{BigFloat}")...
    done (took 1.229458804 seconds)
    (588/596) benchmarking ("div", "Complex{UInt64}", "Complex{Float64}")...
    done (took 1.227405739 seconds)
    (589/596) benchmarking ("div", "Complex{Float64}", "Complex{Float64}")...
    done (took 1.228088593 seconds)
    (590/596) benchmarking ("div", "Complex{BigFloat}", "Float64")...
    done (took 1.229497026 seconds)
    (591/596) benchmarking ("rem type", "Char", "BigInt")...
    done (took 1.230404941 seconds)
    (592/596) benchmarking ("div", "Complex{UInt64}", "Complex{UInt64}")...
    done (took 1.231470431 seconds)
    (593/596) benchmarking ("rem type", "Bool", "UInt64")...
    done (took 1.228711456 seconds)
    (594/596) benchmarking ("add", "Int64", "UInt64")...
    done (took 1.229656441 seconds)
    (595/596) benchmarking ("add", "BigInt", "Complex{Int64}")...
    done (took 1.231993557 seconds)
    (596/596) benchmarking ("div", "Float32", "Int64")...
    done (took 1.234440674 seconds)
  done (took 724.678012495 seconds)
  (13/25) benchmarking "mod2pi"...
    (1/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.227600083 seconds)
    (2/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.226175064 seconds)
    (3/21) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.2259526 seconds)
    (4/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.226608325 seconds)
    (5/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.227116894 seconds)
    (6/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.225888433 seconds)
    (7/21) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.22649399 seconds)
    (8/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.226981454 seconds)
    (9/21) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.227483901 seconds)
    (10/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.227131212 seconds)
    (11/21) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.226336598 seconds)
    (12/21) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226866923 seconds)
    (13/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.226570265 seconds)
    (14/21) benchmarking ("argument reduction (easy) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.226146981 seconds)
    (15/21) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.227011077 seconds)
    (16/21) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.227712282 seconds)
    (17/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.226943383 seconds)
    (18/21) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.227521732 seconds)
    (19/21) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.227875685 seconds)
    (20/21) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.227758831 seconds)
    (21/21) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.22792679 seconds)
  done (took 26.915376032 seconds)
  (14/25) benchmarking "cosh"...
    (1/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "negative argument", "Float32")...
    done (took 1.23075598 seconds)
    (2/22) benchmarking ("zero", "Float64")...
    done (took 1.227988896 seconds)
    (3/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.228000796 seconds)
    (4/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.230523291 seconds)
    (5/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.228204874 seconds)
    (6/22) benchmarking ("zero", "Float32")...
    done (took 1.230749415 seconds)
    (7/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "negative argument", "Float64")...
    done (took 1.229087477 seconds)
    (8/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.230252187 seconds)
    (9/22) benchmarking ("0.00024414062f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.230991356 seconds)
    (10/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.228799252 seconds)
    (11/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "positive argument", "Float32")...
    done (took 1.231163242 seconds)
    (12/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.230559668 seconds)
    (13/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "negative argument", "Float64")...
    done (took 1.228541214 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2.7755602085408512e-17", "positive argument", "Float64")...
    done (took 1.228540168 seconds)
    (15/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.228986938 seconds)
    (16/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.231283883 seconds)
    (17/22) benchmarking ("9f0 <= abs(x) < 88.72283f0", "negative argument", "Float32")...
    done (took 1.230736897 seconds)
    (18/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.22899223 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 0.00024414062f0", "positive argument", "Float32")...
    done (took 1.231214172 seconds)
    (20/22) benchmarking ("2.7755602085408512e-17 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.229643244 seconds)
    (21/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.230740621 seconds)
    (22/22) benchmarking ("22.0 <= abs(x) < 709.7822265633563", "positive argument", "Float64")...
    done (took 1.228991963 seconds)
  done (took 28.205130555 seconds)
  (15/25) benchmarking "fastmath"...
    (1/49) benchmarking ("mul", "Complex{Int64}")...
    done (took 1.232722217 seconds)
    (2/49) benchmarking ("sub", "Complex{Int64}")...
    done (took 1.233244071 seconds)
    (3/49) benchmarking ("sub", "Complex{BigFloat}")...
    done (took 1.230915565 seconds)
    (4/49) benchmarking ("div", "Float64")...
    done (took 1.229306699 seconds)
    (5/49) benchmarking ("sub", "Complex{Float32}")...
    done (took 1.232416624 seconds)
    (6/49) benchmarking ("mul", "Float64")...
    done (took 1.228797994 seconds)
    (7/49) benchmarking ("div", "Complex{Int64}")...
    done (took 1.232895204 seconds)
    (8/49) benchmarking ("mul", "Float32")...
    done (took 1.232407778 seconds)
    (9/49) benchmarking ("div", "Complex{Float32}")...
    done (took 1.231829124 seconds)
    (10/49) benchmarking ("div", "BigFloat")...
    done (took 1.233289341 seconds)
    (11/49) benchmarking ("add", "BigFloat")...
    done (took 1.231553718 seconds)
    (12/49) benchmarking ("add", "BigInt")...
    done (took 1.233572522 seconds)
    (13/49) benchmarking ("add", "Complex{BigInt}")...
    done (took 1.237105734 seconds)
    (14/49) benchmarking ("sub", "Float64")...
    done (took 1.235708757 seconds)
    (15/49) benchmarking ("div", "BigInt")...
    done (took 1.233800023 seconds)
    (16/49) benchmarking ("add", "Float32")...
    done (took 1.232862229 seconds)
    (17/49) benchmarking "13786"...
    done (took 1.37689423 seconds)
    (18/49) benchmarking ("div", "Complex{Float64}")...
    done (took 1.232986361 seconds)
    (19/49) benchmarking ("add", "Complex{Int64}")...
    done (took 1.233167581 seconds)
    (20/49) benchmarking ("mul", "Complex{Float64}")...
    done (took 1.233344105 seconds)
    (21/49) benchmarking ("sub", "Int64")...
    done (took 1.230190083 seconds)
    (22/49) benchmarking ("div", "Complex{BigFloat}")...
    done (took 1.23782089 seconds)
    (23/49) benchmarking ("mul", "Int64")...
    done (took 1.247668336 seconds)
    (24/49) benchmarking ("div", "Int64")...
    done (took 1.230556488 seconds)
    (25/49) benchmarking ("sub", "BigFloat")...
    done (took 1.232058868 seconds)
    (26/49) benchmarking ("div", "Complex{UInt64}")...
    done (took 1.233524921 seconds)
    (27/49) benchmarking ("mul", "Complex{Float32}")...
    done (took 1.233710353 seconds)
    (28/49) benchmarking ("add", "UInt64")...
    done (took 1.232858612 seconds)
    (29/49) benchmarking ("sub", "Complex{Float64}")...
    done (took 1.233814352 seconds)
    (30/49) benchmarking ("mul", "BigInt")...
    done (took 1.235618601 seconds)
    (31/49) benchmarking ("add", "Complex{UInt64}")...
    done (took 1.23723686 seconds)
    (32/49) benchmarking ("sub", "Float32")...
    done (took 1.233693142 seconds)
    (33/49) benchmarking ("add", "Complex{BigFloat}")...
    done (took 1.232944831 seconds)
    (34/49) benchmarking ("mul", "Complex{BigFloat}")...
    done (took 1.235531352 seconds)
    (35/49) benchmarking ("mul", "BigFloat")...
    done (took 1.23326644 seconds)
    (36/49) benchmarking ("sub", "BigInt")...
    done (took 1.23398175 seconds)
    (37/49) benchmarking ("add", "Complex{Float32}")...
    done (took 1.236973987 seconds)
    (38/49) benchmarking ("sub", "Complex{UInt64}")...
    done (took 1.234831098 seconds)
    (39/49) benchmarking ("add", "Int64")...
    done (took 1.232252811 seconds)
    (40/49) benchmarking ("sub", "UInt64")...
    done (took 1.233758963 seconds)
    (41/49) benchmarking ("mul", "Complex{BigInt}")...
    done (took 1.242911248 seconds)
    (42/49) benchmarking ("div", "UInt64")...
    done (took 1.251017996 seconds)
    (43/49) benchmarking ("mul", "Complex{UInt64}")...
    done (took 1.234522083 seconds)
    (44/49) benchmarking ("div", "Complex{BigInt}")...
    done (took 1.238953076 seconds)
    (45/49) benchmarking ("mul", "UInt64")...
    done (took 1.251770695 seconds)
    (46/49) benchmarking ("div", "Float32")...
    done (took 1.23501295 seconds)
    (47/49) benchmarking ("sub", "Complex{BigInt}")...
    done (took 1.236341647 seconds)
    (48/49) benchmarking ("add", "Complex{Float64}")...
    done (took 1.240226013 seconds)
    (49/49) benchmarking ("add", "Float64")...
    done (took 1.232606458 seconds)
  done (took 61.807284326 seconds)
  (16/25) benchmarking "atan2"...
    (1/68) benchmarking ("x zero", "y negative", "Float32")...
    done (took 1.234913809 seconds)
    (2/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float32")...
    done (took 1.234867138 seconds)
    (3/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float64")...
    done (took 1.233067377 seconds)
    (4/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.234504328 seconds)
    (5/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float32")...
    done (took 1.235228665 seconds)
    (6/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float32")...
    done (took 1.235236119 seconds)
    (7/68) benchmarking ("abs(y/x) small", "y positive", "x positive", "Float32")...
    done (took 1.235406134 seconds)
    (8/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.235681232 seconds)
    (9/68) benchmarking ("y zero", "y negative", "x negative", "Float64")...
    done (took 1.23161377 seconds)
    (10/68) benchmarking ("x zero", "y negative", "Float64")...
    done (took 1.232392455 seconds)
    (11/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float32")...
    done (took 1.234828108 seconds)
    (12/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float64")...
    done (took 1.232712527 seconds)
    (13/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.232249279 seconds)
    (14/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float32")...
    done (took 1.234374725 seconds)
    (15/68) benchmarking ("x one", "Float32")...
    done (took 1.235238439 seconds)
    (16/68) benchmarking ("abs(y/x) high", "y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.232022217 seconds)
    (17/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.23276376 seconds)
    (18/68) benchmarking ("y finite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.233275663 seconds)
    (19/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float64")...
    done (took 1.234519855 seconds)
    (20/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float64")...
    done (took 1.233306595 seconds)
    (21/68) benchmarking ("abs(y/x) high", "y positive", "x negative", "Float64")...
    done (took 1.232576768 seconds)
    (22/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float32")...
    done (took 1.23532503 seconds)
    (23/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float32")...
    done (took 1.235886262 seconds)
    (24/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float64")...
    done (took 1.234623338 seconds)
    (25/68) benchmarking ("y finite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.235275918 seconds)
    (26/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float64")...
    done (took 1.233167724 seconds)
    (27/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float64")...
    done (took 1.233593211 seconds)
    (28/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float32")...
    done (took 1.23552913 seconds)
    (29/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x positive", "Float64")...
    done (took 1.233587455 seconds)
    (30/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float64")...
    done (took 1.233862039 seconds)
    (31/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float32")...
    done (took 1.236785983 seconds)
    (32/68) benchmarking ("y infinite", "y positive", "x infinite", "x negative", "Float32")...
    done (took 1.235493811 seconds)
    (33/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x positive", "Float32")...
    done (took 1.237076131 seconds)
    (34/68) benchmarking ("x one", "Float64")...
    done (took 1.235448891 seconds)
    (35/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.234226036 seconds)
    (36/68) benchmarking ("y zero", "y negative", "x positive", "Float32")...
    done (took 1.236741227 seconds)
    (37/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x negative", "Float32")...
    done (took 1.236416708 seconds)
    (38/68) benchmarking ("y infinite", "y positive", "x finite", "x negative", "Float64")...
    done (took 1.233894418 seconds)
    (39/68) benchmarking ("y infinite", "y positive", "x infinite", "x positive", "Float32")...
    done (took 1.237172602 seconds)
    (40/68) benchmarking ("y zero", "y negative", "x positive", "Float64")...
    done (took 1.235295817 seconds)
    (41/68) benchmarking ("y zero", "y negative", "x negative", "Float32")...
    done (took 1.236412817 seconds)
    (42/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float32")...
    done (took 1.236451761 seconds)
    (43/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float32")...
    done (took 1.237140185 seconds)
    (44/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float32")...
    done (took 1.236941577 seconds)
    (45/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float64")...
    done (took 1.235076457 seconds)
    (46/68) benchmarking ("abs(y/x) high", "y negative", "x positive", "Float64")...
    done (took 1.235232178 seconds)
    (47/68) benchmarking ("y infinite", "y negative", "x finite", "x negative", "Float64")...
    done (took 1.234743482 seconds)
    (48/68) benchmarking ("y zero", "y positive", "x positive", "Float64")...
    done (took 1.234204919 seconds)
    (49/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float64")...
    done (took 1.234119705 seconds)
    (50/68) benchmarking ("y zero", "y positive", "x negative", "Float32")...
    done (took 1.237103092 seconds)
    (51/68) benchmarking ("abs(y/x) small", "y positive", "x negative", "Float32")...
    done (took 1.236788947 seconds)
    (52/68) benchmarking ("abs(y/x) safe (small)", "y positive", "x negative", "Float64")...
    done (took 1.234617949 seconds)
    (53/68) benchmarking ("y finite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.236923486 seconds)
    (54/68) benchmarking ("y infinite", "y negative", "x finite", "x positive", "Float64")...
    done (took 1.235016864 seconds)
    (55/68) benchmarking ("y infinite", "y negative", "x infinite", "x positive", "Float32")...
    done (took 1.237817232 seconds)
    (56/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x positive", "Float32")...
    done (took 1.237540103 seconds)
    (57/68) benchmarking ("y infinite", "y positive", "x finite", "x positive", "Float64")...
    done (took 1.235119836 seconds)
    (58/68) benchmarking ("x zero", "y positive", "Float64")...
    done (took 1.235835687 seconds)
    (59/68) benchmarking ("x zero", "y positive", "Float32")...
    done (took 1.237634025 seconds)
    (60/68) benchmarking ("abs(y/x) safe (large)", "y positive", "x positive", "Float64")...
    done (took 1.235819921 seconds)
    (61/68) benchmarking ("y zero", "y positive", "x negative", "Float64")...
    done (took 1.235339043 seconds)
    (62/68) benchmarking ("y infinite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.237629791 seconds)
    (63/68) benchmarking ("abs(y/x) safe (large)", "y negative", "x negative", "Float64")...
    done (took 1.234939808 seconds)
    (64/68) benchmarking ("y zero", "y positive", "x positive", "Float32")...
    done (took 1.238381121 seconds)
    (65/68) benchmarking ("abs(y/x) high", "y negative", "x negative", "Float32")...
    done (took 1.237618212 seconds)
    (66/68) benchmarking ("abs(y/x) safe (small)", "y negative", "x negative", "Float64")...
    done (took 1.236648012 seconds)
    (67/68) benchmarking ("abs(y/x) high", "y positive", "x positive", "Float64")...
    done (took 1.236697882 seconds)
    (68/68) benchmarking ("y finite", "y negative", "x infinite", "x negative", "Float32")...
    done (took 1.237953909 seconds)
  done (took 85.151026628 seconds)
  (17/25) benchmarking "sincos"...
    (1/62) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.238553148 seconds)
    (2/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32")...
    done (took 1.238526937 seconds)
    (3/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.238245979 seconds)
    (4/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.238180608 seconds)
    (5/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.239373828 seconds)
    (6/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32")...
    done (took 1.237987612 seconds)
    (7/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64")...
    done (took 1.238851686 seconds)
    (8/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32")...
    done (took 1.239128691 seconds)
    (9/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.239849059 seconds)
    (10/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64")...
    done (took 1.238579254 seconds)
    (11/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.23951809 seconds)
    (12/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.239500997 seconds)
    (13/62) benchmarking ("no reduction", "negative argument", "Float32")...
    done (took 1.239446088 seconds)
    (14/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.23874683 seconds)
    (15/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.238886699 seconds)
    (16/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64")...
    done (took 1.239276336 seconds)
    (17/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32")...
    done (took 1.239032391 seconds)
    (18/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.238747104 seconds)
    (19/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64")...
    done (took 1.239407933 seconds)
    (20/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64")...
    done (took 1.239039492 seconds)
    (21/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32")...
    done (took 1.240549257 seconds)
    (22/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.239887979 seconds)
    (23/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64")...
    done (took 1.238983924 seconds)
    (24/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.240144377 seconds)
    (25/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64")...
    done (took 1.240680473 seconds)
    (26/62) benchmarking ("no reduction", "negative argument", "Float64")...
    done (took 1.239708134 seconds)
    (27/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64")...
    done (took 1.240825357 seconds)
    (28/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.23959825 seconds)
    (29/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.240044548 seconds)
    (30/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32")...
    done (took 1.240163248 seconds)
    (31/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64")...
    done (took 1.240857243 seconds)
    (32/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32")...
    done (took 1.240902903 seconds)
    (33/62) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.240375009 seconds)
    (34/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32")...
    done (took 1.240442028 seconds)
    (35/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32")...
    done (took 1.241422232 seconds)
    (36/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32")...
    done (took 1.240025863 seconds)
    (37/62) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.240991521 seconds)
    (38/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.240605016 seconds)
    (39/62) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32")...
    done (took 1.240457188 seconds)
    (40/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64")...
    done (took 1.241395232 seconds)
    (41/62) benchmarking ("no reduction", "positive argument", "Float64")...
    done (took 1.241079203 seconds)
    (42/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64")...
    done (took 1.240922389 seconds)
    (43/62) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64")...
    done (took 1.240750763 seconds)
    (44/62) benchmarking ("no reduction", "positive argument", "Float32")...
    done (took 1.241637515 seconds)
    (45/62) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.242376751 seconds)
    (46/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32")...
    done (took 1.241391637 seconds)
    (47/62) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32")...
    done (took 1.242412536 seconds)
    (48/62) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32")...
    done (took 1.242287982 seconds)
    (49/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32")...
    done (took 1.241923704 seconds)
    (50/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64")...
    done (took 1.241855778 seconds)
    (51/62) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32")...
    done (took 1.241142817 seconds)
    (52/62) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64")...
    done (took 1.241806819 seconds)
    (53/62) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64")...
    done (took 1.24193669 seconds)
    (54/62) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64")...
    done (took 1.241534788 seconds)
    (55/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32")...
    done (took 1.243104363 seconds)
    (56/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32")...
    done (took 1.242273366 seconds)
    (57/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64")...
    done (took 1.241845377 seconds)
    (58/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64")...
    done (took 1.242192698 seconds)
    (59/62) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64")...
    done (took 1.242713405 seconds)
    (60/62) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32")...
    done (took 1.242233305 seconds)
    (61/62) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64")...
    done (took 1.242109373 seconds)
    (62/62) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32")...
    done (took 1.242788225 seconds)
  done (took 78.068523175 seconds)
  (18/25) benchmarking "cbrt"...
    (1/20) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.241941658 seconds)
    (2/20) benchmarking ("medium", "negative argument", "Float32")...
    done (took 1.24352193 seconds)
    (3/20) benchmarking ("one", "Float64")...
    done (took 1.240949418 seconds)
    (4/20) benchmarking ("zero", "Float64")...
    done (took 1.240015714 seconds)
    (5/20) benchmarking ("large", "positive argument", "Float32")...
    done (took 1.242581472 seconds)
    (6/20) benchmarking ("large", "negative argument", "Float64")...
    done (took 1.240409457 seconds)
    (7/20) benchmarking ("large", "negative argument", "Float32")...
    done (took 1.243157632 seconds)
    (8/20) benchmarking ("zero", "Float32")...
    done (took 1.242243924 seconds)
    (9/20) benchmarking ("medium", "positive argument", "Float32")...
    done (took 1.242993229 seconds)
    (10/20) benchmarking ("one", "Float32")...
    done (took 1.243215533 seconds)
    (11/20) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.243137459 seconds)
    (12/20) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.240375348 seconds)
    (13/20) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.239517413 seconds)
    (14/20) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.243740365 seconds)
    (15/20) benchmarking ("large", "positive argument", "Float64")...
    done (took 1.240709318 seconds)
    (16/20) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.240279347 seconds)
    (17/20) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.240768062 seconds)
    (18/20) benchmarking ("medium", "positive argument", "Float64")...
    done (took 1.240617329 seconds)
    (19/20) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.244525866 seconds)
    (20/20) benchmarking ("medium", "negative argument", "Float64")...
    done (took 1.241793876 seconds)
  done (took 25.998217076 seconds)
  (19/25) benchmarking "atanh"...
    (1/16) benchmarking ("one", "Float64")...
    done (took 1.241777402 seconds)
    (2/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.243564055 seconds)
    (3/16) benchmarking ("zero", "Float64")...
    done (took 1.240512679 seconds)
    (4/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.241208336 seconds)
    (5/16) benchmarking ("zero", "Float32")...
    done (took 1.243940485 seconds)
    (6/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.241200469 seconds)
    (7/16) benchmarking ("one", "Float32")...
    done (took 1.243573912 seconds)
    (8/16) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.244584424 seconds)
    (9/16) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.241466785 seconds)
    (10/16) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.242910242 seconds)
    (11/16) benchmarking ("2^-28 <= abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.243857087 seconds)
    (12/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.243408502 seconds)
    (13/16) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.241761822 seconds)
    (14/16) benchmarking ("2^-28 <= abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.242230114 seconds)
    (15/16) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.244868928 seconds)
    (16/16) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.241692912 seconds)
  done (took 21.044898142 seconds)
  (20/25) benchmarking "floatexp"...
    (1/55) benchmarking ("exp10", "agument reduction, k = 2", "Float64")...
    done (took 1.243307658 seconds)
    (2/55) benchmarking ("exp10", "taylor expansion", "Float32")...
    done (took 1.244033685 seconds)
    (3/55) benchmarking ("frexp", "subnorm", "Float64")...
    done (took 1.24350437 seconds)
    (4/55) benchmarking ("frexp", "norm", "Float64")...
    done (took 1.244737702 seconds)
    (5/55) benchmarking ("exp", "no agument reduction, k = 9", "Float64")...
    done (took 1.242336978 seconds)
    (6/55) benchmarking ("exponent", "norm", "Float32")...
    done (took 1.242339096 seconds)
    (7/55) benchmarking ("exp10", "overflow", "Float32")...
    done (took 1.245193958 seconds)
    (8/55) benchmarking ("ldexp", "inf -> inf", "Float64")...
    done (took 1.241966619 seconds)
    (9/55) benchmarking ("exp10", "underflow", "Float64")...
    done (took 1.242345625 seconds)
    (10/55) benchmarking ("ldexp", "norm -> subnorm", "Float32")...
    done (took 1.244394964 seconds)
    (11/55) benchmarking ("ldexp", "norm -> inf", "Float32")...
    done (took 1.244768702 seconds)
    (12/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float32")...
    done (took 1.24444517 seconds)
    (13/55) benchmarking ("exp", "underflow", "Float32")...
    done (took 1.244984595 seconds)
    (14/55) benchmarking ("frexp", "inf", "Float64")...
    done (took 1.244293799 seconds)
    (15/55) benchmarking ("exponent", "norm", "Float64")...
    done (took 1.242662614 seconds)
    (16/55) benchmarking ("exp10", "agument reduction, k = 83", "Float32")...
    done (took 1.244932013 seconds)
    (17/55) benchmarking ("exp", "underflow", "Float64")...
    done (took 1.242035974 seconds)
    (18/55) benchmarking ("ldexp", "norm -> inf", "Float64")...
    done (took 1.243083329 seconds)
    (19/55) benchmarking ("exp10", "underflow", "Float32")...
    done (took 1.244444065 seconds)
    (20/55) benchmarking ("frexp", "norm", "Float32")...
    done (took 1.244977028 seconds)
    (21/55) benchmarking ("exp10", "normal path -> small, k = -1075", "Float64")...
    done (took 1.243717472 seconds)
    (22/55) benchmarking ("exponent", "subnorm", "Float32")...
    done (took 1.242619948 seconds)
    (23/55) benchmarking ("exp10", "direct approx, k = 0", "Float32")...
    done (took 1.246201611 seconds)
    (24/55) benchmarking ("significand", "norm", "Float32")...
    done (took 1.245755176 seconds)
    (25/55) benchmarking ("exp", "fast path, k = 1", "Float64")...
    done (took 1.243451194 seconds)
    (26/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float64")...
    done (took 1.244964403 seconds)
    (27/55) benchmarking ("ldexp", "subnorm -> norm", "Float64")...
    done (took 1.243392717 seconds)
    (28/55) benchmarking ("exp10", "direct approx, k = 0", "Float64")...
    done (took 1.243210615 seconds)
    (29/55) benchmarking ("significand", "norm", "Float64")...
    done (took 1.243098103 seconds)
    (30/55) benchmarking ("exp", "no agument reduction, k = 9", "Float32")...
    done (took 1.245155921 seconds)
    (31/55) benchmarking ("exp", "normal path, k = 2", "Float64")...
    done (took 1.243770324 seconds)
    (32/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float64")...
    done (took 1.244087339 seconds)
    (33/55) benchmarking ("exp", "small argument path", "Float64")...
    done (took 1.243409254 seconds)
    (34/55) benchmarking ("ldexp", "norm -> norm", "Float64")...
    done (took 1.243039316 seconds)
    (35/55) benchmarking ("frexp", "inf", "Float32")...
    done (took 1.246576482 seconds)
    (36/55) benchmarking ("significand", "subnorm", "Float64")...
    done (took 1.244109061 seconds)
    (37/55) benchmarking ("exp", "overflow", "Float32")...
    done (took 1.246795416 seconds)
    (38/55) benchmarking ("exp", "fast path, k = 1", "Float32")...
    done (took 1.247559083 seconds)
    (39/55) benchmarking ("exp10", "agument reduction, k = 2", "Float32")...
    done (took 1.246259182 seconds)
    (40/55) benchmarking ("exp10", "normal path -> small, k = -150", "Float32")...
    done (took 1.246631324 seconds)
    (41/55) benchmarking ("ldexp", "inf -> inf", "Float32")...
    done (took 1.246999762 seconds)
    (42/55) benchmarking ("exp10", "no agument reduction, k = 1", "Float64")...
    done (took 1.243772679 seconds)
    (43/55) benchmarking ("exp", "normal path -> small, k = -1045", "Float32")...
    done (took 1.247381624 seconds)
    (44/55) benchmarking ("significand", "subnorm", "Float32")...
    done (took 1.24643476 seconds)
    (45/55) benchmarking ("exp", "overflow", "Float64")...
    done (took 1.244033955 seconds)
    (46/55) benchmarking ("exp", "small argument path", "Float32")...
    done (took 1.247285587 seconds)
    (47/55) benchmarking ("exp10", "overflow", "Float64")...
    done (took 1.245260344 seconds)
    (48/55) benchmarking ("ldexp", "norm -> subnorm", "Float64")...
    done (took 1.246151881 seconds)
    (49/55) benchmarking ("exponent", "subnorm", "Float64")...
    done (took 1.245025054 seconds)
    (50/55) benchmarking ("exp10", "agument reduction, k = 83", "Float64")...
    done (took 1.244742215 seconds)
    (51/55) benchmarking ("exp", "normal path, k = 2", "Float32")...
    done (took 1.247412314 seconds)
    (52/55) benchmarking ("frexp", "subnorm", "Float32")...
    done (took 1.247065699 seconds)
    (53/55) benchmarking ("ldexp", "norm -> norm", "Float32")...
    done (took 1.247700791 seconds)
    (54/55) benchmarking ("ldexp", "subnorm -> subnorm", "Float32")...
    done (took 1.247390912 seconds)
    (55/55) benchmarking ("ldexp", "subnorm -> norm", "Float32")...
    done (took 1.248340485 seconds)
  done (took 69.627375777 seconds)
  (21/25) benchmarking "acos"...
    (1/18) benchmarking ("small", "negative argument", "Float32")...
    done (took 1.247493968 seconds)
    (2/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float32")...
    done (took 1.248284383 seconds)
    (3/18) benchmarking ("one", "negative argument", "Float64")...
    done (took 1.244884606 seconds)
    (4/18) benchmarking ("one", "positive argument", "Float32")...
    done (took 1.248102313 seconds)
    (5/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float32")...
    done (took 1.247882597 seconds)
    (6/18) benchmarking ("zero", "Float64")...
    done (took 1.246251628 seconds)
    (7/18) benchmarking ("zero", "Float32")...
    done (took 1.247773809 seconds)
    (8/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float64")...
    done (took 1.246532563 seconds)
    (9/18) benchmarking ("small", "negative argument", "Float64")...
    done (took 1.244815553 seconds)
    (10/18) benchmarking ("one", "negative argument", "Float32")...
    done (took 1.247685059 seconds)
    (11/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float64")...
    done (took 1.246273624 seconds)
    (12/18) benchmarking ("0.5 <= abs(x) < 1", "negative argument", "Float32")...
    done (took 1.248091474 seconds)
    (13/18) benchmarking ("small", "positive argument", "Float64")...
    done (took 1.245180905 seconds)
    (14/18) benchmarking ("abs(x) < 0.5", "negative argument", "Float32")...
    done (took 1.248355915 seconds)
    (15/18) benchmarking ("abs(x) < 0.5", "positive argument", "Float64")...
    done (took 1.247194117 seconds)
    (16/18) benchmarking ("small", "positive argument", "Float32")...
    done (took 1.248137025 seconds)
    (17/18) benchmarking ("one", "positive argument", "Float64")...
    done (took 1.246781864 seconds)
    (18/18) benchmarking ("0.5 <= abs(x) < 1", "positive argument", "Float64")...
    done (took 1.246718054 seconds)
  done (took 23.611894372 seconds)
  (22/25) benchmarking "tanh"...
    (1/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "positive argument", "Float64")...
    done (took 1.24752109 seconds)
    (2/22) benchmarking ("1.0 <= abs(x) < 22.0", "positive argument", "Float64")...
    done (took 1.24691065 seconds)
    (3/22) benchmarking ("0 <= abs(x) < 2f0^-12", "negative argument", "Float32")...
    done (took 1.248725199 seconds)
    (4/22) benchmarking ("0 <= abs(x) < 2.0^-28", "positive argument", "Float64")...
    done (took 1.245674808 seconds)
    (5/22) benchmarking ("zero", "Float64")...
    done (took 1.245926014 seconds)
    (6/22) benchmarking ("1f0 <= abs(x) < 9f0", "negative argument", "Float32")...
    done (took 1.249918794 seconds)
    (7/22) benchmarking ("very large", "positive argument", "Float64")...
    done (took 1.247235529 seconds)
    (8/22) benchmarking ("zero", "Float32")...
    done (took 1.248682109 seconds)
    (9/22) benchmarking ("very small", "positive argument", "Float32")...
    done (took 1.248636367 seconds)
    (10/22) benchmarking ("2.0^-28 <= abs(x) < 1.0", "negative argument", "Float64")...
    done (took 1.247283825 seconds)
    (11/22) benchmarking ("very small", "negative argument", "Float64")...
    done (took 1.246344241 seconds)
    (12/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "negative argument", "Float32")...
    done (took 1.249442292 seconds)
    (13/22) benchmarking ("very small", "negative argument", "Float32")...
    done (took 1.248976362 seconds)
    (14/22) benchmarking ("0 <= abs(x) < 2f0^-12", "positive argument", "Float32")...
    done (took 1.249099342 seconds)
    (15/22) benchmarking ("1.0 <= abs(x) < 22.0", "negative argument", "Float64")...
    done (took 1.247468429 seconds)
    (16/22) benchmarking ("very small", "positive argument", "Float64")...
    done (took 1.246758741 seconds)
    (17/22) benchmarking ("2f0^-12 <= abs(x) < 1f0", "positive argument", "Float32")...
    done (took 1.249766175 seconds)
    (18/22) benchmarking ("very large", "positive argument", "Float32")...
    done (took 1.249160772 seconds)
    (19/22) benchmarking ("0 <= abs(x) < 2.0^-28", "negative argument", "Float64")...
    done (took 1.246947467 seconds)
    (20/22) benchmarking ("very large", "negative argument", "Float64")...
    done (took 1.246833697 seconds)
    (21/22) benchmarking ("1f0 <= abs(x) < 9f0", "positive argument", "Float32")...
    done (took 1.249759393 seconds)
    (22/22) benchmarking ("very large", "negative argument", "Float32")...
    done (took 1.249931673 seconds)
  done (took 28.62422291 seconds)
  (23/25) benchmarking "intfuncs"...
    (1/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "UInt64", "+")...
    done (took 1.249973662 seconds)
    (2/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "Int64", "+")...
    done (took 1.248580533 seconds)
    (3/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "Int64", "+")...
    done (took 1.249648658 seconds)
    (4/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__nextpow2", "BigInt", "+")...
    done (took 1.264216106 seconds)
    (5/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "UInt64", "+")...
    done (took 1.264763794 seconds)
    (6/6) benchmarking ("BaseBenchmarks.ScalarBenchmarks.__prevpow2", "BigInt", "+")...
    done (took 1.269783299 seconds)
  done (took 8.714239572 seconds)
  (24/25) benchmarking "sin"...
    (1/66) benchmarking ("no reduction", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255438357 seconds)
    (2/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250955983 seconds)
    (3/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.247876204 seconds)
    (4/66) benchmarking ("no reduction", "positive argument", "Float32", "sin_kernel")...
    done (took 1.249973049 seconds)
    (5/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250531628 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.247225725 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247787152 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247950355 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250567498 seconds)
    (10/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.247851682 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.24800193 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251366693 seconds)
    (13/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.250528687 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248590581 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250696632 seconds)
    (16/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.250790291 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.24763451 seconds)
    (18/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249333226 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249802177 seconds)
    (20/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250828728 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.248302082 seconds)
    (22/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250258346 seconds)
    (23/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.248898629 seconds)
    (24/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250145704 seconds)
    (25/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249138928 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.249453621 seconds)
    (27/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251186179 seconds)
    (28/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.248814621 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249318626 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251702263 seconds)
    (31/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.251027012 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24945723 seconds)
    (33/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252242168 seconds)
    (34/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.24936738 seconds)
    (35/66) benchmarking ("no reduction", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253283459 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252352791 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249119214 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252148012 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252554012 seconds)
    (40/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250338522 seconds)
    (41/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.251453946 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253575777 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252135377 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.249524257 seconds)
    (45/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252697756 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249883519 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.249990414 seconds)
    (48/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250549875 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.250644533 seconds)
    (50/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253650276 seconds)
    (51/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251737054 seconds)
    (52/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250128128 seconds)
    (53/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253053902 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252557308 seconds)
    (55/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.252685662 seconds)
    (56/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.25297129 seconds)
    (57/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251367014 seconds)
    (58/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251886094 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253022584 seconds)
    (60/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251217696 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.250098399 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253116213 seconds)
    (63/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.25159891 seconds)
    (64/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.251629128 seconds)
    (65/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253593974 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252220997 seconds)
  done (took 83.73995281 seconds)
  (25/25) benchmarking "cos"...
    (1/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.25166301 seconds)
    (2/66) benchmarking ("no reduction", "zero", "Float64")...
    done (took 1.251640211 seconds)
    (3/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.250816735 seconds)
    (4/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251820322 seconds)
    (5/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.251141144 seconds)
    (6/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.250962597 seconds)
    (7/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252050549 seconds)
    (8/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.252243371 seconds)
    (9/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251669082 seconds)
    (10/66) benchmarking ("no reduction", "positive argument", "Float32", "cos_kernel")...
    done (took 1.250762317 seconds)
    (11/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254655107 seconds)
    (12/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251286988 seconds)
    (13/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.251799718 seconds)
    (14/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.251668158 seconds)
    (15/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.251501495 seconds)
    (16/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253064036 seconds)
    (17/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.252640953 seconds)
    (18/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.251886119 seconds)
    (19/66) benchmarking ("no reduction", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252425082 seconds)
    (20/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "cos_kernel")...
    done (took 1.2552795 seconds)
    (21/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253011479 seconds)
    (22/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252868519 seconds)
    (23/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.253047454 seconds)
    (24/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252618479 seconds)
    (25/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25382128 seconds)
    (26/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.254204415 seconds)
    (27/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253147666 seconds)
    (28/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252718474 seconds)
    (29/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.252767124 seconds)
    (30/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25236807 seconds)
    (31/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.252218176 seconds)
    (32/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.252986843 seconds)
    (33/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.25374734 seconds)
    (34/66) benchmarking ("no reduction", "zero", "Float32")...
    done (took 1.252988052 seconds)
    (35/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254310895 seconds)
    (36/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253356086 seconds)
    (37/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.253580589 seconds)
    (38/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.252564754 seconds)
    (39/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253753505 seconds)
    (40/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.25615953 seconds)
    (41/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.25369504 seconds)
    (42/66) benchmarking ("argument reduction (easy) abs(x) < 2.0^20π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.255460167 seconds)
    (43/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.253880609 seconds)
    (44/66) benchmarking ("argument reduction (easy) abs(x) < 8π/4", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253152715 seconds)
    (45/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254895956 seconds)
    (46/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.253034874 seconds)
    (47/66) benchmarking ("argument reduction (easy) abs(x) < 2π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253617226 seconds)
    (48/66) benchmarking ("no reduction", "negative argument", "Float64", "cos_kernel")...
    done (took 1.253850785 seconds)
    (49/66) benchmarking ("argument reduction (easy) abs(x) < 7π/4", "positive argument", "Float32", "cos_kernel")...
    done (took 1.253502735 seconds)
    (50/66) benchmarking ("no reduction", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253811166 seconds)
    (51/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254141329 seconds)
    (52/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float64", "cos_kernel")...
    done (took 1.254893941 seconds)
    (53/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255141181 seconds)
    (54/66) benchmarking ("argument reduction (hard) abs(x) < 8π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.25427102 seconds)
    (55/66) benchmarking ("argument reduction (easy) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254927873 seconds)
    (56/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "positive argument", "Float64", "cos_kernel")...
    done (took 1.254793929 seconds)
    (57/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.253513009 seconds)
    (58/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float64", "sin_kernel")...
    done (took 1.255094137 seconds)
    (59/66) benchmarking ("argument reduction (easy) abs(x) < 5π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.253837072 seconds)
    (60/66) benchmarking ("argument reduction (hard) abs(x) < 4π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.257459822 seconds)
    (61/66) benchmarking ("argument reduction (hard) abs(x) < 2π/4", "positive argument", "Float32", "sin_kernel")...
    done (took 1.254568061 seconds)
    (62/66) benchmarking ("argument reduction (easy) abs(x) < 9π/4", "negative argument", "Float32", "cos_kernel")...
    done (took 1.254912104 seconds)
    (63/66) benchmarking ("argument reduction (paynehanek) abs(x) > 2.0^20*π/2", "negative argument", "Float32", "cos_kernel")...
    done (took 1.258036079 seconds)
    (64/66) benchmarking ("argument reduction (easy) abs(x) < 6π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254104844 seconds)
    (65/66) benchmarking ("argument reduction (easy) abs(x) < 3π/4", "negative argument", "Float32", "sin_kernel")...
    done (took 1.254497446 seconds)
    (66/66) benchmarking ("argument reduction (hard) abs(x) < 6π/4", "positive argument", "Float64", "sin_kernel")...
    done (took 1.255015772 seconds)
  done (took 83.898735502 seconds)
done (took 1691.248826606 seconds)
(11/20) benchmarking "sparse"...
  (1/6) benchmarking "sparse matvec"...
    (1/2) benchmarking "non-adjoint"...
    done (took 6.290523545 seconds)
    (2/2) benchmarking "adjoint"...
    done (took 6.327389772 seconds)
  done (took 13.792472117 seconds)
  (2/6) benchmarking "transpose"...
    (1/16) benchmarking ("transpose!", (600, 600))...
    done (took 1.420275451 seconds)
    (2/16) benchmarking ("adjoint!", (600, 400))...
    done (took 1.372442536 seconds)
    (3/16) benchmarking ("transpose", (20000, 20000))...
    done (took 1.254606111 seconds)
    (4/16) benchmarking ("transpose!", (20000, 20000))...
    done (took 6.287321209 seconds)
    (5/16) benchmarking ("transpose", (20000, 10000))...
    done (took 1.256487159 seconds)
    (6/16) benchmarking ("adjoint!", (20000, 10000))...
    done (took 6.263162278 seconds)
    (7/16) benchmarking ("transpose!", (20000, 10000))...
    done (took 6.251474707 seconds)
    (8/16) benchmarking ("adjoint", (600, 400))...
    done (took 1.257320291 seconds)
    (9/16) benchmarking ("transpose", (600, 600))...
    done (took 1.257257843 seconds)
    (10/16) benchmarking ("transpose", (600, 400))...
    done (took 1.256595497 seconds)
    (11/16) benchmarking ("adjoint", (20000, 10000))...
    done (took 1.256600779 seconds)
    (12/16) benchmarking ("adjoint!", (600, 600))...
    done (took 1.443880748 seconds)
    (13/16) benchmarking ("adjoint!", (20000, 20000))...
    done (took 6.306576335 seconds)
    (14/16) benchmarking ("adjoint", (600, 600))...
    done (took 1.256933788 seconds)
    (15/16) benchmarking ("adjoint", (20000, 20000))...
    done (took 1.257303841 seconds)
    (16/16) benchmarking ("transpose!", (600, 400))...
    done (took 1.351506686 seconds)
  done (took 41.926724981 seconds)
  (3/6) benchmarking "constructors"...
    (1/18) benchmarking ("SymTridiagonal", 10)...
    done (took 1.282576971 seconds)
    (2/18) benchmarking ("IV", 100)...
    done (took 1.263143418 seconds)
    (3/18) benchmarking ("Bidiagonal", 100)...
    done (took 1.367126753 seconds)
    (4/18) benchmarking ("IV", 10)...
    done (took 1.28268878 seconds)
    (5/18) benchmarking ("Tridiagonal", 10)...
    done (took 1.283917926 seconds)
    (6/18) benchmarking ("Tridiagonal", 100)...
    done (took 1.440113487 seconds)
    (7/18) benchmarking ("IV", 1000)...
    done (took 1.316825393 seconds)
    (8/18) benchmarking ("Diagonal", 10)...
    done (took 1.266837367 seconds)
    (9/18) benchmarking ("Diagonal", 1000)...
    done (took 1.423528712 seconds)
    (10/18) benchmarking ("IJV", 100)...
    done (took 1.304444941 seconds)
    (11/18) benchmarking ("Tridiagonal", 1000)...
    done (took 2.735886783 seconds)
    (12/18) benchmarking ("Bidiagonal", 10)...
    done (took 1.282400126 seconds)
    (13/18) benchmarking ("IJV", 10)...
    done (took 1.260751761 seconds)
    (14/18) benchmarking ("Bidiagonal", 1000)...
    done (took 2.324730678 seconds)
    (15/18) benchmarking ("Diagonal", 100)...
    done (took 1.280669402 seconds)
    (16/18) benchmarking ("SymTridiagonal", 100)...
    done (took 1.438939714 seconds)
    (17/18) benchmarking ("IJV", 1000)...
    done (took 1.505564818 seconds)
    (18/18) benchmarking ("SymTridiagonal", 1000)...
    done (took 2.769397982 seconds)
  done (took 29.006552587 seconds)
  (4/6) benchmarking "arithmetic"...
    (1/2) benchmarking ("unary minus", (600, 600))...
    done (took 1.684587632 seconds)
    (2/2) benchmarking ("unary minus", (20000, 20000))...
    done (took 6.260921505 seconds)
  done (took 9.122762999 seconds)
  (5/6) benchmarking "index"...
    (1/54) benchmarking ("spvec", "range", 10000)...
    done (took 1.281062516 seconds)
    (2/54) benchmarking ("spmat", "splogical", 10)...
    done (took 1.262522289 seconds)
    (3/54) benchmarking ("spmat", "col", "logical", 10)...
    done (took 1.262875122 seconds)
    (4/54) benchmarking ("spmat", "col", "OneTo", 100)...
    done (took 1.260932523 seconds)
    (5/54) benchmarking ("spvec", "array", 10000)...
    done (took 6.254394358 seconds)
    (6/54) benchmarking ("spmat", "splogical", 1000)...
    done (took 6.254289363 seconds)
    (7/54) benchmarking ("spmat", "col", "range", 10)...
    done (took 1.261182546 seconds)
    (8/54) benchmarking ("spvec", "array", 100000)...
    done (took 6.253809935 seconds)
    (9/54) benchmarking ("spmat", "range", 1000)...
    done (took 4.680425794 seconds)
    (10/54) benchmarking ("spmat", "range", 100)...
    done (took 1.388680082 seconds)
    (11/54) benchmarking ("spmat", "range", 10)...
    done (took 1.270049326 seconds)
    (12/54) benchmarking ("spmat", "col", "array", 10)...
    done (took 1.269590614 seconds)
    (13/54) benchmarking ("spmat", "row", "OneTo", 10)...
    done (took 1.279406131 seconds)
    (14/54) benchmarking ("spvec", "range", 1000)...
    done (took 1.262692427 seconds)
    (15/54) benchmarking ("spvec", "integer", 100000)...
    done (took 1.259848901 seconds)
    (16/54) benchmarking ("spmat", "col", "array", 100)...
    done (took 1.296202856 seconds)
    (17/54) benchmarking ("spmat", "row", "range", 1000)...
    done (took 1.457026923 seconds)
    (18/54) benchmarking ("spvec", "integer", 1000)...
    done (took 1.262225048 seconds)
    (19/54) benchmarking ("spmat", "integer", 100)...
    done (took 1.259416629 seconds)
    (20/54) benchmarking ("spmat", "row", "OneTo", 100)...
    done (took 1.267387967 seconds)
    (21/54) benchmarking ("spmat", "row", "array", 10)...
    done (took 1.261578814 seconds)
    (22/54) benchmarking ("spmat", "row", "logical", 1000)...
    done (took 1.345494456 seconds)
    (23/54) benchmarking ("spvec", "range", 100000)...
    done (took 1.302536106 seconds)
    (24/54) benchmarking ("spvec", "integer", 10000)...
    done (took 1.265866781 seconds)
    (25/54) benchmarking ("spmat", "OneTo", 100)...
    done (took 1.382204695 seconds)
    (26/54) benchmarking ("spmat", "OneTo", 1000)...
    done (took 4.695978274 seconds)
    (27/54) benchmarking ("spmat", "logical", 10)...
    done (took 1.272603114 seconds)
    (28/54) benchmarking ("spmat", "row", "logical", 100)...
    done (took 1.269107184 seconds)
    (29/54) benchmarking ("spmat", "row", "OneTo", 1000)...
    done (took 1.44135757 seconds)
    (30/54) benchmarking ("spmat", "integer", 10)...
    done (took 1.261894478 seconds)
    (31/54) benchmarking ("spmat", "col", "OneTo", 10)...
    done (took 1.262863717 seconds)
    (32/54) benchmarking ("spmat", "splogical", 100)...
    done (took 1.263094065 seconds)
    (33/54) benchmarking ("spmat", "OneTo", 10)...
    done (took 1.264887652 seconds)
    (34/54) benchmarking ("spmat", "array", 100)...
    done (took 1.86087393 seconds)
    (35/54) benchmarking ("spvec", "array", 1000)...
    done (took 1.738351612 seconds)
    (36/54) benchmarking ("spmat", "array", 1000)...
    done (took 6.281797148 seconds)
    (37/54) benchmarking ("spmat", "col", "logical", 100)...
    done (took 1.28685696 seconds)
    (38/54) benchmarking ("spmat", "row", "array", 100)...
    done (took 1.272534622 seconds)
    (39/54) benchmarking ("spmat", "integer", 1000)...
    done (took 1.260626046 seconds)
    (40/54) benchmarking ("spmat", "row", "array", 1000)...
    done (took 1.405662602 seconds)
    (41/54) benchmarking ("spmat", "row", "range", 10)...
    done (took 1.26440479 seconds)
    (42/54) benchmarking ("spmat", "row", "range", 100)...
    done (took 1.268990719 seconds)
    (43/54) benchmarking ("spvec", "logical", 100000)...
    done (took 6.256060287 seconds)
    (44/54) benchmarking ("spmat", "col", "array", 1000)...
    done (took 1.746121107 seconds)
    (45/54) benchmarking ("spmat", "logical", 100)...
    done (took 1.395896691 seconds)
    (46/54) benchmarking ("spmat", "col", "logical", 1000)...
    done (took 1.382894604 seconds)
    (47/54) benchmarking ("spmat", "logical", 1000)...
    done (took 3.454510176 seconds)
    (48/54) benchmarking ("spmat", "row", "logical", 10)...
    done (took 1.287155494 seconds)
    (49/54) benchmarking ("spmat", "col", "range", 1000)...
    done (took 1.26543716 seconds)
    (50/54) benchmarking ("spvec", "logical", 1000)...
    done (took 1.322691825 seconds)
    (51/54) benchmarking ("spmat", "col", "range", 100)...
    done (took 1.269042948 seconds)
    (52/54) benchmarking ("spmat", "col", "OneTo", 1000)...
    done (took 1.264533401 seconds)
    (53/54) benchmarking ("spmat", "array", 10)...
    done (took 1.292291183 seconds)
    (54/54) benchmarking ("spvec", "logical", 10000)...
    done (took 2.010312646 seconds)
  done (took 107.100599587 seconds)
  (6/6) benchmarking "matmul"...
    (1/224) benchmarking ("A_mul_B!", "dense 40x400, sparse 400x4000 -> dense 40x4000")...
    done (took 6.27358156 seconds)
    (2/224) benchmarking ("Ac_mul_B!", "sparse 20x200, dense 20x200 -> dense 200x200")...
    done (took 2.646811523 seconds)
    (3/224) benchmarking ("Ac_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.425259031 seconds)
    (4/224) benchmarking ("A_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.275303016 seconds)
    (5/224) benchmarking ("Ac_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.079847194 seconds)
    (6/224) benchmarking ("A_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.892842948 seconds)
    (7/224) benchmarking ("A_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.280104678 seconds)
    (8/224) benchmarking ("A_mul_B", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.530790645 seconds)
    (9/224) benchmarking ("At_mul_Bt!", "dense 400x40, sparse 4000x400 -> dense 40x4000")...
    done (took 6.303299699 seconds)
    (10/224) benchmarking ("A_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.258603214 seconds)
    (11/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 1.610840935 seconds)
    (12/224) benchmarking ("Ac_mul_Bc", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.758808299 seconds)
    (13/224) benchmarking ("Ac_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.282754616 seconds)
    (14/224) benchmarking ("A_mul_Bt!", "sparse 400x4000, dense 40x4000 -> dense 400x40")...
    done (took 6.299707466 seconds)
    (15/224) benchmarking ("At_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.827693465 seconds)
    (16/224) benchmarking ("A_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.318352443 seconds)
    (17/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.25554055 seconds)
    (18/224) benchmarking ("A_mul_Bc", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 4.154537162 seconds)
    (19/224) benchmarking ("At_mul_B!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.274475666 seconds)
    (20/224) benchmarking ("Ac_mul_B!", "dense 20x20, sparse 20x2000 -> dense 20x2000")...
    done (took 6.253212192 seconds)
    (21/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.735993766 seconds)
    (22/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.261317621 seconds)
    (23/224) benchmarking ("A_mul_Bt", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.258996812 seconds)
    (24/224) benchmarking ("At_mul_B!", "dense 400x40, sparse 400x4000 -> dense 40x4000")...
    done (took 6.523381025 seconds)
    (25/224) benchmarking ("A_mul_B", "dense 5x500, sparse 500x50 -> dense 5x50")...
    done (took 1.292879569 seconds)
    (26/224) benchmarking ("At_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.69815638 seconds)
    (27/224) benchmarking ("A_mul_Bt", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 5.574876373 seconds)
    (28/224) benchmarking ("Ac_mul_Bc", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.74509403 seconds)
    (29/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.276759052 seconds)
    (30/224) benchmarking ("At_mul_B!", "sparse 400x4000, dense 400x40 -> dense 4000x40")...
    done (took 6.25409691 seconds)
    (31/224) benchmarking ("A_mul_Bt", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.711043081 seconds)
    (32/224) benchmarking ("Ac_mul_Bc!", "dense 200x20, sparse 2000x200 -> dense 20x2000")...
    done (took 6.283736153 seconds)
    (33/224) benchmarking ("At_mul_Bt!", "sparse 4000x400, dense 40x4000 -> dense 400x40")...
    done (took 6.300330009 seconds)
    (34/224) benchmarking ("Ac_mul_B!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.25722416 seconds)
    (35/224) benchmarking ("A_mul_B", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 1.509515442 seconds)
    (36/224) benchmarking ("At_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.596156363 seconds)
    (37/224) benchmarking ("Ac_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.588505095 seconds)
    (38/224) benchmarking ("At_mul_Bt!", "sparse 40x400, dense 400x40 -> dense 400x400")...
    done (took 6.272825879 seconds)
    (39/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.28586108 seconds)
    (40/224) benchmarking ("A_mul_Bt!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.256768052 seconds)
    (41/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x200 -> dense 20x200")...
    done (took 6.269735752 seconds)
    (42/224) benchmarking ("A_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.691297296 seconds)
    (43/224) benchmarking ("At_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.598434838 seconds)
    (44/224) benchmarking ("At_mul_Bt", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.270550092 seconds)
    (45/224) benchmarking ("At_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.265757218 seconds)
    (46/224) benchmarking ("A_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.694830481 seconds)
    (47/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.270973596 seconds)
    (48/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x200, dense 20x2000 -> dense 200x20")...
    done (took 6.257035966 seconds)
    (49/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 200x2000 -> dense 20x200")...
    done (took 6.259054587 seconds)
    (50/224) benchmarking ("A_mul_Bt", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.462562997 seconds)
    (51/224) benchmarking ("Ac_mul_Bc", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 5.130861312 seconds)
    (52/224) benchmarking ("A_mul_Bc", "dense 5x50, sparse 500x50 -> dense 5x500")...
    done (took 6.255672037 seconds)
    (53/224) benchmarking ("At_mul_Bt", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 5.571392833 seconds)
    (54/224) benchmarking ("Ac_mul_Bc!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 6.262307195 seconds)
    (55/224) benchmarking ("A_mul_B!", "sparse 4000x400, dense 400x40 -> dense 4000x40")...
    done (took 5.539356277 seconds)
    (56/224) benchmarking ("Ac_mul_Bc!", "sparse 2000x2000, dense 20x2000 -> dense 2000x20")...
    done (took 6.32667242 seconds)
    (57/224) benchmarking ("Ac_mul_Bc!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.313383769 seconds)
    (58/224) benchmarking ("Ac_mul_B", "sparse 5x5, dense 5x500 -> dense 5x500")...
    done (took 1.723213111 seconds)
    (59/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.27176859 seconds)
    (60/224) benchmarking ("At_mul_Bt", "sparse 50x500, dense 5x50 -> dense 500x5")...
    done (took 3.403495208 seconds)
    (61/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.285307708 seconds)
    (62/224) benchmarking ("A_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.256260406 seconds)
    (63/224) benchmarking ("A_mul_Bc!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.259642378 seconds)
    (64/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.257126753 seconds)
    (65/224) benchmarking ("A_mul_B!", "dense 4000x40, sparse 40x40 -> dense 4000x40")...
    done (took 6.25503286 seconds)
    (66/224) benchmarking ("Ac_mul_B", "sparse 50x500, dense 50x5 -> dense 500x5")...
    done (took 1.58867454 seconds)
    (67/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.541971521 seconds)
    (68/224) benchmarking ("A_mul_Bt!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.261760894 seconds)
    (69/224) benchmarking ("Ac_mul_B", "sparse 5x50, dense 5x50 -> dense 50x50")...
    done (took 1.586564244 seconds)
    (70/224) benchmarking ("At_mul_Bt", "sparse 5x50, dense 50x5 -> dense 50x50")...
    done (took 1.721370574 seconds)
    (71/224) benchmarking ("At_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.276736182 seconds)
    (72/224) benchmarking ("A_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.783464032 seconds)
    (73/224) benchmarking ("At_mul_Bt", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.176155715 seconds)
    (74/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x40 -> dense 400x40")...
    done (took 6.276292563 seconds)
    (75/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x400 -> dense 40x400")...
    done (took 6.353219482 seconds)
    (76/224) benchmarking ("Ac_mul_Bc", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.256378779 seconds)
    (77/224) benchmarking ("A_mul_Bt", "sparse 500x50, dense 5x50 -> dense 500x5")...
    done (took 3.895326213 seconds)
    (78/224) benchmarking ("Ac_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.734902021 seconds)
    (79/224) benchmarking ("At_mul_B!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.27581478 seconds)
    (80/224) benchmarking ("Ac_mul_B!", "sparse 200x200, dense 200x200 -> dense 200x200")...
    done (took 6.257997721 seconds)
    (81/224) benchmarking ("At_mul_B", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.575441405 seconds)
    (82/224) benchmarking ("A_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.274060872 seconds)
    (83/224) benchmarking ("A_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 1.57315046 seconds)
    (84/224) benchmarking ("Ac_mul_B", "dense 5x5, sparse 5x500 -> dense 5x500")...
    done (took 6.272299198 seconds)
    (85/224) benchmarking ("Ac_mul_Bc", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.258288574 seconds)
    (86/224) benchmarking ("Ac_mul_Bc", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.767419913 seconds)
    (87/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 200x2000 -> dense 20x200")...
    done (took 6.268734933 seconds)
    (88/224) benchmarking ("At_mul_Bt!", "sparse 400x4000, dense 40x400 -> dense 4000x40")...
    done (took 6.256269465 seconds)
    (89/224) benchmarking ("Ac_mul_Bc", "dense 5x50, sparse 50x5 -> dense 50x50")...
    done (took 6.257106659 seconds)
    (90/224) benchmarking ("A_mul_Bc", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 6.273962273 seconds)
    (91/224) benchmarking ("A_mul_Bc", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 4.015129053 seconds)
    (92/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.266615687 seconds)
    (93/224) benchmarking ("A_mul_B", "dense 50x5, sparse 5x50 -> dense 50x50")...
    done (took 1.535748084 seconds)
    (94/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x400 -> dense 40x400")...
    done (took 6.3145743 seconds)
    (95/224) benchmarking ("Ac_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.257718766 seconds)
    (96/224) benchmarking ("A_mul_Bc!", "sparse 20x200, dense 200x200 -> dense 20x200")...
    done (took 6.257022125 seconds)
    (97/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 400x4000 -> dense 40x400")...
    done (took 6.304515788 seconds)
    (98/224) benchmarking ("At_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.257345307 seconds)
    (99/224) benchmarking ("Ac_mul_Bc!", "dense 20x20, sparse 2000x20 -> dense 20x2000")...
    done (took 6.276276016 seconds)
    (100/224) benchmarking ("A_mul_Bt!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 6.262421996 seconds)
    (101/224) benchmarking ("At_mul_Bt", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.779615408 seconds)
    (102/224) benchmarking ("Ac_mul_Bc!", "sparse 200x2000, dense 20x200 -> dense 2000x20")...
    done (took 6.278784476 seconds)
    (103/224) benchmarking ("At_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 5.215022372 seconds)
    (104/224) benchmarking ("Ac_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.281406737 seconds)
    (105/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.258775546 seconds)
    (106/224) benchmarking ("A_mul_Bc!", "sparse 20x20, dense 2000x20 -> dense 20x2000")...
    done (took 6.257836374 seconds)
    (107/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x20 -> dense 200x20")...
    done (took 6.259757897 seconds)
    (108/224) benchmarking ("A_mul_B!", "sparse 40x400, dense 400x400 -> dense 40x400")...
    done (took 6.259631504 seconds)
    (109/224) benchmarking ("A_mul_Bc", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.481931537 seconds)
    (110/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.702345049 seconds)
    (111/224) benchmarking ("Ac_mul_B!", "dense 20x200, sparse 20x200 -> dense 200x200")...
    done (took 6.280860894 seconds)
    (112/224) benchmarking ("At_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.259368381 seconds)
    (113/224) benchmarking ("A_mul_Bc", "dense 50x5, sparse 50x5 -> dense 50x50")...
    done (took 6.272482565 seconds)
    (114/224) benchmarking ("A_mul_Bc!", "sparse 2000x200, dense 20x200 -> dense 2000x20")...
    done (took 6.264443784 seconds)
    (115/224) benchmarking ("At_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.512734666 seconds)
    (116/224) benchmarking ("A_mul_Bt!", "sparse 400x40, dense 400x40 -> dense 400x400")...
    done (took 6.260197319 seconds)
    (117/224) benchmarking ("A_mul_B", "sparse 500x50, dense 50x5 -> dense 500x5")...
    done (took 1.552278757 seconds)
    (118/224) benchmarking ("At_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.275969374 seconds)
    (119/224) benchmarking ("A_mul_Bc", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.259208097 seconds)
    (120/224) benchmarking ("A_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.259675423 seconds)
    (121/224) benchmarking ("A_mul_Bc", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 2.910592133 seconds)
    (122/224) benchmarking ("A_mul_B!", "dense 400x400, sparse 400x400 -> dense 400x400")...
    done (took 6.29650154 seconds)
    (123/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.260127175 seconds)
    (124/224) benchmarking ("At_mul_Bt!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 6.276288115 seconds)
    (125/224) benchmarking ("Ac_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 2.163964244 seconds)
    (126/224) benchmarking ("A_mul_B", "sparse 50x500, dense 500x5 -> dense 50x5")...
    done (took 1.469994754 seconds)
    (127/224) benchmarking ("At_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.283723155 seconds)
    (128/224) benchmarking ("Ac_mul_Bc!", "dense 20x200, sparse 200x20 -> dense 200x200")...
    done (took 6.281101537 seconds)
    (129/224) benchmarking ("At_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.260450215 seconds)
    (130/224) benchmarking ("Ac_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.276362824 seconds)
    (131/224) benchmarking ("At_mul_Bt", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 5.46525128 seconds)
    (132/224) benchmarking ("A_mul_Bt", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.284812971 seconds)
    (133/224) benchmarking ("A_mul_Bt!", "sparse 4000x400, dense 40x400 -> dense 4000x40")...
    done (took 6.335815608 seconds)
    (134/224) benchmarking ("At_mul_Bt!", "dense 40x4000, sparse 40x40 -> dense 4000x40")...
    done (took 6.262780367 seconds)
    (135/224) benchmarking ("Ac_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.952926946 seconds)
    (136/224) benchmarking ("Ac_mul_B!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.293503432 seconds)
    (137/224) benchmarking ("Ac_mul_B!", "dense 200x20, sparse 200x2000 -> dense 20x2000")...
    done (took 6.288471258 seconds)
    (138/224) benchmarking ("At_mul_Bt", "sparse 500x50, dense 5x500 -> dense 50x5")...
    done (took 4.780358147 seconds)
    (139/224) benchmarking ("A_mul_Bc!", "dense 20x200, sparse 2000x200 -> dense 20x2000")...
    done (took 6.269321371 seconds)
    (140/224) benchmarking ("At_mul_B", "dense 5x500, sparse 5x5 -> dense 500x5")...
    done (took 6.114261931 seconds)
    (141/224) benchmarking ("A_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.283109622 seconds)
    (142/224) benchmarking ("A_mul_Bc", "sparse 500x500, dense 5x500 -> dense 500x5")...
    done (took 6.262002124 seconds)
    (143/224) benchmarking ("At_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.547121792 seconds)
    (144/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 1.529074354 seconds)
    (145/224) benchmarking ("At_mul_Bt!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.411847142 seconds)
    (146/224) benchmarking ("A_mul_Bc", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.263049265 seconds)
    (147/224) benchmarking ("Ac_mul_B", "dense 500x5, sparse 500x50 -> dense 5x50")...
    done (took 6.261478971 seconds)
    (148/224) benchmarking ("A_mul_Bc", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.941366049 seconds)
    (149/224) benchmarking ("At_mul_B!", "dense 40x40, sparse 40x4000 -> dense 40x4000")...
    done (took 6.332149916 seconds)
    (150/224) benchmarking ("At_mul_B", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.408035443 seconds)
    (151/224) benchmarking ("A_mul_B!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.285962773 seconds)
    (152/224) benchmarking ("Ac_mul_B!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 2.253159346 seconds)
    (153/224) benchmarking ("A_mul_B", "sparse 5x50, dense 50x50 -> dense 5x50")...
    done (took 1.458727486 seconds)
    (154/224) benchmarking ("A_mul_B!", "dense 40x4000, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.433780241 seconds)
    (155/224) benchmarking ("At_mul_B!", "sparse 40x40, dense 40x4000 -> dense 40x4000")...
    done (took 6.263238901 seconds)
    (156/224) benchmarking ("A_mul_B!", "sparse 400x40, dense 40x400 -> dense 400x400")...
    done (took 4.877843106 seconds)
    (157/224) benchmarking ("A_mul_B!", "sparse 400x4000, dense 4000x40 -> dense 400x40")...
    done (took 6.263047883 seconds)
    (158/224) benchmarking ("At_mul_Bt", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.480314767 seconds)
    (159/224) benchmarking ("Ac_mul_B", "dense 5x50, sparse 5x50 -> dense 50x50")...
    done (took 6.268886041 seconds)
    (160/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 5x50 -> dense 50x5")...
    done (took 1.568011422 seconds)
    (161/224) benchmarking ("A_mul_Bc", "sparse 50x5, dense 50x5 -> dense 50x50")...
    done (took 1.749561027 seconds)
    (162/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 20x200 -> dense 200x20")...
    done (took 6.27771287 seconds)
    (163/224) benchmarking ("Ac_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.270230799 seconds)
    (164/224) benchmarking ("Ac_mul_Bc", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.95795523 seconds)
    (165/224) benchmarking ("At_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.949286468 seconds)
    (166/224) benchmarking ("Ac_mul_B!", "sparse 200x2000, dense 200x20 -> dense 2000x20")...
    done (took 2.951339359 seconds)
    (167/224) benchmarking ("A_mul_B!", "dense 400x40, sparse 40x400 -> dense 400x400")...
    done (took 6.263076601 seconds)
    (168/224) benchmarking ("A_mul_B", "dense 5x50, sparse 50x500 -> dense 5x500")...
    done (took 1.599052449 seconds)
    (169/224) benchmarking ("Ac_mul_B!", "sparse 2000x200, dense 2000x20 -> dense 200x20")...
    done (took 6.240149878 seconds)
    (170/224) benchmarking ("Ac_mul_B!", "sparse 200x20, dense 200x200 -> dense 20x200")...
    done (took 5.740989607 seconds)
    (171/224) benchmarking ("Ac_mul_B!", "sparse 2000x2000, dense 2000x20 -> dense 2000x20")...
    done (took 6.262752124 seconds)
    (172/224) benchmarking ("Ac_mul_B", "dense 50x5, sparse 50x500 -> dense 5x500")...
    done (took 6.261392277 seconds)
    (173/224) benchmarking ("A_mul_Bt", "sparse 50x500, dense 5x500 -> dense 50x5")...
    done (took 3.852989748 seconds)
    (174/224) benchmarking ("A_mul_B!", "sparse 4000x4000, dense 4000x40 -> dense 4000x40")...
    done (took 6.269127551 seconds)
    (175/224) benchmarking ("At_mul_Bt!", "dense 40x40, sparse 4000x40 -> dense 40x4000")...
    done (took 6.269189349 seconds)
    (176/224) benchmarking ("A_mul_Bc!", "sparse 200x20, dense 200x20 -> dense 200x200")...
    done (took 6.263642216 seconds)
    (177/224) benchmarking ("A_mul_Bc!", "dense 2000x20, sparse 20x20 -> dense 2000x20")...
    done (took 6.262298698 seconds)
    (178/224) benchmarking ("Ac_mul_B!", "dense 2000x20, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.324014017 seconds)
    (179/224) benchmarking ("Ac_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.436729111 seconds)
    (180/224) benchmarking ("At_mul_B!", "sparse 40x4000, dense 40x40 -> dense 4000x40")...
    done (took 5.601663334 seconds)
    (181/224) benchmarking ("A_mul_Bc!", "dense 200x200, sparse 200x200 -> dense 200x200")...
    done (took 6.269288023 seconds)
    (182/224) benchmarking ("At_mul_B", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 1.699517407 seconds)
    (183/224) benchmarking ("A_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.316808637 seconds)
    (184/224) benchmarking ("A_mul_Bt", "dense 50x50, sparse 50x50 -> dense 50x50")...
    done (took 6.264103266 seconds)
    (185/224) benchmarking ("At_mul_Bt!", "sparse 40x40, dense 4000x40 -> dense 40x4000")...
    done (took 6.278432371 seconds)
    (186/224) benchmarking ("At_mul_Bt!", "dense 400x400, sparse 40x400 -> dense 400x40")...
    done (took 6.264774503 seconds)
    (187/224) benchmarking ("A_mul_B!", "sparse 4000x40, dense 40x40 -> dense 4000x40")...
    done (took 2.614618223 seconds)
    (188/224) benchmarking ("A_mul_Bc!", "dense 20x2000, sparse 2000x2000 -> dense 20x2000")...
    done (took 6.35261157 seconds)
    (189/224) benchmarking ("At_mul_Bt!", "dense 40x400, sparse 400x40 -> dense 400x400")...
    done (took 6.266041946 seconds)
    (190/224) benchmarking ("At_mul_B!", "dense 40x400, sparse 40x400 -> dense 400x400")...
    done (took 6.297933918 seconds)
    (191/224) benchmarking ("At_mul_B!", "sparse 4000x400, dense 4000x40 -> dense 400x40")...
    done (took 6.265679579 seconds)
    (192/224) benchmarking ("At_mul_Bt!", "sparse 400x40, dense 400x400 -> dense 40x400")...
    done (took 6.270021786 seconds)
    (193/224) benchmarking ("A_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.722140848 seconds)
    (194/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 50x500 -> dense 5x50")...
    done (took 3.209057201 seconds)
    (195/224) benchmarking ("Ac_mul_Bc!", "sparse 20x200, dense 200x20 -> dense 200x200")...
    done (took 6.272099681 seconds)
    (196/224) benchmarking ("At_mul_B", "sparse 500x50, dense 500x5 -> dense 50x5")...
    done (took 1.415876563 seconds)
    (197/224) benchmarking ("A_mul_Bc", "sparse 5x5, dense 500x5 -> dense 5x500")...
    done (took 1.895377932 seconds)
    (198/224) benchmarking ("A_mul_Bc!", "sparse 2000x20, dense 20x20 -> dense 2000x20")...
    done (took 6.28601216 seconds)
    (199/224) benchmarking ("Ac_mul_Bc", "dense 50x5, sparse 500x50 -> dense 5x500")...
    done (took 6.266451888 seconds)
    (200/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 50x500 -> dense 5x50")...
    done (took 3.8787771 seconds)
    (201/224) benchmarking ("A_mul_Bt!", "sparse 4000x4000, dense 40x4000 -> dense 4000x40")...
    done (took 6.48435587 seconds)
    (202/224) benchmarking ("Ac_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.795609024 seconds)
    (203/224) benchmarking ("A_mul_Bt!", "dense 40x400, sparse 4000x400 -> dense 40x4000")...
    done (took 6.325418738 seconds)
    (204/224) benchmarking ("A_mul_B", "sparse 50x5, dense 5x50 -> dense 50x50")...
    done (took 1.558385906 seconds)
    (205/224) benchmarking ("A_mul_Bc!", "sparse 200x2000, dense 20x2000 -> dense 200x20")...
    done (took 6.283330799 seconds)
    (206/224) benchmarking ("A_mul_B", "dense 50x50, sparse 50x5 -> dense 50x5")...
    done (took 1.302799332 seconds)
    (207/224) benchmarking ("At_mul_Bt", "sparse 50x50, dense 50x50 -> dense 50x50")...
    done (took 3.018861066 seconds)
    (208/224) benchmarking ("At_mul_Bt!", "sparse 400x400, dense 400x400 -> dense 400x400")...
    done (took 6.348013065 seconds)
    (209/224) benchmarking ("At_mul_B", "sparse 500x500, dense 500x5 -> dense 500x5")...
    done (took 1.724039621 seconds)
    (210/224) benchmarking ("Ac_mul_Bc", "dense 500x5, sparse 500x500 -> dense 5x500")...
    done (took 6.284859325 seconds)
    (211/224) benchmarking ("Ac_mul_Bc!", "sparse 20x2000, dense 20x20 -> dense 2000x20")...
    done (took 6.288186445 seconds)
    (212/224) benchmarking ("A_mul_Bt", "sparse 500x5, dense 5x5 -> dense 500x5")...
    done (took 1.856680092 seconds)
    (213/224) benchmarking ("At_mul_B!", "sparse 40x400, dense 40x400 -> dense 400x400")...
    done (took 6.280546683 seconds)
    (214/224) benchmarking ("At_mul_B!", "dense 4000x40, sparse 4000x4000 -> dense 40x4000")...
    done (took 6.365128488 seconds)
    (215/224) benchmarking ("Ac_mul_B!", "sparse 20x20, dense 20x2000 -> dense 20x2000")...
    done (took 6.264753548 seconds)
    (216/224) benchmarking ("A_mul_Bt", "dense 5x500, sparse 500x500 -> dense 5x500")...
    done (took 6.264028234 seconds)
    (217/224) benchmarking ("At_mul_Bt", "sparse 5x500, dense 5x5 -> dense 500x5")...
    done (took 1.802106001 seconds)
    (218/224) benchmarking ("Ac_mul_Bc!", "dense 20x2000, sparse 20x20 -> dense 2000x20")...
    done (took 6.282027135 seconds)
    (219/224) benchmarking ("A_mul_Bt!", "dense 400x40, sparse 400x40 -> dense 400x400")...
    done (took 6.269707753 seconds)
    (220/224) benchmarking ("A_mul_Bt", "dense 500x5, sparse 5x5 -> dense 500x5")...
    done (took 5.447573532 seconds)
    (221/224) benchmarking ("A_mul_Bt", "dense 5x5, sparse 500x5 -> dense 5x500")...
    done (took 6.285095743 seconds)
    (222/224) benchmarking ("Ac_mul_Bc", "sparse 50x5, dense 50x50 -> dense 5x50")...
    done (took 1.540613017 seconds)
    (223/224) benchmarking ("A_mul_Bc!", "dense 200x20, sparse 200x20 -> dense 200x200")...
    done (took 6.272594641 seconds)
    (224/224) benchmarking ("A_mul_Bt!", "dense 40x4000, sparse 400x4000 -> dense 40x400")...
    done (took 6.315142918 seconds)
  done (took 1094.99585686 seconds)
done (took 1297.11963385 seconds)
(12/20) benchmarking "broadcast"...
  (1/6) benchmarking "fusion"...
    (1/4) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 6.26653003 seconds)
    (2/4) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.273726877 seconds)
    (3/4) benchmarking ("Float64", (1000, 1000), 3)...
    done (took 6.253088605 seconds)
    (4/4) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.275448054 seconds)
  done (took 26.257142078 seconds)
  (2/6) benchmarking "typeargs"...
    (1/6) benchmarking ("tuple", 10)...
    done (took 1.277093304 seconds)
    (2/6) benchmarking ("array", 5)...
    done (took 1.273573636 seconds)
    (3/6) benchmarking ("tuple", 3)...
    done (took 1.273529868 seconds)
    (4/6) benchmarking ("array", 3)...
    done (took 1.272502796 seconds)
    (5/6) benchmarking ("tuple", 5)...
    done (took 1.274389597 seconds)
    (6/6) benchmarking ("array", 10)...
    done (took 1.273870533 seconds)
  done (took 8.833983385 seconds)
  (3/6) benchmarking "dotop"...
    (1/3) benchmarking ("Float64", (1000, 1000), 2)...
    done (took 5.309398335 seconds)
    (2/3) benchmarking ("Float64", (1000000,), 1)...
    done (took 6.273781978 seconds)
    (3/3) benchmarking ("Float64", (1000000,), 2)...
    done (took 6.275190159 seconds)
  done (took 19.047185531 seconds)
  (4/6) benchmarking "sparse"...
    (1/4) benchmarking ((1000, 1000), 1)...
    done (took 1.469005127 seconds)
    (2/4) benchmarking ((10000000,), 1)...
    done (took 2.542512914 seconds)
    (3/4) benchmarking ((1000, 1000), 2)...
    done (took 1.619903425 seconds)
    (4/4) benchmarking ((10000000,), 2)...
    done (took 3.436706467 seconds)
  done (took 10.258470492 seconds)
  (5/6) benchmarking "mix_scalar_tuple"...
    (1/9) benchmarking (3, "scal_tup_x3")...
    done (took 1.275452007 seconds)
    (2/9) benchmarking (3, "scal_tup")...
    done (took 1.274761227 seconds)
    (3/9) benchmarking (3, "tup_tup")...
    done (took 1.274433186 seconds)
    (4/9) benchmarking (5, "tup_tup")...
    done (took 1.277201097 seconds)
    (5/9) benchmarking (10, "scal_tup")...
    done (took 1.277768556 seconds)
    (6/9) benchmarking (10, "scal_tup_x3")...
    done (took 1.279387198 seconds)
    (7/9) benchmarking (5, "scal_tup")...
    done (took 1.275987707 seconds)
    (8/9) benchmarking (5, "scal_tup_x3")...
    done (took 1.27680315 seconds)
    (9/9) benchmarking (10, "tup_tup")...
    done (took 1.278617866 seconds)
  done (took 12.678369297 seconds)
  (6/6) benchmarking "26942"...
  done (took 1.277406812 seconds)
done (took 79.541136284 seconds)
(13/20) benchmarking "union"...
  (1/1) benchmarking "array"...
    (1/286) benchmarking ("broadcast", *, Bool, (false, true))...
    done (took 6.248835924 seconds)
    (2/286) benchmarking ("perf_simplecopy", Int8, false)...
    done (took 1.482713616 seconds)
    (3/286) benchmarking ("map", abs, Int64, false)...
    done (took 1.899935398 seconds)
    (4/286) benchmarking ("perf_simplecopy", Bool, true)...
    done (took 1.518397847 seconds)
    (5/286) benchmarking ("perf_binaryop", *, Int8, (false, false))...
    done (took 1.639988897 seconds)
    (6/286) benchmarking ("perf_binaryop", *, BigInt, (true, true))...
    done (took 6.289209914 seconds)
    (7/286) benchmarking ("skipmissing", sum, BigInt, true)...
    done (took 6.312592378 seconds)
    (8/286) benchmarking ("perf_sum2", Int64, true)...
    done (took 1.314422282 seconds)
    (9/286) benchmarking ("perf_sum3", Float64, false)...
    done (took 1.350557883 seconds)
    (10/286) benchmarking ("perf_countnothing", Int64, false)...
    done (took 1.294343614 seconds)
    (11/286) benchmarking ("broadcast", *, Float32, (true, true))...
    done (took 6.24897688 seconds)
    (12/286) benchmarking ("broadcast", *, Complex{Float64}, (false, true))...
    done (took 6.249318215 seconds)
    (13/286) benchmarking ("broadcast", abs, Complex{Float64}, true)...
    done (took 6.256283587 seconds)
    (14/286) benchmarking ("broadcast", *, Int64, (false, false))...
    done (took 2.721075935 seconds)
    (15/286) benchmarking ("map", *, Float64, (false, false))...
    done (took 2.079732258 seconds)
    (16/286) benchmarking ("perf_countnothing", Float32, false)...
    done (took 1.30273591 seconds)
    (17/286) benchmarking ("perf_countnothing", BigInt, false)...
    done (took 1.332176342 seconds)
    (18/286) benchmarking ("broadcast", identity, Float32, true)...
    done (took 6.24928848 seconds)
    (19/286) benchmarking ("perf_sum", Float64, true)...
    done (took 1.402430155 seconds)
    (20/286) benchmarking ("broadcast", identity, Bool, true)...
    done (took 6.258267988 seconds)
    (21/286) benchmarking ("map", identity, Int8, true)...
    done (took 1.627079233 seconds)
    (22/286) benchmarking ("perf_simplecopy", BigInt, false)...
    done (took 2.001183197 seconds)
    (23/286) benchmarking ("perf_binaryop", *, BigInt, (false, false))...
    done (took 6.276349148 seconds)
    (24/286) benchmarking ("skipmissing", sum, Float32, false)...
    done (took 1.29902484 seconds)
    (25/286) benchmarking ("broadcast", abs, Int8, true)...
    done (took 6.250289004 seconds)
    (26/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, true))...
    done (took 2.897299289 seconds)
    (27/286) benchmarking ("sort", Int64, true)...
    done (took 6.269461112 seconds)
    (28/286) benchmarking ("sort", Float64, true)...
    done (took 6.268957492 seconds)
    (29/286) benchmarking ("map", *, BigInt, (true, true))...
    done (took 6.249632337 seconds)
    (30/286) benchmarking ("map", identity, Complex{Float64}, false)...
    done (took 2.366380185 seconds)
    (31/286) benchmarking ("sort", BigInt, true)...
    done (took 6.290945615 seconds)
    (32/286) benchmarking ("sort", BigFloat, false)...
    done (took 6.277570805 seconds)
    (33/286) benchmarking ("map", identity, BigFloat, true)...
    done (took 2.661295693 seconds)
    (34/286) benchmarking ("perf_sum", Bool, true)...
    done (took 1.396031173 seconds)
    (35/286) benchmarking ("sort", Int8, true)...
    done (took 6.269221612 seconds)
    (36/286) benchmarking ("skipmissing", collect, BigFloat, true)...
    done (took 3.698879732 seconds)
    (37/286) benchmarking ("broadcast", abs, Int64, false)...
    done (took 2.520481802 seconds)
    (38/286) benchmarking ("map", abs, Int8, false)...
    done (took 1.482632995 seconds)
    (39/286) benchmarking ("perf_sum4", Float64, true)...
    done (took 1.321415319 seconds)
    (40/286) benchmarking ("perf_sum3", Int64, true)...
    done (took 1.380041666 seconds)
    (41/286) benchmarking ("perf_sum", Float32, false)...
    done (took 1.354719405 seconds)
    (42/286) benchmarking ("perf_countequals", "Int8")...
    done (took 1.527226951 seconds)
    (43/286) benchmarking ("skipmissing", sum, Int64, true)...
    done (took 1.286732387 seconds)
    (44/286) benchmarking ("skipmissing", collect, Int8, true)...
    done (took 2.108201914 seconds)
    (45/286) benchmarking ("broadcast", identity, BigInt, false)...
    done (took 2.636473911 seconds)
    (46/286) benchmarking ("perf_countnothing", Int8, true)...
    done (took 1.297928293 seconds)
    (47/286) benchmarking ("perf_simplecopy", Complex{Float64}, true)...
    done (took 2.619286333 seconds)
    (48/286) benchmarking ("perf_sum", Bool, false)...
    done (took 1.328435058 seconds)
    (49/286) benchmarking ("skipmissing", sum, BigInt, false)...
    done (took 6.301398459 seconds)
    (50/286) benchmarking ("broadcast", abs, Int8, false)...
    done (took 2.034846562 seconds)
    (51/286) benchmarking ("perf_binaryop", *, Float32, (true, true))...
    done (took 1.919485719 seconds)
    (52/286) benchmarking ("map", identity, Complex{Float64}, true)...
    done (took 3.632527032 seconds)
    (53/286) benchmarking ("perf_countnothing", Float64, true)...
    done (took 1.312720582 seconds)
    (54/286) benchmarking ("broadcast", *, Int8, (false, false))...
    done (took 2.272923961 seconds)
    (55/286) benchmarking ("broadcast", *, Float32, (false, false))...
    done (took 2.483508724 seconds)
    (56/286) benchmarking ("map", *, Float32, (false, false))...
    done (took 1.839240039 seconds)
    (57/286) benchmarking ("map", abs, Int64, true)...
    done (took 2.51437351 seconds)
    (58/286) benchmarking ("perf_sum4", BigFloat, false)...
    done (took 6.280124382 seconds)
    (59/286) benchmarking ("map", identity, BigInt, false)...
    done (took 2.063193357 seconds)
    (60/286) benchmarking ("map", *, Complex{Float64}, (false, true))...
    done (took 3.944036481 seconds)
    (61/286) benchmarking ("perf_sum", BigFloat, true)...
    done (took 6.288541431 seconds)
    (62/286) benchmarking ("broadcast", *, Bool, (true, true))...
    done (took 6.257868513 seconds)
    (63/286) benchmarking ("sort", Int64, false)...
    done (took 5.425809249 seconds)
    (64/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (true, true))...
    done (took 2.875613095 seconds)
    (65/286) benchmarking ("perf_sum2", Float64, true)...
    done (took 1.397089298 seconds)
    (66/286) benchmarking ("perf_binaryop", *, Int64, (false, true))...
    done (took 2.172381094 seconds)
    (67/286) benchmarking ("sort", Float32, true)...
    done (took 6.272265087 seconds)
    (68/286) benchmarking ("perf_countnothing", Complex{Float64}, true)...
    done (took 1.300373569 seconds)
    (69/286) benchmarking ("perf_binaryop", *, BigFloat, (true, true))...
    done (took 6.271875243 seconds)
    (70/286) benchmarking ("broadcast", abs, BigFloat, false)...
    done (took 6.253361274 seconds)
    (71/286) benchmarking ("perf_binaryop", *, Float32, (false, true))...
    done (took 1.92790633 seconds)
    (72/286) benchmarking ("skipmissing", collect, Complex{Float64}, true)...
    done (took 5.225003626 seconds)
    (73/286) benchmarking ("perf_sum", Int8, false)...
    done (took 1.281884218 seconds)
    (74/286) benchmarking ("perf_sum2", Int8, true)...
    done (took 1.379726525 seconds)
    (75/286) benchmarking ("map", abs, Float32, true)...
    done (took 2.003336676 seconds)
    (76/286) benchmarking ("perf_binaryop", *, Int8, (false, true))...
    done (took 1.68637034 seconds)
    (77/286) benchmarking ("broadcast", *, BigFloat, (false, false))...
    done (took 6.279012361 seconds)
    (78/286) benchmarking ("perf_sum3", Float64, true)...
    done (took 1.379106944 seconds)
    (79/286) benchmarking ("broadcast", abs, Bool, false)...
    done (took 2.094698363 seconds)
    (80/286) benchmarking ("perf_sum2", BigInt, false)...
    done (took 6.337228358 seconds)
    (81/286) benchmarking ("skipmissing", sum, Bool, false)...
    done (took 1.301784229 seconds)
    (82/286) benchmarking ("broadcast", *, Int8, (false, true))...
    done (took 6.254412543 seconds)
    (83/286) benchmarking ("skipmissing", sum, Float64, false)...
    done (took 1.300068272 seconds)
    (84/286) benchmarking ("broadcast", identity, Int64, false)...
    done (took 2.474477539 seconds)
    (85/286) benchmarking ("map", identity, BigFloat, false)...
    done (took 2.075893584 seconds)
    (86/286) benchmarking ("map", abs, Int8, true)...
    done (took 1.638939682 seconds)
    (87/286) benchmarking ("broadcast", identity, Float64, true)...
    done (took 6.261123493 seconds)
    (88/286) benchmarking ("perf_countequals", "Float32")...
    done (took 1.48676874 seconds)
    (89/286) benchmarking ("broadcast", *, BigInt, (false, true))...
    done (took 6.254067771 seconds)
    (90/286) benchmarking ("perf_countnothing", Complex{Float64}, false)...
    done (took 1.31468106 seconds)
    (91/286) benchmarking ("broadcast", identity, Complex{Float64}, true)...
    done (took 6.25379953 seconds)
    (92/286) benchmarking ("map", *, BigFloat, (false, true))...
    done (took 6.279387234 seconds)
    (93/286) benchmarking ("perf_simplecopy", Float32, true)...
    done (took 1.728540926 seconds)
    (94/286) benchmarking ("skipmissing", collect, Float32, true)...
    done (took 2.721552987 seconds)
    (95/286) benchmarking ("broadcast", *, Float32, (false, true))...
    done (took 6.254607788 seconds)
    (96/286) benchmarking ("skipmissing", sum, Int8, false)...
    done (took 1.307162884 seconds)
    (97/286) benchmarking ("broadcast", *, Int64, (true, true))...
    done (took 6.254032586 seconds)
    (98/286) benchmarking ("map", *, Int8, (true, true))...
    done (took 1.79114199 seconds)
    (99/286) benchmarking ("perf_countnothing", Float32, true)...
    done (took 1.307550045 seconds)
    (100/286) benchmarking ("perf_sum4", Int8, true)...
    done (took 1.28309074 seconds)
    (101/286) benchmarking ("broadcast", identity, Int8, false)...
    done (took 2.042915572 seconds)
    (102/286) benchmarking ("map", *, Float32, (true, true))...
    done (took 2.276941751 seconds)
    (103/286) benchmarking ("skipmissing", sum, Bool, true)...
    done (took 1.372614589 seconds)
    (104/286) benchmarking ("sort", Bool, false)...
    done (took 1.780658696 seconds)
    (105/286) benchmarking ("perf_sum4", Int64, false)...
    done (took 1.320158749 seconds)
    (106/286) benchmarking ("perf_sum4", Float32, true)...
    done (took 1.298907714 seconds)
    (107/286) benchmarking ("map", *, Bool, (false, false))...
    done (took 1.531186496 seconds)
    (108/286) benchmarking ("map", *, Float64, (false, true))...
    done (took 2.773406136 seconds)
    (109/286) benchmarking ("perf_countequals", "Int64")...
    done (took 1.531551873 seconds)
    (110/286) benchmarking ("skipmissing", collect, Bool, true)...
    done (took 2.109158689 seconds)
    (111/286) benchmarking ("perf_sum4", Float64, false)...
    done (took 1.323422799 seconds)
    (112/286) benchmarking ("perf_binaryop", *, Bool, (true, true))...
    done (took 1.670993479 seconds)
    (113/286) benchmarking ("map", abs, Complex{Float64}, false)...
    done (took 2.493596963 seconds)
    (114/286) benchmarking ("skipmissing", sum, BigFloat, true)...
    done (took 6.268413724 seconds)
    (115/286) benchmarking ("perf_simplecopy", Int64, false)...
    done (took 2.014310627 seconds)
    (116/286) benchmarking ("perf_binaryop", *, Bool, (false, false))...
    done (took 1.623735859 seconds)
    (117/286) benchmarking ("perf_countequals", "Bool")...
    done (took 1.557636025 seconds)
    (118/286) benchmarking ("skipmissing", sum, Int64, false)...
    done (took 1.291129908 seconds)
    (119/286) benchmarking ("perf_binaryop", *, Int64, (false, false))...
    done (took 2.116778366 seconds)
    (120/286) benchmarking ("perf_simplecopy", Float32, false)...
    done (took 1.714997595 seconds)
    (121/286) benchmarking ("broadcast", *, Complex{Float64}, (true, true))...
    done (took 6.262402408 seconds)
    (122/286) benchmarking ("broadcast", *, BigFloat, (true, true))...
    done (took 6.256082305 seconds)
    (123/286) benchmarking ("perf_sum2", Bool, true)...
    done (took 1.380154823 seconds)
    (124/286) benchmarking ("perf_binaryop", *, BigInt, (false, true))...
    done (took 6.275818776 seconds)
    (125/286) benchmarking ("broadcast", identity, Complex{Float64}, false)...
    done (took 2.97405841 seconds)
    (126/286) benchmarking ("map", identity, Int64, false)...
    done (took 1.884628647 seconds)
    (127/286) benchmarking ("skipmissing", sum, Float32, true)...
    done (took 1.372832863 seconds)
    (128/286) benchmarking ("perf_sum2", Complex{Float64}, true)...
    done (took 1.382857653 seconds)
    (129/286) benchmarking ("map", abs, BigFloat, false)...
    done (took 6.265412703 seconds)
    (130/286) benchmarking ("map", *, BigInt, (false, false))...
    done (took 6.283526117 seconds)
    (131/286) benchmarking ("perf_simplecopy", Int64, true)...
    done (took 2.038243203 seconds)
    (132/286) benchmarking ("perf_binaryop", *, Int64, (true, true))...
    done (took 2.168815018 seconds)
    (133/286) benchmarking ("perf_countnothing", Bool, false)...
    done (took 1.303450401 seconds)
    (134/286) benchmarking ("broadcast", abs, Bool, true)...
    done (took 6.263202106 seconds)
    (135/286) benchmarking ("map", *, Int64, (true, true))...
    done (took 2.784602611 seconds)
    (136/286) benchmarking ("sort", Int8, false)...
    done (took 4.294664916 seconds)
    (137/286) benchmarking ("map", abs, Bool, true)...
    done (took 1.629011401 seconds)
    (138/286) benchmarking ("broadcast", abs, BigFloat, true)...
    done (took 6.262934983 seconds)
    (139/286) benchmarking ("perf_sum2", Float64, false)...
    done (took 1.365523077 seconds)
    (140/286) benchmarking ("broadcast", abs, Float64, false)...
    done (took 2.47916763 seconds)
    (141/286) benchmarking ("map", *, Bool, (true, true))...
    done (took 1.750404367 seconds)
    (142/286) benchmarking ("perf_sum", Float32, true)...
    done (took 1.389897785 seconds)
    (143/286) benchmarking ("perf_sum3", Int8, true)...
    done (took 1.374368265 seconds)
    (144/286) benchmarking ("perf_sum", Int64, true)...
    done (took 1.299430154 seconds)
    (145/286) benchmarking ("perf_sum2", Float32, true)...
    done (took 1.403035763 seconds)
    (146/286) benchmarking ("map", abs, BigInt, false)...
    done (took 6.260735188 seconds)
    (147/286) benchmarking ("map", identity, Bool, true)...
    done (took 1.643241177 seconds)
    (148/286) benchmarking ("broadcast", *, Bool, (false, false))...
    done (took 2.376298205 seconds)
    (149/286) benchmarking ("perf_sum2", BigInt, true)...
    done (took 6.304640828 seconds)
    (150/286) benchmarking ("map", *, BigFloat, (true, true))...
    done (took 6.274830811 seconds)
    (151/286) benchmarking ("broadcast", identity, Int64, true)...
    done (took 6.272139195 seconds)
    (152/286) benchmarking ("perf_simplecopy", BigInt, true)...
    done (took 2.090067826 seconds)
    (153/286) benchmarking ("broadcast", *, BigFloat, (false, true))...
    done (took 6.259031305 seconds)
    (154/286) benchmarking ("skipmissing", collect, Bool, false)...
    done (took 1.981997199 seconds)
    (155/286) benchmarking ("map", *, Bool, (false, true))...
    done (took 1.812509906 seconds)
    (156/286) benchmarking ("perf_sum4", BigInt, true)...
    done (took 6.384529034 seconds)
    (157/286) benchmarking ("perf_simplecopy", BigFloat, true)...
    done (took 2.09660552 seconds)
    (158/286) benchmarking ("skipmissing", collect, Float32, false)...
    done (took 2.609713821 seconds)
    (159/286) benchmarking ("map", *, Int64, (false, true))...
    done (took 2.781740352 seconds)
    (160/286) benchmarking ("broadcast", identity, Bool, false)...
    done (took 2.100540895 seconds)
    (161/286) benchmarking ("skipmissing", collect, Int64, false)...
    done (took 3.470983181 seconds)
    (162/286) benchmarking ("perf_simplecopy", Int8, true)...
    done (took 1.522356947 seconds)
    (163/286) benchmarking ("perf_sum3", Complex{Float64}, false)...
    done (took 1.423014979 seconds)
    (164/286) benchmarking ("broadcast", identity, BigFloat, false)...
    done (took 2.638901934 seconds)
    (165/286) benchmarking ("broadcast", *, Float64, (true, true))...
    done (took 6.267748069 seconds)
    (166/286) benchmarking ("perf_countnothing", BigFloat, false)...
    done (took 1.341691788 seconds)
    (167/286) benchmarking ("skipmissing", collect, Float64, true)...
    done (took 3.570350477 seconds)
    (168/286) benchmarking ("map", identity, Float32, false)...
    done (took 1.639343584 seconds)
    (169/286) benchmarking ("skipmissing", sum, Float64, true)...
    done (took 1.369381983 seconds)
    (170/286) benchmarking ("perf_sum", BigInt, false)...
    done (took 6.278723606 seconds)
    (171/286) benchmarking ("perf_binaryop", *, Complex{Float64}, (false, false))...
    done (took 2.882224534 seconds)
    (172/286) benchmarking ("perf_sum4", BigFloat, true)...
    done (took 6.278899286 seconds)
    (173/286) benchmarking ("perf_countnothing", Int64, true)...
    done (took 1.332097174 seconds)
    (174/286) benchmarking ("map", abs, BigFloat, true)...
    done (took 6.258970796 seconds)
    (175/286) benchmarking ("perf_sum", Float64, false)...
    done (took 1.383765429 seconds)
    (176/286) benchmarking ("map", abs, Float32, false)...
    done (took 1.640528936 seconds)
    (177/286) benchmarking ("perf_sum2", BigFloat, false)...
    done (took 6.295915117 seconds)
    (178/286) benchmarking ("perf_sum4", Bool, true)...
    done (took 1.32692683 seconds)
    (179/286) benchmarking ("perf_sum3", Int8, false)...
    done (took 1.337905172 seconds)
    (180/286) benchmarking ("perf_sum4", Int8, false)...
    done (took 1.287639348 seconds)
    (181/286) benchmarking ("perf_binaryop", *, Float64, (false, true))...
    done (took 2.179733909 seconds)
    (182/286) benchmarking ("skipmissing", collect, BigFloat, false)...
    done (took 3.621909075 seconds)
    (183/286) benchmarking ("skipmissing", collect, BigInt, true)...
    done (took 3.68337255 seconds)
    (184/286) benchmarking ("map", abs, BigInt, true)...
    done (took 6.264615036 seconds)
    (185/286) benchmarking ("broadcast", *, Int8, (true, true))...
    done (took 6.275756376 seconds)
    (186/286) benchmarking ("perf_binaryop", *, Float32, (false, false))...
    done (took 1.852717433 seconds)
    (187/286) benchmarking ("broadcast", *, Int64, (false, true))...
    done (took 6.261147391 seconds)
    (188/286) benchmarking ("perf_sum", BigFloat, false)...
    done (took 6.301695319 seconds)
    (189/286) benchmarking ("perf_sum", Complex{Float64}, true)...
    done (took 1.395788559 seconds)
    (190/286) benchmarking ("map", *, Int8, (false, false))...
    done (took 1.536173588 seconds)
    (191/286) benchmarking ("skipmissing", sum, Complex{Float64}, true)...
    done (took 1.382754767 seconds)
    (192/286) benchmarking ("sort", Bool, true)...
    done (took 5.344916401 seconds)
    (193/286) benchmarking ("perf_sum2", Bool, false)...
    done (took 1.353284191 seconds)
    (194/286) benchmarking ("broadcast", *, Float64, (false, true))...
    done (took 6.260989945 seconds)
    (195/286) benchmarking ("broadcast", identity, Float64, false)...
    done (took 2.462537234 seconds)
    (196/286) benchmarking ("skipmissing", sum, BigFloat, false)...
    done (took 6.291769384 seconds)
    (197/286) benchmarking ("map", *, Complex{Float64}, (false, false))...
    done (took 2.692224563 seconds)
    (198/286) benchmarking ("perf_simplecopy", BigFloat, false)...
    done (took 2.045519796 seconds)
    (199/286) benchmarking ("perf_countnothing", BigFloat, true)...
    done (took 1.344190502 seconds)
    (200/286) benchmarking ("broadcast", *, Float64, (false, false))...
    done (took 2.697723374 seconds)
    (201/286) benchmarking ("map", *, Int8, (false, true))...
    done (took 1.781291671 seconds)
    (202/286) benchmarking ("skipmissing", collect, Int64, true)...
    done (took 3.580005911 seconds)
    (203/286) benchmarking ("perf_simplecopy", Complex{Float64}, false)...
    done (took 2.642194114 seconds)
    (204/286) benchmarking ("perf_sum3", Complex{Float64}, true)...
    done (took 1.434761302 seconds)
    (205/286) benchmarking ("perf_countequals", "BigInt")...
    done (took 1.917813947 seconds)
    (206/286) benchmarking ("perf_countequals", "Float64")...
    done (took 1.496881597 seconds)
    (207/286) benchmarking ("sort", Float64, false)...
    done (took 5.553493044 seconds)
    (208/286) benchmarking ("broadcast", abs, BigInt, false)...
    done (took 6.260865781 seconds)
    (209/286) benchmarking ("broadcast", *, BigInt, (false, false))...
    done (took 6.323929969 seconds)
    (210/286) benchmarking ("broadcast", abs, Complex{Float64}, false)...
    done (took 3.08371622 seconds)
    (211/286) benchmarking ("broadcast", abs, Float32, false)...
    done (took 2.240204773 seconds)
    (212/286) benchmarking ("map", abs, Float64, false)...
    done (took 1.873966503 seconds)
    (213/286) benchmarking ("sort", BigInt, false)...
    done (took 6.288821149 seconds)
    (214/286) benchmarking ("skipmissing", collect, Float64, false)...
    done (took 3.477809388 seconds)
    (215/286) benchmarking ("map", *, Complex{Float64}, (true, true))...
    done (took 3.990315728 seconds)
    (216/286) benchmarking ("sort", BigFloat, true)...
    done (took 6.296899747 seconds)
    (217/286) benchmarking ("perf_sum", BigInt, true)...
    done (took 6.28451644 seconds)
    (218/286) benchmarking ("perf_sum", Int64, false)...
    done (took 1.310440586 seconds)
    (219/286) benchmarking ("broadcast", abs, Int64, true)...
    done (took 6.26220803 seconds)
    (220/286) benchmarking ("perf_sum2", Int64, false)...
    done (took 1.321752806 seconds)
    (221/286) benchmarking ("map", *, BigInt, (false, true))...
    done (took 6.275605895 seconds)
    (222/286) benchmarking ("broadcast", identity, Float32, false)...
    done (took 2.220869161 seconds)
    (223/286) benchmarking ("perf_sum3", BigInt, false)...
    done (took 6.297613517 seconds)
    (224/286) benchmarking ("map", abs, Float64, true)...
    done (took 2.580536889 seconds)
    (225/286) benchmarking ("skipmissing", collect, BigInt, false)...
    done (took 3.635120758 seconds)
    (226/286) benchmarking ("perf_sum3", BigInt, true)...
    done (took 6.315258686 seconds)
    (227/286) benchmarking ("perf_binaryop", *, Float64, (true, true))...
    done (took 2.179680301 seconds)
    (228/286) benchmarking ("map", identity, Bool, false)...
    done (took 1.464051389 seconds)
    (229/286) benchmarking ("perf_simplecopy", Float64, false)...
    done (took 2.039655758 seconds)
    (230/286) benchmarking ("map", identity, Int64, true)...
    done (took 2.517850383 seconds)
    (231/286) benchmarking ("perf_binaryop", *, Bool, (false, true))...
    done (took 1.687637561 seconds)
    (232/286) benchmarking ("perf_simplecopy", Float64, true)...
    done (took 2.035486782 seconds)
    (233/286) benchmarking ("map", identity, Int8, false)...
    done (took 1.462883265 seconds)
    (234/286) benchmarking ("map", *, Float32, (false, true))...
    done (took 2.283222595 seconds)
    (235/286) benchmarking ("perf_countnothing", BigInt, true)...
    done (took 1.346395354 seconds)
    (236/286) benchmarking ("perf_countnothing", Int8, false)...
    done (took 1.308536228 seconds)
    (237/286) benchmarking ("map", identity, Float32, true)...
    done (took 2.009074376 seconds)
    (238/286) benchmarking ("perf_simplecopy", Bool, false)...
    done (took 1.490272535 seconds)
    (239/286) benchmarking ("map", identity, Float64, false)...
    done (took 1.905634874 seconds)
    (240/286) benchmarking ("broadcast", identity, BigInt, true)...
    done (took 6.262396342 seconds)
    (241/286) benchmarking ("perf_sum", Complex{Float64}, false)...
    done (took 1.367584529 seconds)
    (242/286) benchmarking ("map", abs, Bool, false)...
    done (took 1.464100748 seconds)
    (243/286) benchmarking ("perf_sum3", BigFloat, true)...
    done (took 6.305902835 seconds)
    (244/286) benchmarking ("perf_countnothing", Bool, true)...
    done (took 1.333981924 seconds)
    (245/286) benchmarking ("broadcast", identity, BigFloat, true)...
    done (took 6.268702047 seconds)
    (246/286) benchmarking ("perf_sum2", Int8, false)...
    done (took 1.342888472 seconds)
    (247/286) benchmarking ("map", *, Int64, (false, false))...
    done (took 2.094438566 seconds)
    (248/286) benchmarking ("perf_countequals", "Complex{Float64}")...
    done (took 1.671952319 seconds)
    (249/286) benchmarking ("perf_binaryop", *, Float64, (false, false))...
    done (took 2.122848122 seconds)
    (250/286) benchmarking ("skipmissing", sum, Int8, true)...
    done (took 1.302897979 seconds)
    (251/286) benchmarking ("perf_binaryop", *, Int8, (true, true))...
    done (took 1.6864372 seconds)
    (252/286) benchmarking ("perf_binaryop", *, BigFloat, (false, false))...
    done (took 6.309972082 seconds)
    (253/286) benchmarking ("broadcast", abs, BigInt, true)...
    done (took 6.274722538 seconds)
    (254/286) benchmarking ("skipmissing", collect, Complex{Float64}, false)...
    done (took 5.178719046 seconds)
    (255/286) benchmarking ("sort", Float32, false)...
    done (took 5.271878318 seconds)
    (256/286) benchmarking ("broadcast", abs, Float64, true)...
    done (took 6.264323483 seconds)
    (257/286) benchmarking ("perf_sum2", Complex{Float64}, false)...
    done (took 1.369439953 seconds)
    (258/286) benchmarking ("perf_sum4", Complex{Float64}, false)...
    done (took 1.368655782 seconds)
    (259/286) benchmarking ("perf_sum3", Bool, false)...
    done (took 1.367559204 seconds)
    (260/286) benchmarking ("perf_sum3", Float32, false)...
    done (took 1.368534348 seconds)
    (261/286) benchmarking ("map", abs, Complex{Float64}, true)...
    done (took 3.039252652 seconds)
    (262/286) benchmarking ("perf_sum2", BigFloat, true)...
    done (took 6.290383617 seconds)
    (263/286) benchmarking ("perf_sum3", Int64, false)...
    done (took 1.37301641 seconds)
    (264/286) benchmarking ("perf_sum2", Float32, false)...
    done (took 1.368251589 seconds)
    (265/286) benchmarking ("perf_sum3", Bool, true)...
    done (took 1.393547167 seconds)
    (266/286) benchmarking ("perf_countequals", "BigFloat")...
    done (took 3.132156189 seconds)
    (267/286) benchmarking ("perf_countnothing", Float64, false)...
    done (took 1.310922573 seconds)
    (268/286) benchmarking ("perf_sum4", Bool, false)...
    done (took 1.325498907 seconds)
    (269/286) benchmarking ("map", *, Float64, (true, true))...
    done (took 2.785905635 seconds)
    (270/286) benchmarking ("broadcast", *, BigInt, (true, true))...
    done (took 6.264956424 seconds)
    (271/286) benchmarking ("skipmissing", collect, Int8, false)...
    done (took 1.9950103 seconds)
    (272/286) benchmarking ("perf_sum", Int8, true)...
    done (took 1.311123295 seconds)
    (273/286) benchmarking ("skipmissing", sum, Complex{Float64}, false)...
    done (took 1.368631177 seconds)
    (274/286) benchmarking ("perf_sum4", BigInt, false)...
    done (took 6.315104269 seconds)
    (275/286) benchmarking ("map", *, BigFloat, (false, false))...
    done (took 6.277163378 seconds)
    (276/286) benchmarking ("perf_binaryop", *, BigFloat, (false, true))...
    done (took 6.292549025 seconds)
    (277/286) benchmarking ("perf_sum3", Float32, true)...
    done (took 1.386830632 seconds)
    (278/286) benchmarking ("perf_sum4", Int64, true)...
    done (took 1.30735159 seconds)
    (279/286) benchmarking ("broadcast", identity, Int8, true)...
    done (took 6.266367436 seconds)
    (280/286) benchmarking ("perf_sum4", Float32, false)...
    done (took 1.326811528 seconds)
    (281/286) benchmarking ("perf_sum4", Complex{Float64}, true)...
    done (took 1.403726743 seconds)
    (282/286) benchmarking ("broadcast", *, Complex{Float64}, (false, false))...
    done (took 3.302145125 seconds)
    (283/286) benchmarking ("broadcast", abs, Float32, true)...
    done (took 6.283444294 seconds)
    (284/286) benchmarking ("map", identity, BigInt, true)...
    done (took 2.674606094 seconds)
    (285/286) benchmarking ("map", identity, Float64, true)...
    done (took 2.537899119 seconds)
    (286/286) benchmarking ("perf_sum3", BigFloat, false)...
    done (took 6.285108913 seconds)
  done (took 919.271438091 seconds)
done (took 920.462865011 seconds)
(14/20) benchmarking "simd"...
  (1/152) benchmarking ("manual_example!_aliased", "Int64", 4096)...
  done (took 1.318085166 seconds)
  (2/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.31460234 seconds)
  (3/152) benchmarking ("inner_aliased", "Float32", 4095)...
  done (took 1.295691636 seconds)
  (4/152) benchmarking ("manual_example!_aliased", "Int32", 4096)...
  done (took 1.315985514 seconds)
  (5/152) benchmarking ("conditional_loop!_aliased", "Float64", 4095)...
  done (took 1.407981685 seconds)
  (6/152) benchmarking ("two_reductions", "Int32", 4095)...
  done (took 1.323164109 seconds)
  (7/152) benchmarking ("inner_aliased", "Int64", 4095)...
  done (took 1.306741185 seconds)
  (8/152) benchmarking ("two_reductions_aliased", "Int64", 4096)...
  done (took 1.297786357 seconds)
  (9/152) benchmarking ("manual_example!_aliased", "Float64", 4096)...
  done (took 1.343131594 seconds)
  (10/152) benchmarking ("manual_example!_aliased", "Float32", 4095)...
  done (took 1.34694496 seconds)
  (11/152) benchmarking ("conditional_loop!_aliased", "Int32", 4095)...
  done (took 1.295705081 seconds)
  (12/152) benchmarking ("two_reductions_aliased", "Int32", 4096)...
  done (took 1.322889642 seconds)
  (13/152) benchmarking ("axpy!", "Float32", 4095)...
  done (took 1.297864631 seconds)
  (14/152) benchmarking ("axpy!", "Int32", 4096)...
  done (took 1.297224906 seconds)
  (15/152) benchmarking ("inner_aliased", "Int32", 4096)...
  done (took 1.297462144 seconds)
  (16/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.312623087 seconds)
  (17/152) benchmarking ("local_arrays", "Float32", 4095)...
  done (took 2.301023088 seconds)
  (18/152) benchmarking ("auto_axpy!", "Int32", 4096)...
  done (took 1.297127862 seconds)
  (19/152) benchmarking ("axpy!_aliased", "Int32", 4095)...
  done (took 1.314509021 seconds)
  (20/152) benchmarking ("manual_example!", "Int64", 4095)...
  done (took 1.305739369 seconds)
  (21/152) benchmarking ("axpy!_aliased", "Float32", 4096)...
  done (took 1.313167531 seconds)
  (22/152) benchmarking ("conditional_loop!", "Int32", 4096)...
  done (took 1.295837541 seconds)
  (23/152) benchmarking ("manual_example!_aliased", "Float32", 4096)...
  done (took 1.345058656 seconds)
  (24/152) benchmarking ("two_reductions_aliased", "Int32", 4095)...
  done (took 1.324338254 seconds)
  (25/152) benchmarking ("auto_manual_example!", "Int32", 4095)...
  done (took 1.300224485 seconds)
  (26/152) benchmarking ("inner", "Float64", 4096)...
  done (took 1.301568743 seconds)
  (27/152) benchmarking ("auto_conditional_loop!", "Int64", 4095)...
  done (took 1.300460634 seconds)
  (28/152) benchmarking ("axpy!_aliased", "Float64", 4096)...
  done (took 1.316827056 seconds)
  (29/152) benchmarking ("conditional_loop!_aliased", "Float64", 4096)...
  done (took 1.409708754 seconds)
  (30/152) benchmarking ("auto_conditional_loop!", "Int64", 4096)...
  done (took 1.300582311 seconds)
  (31/152) benchmarking ("inner", "Float64", 4095)...
  done (took 1.30092311 seconds)
  (32/152) benchmarking ("auto_axpy!", "Int64", 4096)...
  done (took 1.309042536 seconds)
  (33/152) benchmarking ("local_arrays", "Float32", 4096)...
  done (took 2.300287772 seconds)
  (34/152) benchmarking ("sum_reduce", "Float32", 4095)...
  done (took 1.296165747 seconds)
  (35/152) benchmarking ("auto_sum_reduce", "Int64", 4095)...
  done (took 1.29193607 seconds)
  (36/152) benchmarking ("axpy!_aliased", "Float64", 4095)...
  done (took 1.316813642 seconds)
  (37/152) benchmarking ("axpy!", "Int64", 4095)...
  done (took 1.309145016 seconds)
  (38/152) benchmarking ("auto_manual_example!", "Int64", 4096)...
  done (took 1.307139433 seconds)
  (39/152) benchmarking ("manual_example!", "Int32", 4095)...
  done (took 1.301498438 seconds)
  (40/152) benchmarking ("conditional_loop!", "Float64", 4096)...
  done (took 1.330344811 seconds)
  (41/152) benchmarking ("auto_local_arrays", "Float64", 4095)...
  done (took 2.6906758 seconds)
  (42/152) benchmarking ("conditional_loop!", "Int32", 4095)...
  done (took 1.314651104 seconds)
  (43/152) benchmarking ("auto_axpy!", "Float32", 4095)...
  done (took 1.300715805 seconds)
  (44/152) benchmarking ("auto_inner", "Int32", 4096)...
  done (took 1.299241714 seconds)
  (45/152) benchmarking ("inner", "Int32", 4096)...
  done (took 1.29889859 seconds)
  (46/152) benchmarking ("two_reductions", "Int64", 4096)...
  done (took 1.302228176 seconds)
  (47/152) benchmarking ("axpy!", "Float32", 4096)...
  done (took 1.298965743 seconds)
  (48/152) benchmarking ("two_reductions", "Float64", 4095)...
  done (took 1.305675149 seconds)
  (49/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.313085485 seconds)
  (50/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.314142913 seconds)
  (51/152) benchmarking ("auto_local_arrays", "Int64", 4096)...
  done (took 2.678436067 seconds)
  (52/152) benchmarking ("auto_conditional_loop!", "Float32", 4096)...
  done (took 1.330274058 seconds)
  (53/152) benchmarking ("conditional_loop!_aliased", "Int64", 4096)...
  done (took 1.301261028 seconds)
  (54/152) benchmarking ("auto_inner", "Int32", 4095)...
  done (took 1.299720826 seconds)
  (55/152) benchmarking ("inner", "Int64", 4095)...
  done (took 1.309215574 seconds)
  (56/152) benchmarking ("axpy!", "Int32", 4095)...
  done (took 1.299315391 seconds)
  (57/152) benchmarking ("two_reductions_aliased", "Float64", 4096)...
  done (took 1.303184517 seconds)
  (58/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.317696333 seconds)
  (59/152) benchmarking ("axpy!_aliased", "Int64", 4096)...
  done (took 1.318459724 seconds)
  (60/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.317537782 seconds)
  (61/152) benchmarking ("auto_local_arrays", "Int32", 4095)...
  done (took 2.288522399 seconds)
  (62/152) benchmarking ("auto_two_reductions", "Int64", 4095)...
  done (took 1.304350411 seconds)
  (63/152) benchmarking ("two_reductions_aliased", "Int64", 4095)...
  done (took 1.301148824 seconds)
  (64/152) benchmarking ("axpy!_aliased", "Int32", 4096)...
  done (took 1.31573057 seconds)
  (65/152) benchmarking ("axpy!", "Float64", 4096)...
  done (took 1.307182204 seconds)
  (66/152) benchmarking ("local_arrays", "Int64", 4095)...
  done (took 2.715989029 seconds)
  (67/152) benchmarking ("sum_reduce", "Int64", 4096)...
  done (took 1.311416787 seconds)
  (68/152) benchmarking ("two_reductions", "Int64", 4095)...
  done (took 1.302830085 seconds)
  (69/152) benchmarking ("local_arrays", "Float64", 4095)...
  done (took 2.691499408 seconds)
  (70/152) benchmarking ("auto_two_reductions", "Int64", 4096)...
  done (took 1.319900925 seconds)
  (71/152) benchmarking ("auto_local_arrays", "Int64", 4095)...
  done (took 2.718017899 seconds)
  (72/152) benchmarking ("axpy!", "Float64", 4095)...
  done (took 1.324265603 seconds)
  (73/152) benchmarking ("inner_aliased", "Float64", 4095)...
  done (took 1.301744777 seconds)
  (74/152) benchmarking ("auto_conditional_loop!", "Float32", 4095)...
  done (took 1.314391075 seconds)
  (75/152) benchmarking ("auto_conditional_loop!", "Float64", 4095)...
  done (took 1.331296244 seconds)
  (76/152) benchmarking ("auto_local_arrays", "Float32", 4096)...
  done (took 2.300991431 seconds)
  (77/152) benchmarking ("auto_sum_reduce", "Int64", 4096)...
  done (took 1.296535544 seconds)
  (78/152) benchmarking ("inner_aliased", "Float32", 4096)...
  done (took 1.298972134 seconds)
  (79/152) benchmarking ("auto_axpy!", "Float64", 4096)...
  done (took 1.307529006 seconds)
  (80/152) benchmarking ("auto_conditional_loop!", "Int32", 4095)...
  done (took 1.298898728 seconds)
  (81/152) benchmarking ("manual_example!", "Float64", 4095)...
  done (took 1.31143462 seconds)
  (82/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.314891974 seconds)
  (83/152) benchmarking ("manual_example!", "Float32", 4096)...
  done (took 1.305570976 seconds)
  (84/152) benchmarking ("inner", "Int32", 4095)...
  done (took 1.300574663 seconds)
  (85/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.31545222 seconds)
  (86/152) benchmarking ("two_reductions", "Int32", 4096)...
  done (took 1.328156163 seconds)
  (87/152) benchmarking ("inner_aliased", "Int64", 4096)...
  done (took 1.311735661 seconds)
  (88/152) benchmarking ("auto_axpy!", "Float32", 4096)...
  done (took 1.301997979 seconds)
  (89/152) benchmarking ("manual_example!", "Int64", 4096)...
  done (took 1.310259973 seconds)
  (90/152) benchmarking ("axpy!_aliased", "Int64", 4095)...
  done (took 1.32141153 seconds)
  (91/152) benchmarking ("auto_axpy!", "Float64", 4095)...
  done (took 1.308271361 seconds)
  (92/152) benchmarking ("auto_axpy!", "Int64", 4095)...
  done (took 1.312109 seconds)
  (93/152) benchmarking ("manual_example!", "Int32", 4096)...
  done (took 1.303441187 seconds)
  (94/152) benchmarking ("sum_reduce", "Float64", 4096)...
  done (took 1.29633553 seconds)
  (95/152) benchmarking ("manual_example!", "Float64", 4096)...
  done (took 1.310282503 seconds)
  (96/152) benchmarking ("two_reductions_aliased", "Float64", 4095)...
  done (took 1.303816022 seconds)
  (97/152) benchmarking ("conditional_loop!", "Int64", 4096)...
  done (took 1.304774904 seconds)
  (98/152) benchmarking ("conditional_loop!", "Int64", 4095)...
  done (took 1.304443454 seconds)
  (99/152) benchmarking ("manual_example!", "Float32", 4095)...
  done (took 1.306361854 seconds)
  (100/152) benchmarking ("inner", "Int64", 4096)...
  done (took 1.311488897 seconds)
  (101/152) benchmarking ("auto_local_arrays", "Float64", 4096)...
  done (took 2.679202248 seconds)
  (102/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.335776319 seconds)
  (103/152) benchmarking ("auto_sum_reduce", "Int32", 4095)...
  done (took 1.299352871 seconds)
  (104/152) benchmarking ("auto_sum_reduce", "Int32", 4096)...
  done (took 1.297926831 seconds)
  (105/152) benchmarking ("inner_aliased", "Int32", 4095)...
  done (took 1.300343304 seconds)
  (106/152) benchmarking ("conditional_loop!", "Float32", 4096)...
  done (took 1.315829475 seconds)
  (107/152) benchmarking ("local_arrays", "Float64", 4096)...
  done (took 2.678073124 seconds)
  (108/152) benchmarking ("auto_axpy!", "Int32", 4095)...
  done (took 1.31904336 seconds)
  (109/152) benchmarking ("manual_example!_aliased", "Int64", 4095)...
  done (took 1.323388527 seconds)
  (110/152) benchmarking ("manual_example!_aliased", "Float64", 4095)...
  done (took 1.350603562 seconds)
  (111/152) benchmarking ("two_reductions_aliased", "Float32", 4096)...
  done (took 1.303687064 seconds)
  (112/152) benchmarking ("local_arrays", "Int32", 4095)...
  done (took 2.278314181 seconds)
  (113/152) benchmarking ("conditional_loop!_aliased", "Int64", 4095)...
  done (took 1.305869814 seconds)
  (114/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.320277638 seconds)
  (115/152) benchmarking ("auto_manual_example!", "Int64", 4095)...
  done (took 1.312339575 seconds)
  (116/152) benchmarking ("two_reductions", "Float32", 4095)...
  done (took 1.305563843 seconds)
  (117/152) benchmarking ("sum_reduce", "Float64", 4095)...
  done (took 1.298736245 seconds)
  (118/152) benchmarking ("local_arrays", "Int32", 4096)...
  done (took 2.279888762 seconds)
  (119/152) benchmarking ("local_arrays", "Int64", 4096)...
  done (took 2.672074585 seconds)
  (120/152) benchmarking ("conditional_loop!", "Float32", 4095)...
  done (took 1.333013842 seconds)
  (121/152) benchmarking ("inner", "Float32", 4095)...
  done (took 1.303817119 seconds)
  (122/152) benchmarking ("conditional_loop!_aliased", "Int32", 4096)...
  done (took 1.301058626 seconds)
  (123/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.323577977 seconds)
  (124/152) benchmarking ("two_reductions_aliased", "Float32", 4095)...
  done (took 1.305916066 seconds)
  (125/152) benchmarking ("sum_reduce", "Int32", 4096)...
  done (took 1.300200857 seconds)
  (126/152) benchmarking ("auto_local_arrays", "Float32", 4095)...
  done (took 2.296997549 seconds)
  (127/152) benchmarking ("inner_aliased", "Float64", 4096)...
  done (took 1.304049666 seconds)
  (128/152) benchmarking ("loop_fields!", "Int32", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4095)...
  done (took 1.318791543 seconds)
  (129/152) benchmarking ("conditional_loop!_aliased", "Float32", 4096)...
  done (took 1.425030568 seconds)
  (130/152) benchmarking ("auto_inner", "Int64", 4095)...
  done (took 1.313924672 seconds)
  (131/152) benchmarking ("conditional_loop!", "Float64", 4095)...
  done (took 1.335208065 seconds)
  (132/152) benchmarking ("auto_conditional_loop!", "Int32", 4096)...
  done (took 1.301745419 seconds)
  (133/152) benchmarking ("auto_manual_example!", "Int32", 4096)...
  done (took 1.305734572 seconds)
  (134/152) benchmarking ("auto_two_reductions", "Int32", 4095)...
  done (took 1.32638862 seconds)
  (135/152) benchmarking ("loop_fields!", "Int64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321283846 seconds)
  (136/152) benchmarking ("auto_conditional_loop!", "Float64", 4096)...
  done (took 1.334510329 seconds)
  (137/152) benchmarking ("two_reductions", "Float32", 4096)...
  done (took 1.307174231 seconds)
  (138/152) benchmarking ("loop_fields!", "Float64", "BaseBenchmarks.SIMDBenchmarks.MutableFields", 4096)...
  done (took 1.321046246 seconds)
  (139/152) benchmarking ("axpy!_aliased", "Float32", 4095)...
  done (took 1.320118143 seconds)
  (140/152) benchmarking ("sum_reduce", "Int32", 4095)...
  done (took 1.30009104 seconds)
  (141/152) benchmarking ("axpy!", "Int64", 4096)...
  done (took 1.315273895 seconds)
  (142/152) benchmarking ("auto_inner", "Int64", 4096)...
  done (took 1.314387974 seconds)
  (143/152) benchmarking ("inner", "Float32", 4096)...
  done (took 1.304168065 seconds)
  (144/152) benchmarking ("two_reductions", "Float64", 4096)...
  done (took 1.309981142 seconds)
  (145/152) benchmarking ("sum_reduce", "Int64", 4095)...
  done (took 1.301830235 seconds)
  (146/152) benchmarking ("auto_two_reductions", "Int32", 4096)...
  done (took 1.327268087 seconds)
  (147/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4095)...
  done (took 1.3186207 seconds)
  (148/152) benchmarking ("loop_fields!", "Float32", "BaseBenchmarks.SIMDBenchmarks.ImmutableFields", 4096)...
  done (took 1.317715804 seconds)
  (149/152) benchmarking ("manual_example!_aliased", "Int32", 4095)...
  done (took 1.326056111 seconds)
  (150/152) benchmarking ("conditional_loop!_aliased", "Float32", 4095)...
  done (took 1.424801359 seconds)
  (151/152) benchmarking ("sum_reduce", "Float32", 4096)...
  done (took 1.302067667 seconds)
  (152/152) benchmarking ("auto_local_arrays", "Int32", 4096)...
  done (took 2.282932345 seconds)
done (took 219.764607137 seconds)
(15/20) benchmarking "random"...
  (1/5) benchmarking "collections"...
    (1/66) benchmarking ("rand!", "MersenneTwister", "large Vector")...
    done (took 1.363549611 seconds)
    (2/66) benchmarking ("rand!", "RandomDevice", "large Set")...
    done (took 6.297869715 seconds)
    (3/66) benchmarking ("rand!", "MersenneTwister", "'a':'z'")...
    done (took 1.388649302 seconds)
    (4/66) benchmarking ("rand", "ImplicitRNG", "small String")...
    done (took 1.300665918 seconds)
    (5/66) benchmarking ("rand!", "MersenneTwister", "large String")...
    done (took 1.401490599 seconds)
    (6/66) benchmarking ("rand!", "ImplicitRNG", "small String")...
    done (took 1.402576191 seconds)
    (7/66) benchmarking ("rand", "MersenneTwister", "large Vector")...
    done (took 1.298159448 seconds)
    (8/66) benchmarking ("rand", "MersenneTwister", "small Set")...
    done (took 1.299417042 seconds)
    (9/66) benchmarking ("rand", "ImplicitRNG", "small Vector")...
    done (took 1.299496822 seconds)
    (10/66) benchmarking ("rand!", "MersenneTwister", "small Set")...
    done (took 1.681522621 seconds)
    (11/66) benchmarking ("rand", "ImplicitRNG", "small BitSet")...
    done (took 1.298685831 seconds)
    (12/66) benchmarking ("rand", "RandomDevice", "small BitSet")...
    done (took 1.298799496 seconds)
    (13/66) benchmarking ("rand!", "RandomDevice", "large Dict")...
    done (took 6.300360003 seconds)
    (14/66) benchmarking ("rand", "MersenneTwister", "small BitSet")...
    done (took 1.300027605 seconds)
    (15/66) benchmarking ("rand!", "MersenneTwister", "small String")...
    done (took 1.385598119 seconds)
    (16/66) benchmarking ("rand", "MersenneTwister", "small String")...
    done (took 1.301384137 seconds)
    (17/66) benchmarking ("rand", "ImplicitRNG", "large Vector")...
    done (took 1.298804363 seconds)
    (18/66) benchmarking ("rand!", "ImplicitRNG", "large Set")...
    done (took 1.647008224 seconds)
    (19/66) benchmarking ("rand", "MersenneTwister", "small Dict")...
    done (took 1.301646169 seconds)
    (20/66) benchmarking ("rand!", "MersenneTwister", "large BitSet")...
    done (took 1.371679021 seconds)
    (21/66) benchmarking ("rand!", "RandomDevice", "'a':'z'")...
    done (took 6.301903541 seconds)
    (22/66) benchmarking ("rand", "ImplicitRNG", "large BitSet")...
    done (took 1.300308094 seconds)
    (23/66) benchmarking ("rand", "MersenneTwister", "'a':'z'")...
    done (took 1.303715433 seconds)
    (24/66) benchmarking ("rand!", "ImplicitRNG", "small Dict")...
    done (took 1.685778693 seconds)
    (25/66) benchmarking ("rand!", "RandomDevice", "small Dict")...
    done (took 6.30358053 seconds)
    (26/66) benchmarking ("rand!", "RandomDevice", "small String")...
    done (took 6.30239439 seconds)
    (27/66) benchmarking ("rand!", "ImplicitRNG", "large BitSet")...
    done (took 1.371892181 seconds)
    (28/66) benchmarking ("rand", "MersenneTwister", "large String")...
    done (took 1.301344875 seconds)
    (29/66) benchmarking ("rand!", "MersenneTwister", "large Dict")...
    done (took 1.674155523 seconds)
    (30/66) benchmarking ("rand!", "RandomDevice", "small Vector")...
    done (took 6.296570987 seconds)
    (31/66) benchmarking ("rand!", "RandomDevice", "large BitSet")...
    done (took 6.30049496 seconds)
    (32/66) benchmarking ("rand!", "ImplicitRNG", "large Dict")...
    done (took 1.673492768 seconds)
    (33/66) benchmarking ("rand!", "ImplicitRNG", "small BitSet")...
    done (took 1.392640413 seconds)
    (34/66) benchmarking ("rand", "RandomDevice", "large Set")...
    done (took 1.319555585 seconds)
    (35/66) benchmarking ("rand", "RandomDevice", "small String")...
    done (took 1.313043289 seconds)
    (36/66) benchmarking ("rand", "RandomDevice", "small Vector")...
    done (took 1.309890667 seconds)
    (37/66) benchmarking ("rand!", "ImplicitRNG", "large String")...
    done (took 1.404150485 seconds)
    (38/66) benchmarking ("rand", "RandomDevice", "large String")...
    done (took 1.320782326 seconds)
    (39/66) benchmarking ("rand!", "ImplicitRNG", "small Vector")...
    done (took 1.385600137 seconds)
    (40/66) benchmarking ("rand!", "MersenneTwister", "small Vector")...
    done (took 1.38420242 seconds)
    (41/66) benchmarking ("rand!", "ImplicitRNG", "'a':'z'")...
    done (took 1.390865016 seconds)
    (42/66) benchmarking ("rand", "RandomDevice", "small Dict")...
    done (took 1.341490482 seconds)
    (43/66) benchmarking ("rand!", "RandomDevice", "large Vector")...
    done (took 6.296813218 seconds)
    (44/66) benchmarking ("rand!", "RandomDevice", "large String")...
    done (took 6.304459021 seconds)
    (45/66) benchmarking ("rand", "ImplicitRNG", "large String")...
    done (took 1.30639395 seconds)
    (46/66) benchmarking ("rand", "ImplicitRNG", "large Dict")...
    done (took 1.304338954 seconds)
    (47/66) benchmarking ("rand", "MersenneTwister", "small Vector")...
    done (took 1.301498491 seconds)
    (48/66) benchmarking ("rand", "RandomDevice", "small Set")...
    done (took 1.32938238 seconds)
    (49/66) benchmarking ("rand!", "RandomDevice", "small Set")...
    done (took 6.299710879 seconds)
    (50/66) benchmarking ("rand", "RandomDevice", "large Vector")...
    done (took 1.302392056 seconds)
    (51/66) benchmarking ("rand!", "MersenneTwister", "large Set")...
    done (took 1.64873607 seconds)
    (52/66) benchmarking ("rand", "RandomDevice", "'a':'z'")...
    done (took 1.313774934 seconds)
    (53/66) benchmarking ("rand", "RandomDevice", "large BitSet")...
    done (took 1.301772187 seconds)
    (54/66) benchmarking ("rand", "ImplicitRNG", "large Set")...
    done (took 1.301866246 seconds)
    (55/66) benchmarking ("rand", "MersenneTwister", "large BitSet")...
    done (took 1.302014795 seconds)
    (56/66) benchmarking ("rand", "RandomDevice", "large Dict")...
    done (took 1.333118768 seconds)
    (57/66) benchmarking ("rand", "ImplicitRNG", "small Set")...
    done (took 1.302437479 seconds)
    (58/66) benchmarking ("rand", "ImplicitRNG", "small Dict")...
    done (took 1.304088079 seconds)
    (59/66) benchmarking ("rand!", "MersenneTwister", "small BitSet")...
    done (took 1.393405657 seconds)
    (60/66) benchmarking ("rand", "MersenneTwister", "large Dict")...
    done (took 1.304853826 seconds)
    (61/66) benchmarking ("rand!", "ImplicitRNG", "large Vector")...
    done (took 1.366918915 seconds)
    (62/66) benchmarking ("rand!", "MersenneTwister", "small Dict")...
    done (took 1.686736313 seconds)
    (63/66) benchmarking ("rand!", "ImplicitRNG", "small Set")...
    done (took 1.685864818 seconds)
    (64/66) benchmarking ("rand", "ImplicitRNG", "'a':'z'")...
    done (took 1.304032397 seconds)
    (65/66) benchmarking ("rand!", "RandomDevice", "small BitSet")...
    done (took 6.304416323 seconds)
    (66/66) benchmarking ("rand", "MersenneTwister", "large Set")...
    done (took 1.303084318 seconds)
  done (took 146.433910272 seconds)
  (2/5) benchmarking "sequences"...
    (1/7) benchmarking ("shuffle!", "MersenneTwister")...
    done (took 1.37166061 seconds)
    (2/7) benchmarking ("randsubseq!", "MersenneTwister", "0.8")...
    done (took 1.377712437 seconds)
    (3/7) benchmarking ("randcycle", "MersenneTwister", "1000")...
    done (took 1.414009642 seconds)
    (4/7) benchmarking ("randperm", "MersenneTwister", "5")...
    done (took 1.322010834 seconds)
    (5/7) benchmarking ("randsubseq!", "MersenneTwister", "0.2")...
    done (took 1.354540897 seconds)
    (6/7) benchmarking ("randperm", "MersenneTwister", "1000")...
    done (took 1.418657476 seconds)
    (7/7) benchmarking ("randcycle", "MersenneTwister", "5")...
    done (took 1.32243083 seconds)
  done (took 10.799628777 seconds)
  (3/5) benchmarking "types"...
    (1/97) benchmarking ("rand!", "MersenneTwister", "Int32")...
    done (took 1.310945444 seconds)
    (2/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.306235151 seconds)
    (3/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int32}")...
    done (took 1.354931361 seconds)
    (4/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.355989814 seconds)
    (5/97) benchmarking ("rand", "MersenneTwister", "UInt128")...
    done (took 1.306235266 seconds)
    (6/97) benchmarking ("randexp!", "MersenneTwister", "Float16")...
    done (took 1.452881008 seconds)
    (7/97) benchmarking ("randn", "MersenneTwister", "Complex{Float32}")...
    done (took 1.306180208 seconds)
    (8/97) benchmarking ("rand!", "MersenneTwister", "UInt64")...
    done (took 1.317937281 seconds)
    (9/97) benchmarking ("randexp", "RandomDevice", "Float64")...
    done (took 1.303517926 seconds)
    (10/97) benchmarking ("randn!", "MersenneTwister", "Float64")...
    done (took 1.358193024 seconds)
    (11/97) benchmarking ("rand", "MersenneTwister", "Complex{Int128}")...
    done (took 1.306296005 seconds)
    (12/97) benchmarking ("rand", "MersenneTwister", "Complex{Float16}")...
    done (took 1.306499408 seconds)
    (13/97) benchmarking ("rand", "RandomDevice", "Int64")...
    done (took 1.312826287 seconds)
    (14/97) benchmarking ("randexp!", "RandomDevice", "Float64")...
    done (took 6.302565884 seconds)
    (15/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int16}")...
    done (took 1.354682887 seconds)
    (16/97) benchmarking ("rand!", "MersenneTwister", "Int64")...
    done (took 1.317277158 seconds)
    (17/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.42091692 seconds)
    (18/97) benchmarking ("rand!", "MersenneTwister", "Int8")...
    done (took 1.30599366 seconds)
    (19/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt64}")...
    done (took 1.306908742 seconds)
    (20/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.45812499 seconds)
    (21/97) benchmarking ("randexp", "RandomDevice", "ImplicitFloat64")...
    done (took 1.303879817 seconds)
    (22/97) benchmarking ("randn", "RandomDevice", "Float64")...
    done (took 1.313197491 seconds)
    (23/97) benchmarking ("randexp!", "ImplicitRNG", "Float64")...
    done (took 1.358540352 seconds)
    (24/97) benchmarking ("rand!", "ImplicitRNG", "Int64")...
    done (took 1.318126967 seconds)
    (25/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt128}")...
    done (took 1.307043218 seconds)
    (26/97) benchmarking ("rand!", "MersenneTwister", "Float64")...
    done (took 1.312562803 seconds)
    (27/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.872775563 seconds)
    (28/97) benchmarking ("randn", "MersenneTwister", "Complex{Float64}")...
    done (took 1.30703705 seconds)
    (29/97) benchmarking ("randn", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304410668 seconds)
    (30/97) benchmarking ("rand", "MersenneTwister", "Int8")...
    done (took 1.306906402 seconds)
    (31/97) benchmarking ("randexp", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.304956441 seconds)
    (32/97) benchmarking ("rand!", "MersenneTwister", "Float16")...
    done (took 1.344306199 seconds)
    (33/97) benchmarking ("rand", "MersenneTwister", "Complex{Int16}")...
    done (took 1.307769382 seconds)
    (34/97) benchmarking ("randn!", "RandomDevice", "Float64")...
    done (took 6.304945895 seconds)
    (35/97) benchmarking ("rand", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.304159858 seconds)
    (36/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.422452024 seconds)
    (37/97) benchmarking ("rand", "MersenneTwister", "Int128")...
    done (took 1.307521143 seconds)
    (38/97) benchmarking ("randexp", "ImplicitRNG", "ImplicitFloat64")...
    done (took 1.305865669 seconds)
    (39/97) benchmarking ("randexp", "MersenneTwister", "Float16")...
    done (took 1.307856162 seconds)
    (40/97) benchmarking ("rand!", "RandomDevice", "Int64")...
    done (took 6.30235996 seconds)
    (41/97) benchmarking ("rand", "MersenneTwister", "UInt16")...
    done (took 1.308120979 seconds)
    (42/97) benchmarking ("randn", "MersenneTwister", "Float32")...
    done (took 1.307569489 seconds)
    (43/97) benchmarking ("randn", "MersenneTwister", "Float16")...
    done (took 1.307219356 seconds)
    (44/97) benchmarking ("randexp", "MersenneTwister", "Float64")...
    done (took 1.306144769 seconds)
    (45/97) benchmarking ("rand", "MersenneTwister", "Bool")...
    done (took 1.307931852 seconds)
    (46/97) benchmarking ("rand!", "MersenneTwister", "UInt128")...
    done (took 1.331762223 seconds)
    (47/97) benchmarking ("rand", "MersenneTwister", "Float16")...
    done (took 1.308320466 seconds)
    (48/97) benchmarking ("randexp", "MersenneTwister", "Float32")...
    done (took 1.30946403 seconds)
    (49/97) benchmarking ("rand", "MersenneTwister", "Int32")...
    done (took 1.30883642 seconds)
    (50/97) benchmarking ("rand", "MersenneTwister", "Complex{Int8}")...
    done (took 1.309238223 seconds)
    (51/97) benchmarking ("randexp!", "MersenneTwister", "Float64")...
    done (took 1.358699874 seconds)
    (52/97) benchmarking ("rand", "MersenneTwister", "Complex{Int32}")...
    done (took 1.308906733 seconds)
    (53/97) benchmarking ("rand", "ImplicitRNG", "Float64")...
    done (took 1.306085349 seconds)
    (54/97) benchmarking ("rand", "RandomDevice", "Float64")...
    done (took 1.306786449 seconds)
    (55/97) benchmarking ("randn!", "MersenneTwister", "Float32")...
    done (took 1.364862713 seconds)
    (56/97) benchmarking ("randn", "RandomDevice", "ImplicitFloat64")...
    done (took 1.315380356 seconds)
    (57/97) benchmarking ("rand", "MersenneTwister", "Complex{Int64}")...
    done (took 1.310470421 seconds)
    (58/97) benchmarking ("rand", "MersenneTwister", "Int64")...
    done (took 1.307610629 seconds)
    (59/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.308103602 seconds)
    (60/97) benchmarking ("randn", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307606307 seconds)
    (61/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int128}")...
    done (took 1.458616647 seconds)
    (62/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int8}")...
    done (took 1.356496002 seconds)
    (63/97) benchmarking ("rand", "MersenneTwister", "Int16")...
    done (took 1.308995363 seconds)
    (64/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt8}")...
    done (took 1.356545625 seconds)
    (65/97) benchmarking ("rand", "MersenneTwister", "Complex{Float32}")...
    done (took 1.309095362 seconds)
    (66/97) benchmarking ("rand", "MersenneTwister", "Complex{UInt32}")...
    done (took 1.309360751 seconds)
    (67/97) benchmarking ("rand", "MersenneTwister", "UInt8")...
    done (took 1.308666744 seconds)
    (68/97) benchmarking ("rand", "MersenneTwister", "UInt32")...
    done (took 1.308439875 seconds)
    (69/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.363374419 seconds)
    (70/97) benchmarking ("rand", "MersenneTwister", "UInt64")...
    done (took 1.30868798 seconds)
    (71/97) benchmarking ("rand!", "MersenneTwister", "Complex{UInt16}")...
    done (took 1.357527003 seconds)
    (72/97) benchmarking ("randn", "ImplicitRNG", "Float64")...
    done (took 1.306646272 seconds)
    (73/97) benchmarking ("randn!", "MersenneTwister", "Float16")...
    done (took 1.464130279 seconds)
    (74/97) benchmarking ("rand!", "MersenneTwister", "Int128")...
    done (took 1.332704621 seconds)
    (75/97) benchmarking ("randn", "MersenneTwister", "Complex{Float16}")...
    done (took 1.311052026 seconds)
    (76/97) benchmarking ("rand!", "MersenneTwister", "Int16")...
    done (took 1.311190882 seconds)
    (77/97) benchmarking ("rand!", "MersenneTwister", "UInt16")...
    done (took 1.312956682 seconds)
    (78/97) benchmarking ("rand", "MersenneTwister", "Complex{Float64}")...
    done (took 1.309834756 seconds)
    (79/97) benchmarking ("rand!", "RandomDevice", "Float64")...
    done (took 6.304064478 seconds)
    (80/97) benchmarking ("rand!", "ImplicitRNG", "Float64")...
    done (took 1.315879199 seconds)
    (81/97) benchmarking ("rand", "MersenneTwister", "Float64")...
    done (took 1.306775114 seconds)
    (82/97) benchmarking ("rand!", "MersenneTwister", "UInt8")...
    done (took 1.311044097 seconds)
    (83/97) benchmarking ("rand!", "MersenneTwister", "UInt32")...
    done (took 1.315698268 seconds)
    (84/97) benchmarking ("rand", "RandomDevice", "ImplicitFloat64")...
    done (took 1.308137794 seconds)
    (85/97) benchmarking ("rand", "MersenneTwister", "ImplicitFloat64")...
    done (took 1.307957276 seconds)
    (86/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float16}")...
    done (took 1.412372023 seconds)
    (87/97) benchmarking ("randn!", "MersenneTwister", "Complex{Float64}")...
    done (took 1.418284202 seconds)
    (88/97) benchmarking ("randexp", "ImplicitRNG", "Float64")...
    done (took 1.308338037 seconds)
    (89/97) benchmarking ("rand!", "MersenneTwister", "Bool")...
    done (took 1.321990462 seconds)
    (90/97) benchmarking ("rand!", "MersenneTwister", "Float32")...
    done (took 1.317752029 seconds)
    (91/97) benchmarking ("randn", "MersenneTwister", "Float64")...
    done (took 1.308143948 seconds)
    (92/97) benchmarking ("randexp!", "MersenneTwister", "Float32")...
    done (took 1.363240842 seconds)
    (93/97) benchmarking ("rand", "MersenneTwister", "Float32")...
    done (took 1.310346664 seconds)
    (94/97) benchmarking ("rand", "ImplicitRNG", "Int64")...
    done (took 1.308139428 seconds)
    (95/97) benchmarking ("rand!", "MersenneTwister", "Complex{Float32}")...
    done (took 1.362268549 seconds)
    (96/97) benchmarking ("rand!", "MersenneTwister", "Complex{Int64}")...
    done (took 1.425162916 seconds)
    (97/97) benchmarking ("randn!", "ImplicitRNG", "Float64")...
    done (took 1.363875172 seconds)
  done (took 150.686035525 seconds)
  (4/5) benchmarking "randstring"...
    (1/6) benchmarking ("randstring", "MersenneTwister", 100)...
    done (took 1.314585984 seconds)
    (2/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"", 100)...
    done (took 1.318501963 seconds)
    (3/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"")...
    done (took 1.312445312 seconds)
    (4/6) benchmarking ("randstring", "MersenneTwister", "\"qwèrtï\"", 100)...
    done (took 1.32738882 seconds)
    (5/6) benchmarking ("randstring", "MersenneTwister")...
    done (took 1.311504309 seconds)
    (6/6) benchmarking ("randstring", "MersenneTwister", "collect(UInt8, \"qwerty\"")...
    done (took 1.311355833 seconds)
  done (took 9.119633659 seconds)
  (5/5) benchmarking "ranges"...
    (1/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:1)")...
    done (took 1.314239243 seconds)
    (2/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:1)")...
    done (took 1.3116278 seconds)
    (3/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967295)")...
    done (took 1.312223184 seconds)
    (4/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:4294967297)")...
    done (took 1.311990637 seconds)
    (5/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967295)")...
    done (took 1.311823473 seconds)
    (6/72) benchmarking ("RangeGenerator", "Int64", "1:4294967297")...
    done (took 1.311871276 seconds)
    (7/72) benchmarking ("RangeGenerator", "Int8", "1:1")...
    done (took 1.312133284 seconds)
    (8/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.312343331 seconds)
    (9/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967297)")...
    done (took 1.314719161 seconds)
    (10/72) benchmarking ("rand", "MersenneTwister", "Int16", "RangeGenerator(1:1)")...
    done (took 1.312947672 seconds)
    (11/72) benchmarking ("RangeGenerator", "UInt64", "1:1")...
    done (took 1.312552842 seconds)
    (12/72) benchmarking ("RangeGenerator", "Int128", "1:4294967297")...
    done (took 1.312602808 seconds)
    (13/72) benchmarking ("RangeGenerator", "Bool", "true:true")...
    done (took 1.313154705 seconds)
    (14/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:4294967297)")...
    done (took 1.313939446 seconds)
    (15/72) benchmarking ("RangeGenerator", "UInt32", "1:1")...
    done (took 1.312454188 seconds)
    (16/72) benchmarking ("rand", "MersenneTwister", "Int8", "RangeGenerator(1:1)")...
    done (took 1.312688571 seconds)
    (17/72) benchmarking ("RangeGenerator", "UInt16", "1:1")...
    done (took 1.313050752 seconds)
    (18/72) benchmarking ("rand", "MersenneTwister", "Int", "1:1000")...
    done (took 1.310871178 seconds)
    (19/72) benchmarking ("rand", "MersenneTwister", "Int32", "RangeGenerator(1:1)")...
    done (took 1.312725722 seconds)
    (20/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.313760326 seconds)
    (21/72) benchmarking ("rand!", "RandomDevice", "Int", "1:1000")...
    done (took 2.40899001 seconds)
    (22/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:4294967295)")...
    done (took 1.312864467 seconds)
    (23/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313589564 seconds)
    (24/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967295")...
    done (took 1.312684421 seconds)
    (25/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967295")...
    done (took 1.315807062 seconds)
    (26/72) benchmarking ("rand", "MersenneTwister", "UInt16", "RangeGenerator(1:1)")...
    done (took 1.313658016 seconds)
    (27/72) benchmarking ("rand!", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.32045253 seconds)
    (28/72) benchmarking ("rand", "MersenneTwister", "UInt8", "RangeGenerator(1:1)")...
    done (took 1.312723075 seconds)
    (29/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:1)")...
    done (took 1.312962095 seconds)
    (30/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:2^10000)")...
    done (took 1.319375094 seconds)
    (31/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:1)")...
    done (took 1.331914434 seconds)
    (32/72) benchmarking ("RangeGenerator", "UInt64", "1:18446744073709551615")...
    done (took 1.31306893 seconds)
    (33/72) benchmarking ("RangeGenerator", "BigInt", "1:1")...
    done (took 1.314240812 seconds)
    (34/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967297)")...
    done (took 1.318008818 seconds)
    (35/72) benchmarking ("RangeGenerator", "UInt8", "1:1")...
    done (took 1.316852983 seconds)
    (36/72) benchmarking ("RangeGenerator", "BigInt", "1:4294967297")...
    done (took 1.313712721 seconds)
    (37/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.316157405 seconds)
    (38/72) benchmarking ("RangeGenerator", "Int128", "1:4294967295")...
    done (took 1.313615795 seconds)
    (39/72) benchmarking ("rand", "ImplicitRNG", "Int", "1:1000")...
    done (took 1.310620688 seconds)
    (40/72) benchmarking ("RangeGenerator", "Int64", "1:4294967295")...
    done (took 1.312916686 seconds)
    (41/72) benchmarking ("RangeGenerator", "UInt128", "1:1")...
    done (took 1.313585734 seconds)
    (42/72) benchmarking ("rand", "MersenneTwister", "Int128", "RangeGenerator(1:18446744073709551616)")...
    done (took 1.313638152 seconds)
    (43/72) benchmarking ("rand", "MersenneTwister", "Bool", "RangeGenerator(true:true)")...
    done (took 1.313152418 seconds)
    (44/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967297")...
    done (took 1.314108694 seconds)
    (45/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:4294967295)")...
    done (took 1.314409971 seconds)
    (46/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551615")...
    done (took 1.315230735 seconds)
    (47/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551615")...
    done (took 1.3151525 seconds)
    (48/72) benchmarking ("rand!", "MersenneTwister", "Int", "1:1000")...
    done (took 1.319474783 seconds)
    (49/72) benchmarking ("RangeGenerator", "Int32", "1:1")...
    done (took 1.311236723 seconds)
    (50/72) benchmarking ("RangeGenerator", "Int128", "1:1")...
    done (took 1.312897961 seconds)
    (51/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551616")...
    done (took 1.312445666 seconds)
    (52/72) benchmarking ("rand", "MersenneTwister", "UInt32", "RangeGenerator(1:4294967295)")...
    done (took 1.312413365 seconds)
    (53/72) benchmarking ("RangeGenerator", "Int64", "1:1")...
    done (took 1.31268051 seconds)
    (54/72) benchmarking ("RangeGenerator", "UInt128", "1:18446744073709551615")...
    done (took 1.312622864 seconds)
    (55/72) benchmarking ("RangeGenerator", "BigInt", "1:2^10000")...
    done (took 1.314386556 seconds)
    (56/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.333059915 seconds)
    (57/72) benchmarking ("RangeGenerator", "UInt128", "1:4294967295")...
    done (took 1.316205555 seconds)
    (58/72) benchmarking ("RangeGenerator", "Int16", "1:1")...
    done (took 1.311587803 seconds)
    (59/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:1)")...
    done (took 1.311985828 seconds)
    (60/72) benchmarking ("RangeGenerator", "BigInt", "1:170141183460469231731687303715884105728")...
    done (took 1.313270624 seconds)
    (61/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967295)")...
    done (took 1.313206443 seconds)
    (62/72) benchmarking ("RangeGenerator", "UInt64", "1:4294967297")...
    done (took 1.312853589 seconds)
    (63/72) benchmarking ("rand", "MersenneTwister", "BigInt", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.314229649 seconds)
    (64/72) benchmarking ("RangeGenerator", "UInt32", "1:4294967295")...
    done (took 1.315652651 seconds)
    (65/72) benchmarking ("rand", "RandomDevice", "Int", "1:1000")...
    done (took 1.319099677 seconds)
    (66/72) benchmarking ("RangeGenerator", "UInt128", "1:170141183460469231731687303715884105728")...
    done (took 1.313370988 seconds)
    (67/72) benchmarking ("RangeGenerator", "BigInt", "1:18446744073709551616")...
    done (took 1.314401999 seconds)
    (68/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:170141183460469231731687303715884105728)")...
    done (took 1.315873059 seconds)
    (69/72) benchmarking ("rand", "MersenneTwister", "UInt128", "RangeGenerator(1:18446744073709551615)")...
    done (took 1.312818419 seconds)
    (70/72) benchmarking ("rand", "MersenneTwister", "UInt64", "RangeGenerator(1:1)")...
    done (took 1.313353856 seconds)
    (71/72) benchmarking ("RangeGenerator", "Int128", "1:18446744073709551616")...
    done (took 1.312652651 seconds)
    (72/72) benchmarking ("rand", "MersenneTwister", "Int64", "RangeGenerator(1:4294967297)")...
    done (took 1.310755855 seconds)
  done (took 96.946875231 seconds)
done (took 415.201478162 seconds)
(16/20) benchmarking "problem"...
  (1/14) benchmarking "raytrace"...
    (1/1) benchmarking "raytrace"...
    done (took 6.598423842 seconds)
  done (took 7.824020484 seconds)
  (2/14) benchmarking "fem"...
    (1/1) benchmarking "sparse_fem"...
    done (took 6.347975289 seconds)
  done (took 7.575009597 seconds)
  (3/14) benchmarking "ziggurat"...
    (1/1) benchmarking "ziggurat"...
    done (took 20.197261996 seconds)
  done (took 21.42785024 seconds)
  (4/14) benchmarking "laplacian"...
    (1/4) benchmarking "laplace_iter_vec"...
    done (took 6.37369611 seconds)
    (2/4) benchmarking "laplace_iter_sub"...
    done (took 6.434044708 seconds)
    (3/4) benchmarking "laplace_sparse_matvec"...
    done (took 6.314374895 seconds)
    (4/4) benchmarking "laplace_iter_devec"...
    done (took 6.319691138 seconds)
  done (took 26.669247591 seconds)
  (5/14) benchmarking "go"...
    (1/1) benchmarking "go_game"...
    done (took 6.641617445 seconds)
  done (took 7.87039897 seconds)
  (6/14) benchmarking "seismic"...
    (1/2) benchmarking ("seismic", "Float32")...
    done (took 6.308823885 seconds)
    (2/2) benchmarking ("seismic", "Float64")...
    done (took 6.317716706 seconds)
  done (took 13.854691961 seconds)
  (7/14) benchmarking "stockcorr"...
    (1/1) benchmarking "stockcorr"...
    done (took 6.692124594 seconds)
  done (took 7.920174984 seconds)
  (8/14) benchmarking "imdb"...
    (1/1) benchmarking "centrality"...
    done (took 6.521122202 seconds)
  done (took 7.750255878 seconds)
  (9/14) benchmarking "monte carlo"...
    (1/2) benchmarking "euro_option_vec"...
    done (took 6.33640182 seconds)
    (2/2) benchmarking "euro_option_devec"...
    done (took 6.332993884 seconds)
  done (took 14.147741807 seconds)
  (10/14) benchmarking "json"...
    (1/1) benchmarking "parse_json"...
    done (took 6.289455947 seconds)
  done (took 7.518141707 seconds)
  (11/14) benchmarking "spellcheck"...
    (1/1) benchmarking "spellcheck"...
    done (took 7.066564974 seconds)
  done (took 8.294447139 seconds)
  (12/14) benchmarking "simplex"...
    (1/1) benchmarking "simplex"...
    done (took 6.322921098 seconds)
  done (took 7.552469511 seconds)
  (13/14) benchmarking "chaosgame"...
    (1/1) benchmarking "chaosgame"...
    done (took 6.333658866 seconds)
  done (took 7.561952746 seconds)
  (14/14) benchmarking "grigoriadis khachiyan"...
    (1/1) benchmarking "grigoriadis_khachiyan"...
    done (took 8.113875051 seconds)
  done (took 9.342218713 seconds)
done (took 156.535044267 seconds)
(17/20) benchmarking "array"...
  (1/13) benchmarking "reverse"...
    (1/4) benchmarking "rev_load_fast!"...
    done (took 6.309588232 seconds)
    (2/4) benchmarking "rev_loadmul_slow!"...
    done (took 6.310357825 seconds)
    (3/4) benchmarking "rev_loadmul_fast!"...
    done (took 6.316080152 seconds)
    (4/4) benchmarking "rev_load_slow!"...
    done (took 6.310669132 seconds)
  done (took 26.475601498 seconds)
  (2/13) benchmarking "any/all"...
    (1/24) benchmarking ("all", "Array{Float32,1} generator")...
    done (took 1.349375669 seconds)
    (2/24) benchmarking ("all", "Array{Float32,1}")...
    done (took 1.349634066 seconds)
    (3/24) benchmarking ("any", "Array{Float64,1} generator")...
    done (took 1.351704972 seconds)
    (4/24) benchmarking ("any", "Array{Int64,1}")...
    done (took 1.361144198 seconds)
    (5/24) benchmarking ("any", "Array{Int16,1} generator")...
    done (took 1.35361038 seconds)
    (6/24) benchmarking ("any", "Array{Float32,1}")...
    done (took 1.351234378 seconds)
    (7/24) benchmarking ("all", "UnitRange{Int64}")...
    done (took 1.342623536 seconds)
    (8/24) benchmarking ("any", "UnitRange{Int64} generator")...
    done (took 1.343397139 seconds)
    (9/24) benchmarking ("all", "Array{Int64,1}")...
    done (took 1.362092182 seconds)
    (10/24) benchmarking ("all", "Array{Int16,1}")...
    done (took 1.354355158 seconds)
    (11/24) benchmarking ("all", "Array{Float64,1}")...
    done (took 1.352419714 seconds)
    (12/24) benchmarking ("any", "Vector{Bool}")...
    done (took 1.353128313 seconds)
    (13/24) benchmarking ("any", "Array{Float32,1} generator")...
    done (took 1.35161021 seconds)
    (14/24) benchmarking ("any", "UnitRange{Int64}")...
    done (took 1.342463831 seconds)
    (15/24) benchmarking ("all", "Vector{Bool}")...
    done (took 1.353713831 seconds)
    (16/24) benchmarking ("all", "Array{Float64,1} generator")...
    done (took 1.353456503 seconds)
    (17/24) benchmarking ("all", "Array{Int64,1} generator")...
    done (took 1.361559853 seconds)
    (18/24) benchmarking ("any", "Array{Float64,1}")...
    done (took 1.353026759 seconds)
    (19/24) benchmarking ("all", "UnitRange{Int64} generator")...
    done (took 1.342419161 seconds)
    (20/24) benchmarking ("any", "Array{Int16,1}")...
    done (took 1.35380563 seconds)
    (21/24) benchmarking ("any", "BitArray")...
    done (took 1.318297664 seconds)
    (22/24) benchmarking ("any", "Array{Int64,1} generator")...
    done (took 1.362871691 seconds)
    (23/24) benchmarking ("all", "Array{Int16,1} generator")...
    done (took 1.354433671 seconds)
    (24/24) benchmarking ("all", "BitArray")...
    done (took 1.318984271 seconds)
  done (took 33.620963754 seconds)
  (3/13) benchmarking "convert"...
    (1/4) benchmarking ("Int", "Complex{Float64}")...
    done (took 1.839767278 seconds)
    (2/4) benchmarking ("Complex{Float64}", "Int")...
    done (took 1.388765152 seconds)
    (3/4) benchmarking ("Int", "Float64")...
    done (took 1.473116011 seconds)
    (4/4) benchmarking ("Float64", "Int")...
    done (took 1.369856929 seconds)
  done (took 7.300817691 seconds)
  (4/13) benchmarking "equality"...
    (1/24) benchmarking ("==", "Vector{Bool}")...
    done (took 1.37063819 seconds)
    (2/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int16,1}")...
    done (took 1.371944773 seconds)
    (3/24) benchmarking ("==", "Array{Float64,1}")...
    done (took 1.382862168 seconds)
    (4/24) benchmarking ("isequal", "Array{Float64,1}")...
    done (took 1.421756883 seconds)
    (5/24) benchmarking ("==", "Array{Int64,1} == Array{Float32,1}")...
    done (took 1.463228 seconds)
    (6/24) benchmarking ("==", "Array{Float32,1}")...
    done (took 1.3813368 seconds)
    (7/24) benchmarking ("==", "Array{Int64,1}")...
    done (took 1.345257715 seconds)
    (8/24) benchmarking ("==", "Array{Int64,1} == Array{Int64,1}")...
    done (took 1.339876231 seconds)
    (9/24) benchmarking ("==", "Array{Int16,1}")...
    done (took 1.325844134 seconds)
    (10/24) benchmarking ("==", "Array{Int64,1} == Array{Int16,1}")...
    done (took 1.371765188 seconds)
    (11/24) benchmarking ("isequal", "BitArray")...
    done (took 1.447694213 seconds)
    (12/24) benchmarking ("==", "Array{Int64,1} == UnitRange{Int64}")...
    done (took 1.387393466 seconds)
    (13/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float64,1}")...
    done (took 1.478106581 seconds)
    (14/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Int64,1}")...
    done (took 1.317767298 seconds)
    (15/24) benchmarking ("isequal", "Array{Int64,1} isequal Array{Float32,1}")...
    done (took 1.517268699 seconds)
    (16/24) benchmarking ("==", "UnitRange{Int64}")...
    done (took 1.318446562 seconds)
    (17/24) benchmarking ("isequal", "UnitRange{Int64}")...
    done (took 1.31826739 seconds)
    (18/24) benchmarking ("isequal", "Array{Int16,1}")...
    done (took 1.371390132 seconds)
    (19/24) benchmarking ("isequal", "Array{Float32,1}")...
    done (took 1.42283593 seconds)
    (20/24) benchmarking ("==", "Array{Int64,1} == Array{Float64,1}")...
    done (took 1.436077274 seconds)
    (21/24) benchmarking ("==", "BitArray")...
    done (took 1.320669096 seconds)
    (22/24) benchmarking ("isequal", "Vector{Bool}")...
    done (took 1.370720607 seconds)
    (23/24) benchmarking ("isequal", "Array{Int64,1}")...
    done (took 1.374385868 seconds)
    (24/24) benchmarking ("isequal", "Array{Int64,1} isequal UnitRange{Int64}")...
    done (took 1.389404701 seconds)
  done (took 34.475732287 seconds)
  (5/13) benchmarking "reductions"...
    (1/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Int64")...
    done (took 1.318787057 seconds)
    (2/20) benchmarking ("maxabs", "Float64")...
    done (took 1.337237978 seconds)
    (3/20) benchmarking ("sumabs", "Float64")...
    done (took 1.318549036 seconds)
    (4/20) benchmarking ("Statistics.mean", "Int64")...
    done (took 1.318541588 seconds)
    (5/20) benchmarking ("LinearAlgebra.norm", "Int64")...
    done (took 1.326629005 seconds)
    (6/20) benchmarking ("sumabs", "Int64")...
    done (took 1.31797545 seconds)
    (7/20) benchmarking ("sumabs2", "Float64")...
    done (took 1.319100707 seconds)
    (8/20) benchmarking ("sumabs2", "Int64")...
    done (took 1.319571724 seconds)
    (9/20) benchmarking ("Statistics.mean", "Float64")...
    done (took 1.31955966 seconds)
    (10/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Float64")...
    done (took 1.325209035 seconds)
    (11/20) benchmarking ("sum", "Int64")...
    done (took 1.318561786 seconds)
    (12/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norminf", "Float64")...
    done (took 1.331875752 seconds)
    (13/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_mapreduce", "Int64")...
    done (took 1.31921512 seconds)
    (14/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Float64")...
    done (took 1.319221746 seconds)
    (15/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.norm1", "Int64")...
    done (took 1.32570981 seconds)
    (16/20) benchmarking ("LinearAlgebra.norm", "Float64")...
    done (took 1.320767582 seconds)
    (17/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Float64")...
    done (took 1.326116923 seconds)
    (18/20) benchmarking ("BaseBenchmarks.ArrayBenchmarks.perf_reduce", "Int64")...
    done (took 1.319248552 seconds)
    (19/20) benchmarking ("sum", "Float64")...
    done (took 1.318938334 seconds)
    (20/20) benchmarking ("maxabs", "Int64")...
    done (took 1.325712096 seconds)
  done (took 27.678551188 seconds)
  (6/13) benchmarking "bool"...
    (1/6) benchmarking "bitarray_true_load!"...
    done (took 6.314876836 seconds)
    (2/6) benchmarking "boolarray_true_load!"...
    done (took 4.167134978 seconds)
    (3/6) benchmarking "boolarray_true_fill!"...
    done (took 1.665404521 seconds)
    (4/6) benchmarking "bitarray_true_fill!"...
    done (took 1.57006767 seconds)
    (5/6) benchmarking "bitarray_bool_load!"...
    done (took 6.313438978 seconds)
    (6/6) benchmarking "boolarray_bool_load!"...
    done (took 6.31421915 seconds)
  done (took 27.577928097 seconds)
  (7/13) benchmarking "growth"...
    (1/12) benchmarking ("prerend!", 256)...
    done (took 1.388286749 seconds)
    (2/12) benchmarking ("push_single!", 8)...
    done (took 1.538418891 seconds)
    (3/12) benchmarking ("append!", 8)...
    done (took 1.320622023 seconds)
    (4/12) benchmarking ("append!", 2048)...
    done (took 1.667211098 seconds)
    (5/12) benchmarking ("push_multiple!", 2048)...
    done (took 1.766861395 seconds)
    (6/12) benchmarking ("prerend!", 8)...
    done (took 1.343870658 seconds)
    (7/12) benchmarking ("push_multiple!", 8)...
    done (took 1.322484578 seconds)
    (8/12) benchmarking ("push_single!", 256)...
    done (took 1.552910902 seconds)
    (9/12) benchmarking ("push_single!", 2048)...
    done (took 1.863701466 seconds)
    (10/12) benchmarking ("prerend!", 2048)...
    done (took 1.862103168 seconds)
    (11/12) benchmarking ("append!", 256)...
    done (took 1.384316987 seconds)
    (12/12) benchmarking ("push_multiple!", 256)...
    done (took 1.387614306 seconds)
  done (took 19.631847471 seconds)
  (8/13) benchmarking "accumulate"...
    (1/12) benchmarking ("cumsum", "Float64", "dim2")...
    done (took 6.32292075 seconds)
    (2/12) benchmarking ("cumsum!", "Float64", "dim1")...
    done (took 6.322133436 seconds)
    (3/12) benchmarking ("cumsum", "Float64", "dim1")...
    done (took 6.331589184 seconds)
    (4/12) benchmarking ("cumsum!", "Float64")...
    done (took 1.337708872 seconds)
    (5/12) benchmarking ("cumsum", "Int")...
    done (took 1.374529882 seconds)
    (6/12) benchmarking ("cumsum!", "Int")...
    done (took 1.341696768 seconds)
    (7/12) benchmarking ("accumulate!", "Float64")...
    done (took 1.327995329 seconds)
    (8/12) benchmarking ("cumsum!", "Float64", "dim2")...
    done (took 6.315324224 seconds)
    (9/12) benchmarking ("accumulate", "Int")...
    done (took 1.380846923 seconds)
    (10/12) benchmarking ("cumsum", "Float64")...
    done (took 1.395426993 seconds)
    (11/12) benchmarking ("accumulate!", "Int")...
    done (took 1.340759223 seconds)
    (12/12) benchmarking ("accumulate", "Float64")...
    done (took 1.376368216 seconds)
  done (took 37.403112468 seconds)
  (9/13) benchmarking "index"...
    (1/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.404005748 seconds)
    (2/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.361999094 seconds)
    (3/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.174994554 seconds)
    (4/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.365316037 seconds)
    (5/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.055624454 seconds)
    (6/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.528057826 seconds)
    (7/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.331006177 seconds)
    (8/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.795497696 seconds)
    (9/481) benchmarking ("sumrange_view", "1.0:1.0:100000.0")...
    done (took 1.327812074 seconds)
    (10/481) benchmarking ("sumeach_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.590332214 seconds)
    (11/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.318130177 seconds)
    (12/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.423200432 seconds)
    (13/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.571953446 seconds)
    (14/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329266733 seconds)
    (15/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.325387578 seconds)
    (16/481) benchmarking ("sumrange", "BitArray{2}")...
    done (took 2.287936697 seconds)
    (17/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.567339291 seconds)
    (18/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.810381608 seconds)
    (19/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.326137223 seconds)
    (20/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.342762894 seconds)
    (21/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.349206131 seconds)
    (22/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.317430359 seconds)
    (23/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.463871772 seconds)
    (24/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.348147065 seconds)
    (25/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.529950498 seconds)
    (26/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.45845781 seconds)
    (27/481) benchmarking ("sumelt", "100000:-1:1")...
    done (took 1.578716234 seconds)
    (28/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.093011962 seconds)
    (29/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.60711854 seconds)
    (30/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.336962574 seconds)
    (31/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330004164 seconds)
    (32/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.318548825 seconds)
    (33/481) benchmarking ("sumcartesian", "1.0:0.00010001000100010001:2.0")...
    done (took 1.592884479 seconds)
    (34/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.968085848 seconds)
    (35/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.439233018 seconds)
    (36/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.328578927 seconds)
    (37/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322638028 seconds)
    (38/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 4.863326925 seconds)
    (39/481) benchmarking ("sumlinear_view", "BitArray{2}")...
    done (took 6.300910862 seconds)
    (40/481) benchmarking ("sumlogical", "Array{Float32,2}")...
    done (took 4.345356958 seconds)
    (41/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.293283916 seconds)
    (42/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.321570931 seconds)
    (43/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.330607625 seconds)
    (44/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.32019293 seconds)
    (45/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.253948745 seconds)
    (46/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.319253931 seconds)
    (47/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.791008017 seconds)
    (48/481) benchmarking ("sumvector", "100000:-1:1")...
    done (took 1.332249793 seconds)
    (49/481) benchmarking ("sumlinear_view", "1.0:1.0:100000.0")...
    done (took 4.031402243 seconds)
    (50/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.321239362 seconds)
    (51/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.329989325 seconds)
    (52/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.414090741 seconds)
    (53/481) benchmarking ("sumrange_view", "1:100000")...
    done (took 1.323561465 seconds)
    (54/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.309136293 seconds)
    (55/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.391363443 seconds)
    (56/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.325401977 seconds)
    (57/481) benchmarking ("sumcartesian_view", "100000:-1:1")...
    done (took 6.317934524 seconds)
    (58/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.410149445 seconds)
    (59/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.905625579 seconds)
    (60/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.746738669 seconds)
    (61/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.330723627 seconds)
    (62/481) benchmarking ("sumeach", "Array{Float32,2}")...
    done (took 3.261846357 seconds)
    (63/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.32899403 seconds)
    (64/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.265903055 seconds)
    (65/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.96171573 seconds)
    (66/481) benchmarking ("sumeach_view", "1:100000")...
    done (took 1.441274501 seconds)
    (67/481) benchmarking ("sumcolon_view", "1:100000")...
    done (took 1.323763958 seconds)
    (68/481) benchmarking ("sumrange_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.324487508 seconds)
    (69/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.255445196 seconds)
    (70/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 4.347768636 seconds)
    (71/481) benchmarking ("sumeach", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.343250748 seconds)
    (72/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.468799245 seconds)
    (73/481) benchmarking ("sum", "3dsubarray")...
    done (took 1.343305329 seconds)
    (74/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.971573147 seconds)
    (75/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.053818511 seconds)
    (76/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.36174672 seconds)
    (77/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.252861649 seconds)
    (78/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.885135069 seconds)
    (79/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.329547905 seconds)
    (80/481) benchmarking ("sumlinear", "Array{Float32,2}")...
    done (took 3.263588945 seconds)
    (81/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.548943726 seconds)
    (82/481) benchmarking ("sumcartesian", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.098511436 seconds)
    (83/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.257282727 seconds)
    (84/481) benchmarking "5d"...
    done (took 3.262599218 seconds)
    (85/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.255330702 seconds)
    (86/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.019991074 seconds)
    (87/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.334846631 seconds)
    (88/481) benchmarking ("sumlogical", "BitArray{2}")...
    done (took 4.703567996 seconds)
    (89/481) benchmarking ("mapr_access", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.34609426 seconds)
    (90/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.802846503 seconds)
    (91/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.339508999 seconds)
    (92/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.339245618 seconds)
    (93/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.34613009 seconds)
    (94/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.545710359 seconds)
    (95/481) benchmarking ("sumelt", "BitArray{2}")...
    done (took 4.199688771 seconds)
    (96/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.322914118 seconds)
    (97/481) benchmarking ("sumlogical_view", "Array{Int32,2}")...
    done (took 6.296623163 seconds)
    (98/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.467413197 seconds)
    (99/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344214282 seconds)
    (100/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.782806327 seconds)
    (101/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.262930944 seconds)
    (102/481) benchmarking ("sumeach", "100000:-1:1")...
    done (took 1.326348056 seconds)
    (103/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.577361593 seconds)
    (104/481) benchmarking ("sumlinear", "Array{Int32,2}")...
    done (took 1.53369595 seconds)
    (105/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.322624232 seconds)
    (106/481) benchmarking ("sumcolon", "BitArray{2}")...
    done (took 2.314493922 seconds)
    (107/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.562847408 seconds)
    (108/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.329514475 seconds)
    (109/481) benchmarking ("sumcartesian", "Array{Float64,3}")...
    done (took 1.345856978 seconds)
    (110/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.322779998 seconds)
    (111/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.356704888 seconds)
    (112/481) benchmarking ("sumvector", "Array{Float32,2}")...
    done (took 1.903583066 seconds)
    (113/481) benchmarking ("sumrange_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.355707647 seconds)
    (114/481) benchmarking ("sumlogical", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.756067312 seconds)
    (115/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347459805 seconds)
    (116/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.100677513 seconds)
    (117/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.057015828 seconds)
    (118/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.33232512 seconds)
    (119/481) benchmarking ("sumlinear_view", "1:100000")...
    done (took 1.430543002 seconds)
    (120/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.323473211 seconds)
    (121/481) benchmarking ("sumlogical", "1.0:0.00010001000100010001:2.0")...
    done (took 1.566067818 seconds)
    (122/481) benchmarking ("sumvector", "BitArray{2}")...
    done (took 2.083107633 seconds)
    (123/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.488845408 seconds)
    (124/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.391160561 seconds)
    (125/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.328834113 seconds)
    (126/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.325629452 seconds)
    (127/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.370638007 seconds)
    (128/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.922751587 seconds)
    (129/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 5.483006106 seconds)
    (130/481) benchmarking ("sumcolon_view", "BitArray{2}")...
    done (took 1.319766526 seconds)
    (131/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.324236725 seconds)
    (132/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.341532582 seconds)
    (133/481) benchmarking "ind2sub"...
    done (took 6.324947815 seconds)
    (134/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.27367362 seconds)
    (135/481) benchmarking ("sumrange", "1.0:1.0:100000.0")...
    done (took 6.334070434 seconds)
    (136/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.341980017 seconds)
    (137/481) benchmarking ("sumcartesian", "Array{Float32,2}")...
    done (took 5.103008657 seconds)
    (138/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.54856318 seconds)
    (139/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.333322255 seconds)
    (140/481) benchmarking ("sumeach", "1.0:0.00010001000100010001:2.0")...
    done (took 1.607918622 seconds)
    (141/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.25914644 seconds)
    (142/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.472049867 seconds)
    (143/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.334720007 seconds)
    (144/481) benchmarking ("sumcartesian_view", "Array{Int32,2}")...
    done (took 1.547802394 seconds)
    (145/481) benchmarking ("sumlinear_view", "Array{Float64,3}")...
    done (took 2.50779567 seconds)
    (146/481) benchmarking ("sumlinear_view", "100000:-1:1")...
    done (took 6.348234525 seconds)
    (147/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.583648872 seconds)
    (148/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.739929903 seconds)
    (149/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.333913487 seconds)
    (150/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.343255583 seconds)
    (151/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.345480115 seconds)
    (152/481) benchmarking ("sumelt", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.427124712 seconds)
    (153/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.347360347 seconds)
    (154/481) benchmarking ("sumrange", "Array{Int32,2}")...
    done (took 6.337547385 seconds)
    (155/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.589326434 seconds)
    (156/481) benchmarking ("sumelt", "1:100000")...
    done (took 1.329357265 seconds)
    (157/481) benchmarking ("sumcolon_view", "100000:-1:1")...
    done (took 1.329192099 seconds)
    (158/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.383605086 seconds)
    (159/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 5.111408927 seconds)
    (160/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.334119107 seconds)
    (161/481) benchmarking ("sumvector_view", "100000:-1:1")...
    done (took 1.330690986 seconds)
    (162/481) benchmarking ("mapr_access", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.342665956 seconds)
    (163/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.918156793 seconds)
    (164/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.323479128 seconds)
    (165/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.330412565 seconds)
    (166/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 2.217246983 seconds)
    (167/481) benchmarking ("sumlinear", "Array{Float64,3}")...
    done (took 1.34162208 seconds)
    (168/481) benchmarking ("sumeach", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.394416362 seconds)
    (169/481) benchmarking ("sumvector", "1.0:0.00010001000100010001:2.0")...
    done (took 1.332555145 seconds)
    (170/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.33715972 seconds)
    (171/481) benchmarking ("sumlogical", "100000:-1:1")...
    done (took 3.10357426 seconds)
    (172/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.34980079 seconds)
    (173/481) benchmarking ("sumrange_view", "100000:-1:1")...
    done (took 1.349319854 seconds)
    (174/481) benchmarking ("sumcolon", "1.0:1.0:100000.0")...
    done (took 6.325956332 seconds)
    (175/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.557462997 seconds)
    (176/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.337278113 seconds)
    (177/481) benchmarking ("sumlogical", "Array{Int32,2}")...
    done (took 4.28806009 seconds)
    (178/481) benchmarking ("sumlinear", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.413242285 seconds)
    (179/481) benchmarking ("sumvector_view", "Array{Int32,2}")...
    done (took 1.537902811 seconds)
    (180/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.924223981 seconds)
    (181/481) benchmarking ("sumeach_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.361029386 seconds)
    (182/481) benchmarking ("sumelt_boundscheck", "Array{Float32,2}")...
    done (took 3.261739105 seconds)
    (183/481) benchmarking ("sumeach_view", "1.0:1.0:100000.0")...
    done (took 4.039014066 seconds)
    (184/481) benchmarking ("sumlinear", "1.0:1.0:100000.0")...
    done (took 4.020930204 seconds)
    (185/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328068676 seconds)
    (186/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.516377753 seconds)
    (187/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.329099048 seconds)
    (188/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.337688199 seconds)
    (189/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339355261 seconds)
    (190/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.347685093 seconds)
    (191/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.910466617 seconds)
    (192/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350699362 seconds)
    (193/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.284146805 seconds)
    (194/481) benchmarking ("sumeach", "1:100000")...
    done (took 1.341969065 seconds)
    (195/481) benchmarking ("sumrange_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.339804124 seconds)
    (196/481) benchmarking ("sumvector", "1:100000")...
    done (took 1.334162935 seconds)
    (197/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.328931229 seconds)
    (198/481) benchmarking ("sumlogical", "1:100000")...
    done (took 3.086851197 seconds)
    (199/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.797264064 seconds)
    (200/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.337658372 seconds)
    (201/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.345807447 seconds)
    (202/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.47270211 seconds)
    (203/481) benchmarking ("sumelt_boundscheck", "Array{Float64,3}")...
    done (took 1.342346399 seconds)
    (204/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.263201129 seconds)
    (205/481) benchmarking ("sumcartesian", "100000:-1:1")...
    done (took 1.847122009 seconds)
    (206/481) benchmarking ("sumvector_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.334262433 seconds)
    (207/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.329625276 seconds)
    (208/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 5.106821667 seconds)
    (209/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364873862 seconds)
    (210/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.292380551 seconds)
    (211/481) benchmarking ("sumvector_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.820944494 seconds)
    (212/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.587742423 seconds)
    (213/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.331936929 seconds)
    (214/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.359470488 seconds)
    (215/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 4.406854317 seconds)
    (216/481) benchmarking ("sumelt", "Array{Float64,3}")...
    done (took 1.370548729 seconds)
    (217/481) benchmarking "4d"...
    done (took 2.326550896 seconds)
    (218/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342793843 seconds)
    (219/481) benchmarking ("sumrange", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.331926101 seconds)
    (220/481) benchmarking ("sumeach_view", "Array{Int32,2}")...
    done (took 6.367901043 seconds)
    (221/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.344757426 seconds)
    (222/481) benchmarking ("sumcolon_view", "Array{Float32,2}")...
    done (took 1.33988779 seconds)
    (223/481) benchmarking ("sumlogical", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 4.294956745 seconds)
    (224/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.697823741 seconds)
    (225/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.897828196 seconds)
    (226/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.081166069 seconds)
    (227/481) benchmarking ("sumvector", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.902089751 seconds)
    (228/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.265177985 seconds)
    (229/481) benchmarking ("sumrange", "Array{Float32,2}")...
    done (took 6.345124423 seconds)
    (230/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.219896225 seconds)
    (231/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.79376642 seconds)
    (232/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.271621214 seconds)
    (233/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.986954498 seconds)
    (234/481) benchmarking ("sumlogical_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.514804141 seconds)
    (235/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.817772146 seconds)
    (236/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.282117221 seconds)
    (237/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.551468626 seconds)
    (238/481) benchmarking ("sumeach_view", "Array{Float64,3}")...
    done (took 2.521329867 seconds)
    (239/481) benchmarking ("sumrange", "1.0:0.00010001000100010001:2.0")...
    done (took 2.09855183 seconds)
    (240/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.34980355 seconds)
    (241/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.557659903 seconds)
    (242/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.245586271 seconds)
    (243/481) benchmarking ("sumlogical_view", "Array{Float32,2}")...
    done (took 6.344768743 seconds)
    (244/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.344060899 seconds)
    (245/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.542511075 seconds)
    (246/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365244465 seconds)
    (247/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.338588596 seconds)
    (248/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 3.267428705 seconds)
    (249/481) benchmarking ("sumelt_boundscheck", "BitArray{2}")...
    done (took 4.612121488 seconds)
    (250/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.603222001 seconds)
    (251/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.306934206 seconds)
    (252/481) benchmarking ("sumelt_boundscheck", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.418255423 seconds)
    (253/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.799769495 seconds)
    (254/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.342393083 seconds)
    (255/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 5.110021727 seconds)
    (256/481) benchmarking ("mapr_access", "BitArray{2}")...
    done (took 6.396215112 seconds)
    (257/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.634588651 seconds)
    (258/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.527850303 seconds)
    (259/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 4.967323014 seconds)
    (260/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.721582788 seconds)
    (261/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.342229166 seconds)
    (262/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.350816482 seconds)
    (263/481) benchmarking ("sumvector_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.815903481 seconds)
    (264/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.335870218 seconds)
    (265/481) benchmarking ("sumcartesian", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.858220786 seconds)
    (266/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.969598716 seconds)
    (267/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.372132902 seconds)
    (268/481) benchmarking ("sumvector_view", "Array{Float32,2}")...
    done (took 1.552602417 seconds)
    (269/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.274559264 seconds)
    (270/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.343588282 seconds)
    (271/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.344670196 seconds)
    (272/481) benchmarking ("sumrange_view", "BitArray{2}")...
    done (took 1.330191838 seconds)
    (273/481) benchmarking ("sumlogical", "1.0:1.0:100000.0")...
    done (took 3.601278488 seconds)
    (274/481) benchmarking ("sumcolon", "1:100000")...
    done (took 6.342864633 seconds)
    (275/481) benchmarking ("sumcartesian_view", "Array{Float32,2}")...
    done (took 1.588401807 seconds)
    (276/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.342991677 seconds)
    (277/481) benchmarking ("sumeach_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.267442134 seconds)
    (278/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.334884662 seconds)
    (279/481) benchmarking ("sumvector", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.87834806 seconds)
    (280/481) benchmarking "3d"...
    done (took 2.207936462 seconds)
    (281/481) benchmarking ("sum", "3darray")...
    done (took 1.338803155 seconds)
    (282/481) benchmarking ("sumlinear", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.332487376 seconds)
    (283/481) benchmarking ("sumlogical", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 2.071150582 seconds)
    (284/481) benchmarking ("sumcolon", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341916922 seconds)
    (285/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.634223975 seconds)
    (286/481) benchmarking ("sumcolon", "Array{Int32,2}")...
    done (took 6.343200973 seconds)
    (287/481) benchmarking ("sumlogical_view", "100000:-1:1")...
    done (took 3.115764961 seconds)
    (288/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35487759 seconds)
    (289/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 3.268842229 seconds)
    (290/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.268614204 seconds)
    (291/481) benchmarking ("sumeach", "1.0:1.0:100000.0")...
    done (took 4.02770174 seconds)
    (292/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.344733733 seconds)
    (293/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.310750857 seconds)
    (294/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.836187629 seconds)
    (295/481) benchmarking ("mapr_access", "Array{Float32,2}")...
    done (took 6.350343629 seconds)
    (296/481) benchmarking ("mapr_access", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.35027737 seconds)
    (297/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.341458045 seconds)
    (298/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.186096444 seconds)
    (299/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.591161708 seconds)
    (300/481) benchmarking ("sumeach", "Array{Float64,3}")...
    done (took 1.348394425 seconds)
    (301/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.930925536 seconds)
    (302/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.577189382 seconds)
    (303/481) benchmarking ("mapr_access", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.333965455 seconds)
    (304/481) benchmarking ("sumelt", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.358483369 seconds)
    (305/481) benchmarking ("sumcartesian_view", "1:100000")...
    done (took 1.435803551 seconds)
    (306/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.344176749 seconds)
    (307/481) benchmarking ("sumcartesian_view", "BitArray{2}")...
    done (took 6.318196343 seconds)
    (308/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 5.21664602 seconds)
    (309/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.569727132 seconds)
    (310/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.415727732 seconds)
    (311/481) benchmarking ("sumeach_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.559145312 seconds)
    (312/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 3.201128821 seconds)
    (313/481) benchmarking ("sumeach", "BitArray{2}")...
    done (took 4.247243383 seconds)
    (314/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.435263476 seconds)
    (315/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.548610737 seconds)
    (316/481) benchmarking ("sumeach", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.217428434 seconds)
    (317/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 6.337204622 seconds)
    (318/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.58968083 seconds)
    (319/481) benchmarking ("sumelt", "1.0:1.0:100000.0")...
    done (took 4.071807457 seconds)
    (320/481) benchmarking ("sumeach_view", "Array{Float32,2}")...
    done (took 6.354835139 seconds)
    (321/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.040226143 seconds)
    (322/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379914753 seconds)
    (323/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.336174553 seconds)
    (324/481) benchmarking ("sumcartesian", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.348089671 seconds)
    (325/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.354688288 seconds)
    (326/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.355676002 seconds)
    (327/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.426032646 seconds)
    (328/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.347077704 seconds)
    (329/481) benchmarking ("sumrange_view", "Array{Float32,2}")...
    done (took 1.347388389 seconds)
    (330/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.347841378 seconds)
    (331/481) benchmarking ("sumvector_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.508738747 seconds)
    (332/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.344827885 seconds)
    (333/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.339449334 seconds)
    (334/481) benchmarking ("sumcartesian_view", "Array{Float64,3}")...
    done (took 1.351361596 seconds)
    (335/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.430784778 seconds)
    (336/481) benchmarking ("sumlogical", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.810616045 seconds)
    (337/481) benchmarking ("sumlogical_view", "1:100000")...
    done (took 3.10200689 seconds)
    (338/481) benchmarking ("sumcartesian", "1:100000")...
    done (took 2.110662348 seconds)
    (339/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936483319 seconds)
    (340/481) benchmarking ("sumvector", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.092520153 seconds)
    (341/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.948616945 seconds)
    (342/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.369679351 seconds)
    (343/481) benchmarking ("sumelt_boundscheck", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.339401862 seconds)
    (344/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.339994553 seconds)
    (345/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.272379052 seconds)
    (346/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488613957 seconds)
    (347/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 4.863382744 seconds)
    (348/481) benchmarking ("sumlinear_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.611477594 seconds)
    (349/481) benchmarking ("sumcartesian_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.467264597 seconds)
    (350/481) benchmarking ("mapr_access", "Array{Int32,2}")...
    done (took 6.337800132 seconds)
    (351/481) benchmarking ("sumlinear", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.379142966 seconds)
    (352/481) benchmarking ("sumlogical_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.345859684 seconds)
    (353/481) benchmarking ("sumcolon", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341007944 seconds)
    (354/481) benchmarking ("sumeach", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.572383694 seconds)
    (355/481) benchmarking ("sumlinear", "1.0:0.00010001000100010001:2.0")...
    done (took 1.613360556 seconds)
    (356/481) benchmarking ("sumelt", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.317807191 seconds)
    (357/481) benchmarking ("sumcolon", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.352433195 seconds)
    (358/481) benchmarking ("sumelt", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.131543575 seconds)
    (359/481) benchmarking ("sumcartesian", "Array{Int32,2}")...
    done (took 5.49699621 seconds)
    (360/481) benchmarking ("sumrange_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.349628999 seconds)
    (361/481) benchmarking ("sumeach", "Array{Int32,2}")...
    done (took 1.550322775 seconds)
    (362/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.847256141 seconds)
    (363/481) benchmarking ("sumcolon", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.90587652 seconds)
    (364/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.448659493 seconds)
    (365/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.347577262 seconds)
    (366/481) benchmarking ("sumvector_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 1.808826115 seconds)
    (367/481) benchmarking ("sumelt", "1.0:0.00010001000100010001:2.0")...
    done (took 1.620796873 seconds)
    (368/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.42992732 seconds)
    (369/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.338547562 seconds)
    (370/481) benchmarking ("sumelt", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.930519322 seconds)
    (371/481) benchmarking ("sumlinear_view", "Array{Float32,2}")...
    done (took 6.344114636 seconds)
    (372/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.641832924 seconds)
    (373/481) benchmarking ("sumvector_view", "1.0:1.0:100000.0")...
    done (took 1.369957099 seconds)
    (374/481) benchmarking ("sumlogical_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.350672163 seconds)
    (375/481) benchmarking ("sumlinear", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.488336594 seconds)
    (376/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.350040108 seconds)
    (377/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.993986683 seconds)
    (378/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.3755717 seconds)
    (379/481) benchmarking "sub2ind"...
    done (took 6.495304415 seconds)
    (380/481) benchmarking ("sumelt_boundscheck", "1:100000")...
    done (took 2.114113787 seconds)
    (381/481) benchmarking ("sumlogical", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.348775168 seconds)
    (382/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.595249305 seconds)
    (383/481) benchmarking ("sumlinear_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 2.803673882 seconds)
    (384/481) benchmarking ("sumcolon_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.357773845 seconds)
    (385/481) benchmarking ("sumvector", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.939968062 seconds)
    (386/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 2.077251143 seconds)
    (387/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.61087615 seconds)
    (388/481) benchmarking ("sumeach", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.410889515 seconds)
    (389/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.351721454 seconds)
    (390/481) benchmarking "6d"...
    done (took 3.450483332 seconds)
    (391/481) benchmarking ("sumelt_boundscheck", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.487780385 seconds)
    (392/481) benchmarking ("sumrange", "1:100000")...
    done (took 6.340035044 seconds)
    (393/481) benchmarking ("sumcartesian", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 5.240280454 seconds)
    (394/481) benchmarking ("sumlinear", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.342799768 seconds)
    (395/481) benchmarking ("sumeach_view", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.184137844 seconds)
    (396/481) benchmarking ("sumcartesian", "1.0:1.0:100000.0")...
    done (took 4.051763716 seconds)
    (397/481) benchmarking ("sumrange_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 1.350917024 seconds)
    (398/481) benchmarking ("sumvector", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.936381489 seconds)
    (399/481) benchmarking ("sumeach_view", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.626504724 seconds)
    (400/481) benchmarking ("sumeach_view", "100000:-1:1")...
    done (took 6.338023044 seconds)
    (401/481) benchmarking ("sumrange", "100000:-1:1")...
    done (took 6.342074352 seconds)
    (402/481) benchmarking ("sumlinear_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.365033204 seconds)
    (403/481) benchmarking ("sumcolon_view", "Array{Int32,2}")...
    done (took 1.352070818 seconds)
    (404/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 1.564135367 seconds)
    (405/481) benchmarking ("sumlogical", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 2.044007683 seconds)
    (406/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 1.571688455 seconds)
    (407/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.353803183 seconds)
    (408/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.351645577 seconds)
    (409/481) benchmarking ("sumelt", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 4.911750104 seconds)
    (410/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.934615965 seconds)
    (411/481) benchmarking ("sumrange_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.376136528 seconds)
    (412/481) benchmarking ("sumeach", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.276176947 seconds)
    (413/481) benchmarking ("sumcolon_view", "1.0:1.0:100000.0")...
    done (took 1.345355015 seconds)
    (414/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.591840775 seconds)
    (415/481) benchmarking ("sumlinear_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 1.602520321 seconds)
    (416/481) benchmarking ("sumelt", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.365324138 seconds)
    (417/481) benchmarking ("sumelt_boundscheck", "100000:-1:1")...
    done (took 1.795706614 seconds)
    (418/481) benchmarking ("sumcartesian_view", "1.0:1.0:100000.0")...
    done (took 4.053526488 seconds)
    (419/481) benchmarking ("sumrange", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.902237359 seconds)
    (420/481) benchmarking ("sumelt_boundscheck", "Array{Int32,2}")...
    done (took 2.314299569 seconds)
    (421/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.364875083 seconds)
    (422/481) benchmarking ("sumrange", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.341798524 seconds)
    (423/481) benchmarking ("sumvector", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 2.055275311 seconds)
    (424/481) benchmarking ("sumvector", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.943317163 seconds)
    (425/481) benchmarking ("sumlogical_view", "1.0:1.0:100000.0")...
    done (took 3.123371705 seconds)
    (426/481) benchmarking ("sumcolon", "SubArray{Float32,2,Base.ReshapedArray{Float32,2,SubArray{Float32,3,Array{Float32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.858056471 seconds)
    (427/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 5.01773781 seconds)
    (428/481) benchmarking ("sumrange", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.343895951 seconds)
    (429/481) benchmarking ("sumcartesian_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.625939685 seconds)
    (430/481) benchmarking ("sumvector_view", "1:100000")...
    done (took 1.348304577 seconds)
    (431/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.350208156 seconds)
    (432/481) benchmarking ("sumelt_boundscheck", "1.0:0.00010001000100010001:2.0")...
    done (took 1.627622591 seconds)
    (433/481) benchmarking ("sumlinear", "1:100000")...
    done (took 1.347795394 seconds)
    (434/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Int32,2}")...
    done (took 6.354473273 seconds)
    (435/481) benchmarking ("sumcolon_view", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.361329679 seconds)
    (436/481) benchmarking ("sumvector", "Array{Int32,2}")...
    done (took 1.944937376 seconds)
    (437/481) benchmarking ("sumcolon", "1.0:0.00010001000100010001:2.0")...
    done (took 2.127473409 seconds)
    (438/481) benchmarking ("sumlinear_view", "Array{Int32,2}")...
    done (took 6.36451584 seconds)
    (439/481) benchmarking ("sumlogical", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 4.425635758 seconds)
    (440/481) benchmarking ("sumelt", "Array{Float32,2}")...
    done (took 3.287543205 seconds)
    (441/481) benchmarking ("sumeach", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 4.570114757 seconds)
    (442/481) benchmarking ("mapr_access", "SubArray{Float32,2,Array{Float32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 6.371998643 seconds)
    (443/481) benchmarking ("sumcartesian_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 3.299071613 seconds)
    (444/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,Array{Int32,2},Tuple{UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 6.347159903 seconds)
    (445/481) benchmarking ("sumvector_view", "BitArray{2}")...
    done (took 1.52551288 seconds)
    (446/481) benchmarking ("sumlinear", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.351865854 seconds)
    (447/481) benchmarking ("sumeach_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 2.474306584 seconds)
    (448/481) benchmarking ("sumcartesian_view", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.355604392 seconds)
    (449/481) benchmarking ("sumcolon", "100000:-1:1")...
    done (took 6.345771047 seconds)
    (450/481) benchmarking ("sumrange", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.353021328 seconds)
    (451/481) benchmarking ("sumelt_boundscheck", "1.0:1.0:100000.0")...
    done (took 4.083976658 seconds)
    (452/481) benchmarking ("sumelt_boundscheck", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 2.616940696 seconds)
    (453/481) benchmarking ("sumvector", "1.0:1.0:100000.0")...
    done (took 1.350661756 seconds)
    (454/481) benchmarking ("sumeach_view", "BitArray{2}")...
    done (took 6.344206055 seconds)
    (455/481) benchmarking ("sumlogical_view", "BitArray{2}")...
    done (took 6.332667827 seconds)
    (456/481) benchmarking ("sumrange", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,2}")...
    done (took 6.379354829 seconds)
    (457/481) benchmarking ("mapr_access", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,Array{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true},Tuple{}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},true}")...
    done (took 1.444922998 seconds)
    (458/481) benchmarking ("sumvector_view", "SubArray{Float32,2,Array{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.616921867 seconds)
    (459/481) benchmarking ("sumlinear_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.348917586 seconds)
    (460/481) benchmarking "2d"...
    done (took 2.018227589 seconds)
    (461/481) benchmarking "7d"...
    done (took 1.696349454 seconds)
    (462/481) benchmarking ("sumcartesian_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Float32,2}")...
    done (took 1.600123359 seconds)
    (463/481) benchmarking ("sumcolon", "BaseBenchmarks.ArrayBenchmarks.ArrayLF{Float32,2}")...
    done (took 6.345714807 seconds)
    (464/481) benchmarking ("sumcartesian", "BitArray{2}")...
    done (took 6.333283179 seconds)
    (465/481) benchmarking ("sumlinear", "100000:-1:1")...
    done (took 1.349050466 seconds)
    (466/481) benchmarking ("sumlinear", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.3465332 seconds)
    (467/481) benchmarking ("sumeach", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.06273936 seconds)
    (468/481) benchmarking ("sumelt", "SubArray{Float32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Float32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 5.353914915 seconds)
    (469/481) benchmarking ("mapr_access", "BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2}")...
    done (took 6.347971063 seconds)
    (470/481) benchmarking ("sumrange", "SubArray{Int32,2,Base.ReshapedArray{Int32,2,SubArray{Int32,3,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,3},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false},Tuple{Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64},Base.MultiplicativeInverses.SignedMultiplicativeInverse{Int64}}},Tuple{Base.Slice{Base.OneTo{Int64}},UnitRange{Int64}},false}")...
    done (took 1.914786395 seconds)
    (471/481) benchmarking ("sumcolon", "Array{Float32,2}")...
    done (took 6.34938972 seconds)
    (472/481) benchmarking ("sumrange_view", "Array{Int32,2}")...
    done (took 1.36395386 seconds)
    (473/481) benchmarking ("sumcolon_view", "1.0:0.00010001000100010001:2.0")...
    done (took 1.349546368 seconds)
    (474/481) benchmarking ("sumelt", "Array{Int32,2}")...
    done (took 1.562764777 seconds)
    (475/481) benchmarking ("sumlinear", "SubArray{Int32,2,Array{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 1.55844869 seconds)
    (476/481) benchmarking ("sumlogical_view", "BaseBenchmarks.ArrayBenchmarks.ArrayLSLS{Int32,2}")...
    done (took 6.357900046 seconds)
    (477/481) benchmarking ("sumcolon_view", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 1.358940748 seconds)
    (478/481) benchmarking ("sumcolon", "SubArray{Int32,2,BaseBenchmarks.ArrayBenchmarks.ArrayLS{Int32,2},Tuple{Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},false}")...
    done (took 6.345251987 seconds)
    (479/481) benchmarking ("sumcartesian", "SubArray{Float64,3,Array{Float64,3},Tuple{UnitRange{Int64},UnitRange{Int64},UnitRange{Int64}},false}")...
    done (took 1.386389141 seconds)
    (480/481) benchmarking ("sumlinear", "BitArray{2}")...
    done (took 4.245900906 seconds)
    (481/481) benchmarking ("sumcartesian", "SubArray{Int32,2,Array{Int32,3},Tuple{Int64,Base.Slice{Base.OneTo{Int64}},Base.Slice{Base.OneTo{Int64}}},true}")...
    done (took 5.113687174 seconds)
  done (took 1641.221735854 seconds)
  (10/13) benchmarking "comprehension"...
    (1/8) benchmarking ("collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.347120938 seconds)
    (2/8) benchmarking ("collect", "Array{Float64,1}")...
    done (took 6.364212721 seconds)
    (3/8) benchmarking ("comprehension_collect", "Array{Float64,1}")...
    done (took 6.375325085 seconds)
    (4/8) benchmarking ("comprehension_iteration", "Array{Float64,1}")...
    done (took 6.402231261 seconds)
    (5/8) benchmarking ("comprehension_collect", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.377488212 seconds)
    (6/8) benchmarking ("comprehension_indexing", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.407888595 seconds)
    (7/8) benchmarking ("comprehension_indexing", "Array{Float64,1}")...
    done (took 6.412910689 seconds)
    (8/8) benchmarking ("comprehension_iteration", "StepRangeLen{Float64,Base.TwicePrecision{Float64},Base.TwicePrecision{Float64}}")...
    done (took 6.405720948 seconds)
  done (took 52.355549757 seconds)
  (11/13) benchmarking "cat"...
    (1/17) benchmarking ("hvcat", 500)...
    done (took 6.358613988 seconds)
    (2/17) benchmarking "4467"...
    done (took 1.501301078 seconds)
    (3/17) benchmarking ("hcat_setind", 5)...
    done (took 1.377818861 seconds)
    (4/17) benchmarking ("hvcat_setind", 500)...
    done (took 6.353639677 seconds)
    (5/17) benchmarking ("hvcat", 5)...
    done (took 1.355951236 seconds)
    (6/17) benchmarking ("hcat", 500)...
    done (took 6.353884467 seconds)
    (7/17) benchmarking ("catnd_setind", 5)...
    done (took 1.806903087 seconds)
    (8/17) benchmarking ("vcat_setind", 500)...
    done (took 6.379985619 seconds)
    (9/17) benchmarking ("hvcat_setind", 5)...
    done (took 1.357082258 seconds)
    (10/17) benchmarking ("vcat", 5)...
    done (took 1.3564075 seconds)
    (11/17) benchmarking ("catnd_setind", 500)...
    done (took 6.353493817 seconds)
    (12/17) benchmarking ("vcat", 500)...
    done (took 6.360240672 seconds)
    (13/17) benchmarking ("catnd", 5)...
    done (took 1.997803412 seconds)
    (14/17) benchmarking ("vcat_setind", 5)...
    done (took 1.363771944 seconds)
    (15/17) benchmarking ("hcat_setind", 500)...
    done (took 6.353880642 seconds)
    (16/17) benchmarking ("catnd", 500)...
    done (took 6.337241016 seconds)
    (17/17) benchmarking ("hcat", 5)...
    done (took 1.357548633 seconds)
  done (took 65.588685613 seconds)
  (12/13) benchmarking "subarray"...
    (1/12) benchmarking ("lucompletepivCopy!", 100)...
    done (took 6.352612989 seconds)
    (2/12) benchmarking ("lucompletepivCopy!", 500)...
    done (took 6.907293143 seconds)
    (3/12) benchmarking ("gramschmidt!", 500)...
    done (took 6.448849016 seconds)
    (4/12) benchmarking ("gramschmidt!", 100)...
    done (took 6.352486912 seconds)
    (5/12) benchmarking ("lucompletepivSub!", 1000)...
    done (took 7.353447683 seconds)
    (6/12) benchmarking ("gramschmidt!", 250)...
    done (took 6.371793883 seconds)
    (7/12) benchmarking ("lucompletepivCopy!", 1000)...
    done (took 11.075961474 seconds)
    (8/12) benchmarking ("lucompletepivCopy!", 250)...
    done (took 6.412183859 seconds)
    (9/12) benchmarking ("lucompletepivSub!", 100)...
    done (took 6.355464241 seconds)
    (10/12) benchmarking ("lucompletepivSub!", 500)...
    done (took 6.687848335 seconds)
    (11/12) benchmarking ("gramschmidt!", 1000)...
    done (took 7.01661686 seconds)
    (12/12) benchmarking ("lucompletepivSub!", 250)...
    done (took 6.391450685 seconds)
  done (took 84.990939487 seconds)
  (13/13) benchmarking "setindex!"...
    (1/5) benchmarking ("setindex!", 2)...
    done (took 1.365514002 seconds)
    (2/5) benchmarking ("setindex!", 1)...
    done (took 1.365034778 seconds)
    (3/5) benchmarking ("setindex!", 5)...
    done (took 1.365700389 seconds)
    (4/5) benchmarking ("setindex!", 3)...
    done (took 1.365505952 seconds)
    (5/5) benchmarking ("setindex!", 4)...
    done (took 1.366595035 seconds)
  done (took 8.093170583 seconds)
done (took 2067.645098239 seconds)
(18/20) benchmarking "misc"...
  (1/14) benchmarking "fastmath many args"...
  done (took 1.356325548 seconds)
  (2/14) benchmarking "repeat"...
    (1/2) benchmarking (200, 1, 24)...
    done (took 2.046045957 seconds)
    (2/2) benchmarking (200, 24, 1)...
    done (took 1.959587581 seconds)
  done (took 5.27056204 seconds)
  (3/14) benchmarking "23042"...
    (1/4) benchmarking "Complex{Float64}"...
    done (took 1.49721211 seconds)
    (2/4) benchmarking "Float32"...
    done (took 1.546278459 seconds)
    (3/4) benchmarking "Float64"...
    done (took 1.66763258 seconds)
    (4/4) benchmarking "Complex{Float32}"...
    done (took 1.687364009 seconds)
  done (took 7.663717223 seconds)
  (4/14) benchmarking "parse"...
    (1/3) benchmarking "Int"...
    done (took 1.628284271 seconds)
    (2/3) benchmarking "Float64"...
    done (took 1.736135202 seconds)
    (3/3) benchmarking "DateTime"...
    done (took 1.536737623 seconds)
  done (took 6.167385565 seconds)
  (5/14) benchmarking "perf highdim generator"...
  done (took 1.625532608 seconds)
  (6/14) benchmarking "18129"...
  done (took 6.36696832 seconds)
  (7/14) benchmarking "20517"...
  done (took 6.351008115 seconds)
  (8/14) benchmarking "issue 12165"...
    (1/3) benchmarking "Float32"...
    done (took 6.348617766 seconds)
    (2/3) benchmarking "Float64"...
    done (took 6.357212056 seconds)
    (3/3) benchmarking "Float16"...
    done (took 6.358899069 seconds)
  done (took 20.332504151 seconds)
  (9/14) benchmarking "bitshift"...
    (1/4) benchmarking ("Int", "UInt")...
    done (took 1.354201268 seconds)
    (2/4) benchmarking ("UInt", "UInt")...
    done (took 1.360913833 seconds)
    (3/4) benchmarking ("Int", "Int")...
    done (took 1.354666438 seconds)
    (4/4) benchmarking ("UInt32", "UInt32")...
    done (took 1.357250985 seconds)
  done (took 6.692426515 seconds)
  (10/14) benchmarking "julia"...
    (1/4) benchmarking ("parse", "array")...
    done (took 6.331339904 seconds)
    (2/4) benchmarking ("parse", "function")...
    done (took 3.041079804 seconds)
    (3/4) benchmarking ("parse", "nested")...
    done (took 6.330799113 seconds)
    (4/4) benchmarking ("macroexpand", "evalpoly")...
    done (took 1.35312641 seconds)
  done (took 18.322125629 seconds)
  (11/14) benchmarking "afoldl"...
    (1/3) benchmarking "Complex{Float64}"...
    done (took 2.101764987 seconds)
    (2/3) benchmarking "Int"...
    done (took 2.11361025 seconds)
    (3/3) benchmarking "Float64"...
    done (took 2.098772403 seconds)
  done (took 7.58027348 seconds)
  (12/14) benchmarking "allocation elision view"...
    (1/2) benchmarking "conditional"...
    done (took 1.380870617 seconds)
    (2/2) benchmarking "no conditional"...
    done (took 1.384588205 seconds)
  done (took 4.032232972 seconds)
  (13/14) benchmarking "splatting"...
    (1/1) benchmarking (3, 3, 3)...
    done (took 1.638497873 seconds)
  done (took 2.905108373 seconds)
  (14/14) benchmarking "iterators"...
    (1/10) benchmarking "sum(flatten(collect((i,i+1) for i in 1:1000))"...
    done (took 1.369160508 seconds)
    (2/10) benchmarking "sum(flatten(fill(rand(50), 100))))"...
    done (took 1.406701596 seconds)
    (3/10) benchmarking "zip(1:1, 1:1, 1:1)"...
    done (took 2.390871281 seconds)
    (4/10) benchmarking "zip(1:1, 1:1)"...
    done (took 2.316320254 seconds)
    (5/10) benchmarking "zip(1:1, 1:1, 1:1, 1:1)"...
    done (took 4.5733905 seconds)
    (6/10) benchmarking "zip(1:1000)"...
    done (took 5.589519896 seconds)
    (7/10) benchmarking "zip(1:1000, 1:1000, 1:1000)"...
    done (took 2.941953356 seconds)
    (8/10) benchmarking "zip(1:1000, 1:1000)"...
    done (took 2.538294546 seconds)
    (9/10) benchmarking "zip(1:1)"...
    done (took 2.297801627 seconds)
    (10/10) benchmarking "zip(1:1000, 1:1000, 1:1000, 1:1000)"...
    done (took 3.52337319 seconds)
  done (took 30.214112548 seconds)
done (took 126.145752388 seconds)
(19/20) benchmarking "sort"...
  (1/4) benchmarking "insertionsort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 5.115517903 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.715012503 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.553126765 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 5.088517 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.572517919 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.552786461 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.777169899 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 5.056702275 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 4.594247338 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 4.584471726 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 5.128036468 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.572082804 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.512436445 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.71802639 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.512306561 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 7.590169942 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.573017112 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 5.136418587 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 5.809982779 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 5.968621103 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.780219315 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 4.724451997 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 4.963383389 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 4.74838817 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.572965523 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.505900522 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 5.31234824 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 7.592013879 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 5.987669329 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 5.337058977 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.505788559 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.154622348 seconds)
  done (took 192.583437074 seconds)
  (2/4) benchmarking "quicksort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.354757171 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.36133577 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.354482566 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.370462673 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.354143488 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.374207677 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.371498448 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.370168982 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.373556936 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.369615767 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.354259796 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.36077066 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.355031438 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.374687436 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.357286693 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.378207628 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.368245916 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.362969854 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.354435268 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.356653146 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.355415862 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.354810663 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.359674209 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.355831145 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.371279145 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.354714451 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.354831723 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.356149264 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.352809275 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.353238601 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.360388116 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.359160218 seconds)
  done (took 204.836362015 seconds)
  (3/4) benchmarking "mergesort"...
    (1/32) benchmarking ("sort! forwards", "ones")...
    done (took 6.356249527 seconds)
    (2/32) benchmarking ("sortperm reverse", "ascending")...
    done (took 6.351634306 seconds)
    (3/32) benchmarking ("sort forwards", "random")...
    done (took 6.369280567 seconds)
    (4/32) benchmarking ("sortperm! forwards", "ascending")...
    done (took 6.35278385 seconds)
    (5/32) benchmarking ("sort forwards", "descending")...
    done (took 6.363135027 seconds)
    (6/32) benchmarking ("sort! forwards", "random")...
    done (took 6.352581031 seconds)
    (7/32) benchmarking ("sortperm forwards", "random")...
    done (took 6.362924603 seconds)
    (8/32) benchmarking ("sortperm forwards", "ascending")...
    done (took 6.359525907 seconds)
    (9/32) benchmarking ("sort reverse", "descending")...
    done (took 6.351546625 seconds)
    (10/32) benchmarking ("sort! reverse", "descending")...
    done (took 6.352103253 seconds)
    (11/32) benchmarking ("sortperm! reverse", "descending")...
    done (took 6.354934115 seconds)
    (12/32) benchmarking ("sort! forwards", "descending")...
    done (took 6.354026528 seconds)
    (13/32) benchmarking ("sortperm reverse", "random")...
    done (took 6.354248121 seconds)
    (14/32) benchmarking ("sortperm! reverse", "ascending")...
    done (took 6.352990268 seconds)
    (15/32) benchmarking ("sortperm! reverse", "random")...
    done (took 6.352550563 seconds)
    (16/32) benchmarking ("sortperm! forwards", "descending")...
    done (took 6.351964466 seconds)
    (17/32) benchmarking ("sort reverse", "ascending")...
    done (took 6.352444563 seconds)
    (18/32) benchmarking ("sort forwards", "ones")...
    done (took 6.369777724 seconds)
    (19/32) benchmarking ("sortperm forwards", "ones")...
    done (took 6.352975705 seconds)
    (20/32) benchmarking ("sortperm reverse", "ones")...
    done (took 6.354034509 seconds)
    (21/32) benchmarking ("sortperm! forwards", "random")...
    done (took 6.352033127 seconds)
    (22/32) benchmarking ("sort! forwards", "ascending")...
    done (took 6.370007128 seconds)
    (23/32) benchmarking ("sortperm reverse", "descending")...
    done (took 6.371193526 seconds)
    (24/32) benchmarking ("sort forwards", "ascending")...
    done (took 6.352582048 seconds)
    (25/32) benchmarking ("sort! reverse", "ascending")...
    done (took 6.36690041 seconds)
    (26/32) benchmarking ("sort! reverse", "random")...
    done (took 6.353335887 seconds)
    (27/32) benchmarking ("sort! reverse", "ones")...
    done (took 6.369202465 seconds)
    (28/32) benchmarking ("sortperm forwards", "descending")...
    done (took 6.353617511 seconds)
    (29/32) benchmarking ("sortperm! forwards", "ones")...
    done (took 6.369440435 seconds)
    (30/32) benchmarking ("sort reverse", "ones")...
    done (took 6.383743845 seconds)
    (31/32) benchmarking ("sort reverse", "random")...
    done (took 6.363942395 seconds)
    (32/32) benchmarking ("sortperm! reverse", "ones")...
    done (took 6.377748336 seconds)
  done (took 204.775220968 seconds)
  (4/4) benchmarking "issorted"...
    (1/8) benchmarking ("forwards", "ascending")...
    done (took 1.556172156 seconds)
    (2/8) benchmarking ("forwards", "random")...
    done (took 1.361499483 seconds)
    (3/8) benchmarking ("reverse", "ascending")...
    done (took 1.362368404 seconds)
    (4/8) benchmarking ("reverse", "ones")...
    done (took 2.320827861 seconds)
    (5/8) benchmarking ("reverse", "random")...
    done (took 1.362593152 seconds)
    (6/8) benchmarking ("forwards", "descending")...
    done (took 1.360700594 seconds)
    (7/8) benchmarking ("forwards", "ones")...
    done (took 2.355373507 seconds)
    (8/8) benchmarking ("reverse", "descending")...
    done (took 1.550865863 seconds)
  done (took 14.50119417 seconds)
done (took 617.964273737 seconds)
(20/20) benchmarking "collection"...
  (1/6) benchmarking "initialization"...
    (1/42) benchmarking ("Dict", "Any", "loop")...
    done (took 3.639626508 seconds)
    (2/42) benchmarking ("Dict", "Any", "loop", "sizehint!")...
    done (took 3.349606471 seconds)
    (3/42) benchmarking ("Set", "Int", "loop", "sizehint!")...
    done (took 1.556532413 seconds)
    (4/42) benchmarking ("BitSet", "Int", "sorted", "loop", "sizehint!")...
    done (took 1.382419357 seconds)
    (5/42) benchmarking ("Set", "Any", "loop")...
    done (took 3.126095225 seconds)
    (6/42) benchmarking ("BitSet", "Int", "sorted", "iterator")...
    done (took 1.399648214 seconds)
    (7/42) benchmarking ("BitSet", "Int", "sorted", "loop")...
    done (took 1.381501426 seconds)
    (8/42) benchmarking ("Vector", "String", "loop")...
    done (took 1.549760063 seconds)
    (9/42) benchmarking ("IdDict", "Int", "loop")...
    done (took 2.303274685 seconds)
    (10/42) benchmarking ("Vector", "Int", "loop")...
    done (took 1.556778033 seconds)
    (11/42) benchmarking ("Dict", "String", "loop", "sizehint!")...
    done (took 2.633159977 seconds)
    (12/42) benchmarking ("BitSet", "Int", "unsorted", "iterator")...
    done (took 1.397844376 seconds)
    (13/42) benchmarking ("Dict", "String", "loop")...
    done (took 2.781826965 seconds)
    (14/42) benchmarking ("BitSet", "Int", "unsorted", "loop")...
    done (took 1.388431518 seconds)
    (15/42) benchmarking ("Dict", "Int", "loop", "sizehint!")...
    done (took 1.634026955 seconds)
    (16/42) benchmarking ("Vector", "String", "loop", "sizehint!")...
    done (took 1.481863119 seconds)
    (17/42) benchmarking ("Set", "String", "iterator")...
    done (took 2.237657224 seconds)
    (18/42) benchmarking ("Set", "String", "loop")...
    done (took 2.355833589 seconds)
    (19/42) benchmarking ("Dict", "Int", "iterator")...
    done (took 1.694238596 seconds)
    (20/42) benchmarking ("Set", "Any", "iterator")...
    done (took 2.903844269 seconds)
    (21/42) benchmarking ("Set", "Int", "loop")...
    done (took 1.635931344 seconds)
    (22/42) benchmarking ("IdDict", "String", "loop")...
    done (took 2.85999173 seconds)
    (23/42) benchmarking ("Vector", "Any", "loop")...
    done (took 1.568535422 seconds)
    (24/42) benchmarking ("IdDict", "Int", "iterator")...
    done (took 2.283329084 seconds)
    (25/42) benchmarking ("Dict", "String", "iterator")...
    done (took 2.776247511 seconds)
    (26/42) benchmarking ("IdDict", "String", "iterator")...
    done (took 2.837779485 seconds)
    (27/42) benchmarking ("IdDict", "Any", "loop", "sizehint!")...
    done (took 3.083525032 seconds)
    (28/42) benchmarking ("Set", "String", "loop", "sizehint!")...
    done (took 2.229387215 seconds)
    (29/42) benchmarking ("BitSet", "Int", "unsorted", "loop", "sizehint!")...
    done (took 1.399123255 seconds)
    (30/42) benchmarking ("Dict", "Int", "loop")...
    done (took 1.698382059 seconds)
    (31/42) benchmarking ("Dict", "Any", "iterator")...
    done (took 3.990069684 seconds)
    (32/42) benchmarking ("IdDict", "Any", "iterator")...
    done (took 3.326275744 seconds)
    (33/42) benchmarking ("Vector", "String", "iterator")...
    done (took 1.442462154 seconds)
    (34/42) benchmarking ("Vector", "Any", "iterator")...
    done (took 1.441781029 seconds)
    (35/42) benchmarking ("Vector", "Any", "loop", "sizehint!")...
    done (took 1.498688472 seconds)
    (36/42) benchmarking ("Vector", "Int", "loop", "sizehint!")...
    done (took 1.478886518 seconds)
    (37/42) benchmarking ("IdDict", "Any", "loop")...
    done (took 3.309906048 seconds)
    (38/42) benchmarking ("Vector", "Int", "iterator")...
    done (took 1.44013531 seconds)
    (39/42) benchmarking ("Set", "Int", "iterator")...
    done (took 1.580776946 seconds)
    (40/42) benchmarking ("IdDict", "String", "loop", "sizehint!")...
    done (took 2.626786167 seconds)
    (41/42) benchmarking ("Set", "Any", "loop", "sizehint!")...
    done (took 2.914790099 seconds)
    (42/42) benchmarking ("IdDict", "Int", "loop", "sizehint!")...
    done (took 2.111957054 seconds)
  done (took 92.560637075 seconds)
  (2/6) benchmarking "iteration"...
    (1/26) benchmarking ("Vector", "Int", "iterate second")...
    done (took 1.347249602 seconds)
    (2/26) benchmarking ("Dict", "Int", "iterate")...
    done (took 1.346766989 seconds)
    (3/26) benchmarking ("Vector", "String", "iterate second")...
    done (took 1.346960282 seconds)
    (4/26) benchmarking ("Set", "Int", "iterate second")...
    done (took 1.347051452 seconds)
    (5/26) benchmarking ("Set", "Any", "iterate second")...
    done (took 1.349270316 seconds)
    (6/26) benchmarking ("Dict", "Int", "iterate second")...
    done (took 1.34802044 seconds)
    (7/26) benchmarking ("IdDict", "String", "iterate second")...
    done (took 1.347398723 seconds)
    (8/26) benchmarking ("Set", "String", "iterate second")...
    done (took 1.347089413 seconds)
    (9/26) benchmarking ("IdDict", "Int", "iterate")...
    done (took 1.34833105 seconds)
    (10/26) benchmarking ("IdDict", "Any", "iterate second")...
    done (took 1.347393064 seconds)
    (11/26) benchmarking ("IdDict", "Any", "iterate")...
    done (took 1.347227507 seconds)
    (12/26) benchmarking ("Set", "Any", "iterate")...
    done (took 1.349094496 seconds)
    (13/26) benchmarking ("Dict", "Any", "iterate second")...
    done (took 1.348130015 seconds)
    (14/26) benchmarking ("Vector", "Any", "iterate")...
    done (took 1.349330542 seconds)
    (15/26) benchmarking ("Dict", "String", "iterate")...
    done (took 1.347550587 seconds)
    (16/26) benchmarking ("IdDict", "String", "iterate")...
    done (took 1.347713603 seconds)
    (17/26) benchmarking ("Set", "Int", "iterate")...
    done (took 1.348437384 seconds)
    (18/26) benchmarking ("Vector", "Any", "iterate second")...
    done (took 1.349177899 seconds)
    (19/26) benchmarking ("Dict", "Any", "iterate")...
    done (took 1.347534498 seconds)
    (20/26) benchmarking ("Set", "String", "iterate")...
    done (took 1.346590059 seconds)
    (21/26) benchmarking ("BitSet", "Int", "iterate")...
    done (took 1.348645787 seconds)
    (22/26) benchmarking ("Vector", "String", "iterate")...
    done (took 1.347671124 seconds)
    (23/26) benchmarking ("BitSet", "Int", "iterate second")...
    done (took 1.348940336 seconds)
    (24/26) benchmarking ("Dict", "String", "iterate second")...
    done (took 1.348919683 seconds)
    (25/26) benchmarking ("Vector", "Int", "iterate")...
    done (took 1.348609246 seconds)
    (26/26) benchmarking ("IdDict", "Int", "iterate second")...
    done (took 1.349152594 seconds)
  done (took 36.324341249 seconds)
  (3/6) benchmarking "set operations"...
    (1/117) benchmarking ("Vector", "Int", "⊆", "Set")...
    done (took 1.366355376 seconds)
    (2/117) benchmarking ("Set", "Int", "symdiff", "Set")...
    done (took 1.60841945 seconds)
    (3/117) benchmarking ("Vector", "Int", "union")...
    done (took 1.768919276 seconds)
    (4/117) benchmarking ("BitSet", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.371821433 seconds)
    (5/117) benchmarking ("BitSet", "Int", "intersect!", "big")...
    done (took 1.365403546 seconds)
    (6/117) benchmarking ("BitSet", "Int", "symdiff!", "Set")...
    done (took 1.37078047 seconds)
    (7/117) benchmarking ("Set", "Int", "setdiff", "BitSet")...
    done (took 1.44309161 seconds)
    (8/117) benchmarking ("Set", "Int", "⊆", "BitSet")...
    done (took 1.367518362 seconds)
    (9/117) benchmarking ("BitSet", "Int", "union", "Set")...
    done (took 1.370582207 seconds)
    (10/117) benchmarking ("BitSet", "Int", "union!", "Set")...
    done (took 1.370814177 seconds)
    (11/117) benchmarking ("Set", "Int", "union", "Set")...
    done (took 1.519170116 seconds)
    (12/117) benchmarking ("BitSet", "Int", "⊆", "self")...
    done (took 1.370534709 seconds)
    (13/117) benchmarking ("Set", "Int", "intersect", "Vector", "Vector")...
    done (took 1.39689377 seconds)
    (14/117) benchmarking ("Vector", "Int", "union", "Vector")...
    done (took 1.798685618 seconds)
    (15/117) benchmarking ("BitSet", "Int", "union", "BitSet")...
    done (took 1.370715989 seconds)
    (16/117) benchmarking ("empty", "Int", "⊆", "Set")...
    done (took 1.36854868 seconds)
    (17/117) benchmarking ("Vector", "Int", "⊆", "Vector")...
    done (took 1.36841762 seconds)
    (18/117) benchmarking ("BitSet", "Int", "intersect!", "BitSet")...
    done (took 1.369550405 seconds)
    (19/117) benchmarking ("Set", "Int", "symdiff", "Set", "Set")...
    done (took 1.617302015 seconds)
    (20/117) benchmarking ("Set", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.377167262 seconds)
    (21/117) benchmarking ("Set", "Int", "union!", "BitSet")...
    done (took 1.462309663 seconds)
    (22/117) benchmarking ("BitSet", "Int", "⊆", "Set")...
    done (took 1.371600772 seconds)
    (23/117) benchmarking ("Set", "Int", "setdiff", "Set")...
    done (took 1.444643394 seconds)
    (24/117) benchmarking ("Set", "Int", "intersect", "Set", "Set")...
    done (took 1.382401875 seconds)
    (25/117) benchmarking ("BitSet", "Int", "union!", "Vector")...
    done (took 1.390804837 seconds)
    (26/117) benchmarking ("BitSet", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.369460005 seconds)
    (27/117) benchmarking ("BitSet", "Int", "union", "Set", "Set")...
    done (took 1.373206735 seconds)
    (28/117) benchmarking ("Vector", "Int", "intersect", "Set", "Set")...
    done (took 1.935393811 seconds)
    (29/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet")...
    done (took 1.388977028 seconds)
    (30/117) benchmarking ("Set", "Int", "union", "BitSet")...
    done (took 1.523924102 seconds)
    (31/117) benchmarking ("BitSet", "Int", "union!", "big")...
    done (took 2.149391669 seconds)
    (32/117) benchmarking ("Set", "Int", "intersect")...
    done (took 1.450405647 seconds)
    (33/117) benchmarking ("Vector", "Int", "intersect", "BitSet")...
    done (took 1.919337066 seconds)
    (34/117) benchmarking ("Vector", "Int", "union", "Vector", "Vector")...
    done (took 1.801291243 seconds)
    (35/117) benchmarking ("BitSet", "Int", "symdiff!", "big")...
    done (took 2.155835139 seconds)
    (36/117) benchmarking ("empty", "Int", "⊆", "BitSet")...
    done (took 1.37941325 seconds)
    (37/117) benchmarking ("Set", "Int", "⊆", "Vector")...
    done (took 1.371101739 seconds)
    (38/117) benchmarking ("Set", "Int", "union", "BitSet", "BitSet")...
    done (took 1.527085116 seconds)
    (39/117) benchmarking ("BitSet", "Int", "setdiff!", "Set")...
    done (took 1.372403529 seconds)
    (40/117) benchmarking ("BitSet", "Int", "setdiff!", "BitSet")...
    done (took 1.370491207 seconds)
    (41/117) benchmarking ("Set", "Int", "setdiff", "Vector")...
    done (took 1.446464389 seconds)
    (42/117) benchmarking ("BitSet", "Int", "setdiff", "BitSet")...
    done (took 1.373305899 seconds)
    (43/117) benchmarking ("Vector", "Int", "union", "BitSet")...
    done (took 1.786369736 seconds)
    (44/117) benchmarking ("Vector", "Int", "symdiff", "BitSet")...
    done (took 2.041255954 seconds)
    (45/117) benchmarking ("BitSet", "Int", "symdiff")...
    done (took 1.388912163 seconds)
    (46/117) benchmarking ("empty", "Int", "<", "Set")...
    done (took 1.371506906 seconds)
    (47/117) benchmarking ("Vector", "Int", "intersect", "Vector")...
    done (took 1.954821552 seconds)
    (48/117) benchmarking ("Set", "Int", "union", "Vector", "Vector")...
    done (took 1.543322582 seconds)
    (49/117) benchmarking ("BitSet", "Int", "symdiff!", "small")...
    done (took 1.61122517 seconds)
    (50/117) benchmarking ("BitSet", "Int", "intersect", "Vector", "Vector")...
    done (took 1.379815801 seconds)
    (51/117) benchmarking ("Vector", "Int", "union", "BitSet", "BitSet")...
    done (took 1.805795777 seconds)
    (52/117) benchmarking ("BitSet", "Int", "union", "Vector")...
    done (took 1.383510583 seconds)
    (53/117) benchmarking ("empty", "Int", "<", "BitSet")...
    done (took 1.371972588 seconds)
    (54/117) benchmarking ("BitSet", "Int", "union!", "BitSet")...
    done (took 1.372303737 seconds)
    (55/117) benchmarking ("BitSet", "Int", "union!", "small")...
    done (took 1.608765011 seconds)
    (56/117) benchmarking ("BitSet", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.385222969 seconds)
    (57/117) benchmarking ("BitSet", "Int", "intersect!", "small")...
    done (took 1.369575815 seconds)
    (58/117) benchmarking ("Vector", "Int", "setdiff", "Set")...
    done (took 1.974722546 seconds)
    (59/117) benchmarking ("BitSet", "Int", "symdiff", "Set")...
    done (took 1.402338765 seconds)
    (60/117) benchmarking ("Set", "Int", "setdiff!", "Vector")...
    done (took 1.447397942 seconds)
    (61/117) benchmarking ("BitSet", "Int", "⊆", "Vector")...
    done (took 1.372707585 seconds)
    (62/117) benchmarking ("BitSet", "Int", "setdiff!", "Vector")...
    done (took 1.370373141 seconds)
    (63/117) benchmarking ("Set", "Int", "symdiff", "Vector", "Vector")...
    done (took 1.62758055 seconds)
    (64/117) benchmarking ("BitSet", "Int", "intersect")...
    done (took 1.371814424 seconds)
    (65/117) benchmarking ("Set", "Int", "symdiff", "BitSet")...
    done (took 1.616247327 seconds)
    (66/117) benchmarking ("BitSet", "Int", "symdiff!", "BitSet")...
    done (took 1.373824185 seconds)
    (67/117) benchmarking ("Set", "Int", "intersect", "BitSet")...
    done (took 1.380217118 seconds)
    (68/117) benchmarking ("BitSet", "Int", "intersect", "BitSet")...
    done (took 1.39008791 seconds)
    (69/117) benchmarking ("Vector", "Int", "union", "Set")...
    done (took 1.784116645 seconds)
    (70/117) benchmarking ("BitSet", "Int", "union", "BitSet", "BitSet")...
    done (took 1.38322402 seconds)
    (71/117) benchmarking ("Vector", "Int", "symdiff", "Set", "Set")...
    done (took 2.055993239 seconds)
    (72/117) benchmarking ("BitSet", "Int", "setdiff!", "small")...
    done (took 1.391044913 seconds)
    (73/117) benchmarking ("BitSet", "Int", "==", "BitSet")...
    done (took 1.372109147 seconds)
    (74/117) benchmarking ("Set", "Int", "union", "Vector")...
    done (took 1.525605377 seconds)
    (75/117) benchmarking ("Set", "Int", "symdiff", "Vector")...
    done (took 1.617918924 seconds)
    (76/117) benchmarking ("Vector", "Int", "intersect", "Vector", "Vector")...
    done (took 1.987394847 seconds)
    (77/117) benchmarking ("BitSet", "Int", "intersect", "Vector")...
    done (took 1.39383378 seconds)
    (78/117) benchmarking ("Set", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 1.632338675 seconds)
    (79/117) benchmarking ("Vector", "Int", "intersect", "BitSet", "BitSet")...
    done (took 1.926650583 seconds)
    (80/117) benchmarking ("Set", "Int", "symdiff")...
    done (took 1.464631935 seconds)
    (81/117) benchmarking ("BitSet", "Int", "symdiff", "Vector")...
    done (took 1.376357796 seconds)
    (82/117) benchmarking ("Vector", "Int", "intersect", "Set")...
    done (took 1.928215037 seconds)
    (83/117) benchmarking ("Set", "Int", "union!", "Set")...
    done (took 1.467100983 seconds)
    (84/117) benchmarking ("BitSet", "Int", "intersect", "Set")...
    done (took 1.37631189 seconds)
    (85/117) benchmarking ("BitSet", "Int", "<", "BitSet")...
    done (took 1.374513831 seconds)
    (86/117) benchmarking ("BitSet", "Int", "⊆", "BitSet")...
    done (took 1.373603863 seconds)
    (87/117) benchmarking ("BitSet", "Int", "==", "self")...
    done (took 1.372684315 seconds)
    (88/117) benchmarking ("Set", "Int", "==", "self")...
    done (took 1.428797105 seconds)
    (89/117) benchmarking ("Set", "Int", "union")...
    done (took 1.447529977 seconds)
    (90/117) benchmarking ("Vector", "Int", "symdiff")...
    done (took 1.995731159 seconds)
    (91/117) benchmarking ("Vector", "Int", "symdiff", "Vector", "Vector")...
    done (took 2.073229767 seconds)
    (92/117) benchmarking ("Vector", "Int", "setdiff", "Vector")...
    done (took 1.996928845 seconds)
    (93/117) benchmarking ("Set", "Int", "setdiff!", "BitSet")...
    done (took 1.469278069 seconds)
    (94/117) benchmarking ("BitSet", "Int", "symdiff", "Set", "Set")...
    done (took 1.385710127 seconds)
    (95/117) benchmarking ("BitSet", "Int", "setdiff", "Vector")...
    done (took 1.373572797 seconds)
    (96/117) benchmarking ("Vector", "Int", "setdiff", "BitSet")...
    done (took 1.973786136 seconds)
    (97/117) benchmarking ("Set", "Int", "<", "Set")...
    done (took 1.393728573 seconds)
    (98/117) benchmarking ("Set", "Int", "⊆", "Set")...
    done (took 1.374574478 seconds)
    (99/117) benchmarking ("Vector", "Int", "intersect")...
    done (took 1.779828223 seconds)
    (100/117) benchmarking ("Vector", "Int", "symdiff", "BitSet", "BitSet")...
    done (took 2.066009913 seconds)
    (101/117) benchmarking ("BitSet", "Int", "setdiff!", "big")...
    done (took 1.395636391 seconds)
    (102/117) benchmarking ("Set", "Int", "intersect", "Set")...
    done (took 1.380681367 seconds)
    (103/117) benchmarking ("Vector", "Int", "symdiff", "Set")...
    done (took 2.056940847 seconds)
    (104/117) benchmarking ("BitSet", "Int", "setdiff", "Set")...
    done (took 1.393830351 seconds)
    (105/117) benchmarking ("Set", "Int", "setdiff!", "Set")...
    done (took 1.451668033 seconds)
    (106/117) benchmarking ("BitSet", "Int", "intersect", "Set", "Set")...
    done (took 1.381286316 seconds)
    (107/117) benchmarking ("Vector", "Int", "union", "Set", "Set")...
    done (took 1.791195236 seconds)
    (108/117) benchmarking ("BitSet", "Int", "union")...
    done (took 1.376788289 seconds)
    (109/117) benchmarking ("Set", "Int", "⊆", "self")...
    done (took 1.430175193 seconds)
    (110/117) benchmarking ("Set", "Int", "==", "Set")...
    done (took 1.374634088 seconds)
    (111/117) benchmarking ("Set", "Int", "intersect", "Vector")...
    done (took 1.3806409 seconds)
    (112/117) benchmarking ("BitSet", "Int", "union", "Vector", "Vector")...
    done (took 1.395199994 seconds)
    (113/117) benchmarking ("Set", "Int", "union!", "Vector")...
    done (took 1.45193688 seconds)
    (114/117) benchmarking ("BitSet", "Int", "symdiff!", "Vector")...
    done (took 1.386611529 seconds)
    (115/117) benchmarking ("Vector", "Int", "⊆", "BitSet")...
    done (took 1.375517114 seconds)
    (116/117) benchmarking ("Vector", "Int", "symdiff", "Vector")...
    done (took 2.030633785 seconds)
    (117/117) benchmarking ("Set", "Int", "union", "Set", "Set")...
    done (took 1.550530974 seconds)
  done (took 181.06737955 seconds)
  (4/6) benchmarking "optimizations"...
    (1/28) benchmarking ("Dict", "abstract", "UInt16")...
    done (took 6.368656415 seconds)
    (2/28) benchmarking ("Set", "abstract", "Int8")...
    done (took 6.387109168 seconds)
    (3/28) benchmarking ("Dict", "concrete", "UInt16")...
    done (took 6.378401562 seconds)
    (4/28) benchmarking ("Dict", "concrete", "Bool")...
    done (took 6.368552337 seconds)
    (5/28) benchmarking ("Dict", "abstract", "Bool")...
    done (took 6.368623759 seconds)
    (6/28) benchmarking ("Vector", "concrete", "Nothing")...
    done (took 1.376328166 seconds)
    (7/28) benchmarking ("Set", "abstract", "Bool")...
    done (took 6.367884875 seconds)
    (8/28) benchmarking ("Dict", "abstract", "Nothing")...
    done (took 6.370046645 seconds)
    (9/28) benchmarking ("Vector", "abstract", "Nothing")...
    done (took 1.374776149 seconds)
    (10/28) benchmarking ("Set", "concrete", "Bool")...
    done (took 6.368136395 seconds)
    (11/28) benchmarking ("Dict", "concrete", "Nothing")...
    done (took 6.368740917 seconds)
    (12/28) benchmarking ("IdDict", "concrete", "Int8")...
    done (took 6.368610371 seconds)
    (13/28) benchmarking ("IdDict", "concrete", "Nothing")...
    done (took 6.369650046 seconds)
    (14/28) benchmarking ("IdDict", "concrete", "UInt16")...
    done (took 6.377775615 seconds)
    (15/28) benchmarking ("Set", "concrete", "Nothing")...
    done (took 1.381222416 seconds)
    (16/28) benchmarking ("Set", "abstract", "Nothing")...
    done (took 1.376645106 seconds)
    (17/28) benchmarking ("BitSet", "Int8")...
    done (took 3.029276728 seconds)
    (18/28) benchmarking ("IdDict", "abstract", "Bool")...
    done (took 6.369371278 seconds)
    (19/28) benchmarking ("Set", "abstract", "UInt16")...
    done (took 6.371356036 seconds)
    (20/28) benchmarking ("Dict", "concrete", "Int8")...
    done (took 6.385828893 seconds)
    (21/28) benchmarking ("BitSet", "UInt16")...
    done (took 3.163660169 seconds)
    (22/28) benchmarking ("IdDict", "abstract", "Nothing")...
    done (took 6.379850654 seconds)
    (23/28) benchmarking ("Set", "concrete", "UInt16")...
    done (took 6.370877232 seconds)
    (24/28) benchmarking ("Set", "concrete", "Int8")...
    done (took 6.389404741 seconds)
    (25/28) benchmarking ("IdDict", "concrete", "Bool")...
    done (took 6.370639176 seconds)
    (26/28) benchmarking ("IdDict", "abstract", "Int8")...
    done (took 6.370270347 seconds)
    (27/28) benchmarking ("IdDict", "abstract", "UInt16")...
    done (took 6.376770683 seconds)
    (28/28) benchmarking ("Dict", "abstract", "Int8")...
    done (took 6.392775417 seconds)
  done (took 153.224493188 seconds)
  (5/6) benchmarking "queries & updates"...
    (1/105) benchmarking ("Set", "Int", "in", "true")...
    done (took 1.377996088 seconds)
    (2/105) benchmarking ("Dict", "String", "pop!", "unspecified")...
    done (took 1.930214643 seconds)
    (3/105) benchmarking ("IdDict", "Int", "first")...
    done (took 1.402506369 seconds)
    (4/105) benchmarking ("Dict", "Int", "push!", "overwrite")...
    done (took 1.504366368 seconds)
    (5/105) benchmarking ("Set", "Any", "in", "false")...
    done (took 1.401189781 seconds)
    (6/105) benchmarking ("BitSet", "Int", "last")...
    done (took 1.375433311 seconds)
    (7/105) benchmarking ("IdDict", "Int", "push!", "overwrite")...
    done (took 1.503239763 seconds)
    (8/105) benchmarking ("Vector", "Int", "pop!", "unspecified")...
    done (took 1.441471471 seconds)
    (9/105) benchmarking ("BitSet", "Int", "pop!", "unspecified")...
    done (took 1.39647015 seconds)
    (10/105) benchmarking ("Dict", "Int", "getindex")...
    done (took 1.375204068 seconds)
    (11/105) benchmarking ("BitSet", "Int", "first")...
    done (took 1.374823387 seconds)
    (12/105) benchmarking ("Set", "String", "push!", "new")...
    done (took 1.673999682 seconds)
    (13/105) benchmarking ("IdDict", "Int", "in", "false")...
    done (took 1.386320142 seconds)
    (14/105) benchmarking ("IdDict", "Any", "setindex!", "overwrite")...
    done (took 1.886210907 seconds)
    (15/105) benchmarking ("Vector", "String", "push!")...
    done (took 1.572305315 seconds)
    (16/105) benchmarking ("IdDict", "Int", "pop!", "specified")...
    done (took 1.529324064 seconds)
    (17/105) benchmarking ("IdDict", "String", "pop!", "specified")...
    done (took 1.894297071 seconds)
    (18/105) benchmarking ("Set", "String", "in", "false")...
    done (took 1.401375278 seconds)
    (19/105) benchmarking ("BitSet", "Int", "length")...
    done (took 1.375635347 seconds)
    (20/105) benchmarking ("Set", "Int", "first")...
    done (took 1.37436171 seconds)
    (21/105) benchmarking ("Dict", "Int", "pop!", "unspecified")...
    done (took 1.50643835 seconds)
    (22/105) benchmarking ("Dict", "Any", "in", "true")...
    done (took 1.385612022 seconds)
    (23/105) benchmarking ("Set", "Any", "push!", "overwrite")...
    done (took 1.674807161 seconds)
    (24/105) benchmarking ("Dict", "String", "push!", "overwrite")...
    done (took 1.941456979 seconds)
    (25/105) benchmarking ("Dict", "String", "in", "true")...
    done (took 1.403768573 seconds)
    (26/105) benchmarking ("Dict", "String", "push!", "new")...
    done (took 1.934445177 seconds)
    (27/105) benchmarking ("Dict", "Any", "in", "false")...
    done (took 1.369855217 seconds)
    (28/105) benchmarking ("Dict", "Int", "in", "false")...
    done (took 1.378020143 seconds)
    (29/105) benchmarking ("Dict", "String", "getindex")...
    done (took 1.377148933 seconds)
    (30/105) benchmarking ("Dict", "Any", "push!", "new")...
    done (took 1.936019291 seconds)
    (31/105) benchmarking ("IdDict", "Int", "length")...
    done (took 1.402078951 seconds)
    (32/105) benchmarking ("Set", "Any", "pop!", "specified")...
    done (took 1.676351425 seconds)
    (33/105) benchmarking ("Set", "Int", "pop!", "unspecified")...
    done (took 1.460802583 seconds)
    (34/105) benchmarking ("Vector", "String", "setindex!")...
    done (took 1.443069653 seconds)
    (35/105) benchmarking ("Dict", "Any", "push!", "overwrite")...
    done (took 1.947788268 seconds)
    (36/105) benchmarking ("IdDict", "String", "push!", "overwrite")...
    done (took 1.898624063 seconds)
    (37/105) benchmarking ("IdDict", "Any", "setindex!", "new")...
    done (took 1.900117775 seconds)
    (38/105) benchmarking ("IdDict", "Int", "setindex!", "new")...
    done (took 1.522128839 seconds)
    (39/105) benchmarking ("IdDict", "String", "getindex")...
    done (took 1.385729829 seconds)
    (40/105) benchmarking ("Vector", "Int", "getindex")...
    done (took 1.376204004 seconds)
    (41/105) benchmarking ("Vector", "Int", "last")...
    done (took 1.376316703 seconds)
    (42/105) benchmarking ("IdDict", "Any", "in", "false")...
    done (took 1.361331482 seconds)
    (43/105) benchmarking ("Dict", "String", "setindex!", "new")...
    done (took 1.930544891 seconds)
    (44/105) benchmarking ("Set", "Any", "in", "true")...
    done (took 1.398691336 seconds)
    (45/105) benchmarking ("BitSet", "Int", "push!", "overwrite")...
    done (took 1.378927567 seconds)
    (46/105) benchmarking ("Dict", "Any", "pop!", "specified")...
    done (took 1.921758424 seconds)
    (47/105) benchmarking ("BitSet", "Int", "in", "true")...
    done (took 1.397031117 seconds)
    (48/105) benchmarking ("IdDict", "Int", "in", "true")...
    done (took 1.380048291 seconds)
    (49/105) benchmarking ("Vector", "String", "in", "true")...
    done (took 1.384825562 seconds)
    (50/105) benchmarking ("Vector", "Int", "length")...
    done (took 1.377633539 seconds)
    (51/105) benchmarking ("Vector", "String", "pop!", "unspecified")...
    done (took 1.436757725 seconds)
    (52/105) benchmarking ("Vector", "Any", "pop!", "unspecified")...
    done (took 1.454823312 seconds)
    (53/105) benchmarking ("Set", "Any", "push!", "new")...
    done (took 1.694572512 seconds)
    (54/105) benchmarking ("Dict", "Any", "pop!", "unspecified")...
    done (took 1.939047843 seconds)
    (55/105) benchmarking ("Set", "Int", "pop!", "specified")...
    done (took 1.471055267 seconds)
    (56/105) benchmarking ("Vector", "String", "in", "false")...
    done (took 1.398607952 seconds)
    (57/105) benchmarking ("IdDict", "Int", "push!", "new")...
    done (took 1.507359894 seconds)
    (58/105) benchmarking ("Vector", "Any", "in", "true")...
    done (took 1.746545282 seconds)
    (59/105) benchmarking ("Dict", "Int", "first")...
    done (took 1.381153716 seconds)
    (60/105) benchmarking ("IdDict", "String", "setindex!", "overwrite")...
    done (took 1.884356304 seconds)
    (61/105) benchmarking ("Vector", "Any", "getindex")...
    done (took 1.362975158 seconds)
    (62/105) benchmarking ("Dict", "Any", "setindex!", "new")...
    done (took 1.938590065 seconds)
    (63/105) benchmarking ("Vector", "Int", "in", "true")...
    done (took 1.399383498 seconds)
    (64/105) benchmarking ("Dict", "Any", "getindex")...
    done (took 1.362639425 seconds)
    (65/105) benchmarking ("BitSet", "Int", "pop!", "specified")...
    done (took 1.37936055 seconds)
    (66/105) benchmarking ("Vector", "Int", "in", "false")...
    done (took 1.383473004 seconds)
    (67/105) benchmarking ("Dict", "Int", "setindex!", "new")...
    done (took 1.524604202 seconds)
    (68/105) benchmarking ("IdDict", "Int", "setindex!", "overwrite")...
    done (took 1.516649539 seconds)
    (69/105) benchmarking ("IdDict", "Any", "push!", "overwrite")...
    done (took 1.893288574 seconds)
    (70/105) benchmarking ("BitSet", "Int", "push!", "new")...
    done (took 1.397321195 seconds)
    (71/105) benchmarking ("IdDict", "String", "setindex!", "new")...
    done (took 1.883846504 seconds)
    (72/105) benchmarking ("Dict", "Int", "pop!", "specified")...
    done (took 1.542569398 seconds)
    (73/105) benchmarking ("Dict", "Int", "length")...
    done (took 1.387003882 seconds)
    (74/105) benchmarking ("IdDict", "Int", "getindex")...
    done (took 1.379423434 seconds)
    (75/105) benchmarking ("Dict", "String", "in", "false")...
    done (took 1.382313993 seconds)
    (76/105) benchmarking ("Dict", "String", "pop!", "specified")...
    done (took 1.938881385 seconds)
    (77/105) benchmarking ("IdDict", "Any", "push!", "new")...
    done (took 1.910843705 seconds)
    (78/105) benchmarking ("Dict", "Int", "setindex!", "overwrite")...
    done (took 1.544886446 seconds)
    (79/105) benchmarking ("Dict", "Int", "push!", "new")...
    done (took 1.520846847 seconds)
    (80/105) benchmarking ("Vector", "Int", "push!")...
    done (took 1.573920619 seconds)
    (81/105) benchmarking ("IdDict", "Any", "getindex")...
    done (took 1.373479936 seconds)
    (82/105) benchmarking ("Vector", "String", "getindex")...
    done (took 1.38009692 seconds)
    (83/105) benchmarking ("IdDict", "Any", "in", "true")...
    done (took 1.364877326 seconds)
    (84/105) benchmarking ("Set", "Int", "push!", "new")...
    done (took 1.456803427 seconds)
    (85/105) benchmarking ("Vector", "Int", "first")...
    done (took 1.389128076 seconds)
    (86/105) benchmarking ("Dict", "Any", "setindex!", "overwrite")...
    done (took 1.940174914 seconds)
    (87/105) benchmarking ("IdDict", "String", "push!", "new")...
    done (took 1.902818602 seconds)
    (88/105) benchmarking ("BitSet", "Int", "in", "false")...
    done (took 1.400111974 seconds)
    (89/105) benchmarking ("Set", "Int", "in", "false")...
    done (took 1.381351743 seconds)
    (90/105) benchmarking ("Set", "String", "in", "true")...
    done (took 1.382522565 seconds)
    (91/105) benchmarking ("IdDict", "String", "in", "false")...
    done (took 1.383204106 seconds)
    (92/105) benchmarking ("Vector", "Any", "push!")...
    done (took 1.553063279 seconds)
    (93/105) benchmarking ("Dict", "String", "setindex!", "overwrite")...
    done (took 1.965485786 seconds)
    (94/105) benchmarking ("Set", "Int", "push!", "overwrite")...
    done (took 1.474481819 seconds)
    (95/105) benchmarking ("IdDict", "Any", "pop!", "specified")...
    done (took 1.885155158 seconds)
    (96/105) benchmarking ("Set", "String", "push!", "overwrite")...
    done (took 1.696921368 seconds)
    (97/105) benchmarking ("Set", "String", "pop!", "unspecified")...
    done (took 1.681592001 seconds)
    (98/105) benchmarking ("Dict", "Int", "in", "true")...
    done (took 1.383591767 seconds)
    (99/105) benchmarking ("Vector", "Any", "setindex!")...
    done (took 1.443627583 seconds)
    (100/105) benchmarking ("Set", "Int", "length")...
    done (took 1.399236861 seconds)
    (101/105) benchmarking ("Set", "Any", "pop!", "unspecified")...
    done (took 1.685055362 seconds)
    (102/105) benchmarking ("IdDict", "String", "in", "true")...
    done (took 1.385278083 seconds)
    (103/105) benchmarking ("Vector", "Int", "setindex!")...
    done (took 1.439272901 seconds)
    (104/105) benchmarking ("Vector", "Any", "in", "false")...
    done (took 1.802281222 seconds)
    (105/105) benchmarking ("Set", "String", "pop!", "specified")...
    done (took 1.682132572 seconds)
  done (took 164.26214969 seconds)
  (6/6) benchmarking "deletion"...
    (1/34) benchmarking ("Dict", "Int", "filter")...
    done (took 1.621825193 seconds)
    (2/34) benchmarking ("IdDict", "String", "filter!")...
    done (took 2.581391651 seconds)
    (3/34) benchmarking ("Vector", "String", "pop!")...
    done (took 1.481443826 seconds)
    (4/34) benchmarking ("Set", "Int", "filter!")...
    done (took 1.527647988 seconds)
    (5/34) benchmarking ("Set", "String", "filter!")...
    done (took 1.987384328 seconds)
    (6/34) benchmarking ("IdDict", "Any", "filter")...
    done (took 1.946057827 seconds)
    (7/34) benchmarking ("Set", "Any", "pop!")...
    done (took 2.642048585 seconds)
    (8/34) benchmarking ("Vector", "Any", "filter")...
    done (took 1.517756341 seconds)
    (9/34) benchmarking ("Vector", "Int", "pop!")...
    done (took 1.491411123 seconds)
    (10/34) benchmarking ("Vector", "String", "filter")...
    done (took 1.636736597 seconds)
    (11/34) benchmarking ("Dict", "String", "pop!")...
    done (took 2.506102693 seconds)
    (12/34) benchmarking ("BitSet", "Int", "pop!")...
    done (took 1.472560257 seconds)
    (13/34) benchmarking ("Dict", "Int", "pop!")...
    done (took 1.598102497 seconds)
    (14/34) benchmarking ("Vector", "Any", "filter!")...
    done (took 1.467273687 seconds)
    (15/34) benchmarking ("Dict", "Any", "filter")...
    done (took 2.111520438 seconds)
    (16/34) benchmarking ("Vector", "Int", "filter!")...
    done (took 1.469541489 seconds)
    (17/34) benchmarking ("Vector", "Any", "pop!")...
    done (took 1.490349305 seconds)
    (18/34) benchmarking ("Vector", "String", "filter!")...
    done (took 1.527392376 seconds)
    (19/34) benchmarking ("Set", "Int", "pop!")...
    done (took 1.537946121 seconds)
    (20/34) benchmarking ("Dict", "String", "filter")...
    done (took 2.38996961 seconds)
    (21/34) benchmarking ("Set", "Any", "filter!")...
    done (took 2.048099171 seconds)
    (22/34) benchmarking ("IdDict", "Int", "filter!")...
    done (took 1.673906829 seconds)
    (23/34) benchmarking ("Dict", "Int", "filter!")...
    done (took 1.575347202 seconds)
    (24/34) benchmarking ("Dict", "Any", "pop!")...
    done (took 3.206549604 seconds)
    (25/34) benchmarking ("Vector", "Int", "filter")...
    done (took 1.473270643 seconds)
    (26/34) benchmarking ("IdDict", "Any", "filter!")...
    done (took 2.149233544 seconds)
    (27/34) benchmarking ("IdDict", "Int", "filter")...
    done (took 1.938011611 seconds)
    (28/34) benchmarking ("Set", "String", "filter")...
    done (took 1.914553761 seconds)
    (29/34) benchmarking ("Set", "Int", "filter")...
    done (took 1.558150815 seconds)
    (30/34) benchmarking ("Dict", "String", "filter!")...
    done (took 2.683845601 seconds)
    (31/34) benchmarking ("Set", "Any", "filter")...
    done (took 1.907486838 seconds)
    (32/34) benchmarking ("IdDict", "String", "filter")...
    done (took 2.494891457 seconds)
    (33/34) benchmarking ("Dict", "Any", "filter!")...
    done (took 2.326728673 seconds)
    (34/34) benchmarking ("Set", "String", "pop!")...
    done (took 2.072250793 seconds)
  done (took 66.318638133 seconds)
done (took 695.028623595 seconds)
SAVING RESULT...
DONE!
